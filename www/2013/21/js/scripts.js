function require(a,b,c){var d=require.resolve(a);if(null==d){c=c||a,b=b||"root";var e=new Error('Failed to require "'+c+'" from "'+b+'"');throw e.path=c,e.parent=b,e.require=!0,e}var f=require.modules[d];if(!f._resolving&&!f.exports){var g={};g.exports={},g.client=g.component=!0,f._resolving=!0,f.call(this,g.exports,require.relative(d),g),delete f._resolving,f.exports=g.exports}return f.exports}window.Modernizr=function(a,b,c){function d(a){t.cssText=a}function e(a,b){return d(v.join(a+";")+(b||""))}function f(a,b){return typeof a===b}function g(a,b){return!!~(""+a).indexOf(b)}function h(a,b){for(var d in a){var e=a[d];if(!g(e,"-")&&t[e]!==c)return"pfx"==b?e:!0}return!1}function i(a,b,d){for(var e in a){var g=b[a[e]];if(g!==c)return d===!1?a[e]:f(g,"function")?g.bind(d||b):g}return!1}function j(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),e=(a+" "+x.join(d+" ")+d).split(" ");return f(b,"string")||f(b,"undefined")?h(e,b):(e=(a+" "+y.join(d+" ")+d).split(" "),i(e,b,c))}var k,l,m,n="2.6.2",o={},p=!0,q=b.documentElement,r="modernizr",s=b.createElement(r),t=s.style,u=":)",v=({}.toString," -webkit- -moz- -o- -ms- ".split(" ")),w="Webkit Moz O ms",x=w.split(" "),y=w.toLowerCase().split(" "),z={},A=[],B=A.slice,C=function(a,c,d,e){var f,g,h,i,j=b.createElement("div"),k=b.body,l=k||b.createElement("body");if(parseInt(d,10))for(;d--;)h=b.createElement("div"),h.id=e?e[d]:r+(d+1),j.appendChild(h);return f=["&#173;",'<style id="s',r,'">',a,"</style>"].join(""),j.id=r,(k?j:l).innerHTML+=f,l.appendChild(j),k||(l.style.background="",l.style.overflow="hidden",i=q.style.overflow,q.style.overflow="hidden",q.appendChild(l)),g=c(j,a),k?j.parentNode.removeChild(j):(l.parentNode.removeChild(l),q.style.overflow=i),!!g},D=function(){function a(a,e){e=e||b.createElement(d[a]||"div"),a="on"+a;var g=a in e;return g||(e.setAttribute||(e=b.createElement("div")),e.setAttribute&&e.removeAttribute&&(e.setAttribute(a,""),g=f(e[a],"function"),f(e[a],"undefined")||(e[a]=c),e.removeAttribute(a))),e=null,g}var d={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return a}(),E={}.hasOwnProperty;m=f(E,"undefined")||f(E.call,"undefined")?function(a,b){return b in a&&f(a.constructor.prototype[b],"undefined")}:function(a,b){return E.call(a,b)},Function.prototype.bind||(Function.prototype.bind=function(a){var b=this;if("function"!=typeof b)throw new TypeError;var c=B.call(arguments,1),d=function(){if(this instanceof d){var e=function(){};e.prototype=b.prototype;var f=new e,g=b.apply(f,c.concat(B.call(arguments)));return Object(g)===g?g:f}return b.apply(a,c.concat(B.call(arguments)))};return d}),z.canvas=function(){var a=b.createElement("canvas");return!(!a.getContext||!a.getContext("2d"))},z.webgl=function(){return!!a.WebGLRenderingContext},z.history=function(){return!(!a.history||!history.pushState)},z.rgba=function(){return d("background-color:rgba(150,255,150,.5)"),g(t.backgroundColor,"rgba")},z.multiplebgs=function(){return d("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(t.background)},z.backgroundsize=function(){return j("backgroundSize")},z.borderimage=function(){return j("borderImage")},z.borderradius=function(){return j("borderRadius")},z.boxshadow=function(){return j("boxShadow")},z.textshadow=function(){return""===b.createElement("div").style.textShadow},z.opacity=function(){return e("opacity:.55"),/^0.55$/.test(t.opacity)},z.cssanimations=function(){return j("animationName")},z.cssgradients=function(){var a="background-image:",b="gradient(linear,left top,right bottom,from(#9f9),to(white));",c="linear-gradient(left top,#9f9, white);";return d((a+"-webkit- ".split(" ").join(b+a)+v.join(c+a)).slice(0,-a.length)),g(t.backgroundImage,"gradient")},z.csstransforms=function(){return!!j("transform")},z.csstransforms3d=function(){var a=!!j("perspective");return a&&"webkitPerspective"in q.style&&C("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(b){a=9===b.offsetLeft&&3===b.offsetHeight}),a},z.csstransitions=function(){return j("transition")},z.fontface=function(){var a;return C('@font-face {font-family:"font";src:url("https://")}',function(c,d){var e=b.getElementById("smodernizr"),f=e.sheet||e.styleSheet,g=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"";a=/src/i.test(g)&&0===g.indexOf(d.split(" ")[0])}),a},z.generatedcontent=function(){var a;return C(["#",r,"{font:0/0 a}#",r,':after{content:"',u,'";visibility:hidden;font:3px/1 a}'].join(""),function(b){a=b.offsetHeight>=3}),a},z.video=function(){var a=b.createElement("video"),c=!1;try{(c=!!a.canPlayType)&&(c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,""))}catch(d){}return c},z.audio=function(){var a=b.createElement("audio"),c=!1;try{(c=!!a.canPlayType)&&(c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,""))}catch(d){}return c};for(var F in z)m(z,F)&&(l=F.toLowerCase(),o[l]=z[F](),A.push((o[l]?"":"no-")+l));return o.addTest=function(a,b){if("object"==typeof a)for(var d in a)m(a,d)&&o.addTest(d,a[d]);else{if(a=a.toLowerCase(),o[a]!==c)return o;b="function"==typeof b?b():b,"undefined"!=typeof p&&p&&(q.className+=" "+(b?"":"no-")+a),o[a]=b}return o},d(""),s=k=null,function(a,b){function c(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function d(){var a=r.elements;return"string"==typeof a?a.split(" "):a}function e(a){var b=q[a[o]];return b||(b={},p++,a[o]=p,q[p]=b),b}function f(a,c,d){if(c||(c=b),k)return c.createElement(a);d||(d=e(c));var f;return f=d.cache[a]?d.cache[a].cloneNode():n.test(a)?(d.cache[a]=d.createElem(a)).cloneNode():d.createElem(a),f.canHaveChildren&&!m.test(a)?d.frag.appendChild(f):f}function g(a,c){if(a||(a=b),k)return a.createDocumentFragment();c=c||e(a);for(var f=c.frag.cloneNode(),g=0,h=d(),i=h.length;i>g;g++)f.createElement(h[g]);return f}function h(a,b){b.cache||(b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag()),a.createElement=function(c){return r.shivMethods?f(c,a,b):b.createElem(c)},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+d().join().replace(/\w+/g,function(a){return b.createElem(a),b.frag.createElement(a),'c("'+a+'")'})+");return n}")(r,b.frag)}function i(a){a||(a=b);var d=e(a);return!r.shivCSS||j||d.hasCSS||(d.hasCSS=!!c(a,"article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}")),k||h(a,d),a}var j,k,l=a.html5||{},m=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,n=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,o="_html5shiv",p=0,q={};!function(){try{var a=b.createElement("a");a.innerHTML="<xyz></xyz>",j="hidden"in a,k=1==a.childNodes.length||function(){b.createElement("a");var a=b.createDocumentFragment();return"undefined"==typeof a.cloneNode||"undefined"==typeof a.createDocumentFragment||"undefined"==typeof a.createElement}()}catch(c){j=!0,k=!0}}();var r={elements:l.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:l.shivCSS!==!1,supportsUnknownElements:k,shivMethods:l.shivMethods!==!1,type:"default",shivDocument:i,createElement:f,createDocumentFragment:g};a.html5=r,i(b)}(this,b),o._version=n,o._prefixes=v,o._domPrefixes=y,o._cssomPrefixes=x,o.hasEvent=D,o.testProp=function(a){return h([a])},o.testAllProps=j,o.testStyles=C,o.prefixed=function(a,b,c){return b?j(a,b,c):j(a,"pfx")},q.className=q.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(p?" js "+A.join(" "):""),o}(this,this.document),function(a,b){function c(a){return J.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}function d(a){if(!pc[a]){var b=G.body,c=J("<"+a+">").appendTo(b),d=c.css("display");c.remove(),("none"===d||""===d)&&(lc||(lc=G.createElement("iframe"),lc.frameBorder=lc.width=lc.height=0),b.appendChild(lc),mc&&lc.createElement||(mc=(lc.contentWindow||lc.contentDocument).document,mc.write(("CSS1Compat"===G.compatMode?"<!doctype html>":"")+"<html><body>"),mc.close()),c=mc.createElement(a),mc.body.appendChild(c),d=J.css(c,"display"),b.removeChild(lc)),pc[a]=d}return pc[a]}function e(a,b){var c={};return J.each(sc.concat.apply([],sc.slice(0,b)),function(){c[this]=a}),c}function f(){oc=b}function g(){return setTimeout(f,0),oc=J.now()}function h(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function i(){try{return new a.XMLHttpRequest}catch(b){}}function j(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d,e,f,g,h,i,j,k,l=a.dataTypes,m={},n=l.length,o=l[0];for(d=1;n>d;d++){if(1===d)for(e in a.converters)"string"==typeof e&&(m[e.toLowerCase()]=a.converters[e]);if(g=o,o=l[d],"*"===o)o=g;else if("*"!==g&&g!==o){if(h=g+" "+o,i=m[h]||m["* "+o],!i){k=b;for(j in m)if(f=j.split(" "),(f[0]===g||"*"===f[0])&&(k=m[f[1]+" "+o])){j=m[j],j===!0?i=k:k===!0&&(i=j);break}}!i&&!k&&J.error("No conversion from "+h.replace(" "," to ")),i!==!0&&(c=i?i(c):k(j(c)))}}return c}function k(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);for(;"*"===j[0];)j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}return g?(g!==j[0]&&j.unshift(g),d[g]):void 0}function l(a,b,c,d){if(J.isArray(b))J.each(b,function(b,e){c||Qb.test(a)?d(a,e):l(a+"["+("object"==typeof e||J.isArray(e)?b:"")+"]",e,c,d)});else if(c||null==b||"object"!=typeof b)d(a,b);else for(var e in b)l(a+"["+e+"]",b[e],c,d)}function m(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;for(var h,i=a[f],j=0,k=i?i.length:0,l=a===dc;k>j&&(l||!h);j++)h=i[j](c,d,e),"string"==typeof h&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=m(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=m(a,c,d,e,"*",g)),h}function n(a){return function(b,c){if("string"!=typeof b&&(c=b,b="*"),J.isFunction(c))for(var d,e,f,g=b.toLowerCase().split(_b),h=0,i=g.length;i>h;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function o(a,b,c){var d="width"===b?a.offsetWidth:a.offsetHeight,e="width"===b?Lb:Mb;return d>0?("border"!==c&&J.each(e,function(){c||(d-=parseFloat(J.css(a,"padding"+this))||0),"margin"===c?d+=parseFloat(J.css(a,c+this))||0:d-=parseFloat(J.css(a,"border"+this+"Width"))||0}),d+"px"):(d=Ab(a,b,b),(0>d||null==d)&&(d=a.style[b]||0),d=parseFloat(d)||0,c&&J.each(e,function(){d+=parseFloat(J.css(a,"padding"+this))||0,"padding"!==c&&(d+=parseFloat(J.css(a,"border"+this+"Width"))||0),"margin"===c&&(d+=parseFloat(J.css(a,c+this))||0)}),d+"px")}function p(a,b){b.src?J.ajax({url:b.src,async:!1,dataType:"script"}):J.globalEval((b.text||b.textContent||b.innerHTML||"").replace(yb,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function q(a){J.nodeName(a,"input")?r(a):"getElementsByTagName"in a&&J.grep(a.getElementsByTagName("input"),r)}function r(a){("checkbox"===a.type||"radio"===a.type)&&(a.defaultChecked=a.checked)}function s(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function t(a,b){var c;1===b.nodeType&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),"object"===c?b.outerHTML=a.outerHTML:"input"!==c||"checkbox"!==a.type&&"radio"!==a.type?"option"===c?b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(J.expando))}function u(a,b){if(1===b.nodeType&&J.hasData(a)){var c=J.expando,d=J.data(a),e=J.data(b,d);if(d=d[c]){var f=d.events;if(e=e[c]=J.extend({},d),f){delete e.handle,e.events={};for(var g in f)for(var h=0,i=f[g].length;i>h;h++)J.event.add(b,g+(f[g][h].namespace?".":"")+f[g][h].namespace,f[g][h],f[g][h].data)}}}}function v(a){return J.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function w(a,b,c){if(b=b||0,J.isFunction(b))return J.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return J.grep(a,function(a){return a===b===c});if("string"==typeof b){var d=J.grep(a,function(a){return 1===a.nodeType});if(lb.test(b))return J.filter(b,d,!c);b=J.filter(b,d)}return J.grep(a,function(a){return J.inArray(a,b)>=0===c})}function x(a){return!a||!a.parentNode||11===a.parentNode.nodeType}function y(a,b){return(a&&"*"!==a?a+".":"")+b.replace($,"`").replace(_,"&")}function z(a){var b,c,d,e,f,g,h,i,j,k,l,m,n=[],o=[],p=J._data(this,"events");if(a.liveFired!==this&&p&&p.live&&!a.target.disabled&&(!a.button||"click"!==a.type)){a.namespace&&(l=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var q=p.live.slice(0);for(h=0;h<q.length;h++)f=q[h],f.origType.replace(Y,"")===a.type?o.push(f.selector):q.splice(h--,1);for(e=J(a.target).closest(o,a.currentTarget),i=0,j=e.length;j>i;i++)for(k=e[i],h=0;h<q.length;h++)f=q[h],k.selector!==f.selector||l&&!l.test(f.namespace)||k.elem.disabled||(g=k.elem,d=null,("mouseenter"===f.preType||"mouseleave"===f.preType)&&(a.type=f.preType,d=J(a.relatedTarget).closest(f.selector)[0],d&&J.contains(g,d)&&(d=g)),(!d||d!==g)&&n.push({elem:g,handleObj:f,level:k.level}));for(i=0,j=n.length;j>i&&(e=n[i],!(c&&e.level>c))&&(a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,m=e.handleObj.origHandler.apply(e.elem,arguments),m!==!1&&!a.isPropagationStopped()||(c=e.level,m===!1&&(b=!1),!a.isImmediatePropagationStopped()));i++);return b}}function A(a,c,d){var e=J.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,J.event.handle.call(c,e),e.isDefaultPrevented()&&d[0].preventDefault()}function B(){return!0}function C(){return!1}function D(a,c,d){var e=c+"defer",f=c+"queue",g=c+"mark",h=J.data(a,e,b,!0);!(!h||"queue"!==d&&J.data(a,f,b,!0)||"mark"!==d&&J.data(a,g,b,!0)||!setTimeout(function(){!J.data(a,f,b,!0)&&!J.data(a,g,b,!0)&&(J.removeData(a,e,!0),h.resolve())},0))}function E(a){for(var b in a)if("toJSON"!==b)return!1;return!0}function F(a,c,d){if(d===b&&1===a.nodeType){var e="data-"+c.replace(N,"$1-$2").toLowerCase();if(d=a.getAttribute(e),"string"==typeof d){try{d="true"===d?!0:"false"===d?!1:"null"===d?null:J.isNaN(d)?M.test(d)?J.parseJSON(d):d:parseFloat(d)}catch(f){}J.data(a,c,d)}else d=b}return d}var G=a.document,H=a.navigator,I=a.location,J=function(){function c(){if(!h.isReady){try{G.documentElement.doScroll("left")}catch(a){return setTimeout(c,1),void 0}h.ready()}}var d,e,f,g,h=function(a,b){return new h.fn.init(a,b,d)},i=a.jQuery,j=a.$,k=/^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,l=/\S/,m=/^\s+/,n=/\s+$/,o=/\d/,p=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,q=/^[\],:{}\s]*$/,r=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,s=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,t=/(?:^|:|,)(?:\s*\[)+/g,u=/(webkit)[ \/]([\w.]+)/,v=/(opera)(?:.*version)?[ \/]([\w.]+)/,w=/(msie) ([\w.]+)/,x=/(mozilla)(?:.*? rv:([\w.]+))?/,y=/-([a-z])/gi,z=function(a,b){return b.toUpperCase()},A=H.userAgent,B=Object.prototype.toString,C=Object.prototype.hasOwnProperty,D=Array.prototype.push,E=Array.prototype.slice,F=String.prototype.trim,I=Array.prototype.indexOf,J={};return h.fn=h.prototype={constructor:h,init:function(a,c,d){var e,f,g,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if("body"===a&&!c&&G.body)return this.context=G,this[0]=G.body,this.selector=a,this.length=1,this;if("string"==typeof a){if(e="<"!==a.charAt(0)||">"!==a.charAt(a.length-1)||a.length<3?k.exec(a):[null,a,null],e&&(e[1]||!c)){if(e[1])return c=c instanceof h?c[0]:c,i=c?c.ownerDocument||c:G,g=p.exec(a),g?h.isPlainObject(c)?(a=[G.createElement(g[1])],h.fn.attr.call(a,c,!0)):a=[i.createElement(g[1])]:(g=h.buildFragment([e[1]],[i]),a=(g.cacheable?h.clone(g.fragment):g.fragment).childNodes),h.merge(this,a);if(f=G.getElementById(e[2]),f&&f.parentNode){if(f.id!==e[2])return d.find(a);this.length=1,this[0]=f}return this.context=G,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return h.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),h.makeArray(a,this))},selector:"",jquery:"1.6.2",length:0,size:function(){return this.length},toArray:function(){return E.call(this,0)},get:function(a){return null==a?this.toArray():0>a?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();return h.isArray(a)?D.apply(d,a):h.merge(d,a),d.prevObject=this,d.context=this.context,"find"===b?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return h.each(this,a,b)},ready:function(a){return h.bindReady(),f.done(a),this},eq:function(a){return-1===a?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(E.apply(this,arguments),"slice",E.call(arguments).join(","))},map:function(a){return this.pushStack(h.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:D,sort:[].sort,splice:[].splice},h.fn.init.prototype=h.fn,h.extend=h.fn.extend=function(){var a,c,d,e,f,g,i=arguments[0]||{},j=1,k=arguments.length,l=!1;for("boolean"==typeof i&&(l=i,i=arguments[1]||{},j=2),"object"!=typeof i&&!h.isFunction(i)&&(i={}),k===j&&(i=this,--j);k>j;j++)if(null!=(a=arguments[j]))for(c in a)d=i[c],e=a[c],i!==e&&(l&&e&&(h.isPlainObject(e)||(f=h.isArray(e)))?(f?(f=!1,g=d&&h.isArray(d)?d:[]):g=d&&h.isPlainObject(d)?d:{},i[c]=h.extend(l,g,e)):e!==b&&(i[c]=e));return i},h.extend({noConflict:function(b){return a.$===h&&(a.$=j),b&&a.jQuery===h&&(a.jQuery=i),h},isReady:!1,readyWait:1,holdReady:function(a){a?h.readyWait++:h.ready(!0)},ready:function(a){if(a===!0&&!--h.readyWait||a!==!0&&!h.isReady){if(!G.body)return setTimeout(h.ready,1);if(h.isReady=!0,a!==!0&&--h.readyWait>0)return;f.resolveWith(G,[h]),h.fn.trigger&&h(G).trigger("ready").unbind("ready")}},bindReady:function(){if(!f){if(f=h._Deferred(),"complete"===G.readyState)return setTimeout(h.ready,1);if(G.addEventListener)G.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",h.ready,!1);else if(G.attachEvent){G.attachEvent("onreadystatechange",g),a.attachEvent("onload",h.ready);var b=!1;try{b=null==a.frameElement}catch(d){}G.documentElement.doScroll&&b&&c()}}},isFunction:function(a){return"function"===h.type(a)},isArray:Array.isArray||function(a){return"array"===h.type(a)},isWindow:function(a){return a&&"object"==typeof a&&"setInterval"in a},isNaN:function(a){return null==a||!o.test(a)||isNaN(a)},type:function(a){return null==a?String(a):J[B.call(a)]||"object"},isPlainObject:function(a){if(!a||"object"!==h.type(a)||a.nodeType||h.isWindow(a))return!1;if(a.constructor&&!C.call(a,"constructor")&&!C.call(a.constructor.prototype,"isPrototypeOf"))return!1;var c;for(c in a);return c===b||C.call(a,c)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){return"string"==typeof b&&b?(b=h.trim(b),a.JSON&&a.JSON.parse?a.JSON.parse(b):q.test(b.replace(r,"@").replace(s,"]").replace(t,""))?new Function("return "+b)():(h.error("Invalid JSON: "+b),void 0)):null},parseXML:function(b,c,d){return a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b)),d=c.documentElement,(!d||!d.nodeName||"parsererror"===d.nodeName)&&h.error("Invalid XML: "+b),c},noop:function(){},globalEval:function(b){b&&l.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(y,z)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var e,f=0,g=a.length,i=g===b||h.isFunction(a);if(d)if(i){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;g>f&&c.apply(a[f++],d)!==!1;);else if(i){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;g>f&&c.call(a[f],f,a[f++])!==!1;);return a},trim:F?function(a){return null==a?"":F.call(a)}:function(a){return null==a?"":(a+"").replace(m,"").replace(n,"")},makeArray:function(a,b){var c=b||[];if(null!=a){var d=h.type(a);null==a.length||"string"===d||"function"===d||"regexp"===d||h.isWindow(a)?D.call(c,a):h.merge(c,a)}return c},inArray:function(a,b){if(I)return I.call(b,a);for(var c=0,d=b.length;d>c;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if("number"==typeof c.length)for(var f=c.length;f>e;e++)a[d++]=c[e];else for(;c[e]!==b;)a[d++]=c[e++];return a.length=d,a},grep:function(a,b,c){var d,e=[];c=!!c;for(var f=0,g=a.length;g>f;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],i=0,j=a.length,k=a instanceof h||j!==b&&"number"==typeof j&&(j>0&&a[0]&&a[j-1]||0===j||h.isArray(a));if(k)for(;j>i;i++)e=c(a[i],i,d),null!=e&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),null!=e&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){if("string"==typeof c){var d=a[c];c=a,a=d}if(!h.isFunction(a))return b;var e=E.call(arguments,2),f=function(){return a.apply(c,e.concat(E.call(arguments)))};return f.guid=a.guid=a.guid||f.guid||h.guid++,f},access:function(a,c,d,e,f,g){var i=a.length;if("object"==typeof c){for(var j in c)h.access(a,j,c[j],e,f,d);return a}if(d!==b){e=!g&&e&&h.isFunction(d);for(var k=0;i>k;k++)f(a[k],c,e?d.call(a[k],k,f(a[k],c)):d,g);return a}return i?f(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=u.exec(a)||v.exec(a)||w.exec(a)||a.indexOf("compatible")<0&&x.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}h.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(c,d){return d&&d instanceof h&&!(d instanceof a)&&(d=a(d)),h.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(G);return a},browser:{}}),h.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),e=h.uaMatch(A),e.browser&&(h.browser[e.browser]=!0,h.browser.version=e.version),h.browser.webkit&&(h.browser.safari=!0),l.test(" ")&&(m=/^[\s\xA0]+/,n=/[\s\xA0]+$/),d=h(G),G.addEventListener?g=function(){G.removeEventListener("DOMContentLoaded",g,!1),h.ready()}:G.attachEvent&&(g=function(){"complete"===G.readyState&&(G.detachEvent("onreadystatechange",g),h.ready())}),h}(),K="done fail isResolved isRejected promise then always pipe".split(" "),L=[].slice;J.extend({_Deferred:function(){var a,b,c,d=[],e={done:function(){if(!c){var b,f,g,h,i,j=arguments;for(a&&(i=a,a=0),b=0,f=j.length;f>b;b++)g=j[b],h=J.type(g),"array"===h?e.done.apply(e,g):"function"===h&&d.push(g);i&&e.resolveWith(i[0],i[1])}return this},resolveWith:function(e,f){if(!c&&!a&&!b){f=f||[],b=1;try{for(;d[0];)d.shift().apply(e,f)}finally{a=[e,f],b=0}}return this},resolve:function(){return e.resolveWith(this,arguments),this},isResolved:function(){return!!b||!!a},cancel:function(){return c=1,d=[],this}};return e},Deferred:function(a){var b,c=J._Deferred(),d=J._Deferred();return J.extend(c,{then:function(a,b){return c.done(a).fail(b),this},always:function(){return c.done.apply(c,arguments).fail.apply(this,arguments)},fail:d.done,rejectWith:d.resolveWith,reject:d.resolve,isRejected:d.isResolved,pipe:function(a,b){return J.Deferred(function(d){J.each({done:[a,"resolve"],fail:[b,"reject"]},function(a,b){var e,f=b[0],g=b[1];J.isFunction(f)?c[a](function(){e=f.apply(this,arguments),e&&J.isFunction(e.promise)?e.promise().then(d.resolve,d.reject):d[g](e)}):c[a](d[g])})}).promise()},promise:function(a){if(null==a){if(b)return b;b=a={}}for(var d=K.length;d--;)a[K[d]]=c[K[d]];return a}}),c.done(d.cancel).fail(c.cancel),delete c.cancel,a&&a.call(c,c),c},when:function(a){function b(a){return function(b){c[a]=arguments.length>1?L.call(arguments,0):b,--f||g.resolveWith(g,L.call(c,0))}}var c=arguments,d=0,e=c.length,f=e,g=1>=e&&a&&J.isFunction(a.promise)?a:J.Deferred();if(e>1){for(;e>d;d++)c[d]&&J.isFunction(c[d].promise)?c[d].promise().then(b(d),g.reject):--f;f||g.resolveWith(g,c)}else g!==a&&g.resolveWith(g,e?[a]:[]);return g.promise()}}),J.support=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q=G.createElement("div"),r=G.documentElement;if(q.setAttribute("className","t"),q.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",a=q.getElementsByTagName("*"),b=q.getElementsByTagName("a")[0],!a||!a.length||!b)return{};c=G.createElement("select"),d=c.appendChild(G.createElement("option")),e=q.getElementsByTagName("input")[0],g={leadingWhitespace:3===q.firstChild.nodeType,tbody:!q.getElementsByTagName("tbody").length,htmlSerialize:!!q.getElementsByTagName("link").length,style:/top/.test(b.getAttribute("style")),hrefNormalized:"/a"===b.getAttribute("href"),opacity:/^0.55$/.test(b.style.opacity),cssFloat:!!b.style.cssFloat,checkOn:"on"===e.value,optSelected:d.selected,getSetAttribute:"t"!==q.className,submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},e.checked=!0,g.noCloneChecked=e.cloneNode(!0).checked,c.disabled=!0,g.optDisabled=!d.disabled;try{delete q.test}catch(s){g.deleteExpando=!1}!q.addEventListener&&q.attachEvent&&q.fireEvent&&(q.attachEvent("onclick",function(){g.noCloneEvent=!1}),q.cloneNode(!0).fireEvent("onclick")),e=G.createElement("input"),e.value="t",e.setAttribute("type","radio"),g.radioValue="t"===e.value,e.setAttribute("checked","checked"),q.appendChild(e),h=G.createDocumentFragment(),h.appendChild(q.firstChild),g.checkClone=h.cloneNode(!0).cloneNode(!0).lastChild.checked,q.innerHTML="",q.style.width=q.style.paddingLeft="1px",i=G.getElementsByTagName("body")[0],k=G.createElement(i?"div":"body"),l={visibility:"hidden",width:0,height:0,border:0,margin:0},i&&J.extend(l,{position:"absolute",left:-1e3,top:-1e3});for(o in l)k.style[o]=l[o];if(k.appendChild(q),j=i||r,j.insertBefore(k,j.firstChild),g.appendChecked=e.checked,g.boxModel=2===q.offsetWidth,"zoom"in q.style&&(q.style.display="inline",q.style.zoom=1,g.inlineBlockNeedsLayout=2===q.offsetWidth,q.style.display="",q.innerHTML="<div style='width:4px;'></div>",g.shrinkWrapBlocks=2!==q.offsetWidth),q.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",m=q.getElementsByTagName("td"),p=0===m[0].offsetHeight,m[0].style.display="",m[1].style.display="none",g.reliableHiddenOffsets=p&&0===m[0].offsetHeight,q.innerHTML="",G.defaultView&&G.defaultView.getComputedStyle&&(f=G.createElement("div"),f.style.width="0",f.style.marginRight="0",q.appendChild(f),g.reliableMarginRight=0===(parseInt((G.defaultView.getComputedStyle(f,null)||{marginRight:0}).marginRight,10)||0)),k.innerHTML="",j.removeChild(k),q.attachEvent)for(o in{submit:1,change:1,focusin:1})n="on"+o,p=n in q,p||(q.setAttribute(n,"return;"),p="function"==typeof q[n]),g[o+"Bubbles"]=p;return k=h=c=d=i=f=q=e=null,g}(),J.boxModel=J.support.boxModel;var M=/^(?:\{.*\}|\[.*\])$/,N=/([a-z])([A-Z])/g;J.extend({cache:{},uuid:0,expando:"jQuery"+(J.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?J.cache[a[J.expando]]:a[J.expando],!!a&&!E(a)},data:function(a,c,d,e){if(J.acceptData(a)){var f,g=J.expando,h="string"==typeof c,i=a.nodeType,j=i?J.cache:a,k=i?a[J.expando]:a[J.expando]&&J.expando;if((!k||e&&k&&!j[k][g])&&h&&d===b)return;return k||(i?a[J.expando]=k=++J.uuid:k=J.expando),j[k]||(j[k]={},i||(j[k].toJSON=J.noop)),("object"==typeof c||"function"==typeof c)&&(e?j[k][g]=J.extend(j[k][g],c):j[k]=J.extend(j[k],c)),f=j[k],e&&(f[g]||(f[g]={}),f=f[g]),d!==b&&(f[J.camelCase(c)]=d),"events"!==c||f[c]?h?f[J.camelCase(c)]||f[c]:f:f[g]&&f[g].events}},removeData:function(b,c,d){if(J.acceptData(b)){var e=J.expando,f=b.nodeType,g=f?J.cache:b,h=f?b[J.expando]:J.expando;if(!g[h])return;if(c){var i=d?g[h][e]:g[h];if(i&&(delete i[c],!E(i)))return}if(d&&(delete g[h][e],!E(g[h])))return;var j=g[h][e];J.support.deleteExpando||g!=a?delete g[h]:g[h]=null,j?(g[h]={},f||(g[h].toJSON=J.noop),g[h][e]=j):f&&(J.support.deleteExpando?delete b[J.expando]:b.removeAttribute?b.removeAttribute(J.expando):b[J.expando]=null)}},_data:function(a,b,c){return J.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=J.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),J.fn.extend({data:function(a,c){var d=null;if("undefined"==typeof a){if(this.length&&(d=J.data(this[0]),1===this[0].nodeType))for(var e,f=this[0].attributes,g=0,h=f.length;h>g;g++)e=f[g].name,0===e.indexOf("data-")&&(e=J.camelCase(e.substring(5)),F(this[0],e,d[e]));return d}if("object"==typeof a)return this.each(function(){J.data(this,a)});var i=a.split(".");return i[1]=i[1]?"."+i[1]:"",c===b?(d=this.triggerHandler("getData"+i[1]+"!",[i[0]]),d===b&&this.length&&(d=J.data(this[0],a),d=F(this[0],a,d)),d===b&&i[1]?this.data(i[0]):d):this.each(function(){var b=J(this),d=[i[0],c];b.triggerHandler("setData"+i[1]+"!",d),J.data(this,a,c),b.triggerHandler("changeData"+i[1]+"!",d)})},removeData:function(a){return this.each(function(){J.removeData(this,a)})}}),J.extend({_mark:function(a,c){a&&(c=(c||"fx")+"mark",J.data(a,c,(J.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){if(a!==!0&&(d=c,c=a,a=!1),c){d=d||"fx";var e=d+"mark",f=a?0:(J.data(c,e,b,!0)||1)-1;f?J.data(c,e,f,!0):(J.removeData(c,e,!0),D(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=J.data(a,c,b,!0);return d&&(!e||J.isArray(d)?e=J.data(a,c,J.makeArray(d),!0):e.push(d)),e||[]}},dequeue:function(a,b){b=b||"fx";var c=J.queue(a,b),d=c.shift();"inprogress"===d&&(d=c.shift()),d&&("fx"===b&&c.unshift("inprogress"),d.call(a,function(){J.dequeue(a,b)})),c.length||(J.removeData(a,b+"queue",!0),D(a,b,"queue"))}}),J.fn.extend({queue:function(a,c){return"string"!=typeof a&&(c=a,a="fx"),c===b?J.queue(this[0],a):this.each(function(){var b=J.queue(this,a,c);"fx"===a&&"inprogress"!==b[0]&&J.dequeue(this,a)})},dequeue:function(a){return this.each(function(){J.dequeue(this,a)})},delay:function(a,b){return a=J.fx?J.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(){var c=this;setTimeout(function(){J.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function d(){--i||f.resolveWith(g,[g])}"string"!=typeof a&&(c=a,a=b),a=a||"fx";for(var e,f=J.Deferred(),g=this,h=g.length,i=1,j=a+"defer",k=a+"queue",l=a+"mark";h--;)(e=J.data(g[h],j,b,!0)||(J.data(g[h],k,b,!0)||J.data(g[h],l,b,!0))&&J.data(g[h],j,J._Deferred(),!0))&&(i++,e.done(d));return d(),f.promise()}});var O,P,Q=/[\n\t\r]/g,R=/\s+/,S=/\r/g,T=/^(?:button|input)$/i,U=/^(?:button|input|object|select|textarea)$/i,V=/^a(?:rea)?$/i,W=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,X=/\:|^on/;J.fn.extend({attr:function(a,b){return J.access(this,a,b,!0,J.attr)},removeAttr:function(a){return this.each(function(){J.removeAttr(this,a)})},prop:function(a,b){return J.access(this,a,b,!0,J.prop)},removeProp:function(a){return a=J.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]
}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(J.isFunction(a))return this.each(function(b){J(this).addClass(a.call(this,b,this.className))});if(a&&"string"==typeof a)for(b=a.split(R),c=0,d=this.length;d>c;c++)if(e=this[c],1===e.nodeType)if(e.className||1!==b.length){for(f=" "+e.className+" ",g=0,h=b.length;h>g;g++)~f.indexOf(" "+b[g]+" ")||(f+=b[g]+" ");e.className=J.trim(f)}else e.className=a;return this},removeClass:function(a){var c,d,e,f,g,h,i;if(J.isFunction(a))return this.each(function(b){J(this).removeClass(a.call(this,b,this.className))});if(a&&"string"==typeof a||a===b)for(c=(a||"").split(R),d=0,e=this.length;e>d;d++)if(f=this[d],1===f.nodeType&&f.className)if(a){for(g=(" "+f.className+" ").replace(Q," "),h=0,i=c.length;i>h;h++)g=g.replace(" "+c[h]+" "," ");f.className=J.trim(g)}else f.className="";return this},toggleClass:function(a,b){var c=typeof a,d="boolean"==typeof b;return J.isFunction(a)?this.each(function(c){J(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if("string"===c)for(var e,f=0,g=J(this),h=b,i=a.split(R);e=i[f++];)h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e);else("undefined"===c||"boolean"===c)&&(this.className&&J._data(this,"__className__",this.className),this.className=this.className||a===!1?"":J._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if((" "+this[c].className+" ").replace(Q," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length)return e?(c=J.valHooks[e.nodeName.toLowerCase()]||J.valHooks[e.type],c&&"get"in c&&(d=c.get(e,"value"))!==b?d:(d=e.value,"string"==typeof d?d.replace(S,""):null==d?"":d)):b;var f=J.isFunction(a);return this.each(function(d){var e,g=J(this);1===this.nodeType&&(e=f?a.call(this,d,g.val()):a,null==e?e="":"number"==typeof e?e+="":J.isArray(e)&&(e=J.map(e,function(a){return null==a?"":a+""})),c=J.valHooks[this.nodeName.toLowerCase()]||J.valHooks[this.type],c&&"set"in c&&c.set(this,e,"value")!==b||(this.value=e))})}}),J.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,f="select-one"===a.type;if(0>c)return null;for(var g=f?c:0,h=f?c+1:e.length;h>g;g++){var i=e[g];if(!(!i.selected||(J.support.optDisabled?i.disabled:null!==i.getAttribute("disabled"))||i.parentNode.disabled&&J.nodeName(i.parentNode,"optgroup"))){if(b=J(i).val(),f)return b;d.push(b)}}return f&&!d.length&&e.length?J(e[c]).val():d},set:function(a,b){var c=J.makeArray(b);return J(a).find("option").each(function(){this.selected=J.inArray(J(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var f=a.nodeType;if(!a||3===f||8===f||2===f)return b;if(e&&c in J.attrFn)return J(a)[c](d);if(!("getAttribute"in a))return J.prop(a,c,d);var g,h,i=1!==f||!J.isXMLDoc(a);return i&&(c=J.attrFix[c]||c,h=J.attrHooks[c],h||(W.test(c)?h=P:O&&"className"!==c&&(J.nodeName(a,"form")||X.test(c))&&(h=O))),d!==b?null===d?(J.removeAttr(a,c),b):h&&"set"in h&&i&&(g=h.set(a,d,c))!==b?g:(a.setAttribute(c,""+d),d):h&&"get"in h&&i&&null!==(g=h.get(a,c))?g:(g=a.getAttribute(c),null===g?b:g)},removeAttr:function(a,b){var c;1===a.nodeType&&(b=J.attrFix[b]||b,J.support.getSetAttribute?a.removeAttribute(b):(J.attr(a,b,""),a.removeAttributeNode(a.getAttributeNode(b))),W.test(b)&&(c=J.propFix[b]||b)in a&&(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(T.test(a.nodeName)&&a.parentNode)J.error("type property can't be changed");else if(!J.support.radioValue&&"radio"===b&&J.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},tabIndex:{get:function(a){var c=a.getAttributeNode("tabIndex");return c&&c.specified?parseInt(c.value,10):U.test(a.nodeName)||V.test(a.nodeName)&&a.href?0:b}},value:{get:function(a,b){return O&&J.nodeName(a,"button")?O.get(a,b):b in a?a.value:null},set:function(a,b,c){return O&&J.nodeName(a,"button")?O.set(a,b,c):(a.value=b,void 0)}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||3===e||8===e||2===e)return b;var f,g,h=1!==e||!J.isXMLDoc(a);return h&&(c=J.propFix[c]||c,g=J.propHooks[c]),d!==b?g&&"set"in g&&(f=g.set(a,d,c))!==b?f:a[c]=d:g&&"get"in g&&(f=g.get(a,c))!==b?f:a[c]},propHooks:{}}),P={get:function(a,c){return J.prop(a,c)?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?J.removeAttr(a,c):(d=J.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},J.support.getSetAttribute||(J.attrFix=J.propFix,O=J.attrHooks.name=J.attrHooks.title=J.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&""!==d.nodeValue?d.nodeValue:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d?(d.nodeValue=b,b):void 0}},J.each(["width","height"],function(a,b){J.attrHooks[b]=J.extend(J.attrHooks[b],{set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}})})),J.support.hrefNormalized||J.each(["href","src","width","height"],function(a,c){J.attrHooks[c]=J.extend(J.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return null===d?b:d}})}),J.support.style||(J.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),J.support.optSelected||(J.propHooks.selected=J.extend(J.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}})),J.support.checkOn||J.each(["radio","checkbox"],function(){J.valHooks[this]={get:function(a){return null===a.getAttribute("value")?"on":a.value}}}),J.each(["radio","checkbox"],function(){J.valHooks[this]=J.extend(J.valHooks[this],{set:function(a,b){return J.isArray(b)?a.checked=J.inArray(J(a).val(),b)>=0:void 0}})});var Y=/\.(.*)$/,Z=/^(?:textarea|input|select)$/i,$=/\./g,_=/ /g,ab=/[^\w\s.|`]/g,bb=function(a){return a.replace(ab,"\\$&")};J.event={add:function(a,c,d,e){if(3!==a.nodeType&&8!==a.nodeType){if(d===!1)d=C;else if(!d)return;var f,g;d.handler&&(f=d,d=f.handler),d.guid||(d.guid=J.guid++);var h=J._data(a);if(!h)return;var i=h.events,j=h.handle;i||(h.events=i={}),j||(h.handle=j=function(a){return"undefined"==typeof J||a&&J.event.triggered===a.type?b:J.event.handle.apply(j.elem,arguments)}),j.elem=a,c=c.split(" ");for(var k,l,m=0;k=c[m++];){g=f?J.extend({},f):{handler:d,data:e},k.indexOf(".")>-1?(l=k.split("."),k=l.shift(),g.namespace=l.slice(0).sort().join(".")):(l=[],g.namespace=""),g.type=k,g.guid||(g.guid=d.guid);var n=i[k],o=J.event.special[k]||{};n||(n=i[k]=[],o.setup&&o.setup.call(a,e,l,j)!==!1||(a.addEventListener?a.addEventListener(k,j,!1):a.attachEvent&&a.attachEvent("on"+k,j))),o.add&&(o.add.call(a,g),g.handler.guid||(g.handler.guid=d.guid)),n.push(g),J.event.global[k]=!0}a=null}},global:{},remove:function(a,c,d,e){if(3!==a.nodeType&&8!==a.nodeType){d===!1&&(d=C);var f,g,h,i,j,k,l,m,n,o,p=0,q=J.hasData(a)&&J._data(a),r=q&&q.events;if(!q||!r)return;if(c&&c.type&&(d=c.handler,c=c.type),!c||"string"==typeof c&&"."===c.charAt(0)){c=c||"";for(g in r)J.event.remove(a,g+c);return}for(c=c.split(" ");g=c[p++];)if(o=g,n=null,i=g.indexOf(".")<0,j=[],i||(j=g.split("."),g=j.shift(),k=new RegExp("(^|\\.)"+J.map(j.slice(0).sort(),bb).join("\\.(?:.*\\.)?")+"(\\.|$)")),m=r[g],m)if(d){for(l=J.event.special[g]||{},h=e||0;h<m.length&&(n=m[h],d.guid!==n.guid||((i||k.test(n.namespace))&&(null==e&&m.splice(h--,1),l.remove&&l.remove.call(a,n)),null==e));h++);(0===m.length||null!=e&&1===m.length)&&((!l.teardown||l.teardown.call(a,j)===!1)&&J.removeEvent(a,g,q.handle),f=null,delete r[g])}else for(h=0;h<m.length;h++)n=m[h],(i||k.test(n.namespace))&&(J.event.remove(a,o,n.handler,h),m.splice(h--,1));if(J.isEmptyObject(r)){var s=q.handle;s&&(s.elem=null),delete q.events,delete q.handle,J.isEmptyObject(q)&&J.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,f){var g,h=c.type||c,i=[];if(h.indexOf("!")>=0&&(h=h.slice(0,-1),g=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort()),e&&!J.event.customEvent[h]||J.event.global[h]){if(c="object"==typeof c?c[J.expando]?c:new J.Event(h,c):new J.Event(h),c.type=h,c.exclusive=g,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"),(f||!e)&&(c.preventDefault(),c.stopPropagation()),!e)return J.each(J.cache,function(){var a=J.expando,b=this[a];b&&b.events&&b.events[h]&&J.event.trigger(c,d,b.handle.elem)}),void 0;if(3===e.nodeType||8===e.nodeType)return;c.result=b,c.target=e,d=null!=d?J.makeArray(d):[],d.unshift(c);var j=e,k=h.indexOf(":")<0?"on"+h:"";do{var l=J._data(j,"handle");c.currentTarget=j,l&&l.apply(j,d),k&&J.acceptData(j)&&j[k]&&j[k].apply(j,d)===!1&&(c.result=!1,c.preventDefault()),j=j.parentNode||j.ownerDocument||j===c.target.ownerDocument&&a}while(j&&!c.isPropagationStopped());if(!c.isDefaultPrevented()){var m,n=J.event.special[h]||{};if(!(n._default&&n._default.call(e.ownerDocument,c)!==!1||"click"===h&&J.nodeName(e,"a")||!J.acceptData(e))){try{k&&e[h]&&(m=e[k],m&&(e[k]=null),J.event.triggered=h,e[h]())}catch(o){}m&&(e[k]=m),J.event.triggered=b}}return c.result}},handle:function(c){c=J.event.fix(c||a.event);var d=((J._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&&!c.namespace,f=Array.prototype.slice.call(arguments,0);f[0]=c,c.currentTarget=this;for(var g=0,h=d.length;h>g;g++){var i=d[g];if(e||c.namespace_re.test(i.namespace)){c.handler=i.handler,c.data=i.data,c.handleObj=i;var j=i.handler.apply(this,f);if(j!==b&&(c.result=j,j===!1&&(c.preventDefault(),c.stopPropagation())),c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[J.expando])return a;var c=a;a=J.Event(c);for(var d,e=this.props.length;e;)d=this.props[--e],a[d]=c[d];if(a.target||(a.target=a.srcElement||G),3===a.target.nodeType&&(a.target=a.target.parentNode),!a.relatedTarget&&a.fromElement&&(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement),null==a.pageX&&null!=a.clientX){var f=a.target.ownerDocument||G,g=f.documentElement,h=f.body;a.pageX=a.clientX+(g&&g.scrollLeft||h&&h.scrollLeft||0)-(g&&g.clientLeft||h&&h.clientLeft||0),a.pageY=a.clientY+(g&&g.scrollTop||h&&h.scrollTop||0)-(g&&g.clientTop||h&&h.clientTop||0)}return null==a.which&&(null!=a.charCode||null!=a.keyCode)&&(a.which=null!=a.charCode?a.charCode:a.keyCode),!a.metaKey&&a.ctrlKey&&(a.metaKey=a.ctrlKey),!a.which&&a.button!==b&&(a.which=1&a.button?1:2&a.button?3:4&a.button?2:0),a},guid:1e8,proxy:J.proxy,special:{ready:{setup:J.bindReady,teardown:J.noop},live:{add:function(a){J.event.add(this,y(a.origType,a.selector),J.extend({},a,{handler:z,guid:a.handler.guid}))},remove:function(a){J.event.remove(this,y(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){J.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}}},J.removeEvent=G.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},J.Event=function(a,b){return this.preventDefault?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?B:C):this.type=a,b&&J.extend(this,b),this.timeStamp=J.now(),this[J.expando]=!0,void 0):new J.Event(a,b)},J.Event.prototype={preventDefault:function(){this.isDefaultPrevented=B;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=B;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=B,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var cb=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&&(b&&(c=J.contains(this,b)),c||(J.event.handle.apply(this,arguments),a.type=d))},db=function(a){a.type=a.data,J.event.handle.apply(this,arguments)};if(J.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){J.event.special[a]={setup:function(c){J.event.add(this,b,c&&c.selector?db:cb,a)},teardown:function(a){J.event.remove(this,b,a&&a.selector?db:cb)}}}),J.support.submitBubbles||(J.event.special.submit={setup:function(){return J.nodeName(this,"form")?!1:(J.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=b.type;("submit"===c||"image"===c)&&J(b).closest("form").length&&A("submit",this,arguments)}),J.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=b.type;("text"===c||"password"===c)&&J(b).closest("form").length&&13===a.keyCode&&A("submit",this,arguments)}),void 0)},teardown:function(){J.event.remove(this,".specialSubmit")}}),!J.support.changeBubbles){var eb,fb=function(a){var b=a.type,c=a.value;return"radio"===b||"checkbox"===b?c=a.checked:"select-multiple"===b?c=a.selectedIndex>-1?J.map(a.options,function(a){return a.selected}).join("-"):"":J.nodeName(a,"select")&&(c=a.selectedIndex),c},gb=function(a){var c,d,e=a.target;if(Z.test(e.nodeName)&&!e.readOnly){if(c=J._data(e,"_change_data"),d=fb(e),("focusout"!==a.type||"radio"!==e.type)&&J._data(e,"_change_data",d),c===b||d===c)return;(null!=c||d)&&(a.type="change",a.liveFired=b,J.event.trigger(a,arguments[1],e))}};J.event.special.change={filters:{focusout:gb,beforedeactivate:gb,click:function(a){var b=a.target,c=J.nodeName(b,"input")?b.type:"";("radio"===c||"checkbox"===c||J.nodeName(b,"select"))&&gb.call(this,a)},keydown:function(a){var b=a.target,c=J.nodeName(b,"input")?b.type:"";(13===a.keyCode&&!J.nodeName(b,"textarea")||32===a.keyCode&&("checkbox"===c||"radio"===c)||"select-multiple"===c)&&gb.call(this,a)},beforeactivate:function(a){var b=a.target;J._data(b,"_change_data",fb(b))}},setup:function(){if("file"===this.type)return!1;for(var a in eb)J.event.add(this,a+".specialChange",eb[a]);return Z.test(this.nodeName)},teardown:function(){return J.event.remove(this,".specialChange"),Z.test(this.nodeName)}},eb=J.event.special.change.filters,eb.focus=eb.beforeactivate}J.support.focusinBubbles||J.each({focus:"focusin",blur:"focusout"},function(a,b){function c(a){var c=J.event.fix(a);c.type=b,c.originalEvent={},J.event.trigger(c,null,c.target),c.isDefaultPrevented()&&a.preventDefault()}var d=0;J.event.special[b]={setup:function(){0===d++&&G.addEventListener(a,c,!0)},teardown:function(){0===--d&&G.removeEventListener(a,c,!0)}}}),J.each(["bind","one"],function(a,c){J.fn[c]=function(a,d,e){var f;if("object"==typeof a){for(var g in a)this[c](g,d,a[g],e);return this}if((2===arguments.length||d===!1)&&(e=d,d=b),"one"===c?(f=function(a){return J(this).unbind(a,f),e.apply(this,arguments)},f.guid=e.guid||J.guid++):f=e,"unload"===a&&"one"!==c)this.one(a,d,e);else for(var h=0,i=this.length;i>h;h++)J.event.add(this[h],a,f,d);return this}}),J.fn.extend({unbind:function(a,b){if("object"!=typeof a||a.preventDefault)for(var c=0,d=this.length;d>c;c++)J.event.remove(this[c],a,b);else for(var e in a)this.unbind(e,a[e]);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return 0===arguments.length?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){J.event.trigger(a,b,this)})},triggerHandler:function(a,b){return this[0]?J.event.trigger(a,b,this[0],!0):void 0},toggle:function(a){var b=arguments,c=a.guid||J.guid++,d=0,e=function(c){var e=(J.data(this,"lastToggle"+a.guid)||0)%d;return J.data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};for(e.guid=c;d<b.length;)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var hb={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};J.each(["live","die"],function(a,c){J.fn[c]=function(a,d,e,f){var g,h,i,j,k=0,l=f||this.selector,m=f?this:J(this.context);if("object"==typeof a&&!a.preventDefault){for(var n in a)m[c](n,d,a[n],l);return this}if("die"===c&&!a&&f&&"."===f.charAt(0))return m.unbind(f),this;for((d===!1||J.isFunction(d))&&(e=d||C,d=b),a=(a||"").split(" ");null!=(g=a[k++]);)if(h=Y.exec(g),i="",h&&(i=h[0],g=g.replace(Y,"")),"hover"!==g)if(j=g,hb[g]?(a.push(hb[g]+i),g+=i):g=(hb[g]||g)+i,"live"===c)for(var o=0,p=m.length;p>o;o++)J.event.add(m[o],"live."+y(g,l),{data:d,selector:l,handler:e,origType:g,origHandler:e,preType:j});else m.unbind("live."+y(g,l),e);else a.push("mouseenter"+i,"mouseleave"+i);return this}}),J.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){J.fn[b]=function(a,c){return null==c&&(c=a,a=null),arguments.length>0?this.bind(b,a,c):this.trigger(b)},J.attrFn&&(J.attrFn[b]=!0)}),function(){function a(a,b,c,d,e,f){for(var g=0,h=d.length;h>g;g++){var i=d[g];if(i){var j=!1;for(i=i[a];i;){if(i.sizcache===c){j=d[i.sizset];break}if(1===i.nodeType)if(f||(i.sizcache=c,i.sizset=g),"string"!=typeof b){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length>0){j=i;break}i=i[a]}d[g]=j}}}function c(a,b,c,d,e,f){for(var g=0,h=d.length;h>g;g++){var i=d[g];if(i){var j=!1;for(i=i[a];i;){if(i.sizcache===c){j=d[i.sizset];break}if(1===i.nodeType&&!f&&(i.sizcache=c,i.sizset=g),i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var d=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,e=0,f=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){return h=!1,0});var k=function(a,b,c,e){c=c||[],b=b||G;var g=b;if(1!==b.nodeType&&9!==b.nodeType)return[];if(!a||"string"!=typeof a)return c;var h,i,j,n,o,q,r,s,u=!0,v=k.isXML(b),w=[],x=a;do if(d.exec(""),h=d.exec(x),h&&(x=h[3],w.push(h[1]),h[2])){n=h[3];break}while(h);if(w.length>1&&m.exec(a))if(2===w.length&&l.relative[w[0]])i=t(w[0]+w[1],b);else for(i=l.relative[w[0]]?[b]:k(w.shift(),b);w.length;)a=w.shift(),l.relative[a]&&(a+=w.shift()),i=t(a,i);else if(!e&&w.length>1&&9===b.nodeType&&!v&&l.match.ID.test(w[0])&&!l.match.ID.test(w[w.length-1])&&(o=k.find(w.shift(),b,v),b=o.expr?k.filter(o.expr,o.set)[0]:o.set[0]),b)for(o=e?{expr:w.pop(),set:p(e)}:k.find(w.pop(),1!==w.length||"~"!==w[0]&&"+"!==w[0]||!b.parentNode?b:b.parentNode,v),i=o.expr?k.filter(o.expr,o.set):o.set,w.length>0?j=p(i):u=!1;w.length;)q=w.pop(),r=q,l.relative[q]?r=w.pop():q="",null==r&&(r=b),l.relative[q](j,r,v);else j=w=[];if(j||(j=i),j||k.error(q||a),"[object Array]"===f.call(j))if(u)if(b&&1===b.nodeType)for(s=0;null!=j[s];s++)j[s]&&(j[s]===!0||1===j[s].nodeType&&k.contains(b,j[s]))&&c.push(i[s]);else for(s=0;null!=j[s];s++)j[s]&&1===j[s].nodeType&&c.push(i[s]);else c.push.apply(c,j);else p(j,c);return n&&(k(n,g,c,e),k.uniqueSort(c)),c};k.uniqueSort=function(a){if(r&&(g=h,a.sort(r),g))for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1);return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length>0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;f>e;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];if(g.splice(1,1),"\\"!==j.substr(j.length-1)&&(g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c),null!=d)){a=a.replace(l.match[h],"");break}}}return d||(d="undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName("*"):[]),{set:d,expr:a}},k.filter=function(a,c,d,e){for(var f,g,h=a,i=[],j=c,m=c&&c[0]&&k.isXML(c[0]);a&&c.length;){for(var n in l.filter)if(null!=(f=l.leftMatch[n].exec(a))&&f[2]){var o,p,q=l.filter[n],r=f[1];if(g=!1,f.splice(1,1),"\\"===r.substr(r.length-1))continue;if(j===i&&(i=[]),l.preFilter[n])if(f=l.preFilter[n](f,j,d,i,e,m)){if(f===!0)continue}else g=o=!0;if(f)for(var s=0;null!=(p=j[s]);s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&&null!=o?t?g=!0:j[s]=!1:t&&(i.push(p),g=!0)}if(o!==b){if(d||(j=i),a=a.replace(l.match[n],""),!g)return[];break}}if(a===h){if(null!=g)break;k.error(a)}h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c="string"==typeof b,d=c&&!j.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f,g=0,h=a.length;h>g;g++)if(f=a[g]){for(;(f=f.previousSibling)&&1!==f.nodeType;);a[g]=e||f&&f.nodeName.toLowerCase()===b?f||!1:f===b}e&&k.filter(b,a,!0)},">":function(a,b){var c,d="string"==typeof b,e=0,f=a.length;if(d&&!j.test(b)){for(b=b.toLowerCase();f>e;e++)if(c=a[e]){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}else{for(;f>e;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&k.filter(b,a,!0)}},"":function(b,d,f){var g,h=e++,i=a;"string"==typeof d&&!j.test(d)&&(d=d.toLowerCase(),g=d,i=c),i("parentNode",d,h,b,g,f)},"~":function(b,d,f){var g,h=e++,i=a;"string"==typeof d&&!j.test(d)&&(d=d.toLowerCase(),g=d,i=c),i("previousSibling",d,h,b,g,f)}},find:{ID:function(a,b,c){if("undefined"!=typeof b.getElementById&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if("undefined"!=typeof b.getElementsByName){for(var c=[],d=b.getElementsByName(a[1]),e=0,f=d.length;f>e;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return 0===c.length?null:c}},TAG:function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a[1]):void 0}},preFilter:{CLASS:function(a,b,c,d,e,f){if(a=" "+a[1].replace(i,"")+" ",f)return a;for(var g,h=0;null!=(g=b[h]);h++)g&&(e^(g.className&&(" "+g.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(g):c&&(b[h]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if("nth"===a[1]){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec("even"===a[2]&&"2n"||"odd"===a[2]&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&k.error(a[0]);return a[0]=e++,a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");return!f&&l.attrMap[g]&&(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),"~="===a[2]&&(a[4]=" "+a[4]+" "),a},PSEUDO:function(a,b,c,e,f){if("not"===a[1]){if(!((d.exec(a[3])||"").length>1||/^\w/.test(a[3]))){var g=k.filter(a[3],b,c,!0^f);return c||e.push.apply(e,g),!1}a[3]=k(a[3],null,null,b)}else if(l.match.POS.test(a[0])||l.match.CHILD.test(a[0]))return!0;return a},POS:function(a){return a.unshift(!0),a}},filters:{enabled:function(a){return a.disabled===!1&&"hidden"!==a.type},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return"input"===a.nodeName.toLowerCase()&&"text"===c&&(b===c||null===b)},radio:function(a){return"input"===a.nodeName.toLowerCase()&&"radio"===a.type},checkbox:function(a){return"input"===a.nodeName.toLowerCase()&&"checkbox"===a.type},file:function(a){return"input"===a.nodeName.toLowerCase()&&"file"===a.type},password:function(a){return"input"===a.nodeName.toLowerCase()&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return("input"===b||"button"===b)&&"submit"===a.type},image:function(a){return"input"===a.nodeName.toLowerCase()&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return("input"===b||"button"===b)&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return 0===b},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if("contains"===e)return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])>=0;if("not"===e){for(var g=b[3],h=0,i=g.length;i>h;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":for(;d=d.previousSibling;)if(1===d.nodeType)return!1;if("first"===c)return!0;d=a;case"last":for(;d=d.nextSibling;)if(1===d.nodeType)return!1;return!0;case"nth":var e=b[2],f=b[3];if(1===e&&0===f)return!0;var g=b[0],h=a.parentNode;if(h&&(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)1===d.nodeType&&(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return 0===e?0===j:j%e===0&&j/e>=0}},ID:function(a,b){return 1===a.nodeType&&a.getAttribute("id")===b},TAG:function(a,b){return"*"===b&&1===a.nodeType||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):null!=a[c]?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return null==d?"!="===f:"="===f?e===g:"*="===f?e.indexOf(g)>=0:"~="===f?(" "+e+" ").indexOf(g)>=0:g?"!="===f?e!==g:"^="===f?0===e.indexOf(g):"$="===f?e.substr(e.length-g.length)===g:"|="===f?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];return f?f(a,c,b,d):void 0}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){return a=Array.prototype.slice.call(a,0),b?(b.push.apply(b,a),b):a};try{Array.prototype.slice.call(G.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if("[object Array]"===f.call(a))Array.prototype.push.apply(d,a);else if("number"==typeof a.length)for(var e=a.length;e>c;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;G.documentElement.compareDocumentPosition?r=function(a,b){return a===b?(g=!0,0):a.compareDocumentPosition&&b.compareDocumentPosition?4&a.compareDocumentPosition(b)?-1:1:a.compareDocumentPosition?-1:1}:(r=function(a,b){if(a===b)return g=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;for(;j;)e.unshift(j),j=j.parentNode;for(j=i;j;)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;c>k&&d>k;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;for(var d=a.nextSibling;d;){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){for(var b,c="",d=0;a[d];d++)b=a[d],3===b.nodeType||4===b.nodeType?c+=b.nodeValue:8!==b.nodeType&&(c+=k.getText(b.childNodes));return c},function(){var a=G.createElement("div"),c="script"+(new Date).getTime(),d=G.documentElement;a.innerHTML="<a name='"+c+"'/>",d.insertBefore(a,d.firstChild),G.getElementById(c)&&(l.find.ID=function(a,c,d){if("undefined"!=typeof c.getElementById&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||"undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return 1===a.nodeType&&c&&c.nodeValue===b}),d.removeChild(a),d=a=null}(),function(){var a=G.createElement("div");a.appendChild(G.createComment("")),a.getElementsByTagName("*").length>0&&(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if("*"===a[1]){for(var d=[],e=0;c[e];e++)1===c[e].nodeType&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&"undefined"!=typeof a.firstChild.getAttribute&&"#"!==a.firstChild.getAttribute("href")&&(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),G.querySelectorAll&&function(){var a=k,b=G.createElement("div"),c="__sizzle__";if(b.innerHTML="<p class='TEST'></p>",!b.querySelectorAll||0!==b.querySelectorAll(".TEST").length){k=function(b,d,e,f){if(d=d||G,!f&&!k.isXML(d)){var g=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(g&&(1===d.nodeType||9===d.nodeType)){if(g[1])return p(d.getElementsByTagName(b),e);if(g[2]&&l.find.CLASS&&d.getElementsByClassName)return p(d.getElementsByClassName(g[2]),e)}if(9===d.nodeType){if("body"===b&&d.body)return p([d.body],e);if(g&&g[3]){var h=d.getElementById(g[3]);if(!h||!h.parentNode)return p([],e);if(h.id===g[3])return p([h],e)}try{return p(d.querySelectorAll(b),e)}catch(i){}}else if(1===d.nodeType&&"object"!==d.nodeName.toLowerCase()){var j=d,m=d.getAttribute("id"),n=m||c,o=d.parentNode,q=/^\s*[+~]/.test(b);m?n=n.replace(/'/g,"\\$&"):d.setAttribute("id",n),q&&o&&(d=d.parentNode);try{if(!q||o)return p(d.querySelectorAll("[id='"+n+"'] "+b),e)}catch(r){}finally{m||j.removeAttribute("id")}}}return a(b,d,e,f)};for(var d in a)k[d]=a[d];b=null}}(),function(){var a=G.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var c=!b.call(G.createElement("div"),"div"),d=!1;try{b.call(G.documentElement,"[test!='']:sizzle")}catch(e){d=!0}k.matchesSelector=function(a,e){if(e=e.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']"),!k.isXML(a))try{if(d||!l.match.PSEUDO.test(e)&&!/!=/.test(e)){var f=b.call(a,e);if(f||!c||a.document&&11!==a.document.nodeType)return f}}catch(g){}return k(e,null,null,[a]).length>0}}}(),function(){var a=G.createElement("div");if(a.innerHTML="<div class='test e'></div><div class='test'></div>",a.getElementsByClassName&&0!==a.getElementsByClassName("e").length){if(a.lastChild.className="e",1===a.getElementsByClassName("e").length)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){return"undefined"==typeof b.getElementsByClassName||c?void 0:b.getElementsByClassName(a[1])},a=null}}(),k.contains=G.documentElement.contains?function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:G.documentElement.compareDocumentPosition?function(a,b){return!!(16&a.compareDocumentPosition(b))}:function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?"HTML"!==b.nodeName:!1};var t=function(a,b){for(var c,d=[],e="",f=b.nodeType?[b]:b;c=l.match.PSEUDO.exec(a);)e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;h>g;g++)k(a,f[g],d);return k.filter(e,d)};J.find=k,J.expr=k.selectors,J.expr[":"]=J.expr.filters,J.unique=k.uniqueSort,J.text=k.getText,J.isXMLDoc=k.isXML,J.contains=k.contains
}();var ib=/Until$/,jb=/^(?:parents|prevUntil|prevAll)/,kb=/,/,lb=/^.[^:#\[\.,]*$/,mb=Array.prototype.slice,nb=J.expr.match.POS,ob={children:!0,contents:!0,next:!0,prev:!0};J.fn.extend({find:function(a){var b,c,d=this;if("string"!=typeof a)return J(a).filter(function(){for(b=0,c=d.length;c>b;b++)if(J.contains(d[b],this))return!0});var e,f,g,h=this.pushStack("","find",a);for(b=0,c=this.length;c>b;b++)if(e=h.length,J.find(a,this[b],h),b>0)for(f=e;f<h.length;f++)for(g=0;e>g;g++)if(h[g]===h[f]){h.splice(f--,1);break}return h},has:function(a){var b=J(a);return this.filter(function(){for(var a=0,c=b.length;c>a;a++)if(J.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(w(this,a,!1),"not",a)},filter:function(a){return this.pushStack(w(this,a,!0),"filter",a)},is:function(a){return!!a&&("string"==typeof a?J.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d,e=[],f=this[0];if(J.isArray(a)){var g,h,i={},j=1;if(f&&a.length){for(c=0,d=a.length;d>c;c++)h=a[c],i[h]||(i[h]=nb.test(h)?J(h,b||this.context):h);for(;f&&f.ownerDocument&&f!==b;){for(h in i)g=i[h],(g.jquery?g.index(f)>-1:J(f).is(g))&&e.push({selector:h,elem:f,level:j});f=f.parentNode,j++}}return e}var k=nb.test(a)||"string"!=typeof a?J(a,b||this.context):0;for(c=0,d=this.length;d>c;c++)for(f=this[c];f;){if(k?k.index(f)>-1:J.find.matchesSelector(f,a)){e.push(f);break}if(f=f.parentNode,!f||!f.ownerDocument||f===b||11===f.nodeType)break}return e=e.length>1?J.unique(e):e,this.pushStack(e,"closest",a)},index:function(a){return a&&"string"!=typeof a?J.inArray(a.jquery?a[0]:a,this):J.inArray(this[0],a?J(a):this.parent().children())},add:function(a,b){var c="string"==typeof a?J(a,b):J.makeArray(a&&a.nodeType?[a]:a),d=J.merge(this.get(),c);return this.pushStack(x(c[0])||x(d[0])?d:J.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),J.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return J.dir(a,"parentNode")},parentsUntil:function(a,b,c){return J.dir(a,"parentNode",c)},next:function(a){return J.nth(a,2,"nextSibling")},prev:function(a){return J.nth(a,2,"previousSibling")},nextAll:function(a){return J.dir(a,"nextSibling")},prevAll:function(a){return J.dir(a,"previousSibling")},nextUntil:function(a,b,c){return J.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return J.dir(a,"previousSibling",c)},siblings:function(a){return J.sibling(a.parentNode.firstChild,a)},children:function(a){return J.sibling(a.firstChild)},contents:function(a){return J.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:J.makeArray(a.childNodes)}},function(a,b){J.fn[a]=function(c,d){var e=J.map(this,b,c),f=mb.call(arguments);return ib.test(a)||(d=c),d&&"string"==typeof d&&(e=J.filter(d,e)),e=this.length>1&&!ob[a]?J.unique(e):e,(this.length>1||kb.test(d))&&jb.test(a)&&(e=e.reverse()),this.pushStack(e,a,f.join(","))}}),J.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),1===b.length?J.find.matchesSelector(b[0],a)?[b[0]]:[]:J.find.matches(a,b)},dir:function(a,c,d){for(var e=[],f=a[c];f&&9!==f.nodeType&&(d===b||1!==f.nodeType||!J(f).is(d));)1===f.nodeType&&e.push(f),f=f[c];return e},nth:function(a,b,c){b=b||1;for(var d=0;a&&(1!==a.nodeType||++d!==b);a=a[c]);return a},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}});var pb=/ jQuery\d+="(?:\d+|null)"/g,qb=/^\s+/,rb=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,sb=/<([\w:]+)/,tb=/<tbody/i,ub=/<|&#?\w+;/,vb=/<(?:script|object|embed|option|style)/i,wb=/checked\s*(?:[^=]|=\s*.checked.)/i,xb=/\/(java|ecma)script/i,yb=/^\s*<!(?:\[CDATA\[|\-\-)/,zb={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};zb.optgroup=zb.option,zb.tbody=zb.tfoot=zb.colgroup=zb.caption=zb.thead,zb.th=zb.td,J.support.htmlSerialize||(zb._default=[1,"div<div>","</div>"]),J.fn.extend({text:function(a){return J.isFunction(a)?this.each(function(b){var c=J(this);c.text(a.call(this,b,c.text()))}):"object"!=typeof a&&a!==b?this.empty().append((this[0]&&this[0].ownerDocument||G).createTextNode(a)):J.text(this)},wrapAll:function(a){if(J.isFunction(a))return this.each(function(b){J(this).wrapAll(a.call(this,b))});if(this[0]){var b=J(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){for(var a=this;a.firstChild&&1===a.firstChild.nodeType;)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return J.isFunction(a)?this.each(function(b){J(this).wrapInner(a.call(this,b))}):this.each(function(){var b=J(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){J(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){J.nodeName(this,"body")||J(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){1===this.nodeType&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){1===this.nodeType&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=J(arguments[0]);return a.push.apply(a,this.toArray()),this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);return a.push.apply(a,J(arguments[0]).toArray()),a}},remove:function(a,b){for(var c,d=0;null!=(c=this[d]);d++)(!a||J.filter(a,[c]).length)&&(!b&&1===c.nodeType&&(J.cleanData(c.getElementsByTagName("*")),J.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)for(1===a.nodeType&&J.cleanData(a.getElementsByTagName("*"));a.firstChild;)a.removeChild(a.firstChild);return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return J.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&1===this[0].nodeType?this[0].innerHTML.replace(pb,""):null;if("string"!=typeof a||vb.test(a)||!J.support.leadingWhitespace&&qb.test(a)||zb[(sb.exec(a)||["",""])[1].toLowerCase()])J.isFunction(a)?this.each(function(b){var c=J(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);else{a=a.replace(rb,"<$1></$2>");try{for(var c=0,d=this.length;d>c;c++)1===this[c].nodeType&&(J.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}return this},replaceWith:function(a){return this[0]&&this[0].parentNode?J.isFunction(a)?this.each(function(b){var c=J(this),d=c.html();c.replaceWith(a.call(this,b,d))}):("string"!=typeof a&&(a=J(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;J(this).remove(),b?J(b).before(a):J(c).append(a)})):this.length?this.pushStack(J(J.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,f,g,h,i=a[0],j=[];if(!J.support.checkClone&&3===arguments.length&&"string"==typeof i&&wb.test(i))return this.each(function(){J(this).domManip(a,c,d,!0)});if(J.isFunction(i))return this.each(function(e){var f=J(this);a[0]=i.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){if(h=i&&i.parentNode,e=J.support.parentNode&&h&&11===h.nodeType&&h.childNodes.length===this.length?{fragment:h}:J.buildFragment(a,this,j),g=e.fragment,f=1===g.childNodes.length?g=g.firstChild:g.firstChild,f){c=c&&J.nodeName(f,"tr");for(var k=0,l=this.length,m=l-1;l>k;k++)d.call(c?v(this[k],f):this[k],e.cacheable||l>1&&m>k?J.clone(g,!0,!0):g)}j.length&&J.each(j,p)}return this}}),J.buildFragment=function(a,b,c){var d,e,f,g;return b&&b[0]&&(g=b[0].ownerDocument||b[0]),g.createDocumentFragment||(g=G),1===a.length&&"string"==typeof a[0]&&a[0].length<512&&g===G&&"<"===a[0].charAt(0)&&!vb.test(a[0])&&(J.support.checkClone||!wb.test(a[0]))&&(e=!0,f=J.fragments[a[0]],f&&1!==f&&(d=f)),d||(d=g.createDocumentFragment(),J.clean(a,g,d,c)),e&&(J.fragments[a[0]]=f?d:1),{fragment:d,cacheable:e}},J.fragments={},J.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){J.fn[a]=function(c){var d=[],e=J(c),f=1===this.length&&this[0].parentNode;if(f&&11===f.nodeType&&1===f.childNodes.length&&1===e.length)return e[b](this[0]),this;for(var g=0,h=e.length;h>g;g++){var i=(g>0?this.clone(!0):this).get();J(e[g])[b](i),d=d.concat(i)}return this.pushStack(d,a,e.selector)}}),J.extend({clone:function(a,b,c){var d,e,f,g=a.cloneNode(!0);if(!(J.support.noCloneEvent&&J.support.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||J.isXMLDoc(a)))for(t(a,g),d=s(a),e=s(g),f=0;d[f];++f)t(d[f],e[f]);if(b&&(u(a,g),c))for(d=s(a),e=s(g),f=0;d[f];++f)u(d[f],e[f]);return d=e=null,g},clean:function(a,b,c,d){var e;b=b||G,"undefined"==typeof b.createElement&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||G);for(var f,g,h=[],i=0;null!=(g=a[i]);i++)if("number"==typeof g&&(g+=""),g){if("string"==typeof g)if(ub.test(g)){g=g.replace(rb,"<$1></$2>");var j=(sb.exec(g)||["",""])[1].toLowerCase(),k=zb[j]||zb._default,l=k[0],m=b.createElement("div");for(m.innerHTML=k[1]+g+k[2];l--;)m=m.lastChild;if(!J.support.tbody){var n=tb.test(g),o="table"!==j||n?"<table>"!==k[1]||n?[]:m.childNodes:m.firstChild&&m.firstChild.childNodes;for(f=o.length-1;f>=0;--f)J.nodeName(o[f],"tbody")&&!o[f].childNodes.length&&o[f].parentNode.removeChild(o[f])}!J.support.leadingWhitespace&&qb.test(g)&&m.insertBefore(b.createTextNode(qb.exec(g)[0]),m.firstChild),g=m.childNodes}else g=b.createTextNode(g);var p;if(!J.support.appendChecked)if(g[0]&&"number"==typeof(p=g.length))for(f=0;p>f;f++)q(g[f]);else q(g);g.nodeType?h.push(g):h=J.merge(h,g)}if(c)for(e=function(a){return!a.type||xb.test(a.type)},i=0;h[i];i++)if(!d||!J.nodeName(h[i],"script")||h[i].type&&"text/javascript"!==h[i].type.toLowerCase()){if(1===h[i].nodeType){var r=J.grep(h[i].getElementsByTagName("script"),e);h.splice.apply(h,[i+1,0].concat(r))}c.appendChild(h[i])}else d.push(h[i].parentNode?h[i].parentNode.removeChild(h[i]):h[i]);return h},cleanData:function(a){for(var b,c,d,e=J.cache,f=J.expando,g=J.event.special,h=J.support.deleteExpando,i=0;null!=(d=a[i]);i++)if((!d.nodeName||!J.noData[d.nodeName.toLowerCase()])&&(c=d[J.expando])){if(b=e[c]&&e[c][f],b&&b.events){for(var j in b.events)g[j]?J.event.remove(d,j):J.removeEvent(d,j,b.handle);b.handle&&(b.handle.elem=null)}h?delete d[J.expando]:d.removeAttribute&&d.removeAttribute(J.expando),delete e[c]}}});var Ab,Bb,Cb,Db=/alpha\([^)]*\)/i,Eb=/opacity=([^)]*)/,Fb=/([A-Z]|^ms)/g,Gb=/^-?\d+(?:px)?$/i,Hb=/^-?\d/,Ib=/^[+\-]=/,Jb=/[^+\-\.\de]+/g,Kb={position:"absolute",visibility:"hidden",display:"block"},Lb=["Left","Right"],Mb=["Top","Bottom"];J.fn.css=function(a,c){return 2===arguments.length&&c===b?this:J.access(this,a,c,!0,function(a,c,d){return d!==b?J.style(a,c,d):J.css(a,c)})},J.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ab(a,"opacity","opacity");return""===c?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":J.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var f,g,h=J.camelCase(c),i=a.style,j=J.cssHooks[h];if(c=J.cssProps[h]||h,d===b)return j&&"get"in j&&(f=j.get(a,!1,e))!==b?f:i[c];if(g=typeof d,"number"===g&&isNaN(d)||null==d)return;if("string"===g&&Ib.test(d)&&(d=+d.replace(Jb,"")+parseFloat(J.css(a,c)),g="number"),"number"===g&&!J.cssNumber[h]&&(d+="px"),!(j&&"set"in j&&(d=j.set(a,d))===b))try{i[c]=d}catch(k){}}},css:function(a,c,d){var e,f;return c=J.camelCase(c),f=J.cssHooks[c],c=J.cssProps[c]||c,"cssFloat"===c&&(c="float"),f&&"get"in f&&(e=f.get(a,!0,d))!==b?e:Ab?Ab(a,c):void 0},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),J.curCSS=J.css,J.each(["height","width"],function(a,b){J.cssHooks[b]={get:function(a,c,d){var e;return c?0!==a.offsetWidth?o(a,b,d):(J.swap(a,Kb,function(){e=o(a,b,d)}),e):void 0},set:function(a,b){return Gb.test(b)?(b=parseFloat(b),b>=0?b+"px":void 0):b}}}),J.support.opacity||(J.cssHooks.opacity={get:function(a,b){return Eb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle;c.zoom=1;var e=J.isNaN(b)?"":"alpha(opacity="+100*b+")",f=d&&d.filter||c.filter||"";c.filter=Db.test(f)?f.replace(Db,e):f+" "+e}}),J(function(){J.support.reliableMarginRight||(J.cssHooks.marginRight={get:function(a,b){var c;return J.swap(a,{display:"inline-block"},function(){c=b?Ab(a,"margin-right","marginRight"):a.style.marginRight}),c}})}),G.defaultView&&G.defaultView.getComputedStyle&&(Bb=function(a,c){var d,e,f;return c=c.replace(Fb,"-$1").toLowerCase(),(e=a.ownerDocument.defaultView)?((f=e.getComputedStyle(a,null))&&(d=f.getPropertyValue(c),""===d&&!J.contains(a.ownerDocument.documentElement,a)&&(d=J.style(a,c))),d):b}),G.documentElement.currentStyle&&(Cb=function(a,b){var c,d=a.currentStyle&&a.currentStyle[b],e=a.runtimeStyle&&a.runtimeStyle[b],f=a.style;return!Gb.test(d)&&Hb.test(d)&&(c=f.left,e&&(a.runtimeStyle.left=a.currentStyle.left),f.left="fontSize"===b?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&&(a.runtimeStyle.left=e)),""===d?"auto":d}),Ab=Bb||Cb,J.expr&&J.expr.filters&&(J.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return 0===b&&0===c||!J.support.reliableHiddenOffsets&&"none"===(a.style.display||J.css(a,"display"))},J.expr.filters.visible=function(a){return!J.expr.filters.hidden(a)});var Nb,Ob,Pb=/%20/g,Qb=/\[\]$/,Rb=/\r?\n/g,Sb=/#.*$/,Tb=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ub=/^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,Vb=/^(?:about|app|app\-storage|.+\-extension|file|widget):$/,Wb=/^(?:GET|HEAD)$/,Xb=/^\/\//,Yb=/\?/,Zb=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,$b=/^(?:select|textarea)/i,_b=/\s+/,ac=/([?&])_=[^&]*/,bc=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,cc=J.fn.load,dc={},ec={};try{Nb=I.href}catch(fc){Nb=G.createElement("a"),Nb.href="",Nb=Nb.href}Ob=bc.exec(Nb.toLowerCase())||[],J.fn.extend({load:function(a,c,d){if("string"!=typeof a&&cc)return cc.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var f=a.slice(e,a.length);a=a.slice(0,e)}var g="GET";c&&(J.isFunction(c)?(d=c,c=b):"object"==typeof c&&(c=J.param(c,J.ajaxSettings.traditional),g="POST"));var h=this;return J.ajax({url:a,type:g,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),h.html(f?J("<div>").append(c.replace(Zb,"")).find(f):c)),d&&h.each(d,[c,b,a])}}),this},serialize:function(){return J.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?J.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||$b.test(this.nodeName)||Ub.test(this.type))}).map(function(a,b){var c=J(this).val();return null==c?null:J.isArray(c)?J.map(c,function(a){return{name:b.name,value:a.replace(Rb,"\r\n")}}):{name:b.name,value:c.replace(Rb,"\r\n")}}).get()}}),J.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){J.fn[b]=function(a){return this.bind(b,a)}}),J.each(["get","post"],function(a,c){J[c]=function(a,d,e,f){return J.isFunction(d)&&(f=f||e,e=d,d=b),J.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),J.extend({getScript:function(a,c){return J.get(a,b,c,"script")},getJSON:function(a,b,c){return J.get(a,b,c,"json")},ajaxSetup:function(a,b){b?J.extend(!0,a,J.ajaxSettings,b):(b=a,a=J.extend(!0,J.ajaxSettings,b));for(var c in{context:1,url:1})c in b?a[c]=b[c]:c in J.ajaxSettings&&(a[c]=J.ajaxSettings[c]);return a},ajaxSettings:{url:Nb,isLocal:Vb.test(Ob[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":"*/*"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":J.parseJSON,"text xml":J.parseXML}},ajaxPrefilter:n(dc),ajaxTransport:n(ec),ajax:function(a,c){function d(a,c,d,g){if(2!==x){x=2,i&&clearTimeout(i),h=b,f=g||"",y.readyState=a?4:0;var l,m,o,v,w,z=d?k(p,y,d):b;if(a>=200&&300>a||304===a)if(p.ifModified&&((v=y.getResponseHeader("Last-Modified"))&&(J.lastModified[e]=v),(w=y.getResponseHeader("Etag"))&&(J.etag[e]=w)),304===a)c="notmodified",l=!0;else try{m=j(p,z),c="success",l=!0}catch(A){c="parsererror",o=A}else o=c,(!c||a)&&(c="error",0>a&&(a=0));y.status=a,y.statusText=c,l?s.resolveWith(q,[m,c,y]):s.rejectWith(q,[y,c,o]),y.statusCode(u),u=b,n&&r.trigger("ajax"+(l?"Success":"Error"),[y,p,l?m:o]),t.resolveWith(q,[y,c]),n&&(r.trigger("ajaxComplete",[y,p]),--J.active||J.event.trigger("ajaxStop"))}}"object"==typeof a&&(c=a,a=b),c=c||{};var e,f,g,h,i,l,n,o,p=J.ajaxSetup({},c),q=p.context||p,r=q!==p&&(q.nodeType||q instanceof J)?J(q):J.event,s=J.Deferred(),t=J._Deferred(),u=p.statusCode||{},v={},w={},x=0,y={readyState:0,setRequestHeader:function(a,b){if(!x){var c=a.toLowerCase();a=w[c]=w[c]||a,v[a]=b}return this},getAllResponseHeaders:function(){return 2===x?f:null},getResponseHeader:function(a){var c;if(2===x){if(!g)for(g={};c=Tb.exec(f);)g[c[1].toLowerCase()]=c[2];c=g[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return x||(p.mimeType=a),this},abort:function(a){return a=a||"abort",h&&h.abort(a),d(0,a),this}};if(s.promise(y),y.success=y.done,y.error=y.fail,y.complete=t.done,y.statusCode=function(a){if(a){var b;if(2>x)for(b in a)u[b]=[u[b],a[b]];else b=a[y.status],y.then(b,b)}return this},p.url=((a||p.url)+"").replace(Sb,"").replace(Xb,Ob[1]+"//"),p.dataTypes=J.trim(p.dataType||"*").toLowerCase().split(_b),null==p.crossDomain&&(l=bc.exec(p.url.toLowerCase()),p.crossDomain=!(!l||l[1]==Ob[1]&&l[2]==Ob[2]&&(l[3]||("http:"===l[1]?80:443))==(Ob[3]||("http:"===Ob[1]?80:443)))),p.data&&p.processData&&"string"!=typeof p.data&&(p.data=J.param(p.data,p.traditional)),m(dc,p,c,y),2===x)return!1;if(n=p.global,p.type=p.type.toUpperCase(),p.hasContent=!Wb.test(p.type),n&&0===J.active++&&J.event.trigger("ajaxStart"),!p.hasContent&&(p.data&&(p.url+=(Yb.test(p.url)?"&":"?")+p.data),e=p.url,p.cache===!1)){var z=J.now(),A=p.url.replace(ac,"$1_="+z);p.url=A+(A===p.url?(Yb.test(p.url)?"&":"?")+"_="+z:"")}(p.data&&p.hasContent&&p.contentType!==!1||c.contentType)&&y.setRequestHeader("Content-Type",p.contentType),p.ifModified&&(e=e||p.url,J.lastModified[e]&&y.setRequestHeader("If-Modified-Since",J.lastModified[e]),J.etag[e]&&y.setRequestHeader("If-None-Match",J.etag[e])),y.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", */*; q=0.01":""):p.accepts["*"]);for(o in p.headers)y.setRequestHeader(o,p.headers[o]);if(p.beforeSend&&(p.beforeSend.call(q,y,p)===!1||2===x))return y.abort(),!1;for(o in{success:1,error:1,complete:1})y[o](p[o]);if(h=m(ec,p,c,y)){y.readyState=1,n&&r.trigger("ajaxSend",[y,p]),p.async&&p.timeout>0&&(i=setTimeout(function(){y.abort("timeout")},p.timeout));try{x=1,h.send(v,d)}catch(B){2>status?d(-1,B):J.error(B)}}else d(-1,"No Transport");return y},param:function(a,c){var d=[],e=function(a,b){b=J.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(c===b&&(c=J.ajaxSettings.traditional),J.isArray(a)||a.jquery&&!J.isPlainObject(a))J.each(a,function(){e(this.name,this.value)});else for(var f in a)l(f,a[f],c,e);return d.join("&").replace(Pb,"+")}}),J.extend({active:0,lastModified:{},etag:{}});var gc=J.now(),hc=/(\=)\?(&|$)|\?\?/i;J.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return J.expando+"_"+gc++}}),J.ajaxPrefilter("json jsonp",function(b,c,d){var e="application/x-www-form-urlencoded"===b.contentType&&"string"==typeof b.data;if("jsonp"===b.dataTypes[0]||b.jsonp!==!1&&(hc.test(b.url)||e&&hc.test(b.data))){var f,g=b.jsonpCallback=J.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h=a[g],i=b.url,j=b.data,k="$1"+g+"$2";return b.jsonp!==!1&&(i=i.replace(hc,k),b.url===i&&(e&&(j=j.replace(hc,k)),b.data===j&&(i+=(/\?/.test(i)?"&":"?")+b.jsonp+"="+g))),b.url=i,b.data=j,a[g]=function(a){f=[a]},d.always(function(){a[g]=h,f&&J.isFunction(h)&&a[g](f[0])}),b.converters["script json"]=function(){return f||J.error(g+" was not called"),f[0]},b.dataTypes[0]="json","script"}}),J.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return J.globalEval(a),a}}}),J.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),J.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=G.head||G.getElementsByTagName("head")[0]||G.documentElement;return{send:function(e,f){c=G.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){(e||!c.readyState||/loaded|complete/.test(c.readyState))&&(c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||f(200,"success"))},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var ic,jc=a.ActiveXObject?function(){for(var a in ic)ic[a](0,1)}:!1,kc=0;J.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&i()||h()}:i,function(a){J.extend(J.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(J.ajaxSettings.xhr()),J.support.ajax&&J.ajaxTransport(function(c){if(!c.crossDomain||J.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();if(c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async),c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||4===i.readyState))if(d=b,g&&(i.onreadystatechange=J.noop,jc&&delete ic[g]),e)4!==i.readyState&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m),l.text=i.responseText;try{j=i.statusText}catch(n){j=""}h||!c.isLocal||c.crossDomain?1223===h&&(h=204):h=l.text?200:404}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async&&4!==i.readyState?(g=++kc,jc&&(ic||(ic={},J(a).unload(jc)),ic[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var lc,mc,nc,oc,pc={},qc=/^(?:toggle|show|hide)$/,rc=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,sc=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],tc=a.webkitRequestAnimationFrame||a.mozRequestAnimationFrame||a.oRequestAnimationFrame;J.fn.extend({show:function(a,b,c){var f,g;if(a||0===a)return this.animate(e("show",3),a,b,c);for(var h=0,i=this.length;i>h;h++)f=this[h],f.style&&(g=f.style.display,!J._data(f,"olddisplay")&&"none"===g&&(g=f.style.display=""),""===g&&"none"===J.css(f,"display")&&J._data(f,"olddisplay",d(f.nodeName)));for(h=0;i>h;h++)f=this[h],f.style&&(g=f.style.display,(""===g||"none"===g)&&(f.style.display=J._data(f,"olddisplay")||""));return this},hide:function(a,b,c){if(a||0===a)return this.animate(e("hide",3),a,b,c);for(var d=0,f=this.length;f>d;d++)if(this[d].style){var g=J.css(this[d],"display");"none"!==g&&!J._data(this[d],"olddisplay")&&J._data(this[d],"olddisplay",g)}for(d=0;f>d;d++)this[d].style&&(this[d].style.display="none");return this},_toggle:J.fn.toggle,toggle:function(a,b,c){var d="boolean"==typeof a;return J.isFunction(a)&&J.isFunction(b)?this._toggle.apply(this,arguments):null==a||d?this.each(function(){var b=d?a:J(this).is(":hidden");J(this)[b?"show":"hide"]()}):this.animate(e("toggle",3),a,b,c),this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,e){var f=J.speed(b,c,e);return J.isEmptyObject(a)?this.each(f.complete,[!1]):(a=J.extend({},a),this[f.queue===!1?"each":"queue"](function(){f.queue===!1&&J._mark(this);var b,c,e,g,h,i,j,k,l,m=J.extend({},f),n=1===this.nodeType,o=n&&J(this).is(":hidden");m.animatedProperties={};for(e in a){if(b=J.camelCase(e),e!==b&&(a[b]=a[e],delete a[e]),c=a[b],J.isArray(c)?(m.animatedProperties[b]=c[1],c=a[b]=c[0]):m.animatedProperties[b]=m.specialEasing&&m.specialEasing[b]||m.easing||"swing","hide"===c&&o||"show"===c&&!o)return m.complete.call(this);n&&("height"===b||"width"===b)&&(m.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],"inline"===J.css(this,"display")&&"none"===J.css(this,"float")&&(J.support.inlineBlockNeedsLayout?(g=d(this.nodeName),"inline"===g?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}null!=m.overflow&&(this.style.overflow="hidden");for(e in a)h=new J.fx(this,m,e),c=a[e],qc.test(c)?h["toggle"===c?o?"show":"hide":c]():(i=rc.exec(c),j=h.cur(),i?(k=parseFloat(i[2]),l=i[3]||(J.cssNumber[e]?"":"px"),"px"!==l&&(J.style(this,e,(k||1)+l),j=(k||1)/h.cur()*j,J.style(this,e,j+l)),i[1]&&(k=("-="===i[1]?-1:1)*k+j),h.custom(j,k,l)):h.custom(j,c,""));return!0}))},stop:function(a,b){return a&&this.queue([]),this.each(function(){var a=J.timers,c=a.length;for(b||J._unmark(!0,this);c--;)a[c].elem===this&&(b&&a[c](!0),a.splice(c,1))}),b||this.dequeue(),this}}),J.each({slideDown:e("show",1),slideUp:e("hide",1),slideToggle:e("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){J.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),J.extend({speed:function(a,b,c){var d=a&&"object"==typeof a?J.extend({},a):{complete:c||!c&&b||J.isFunction(a)&&a,duration:a,easing:c&&b||b&&!J.isFunction(b)&&b};return d.duration=J.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in J.fx.speeds?J.fx.speeds[d.duration]:J.fx.speeds._default,d.old=d.complete,d.complete=function(a){J.isFunction(d.old)&&d.old.call(this),d.queue!==!1?J.dequeue(this):a!==!1&&J._unmark(this)},d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),J.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(J.fx.step[this.prop]||J.fx.step._default)(this)},cur:function(){if(null!=this.elem[this.prop]&&(!this.elem.style||null==this.elem.style[this.prop]))return this.elem[this.prop];var a,b=J.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?b&&"auto"!==b?b:0:a},custom:function(a,b,c){function d(a){return f.step(a)}var e,f=this,h=J.fx;this.startTime=oc||g(),this.start=a,this.end=b,this.unit=c||this.unit||(J.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,d.elem=this.elem,d()&&J.timers.push(d)&&!nc&&(tc?(nc=!0,e=function(){nc&&(tc(e),h.tick())},tc(e)):nc=setInterval(h.tick,h.interval))},show:function(){this.options.orig[this.prop]=J.style(this.elem,this.prop),this.options.show=!0,this.custom("width"===this.prop||"height"===this.prop?1:0,this.cur()),J(this.elem).show()},hide:function(){this.options.orig[this.prop]=J.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d=oc||g(),e=!0,f=this.elem,h=this.options;if(a||d>=h.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),h.animatedProperties[this.prop]=!0;for(b in h.animatedProperties)h.animatedProperties[b]!==!0&&(e=!1);if(e){if(null!=h.overflow&&!J.support.shrinkWrapBlocks&&J.each(["","X","Y"],function(a,b){f.style["overflow"+b]=h.overflow[a]}),h.hide&&J(f).hide(),h.hide||h.show)for(var i in h.animatedProperties)J.style(f,i,h.orig[i]);h.complete.call(f)}return!1}return 1/0==h.duration?this.now=d:(c=d-this.startTime,this.state=c/h.duration,this.pos=J.easing[h.animatedProperties[this.prop]](this.state,c,0,1,h.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update(),!0}},J.extend(J.fx,{tick:function(){for(var a=J.timers,b=0;b<a.length;++b)a[b]()||a.splice(b--,1);a.length||J.fx.stop()},interval:13,stop:function(){clearInterval(nc),nc=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){J.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&null!=a.elem.style[a.prop]?a.elem.style[a.prop]=("width"===a.prop||"height"===a.prop?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),J.expr&&J.expr.filters&&(J.expr.filters.animated=function(a){return J.grep(J.timers,function(b){return a===b.elem}).length});var uc=/^t(?:able|d|h)$/i,vc=/^(?:body|html)$/i;J.fn.offset="getBoundingClientRect"in G.documentElement?function(a){var b,d=this[0];if(a)return this.each(function(b){J.offset.setOffset(this,a,b)});if(!d||!d.ownerDocument)return null;if(d===d.ownerDocument.body)return J.offset.bodyOffset(d);try{b=d.getBoundingClientRect()}catch(e){}var f=d.ownerDocument,g=f.documentElement;if(!b||!J.contains(g,d))return b?{top:b.top,left:b.left}:{top:0,left:0};var h=f.body,i=c(f),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||J.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||J.support.boxModel&&g.scrollLeft||h.scrollLeft,n=b.top+l-j,o=b.left+m-k;return{top:n,left:o}}:function(a){var b=this[0];if(a)return this.each(function(b){J.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return J.offset.bodyOffset(b);J.offset.initialize();for(var c,d=b.offsetParent,e=b,f=b.ownerDocument,g=f.documentElement,h=f.body,i=f.defaultView,j=i?i.getComputedStyle(b,null):b.currentStyle,k=b.offsetTop,l=b.offsetLeft;(b=b.parentNode)&&b!==h&&b!==g&&(!J.offset.supportsFixedPosition||"fixed"!==j.position);)c=i?i.getComputedStyle(b,null):b.currentStyle,k-=b.scrollTop,l-=b.scrollLeft,b===d&&(k+=b.offsetTop,l+=b.offsetLeft,J.offset.doesNotAddBorder&&(!J.offset.doesAddBorderForTableAndCells||!uc.test(b.nodeName))&&(k+=parseFloat(c.borderTopWidth)||0,l+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),J.offset.subtractsBorderForOverflowNotVisible&&"visible"!==c.overflow&&(k+=parseFloat(c.borderTopWidth)||0,l+=parseFloat(c.borderLeftWidth)||0),j=c;return("relative"===j.position||"static"===j.position)&&(k+=h.offsetTop,l+=h.offsetLeft),J.offset.supportsFixedPosition&&"fixed"===j.position&&(k+=Math.max(g.scrollTop,h.scrollTop),l+=Math.max(g.scrollLeft,h.scrollLeft)),{top:k,left:l}},J.offset={initialize:function(){var a,b,c,d=G.body,e=G.createElement("div"),f=parseFloat(J.css(d,"marginTop"))||0,g="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";J.extend(e.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),e.innerHTML=g,d.insertBefore(e,d.firstChild),a=e.firstChild,b=a.firstChild,c=a.nextSibling.firstChild.firstChild,this.doesNotAddBorder=5!==b.offsetTop,this.doesAddBorderForTableAndCells=5===c.offsetTop,b.style.position="fixed",b.style.top="20px",this.supportsFixedPosition=20===b.offsetTop||15===b.offsetTop,b.style.position=b.style.top="",a.style.overflow="hidden",a.style.position="relative",this.subtractsBorderForOverflowNotVisible=-5===b.offsetTop,this.doesNotIncludeMarginInBodyOffset=d.offsetTop!==f,d.removeChild(e),J.offset.initialize=J.noop
},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return J.offset.initialize(),J.offset.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(J.css(a,"marginTop"))||0,c+=parseFloat(J.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=J.css(a,"position");"static"===d&&(a.style.position="relative");var e,f,g=J(a),h=g.offset(),i=J.css(a,"top"),j=J.css(a,"left"),k=("absolute"===d||"fixed"===d)&&J.inArray("auto",[i,j])>-1,l={},m={};k?(m=g.position(),e=m.top,f=m.left):(e=parseFloat(i)||0,f=parseFloat(j)||0),J.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(l.top=b.top-h.top+e),null!=b.left&&(l.left=b.left-h.left+f),"using"in b?b.using.call(a,l):g.css(l)}},J.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=vc.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(J.css(a,"marginTop"))||0,c.left-=parseFloat(J.css(a,"marginLeft"))||0,d.top+=parseFloat(J.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(J.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||G.body;a&&!vc.test(a.nodeName)&&"static"===J.css(a,"position");)a=a.offsetParent;return a})}}),J.each(["Left","Top"],function(a,d){var e="scroll"+d;J.fn[e]=function(d){var f,g;return d===b?(f=this[0])?(g=c(f),g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:J.support.boxModel&&g.document.documentElement[e]||g.document.body[e]:f[e]):null:this.each(function(){g=c(this),g?g.scrollTo(a?J(g).scrollLeft():d,a?d:J(g).scrollTop()):this[e]=d})}}),J.each(["Height","Width"],function(a,c){var d=c.toLowerCase();J.fn["inner"+c]=function(){var a=this[0];return a&&a.style?parseFloat(J.css(a,d,"padding")):null},J.fn["outer"+c]=function(a){var b=this[0];return b&&b.style?parseFloat(J.css(b,d,a?"margin":"border")):null},J.fn[d]=function(a){var e=this[0];if(!e)return null==a?null:this;if(J.isFunction(a))return this.each(function(b){var c=J(this);c[d](a.call(this,b,c[d]()))});if(J.isWindow(e)){var f=e.document.documentElement["client"+c];return"CSS1Compat"===e.document.compatMode&&f||e.document.body["client"+c]||f}if(9===e.nodeType)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var g=J.css(e,d),h=parseFloat(g);return J.isNaN(h)?g:h}return this.css(d,"string"==typeof a?a:a+"px")}}),a.jQuery=a.$=J}(window);var THREE={REVISION:"63"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;e>d;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else{var g={}.hasOwnProperty;for(var f in b)g.call(b,f)&&(a[f]=b[f])}return a},function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=self.setTimeout(function(){b(c+d)},d);return a=c+d,e}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(a){return void 0!==a&&this.set(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){return a instanceof THREE.Color?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return 0>c&&(c+=1),c>1&&(c-=1),1/6>c?a+6*(b-a)*c:.5>c?b:2/3>c?a+6*(b-a)*(2/3-c):a},e=.5>=c?c*(1+b):c+b-c*b,f=2*c-e;this.r=d(f,e,a+1/3),this.g=d(f,e,a),this.b=d(f,e,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a)){var b=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a);return this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a)){var b=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a);return this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(a)){var b=/^\#([0-9a-f]{6})$/i.exec(a);return this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)){var b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a);return this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}return/^(\w+)$/i.test(a)?(this.setHex(THREE.ColorKeywords[a]),this):void 0},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var b,c,d=this.r,e=this.g,f=this.b,g=Math.max(d,e,f),h=Math.min(d,e,f),i=(h+g)/2;if(h===g)b=0,c=0;else{var j=g-h;switch(c=.5>=i?j/(g+h):j/(2-g-h),g){case d:b=(e-f)/j+(f>e?6:0);break;case e:b=(f-d)/j+2;break;case f:b=(d-e)/j+4}b/=6}return a.h=b,a.s=c,a.l=i,a}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){return this.r=a[0],this.g=a[1],this.b=a[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a,this._updateEuler()},get y(){return this._y},set y(a){this._y=a,this._updateEuler()},get z(){return this._z},set z(a){this._z=a,this._updateEuler()},get w(){return this._w},set w(a){this._w=a,this._updateEuler()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._updateEuler(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._w=a._w,this._updateEuler(),this},setFromEuler:function(a,b){if(a instanceof THREE.Euler==!1)throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);return"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h),b!==!1&&this._updateEuler(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._updateEuler(),this},setFromRotationMatrix:function(a){var b,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[1],h=c[5],i=c[9],j=c[2],k=c[6],l=c[10],m=d+h+l;return m>0?(b=.5/Math.sqrt(m+1),this._w=.25/b,this._x=(k-i)*b,this._y=(f-j)*b,this._z=(g-e)*b):d>h&&d>l?(b=2*Math.sqrt(1+d-h-l),this._w=(k-i)/b,this._x=.25*b,this._y=(e+g)/b,this._z=(f+j)/b):h>l?(b=2*Math.sqrt(1+h-d-l),this._w=(f-j)/b,this._x=(e+g)/b,this._y=.25*b,this._z=(i+k)/b):(b=2*Math.sqrt(1+l-d-h),this._w=(g-e)/b,this._x=(f+j)/b,this._y=(i+k)/b,this._z=.25*b),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._updateEuler(),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this._w=f*j+this._w*k,this._x=c*j+this._x*k,this._y=d*j+this._y*k,this._z=e*j+this._z*k,this._updateEuler(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],this._w=a[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b}else this.x=0,this.y=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){return this.x=a[0],this.y=a[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b}else this.x=0,this.y=0,this.z=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},getColumnFromMatrix:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b){return b instanceof THREE.Euler==!1&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),this.applyQuaternion(a.setFromEuler(b)),this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){return this.applyQuaternion(a.setFromAxisAngle(b,c)),this}}(),projectOnVector:function(){var a=new THREE.Vector3;return function(b){a.copy(b).normalize();var c=this.dot(a);return this.copy(a).multiplyScalar(c)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b),this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b).multiplyScalar(2),this.subVectors(a,this)}}()}),THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b,this.w*=b}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return 1e-4>b?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=.01,g=.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if(Math.abs(j-l)<f&&Math.abs(k-o)<f&&Math.abs(n-p)<f){if(Math.abs(j+l)<g&&Math.abs(k+o)<g&&Math.abs(n+p)<g&&Math.abs(i+m+q-3)<g)return this.set(1,0,0,0),this;b=Math.PI;var r=(i+1)/2,s=(m+1)/2,t=(q+1)/2,u=(j+l)/4,v=(k+o)/4,w=(n+p)/4;return r>s&&r>t?f>r?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(r),d=u/c,e=v/c):s>t?f>s?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(s),c=u/d,e=w/d):f>t?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(t),c=v/e,d=w/e),this.set(c,d,e,b),this}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));return Math.abs(x)<.001&&(x=1),this.x=(p-n)/x,this.y=(k-o)/x,this.z=(l-j)/x,this.w=Math.acos((i+m+q-1)/2),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._order=d||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a,this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a,this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a,this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a,this._updateQuaternion()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this._updateQuaternion(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._updateQuaternion(),this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];return b=b||this._order,"XYZ"===b?(this._y=Math.asin(c(g)),Math.abs(g)<.99999?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(j)),Math.abs(j)<.99999?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(l)),Math.abs(l)<.99999?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(k)),Math.abs(k)<.99999?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i))):"YZX"===b?(this._z=Math.asin(c(h)),Math.abs(h)<.99999?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m))):"XZY"===b?(this._z=Math.asin(-c(f)),Math.abs(f)<.99999?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b),this._order=b,this._updateQuaternion(),this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;return b=b||this._order,"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+b),this._order=b,c!==!1&&this._updateQuaternion(),this
},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this),this.setFromQuaternion(a,b)}}(),fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3,this.end=void 0!==b?b:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start),b.subVectors(this.end,this.start);var e=b.dot(b),f=b.dot(a),g=f/e;return d&&(g=THREE.Math.clamp(g,0,1)),g}}(),closestPointToPoint:function(a,b,c){var d=this.closestPointToPointParameter(a,b),e=c||new THREE.Vector3;return this.delta(e).multiplyScalar(d).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(1/0,1/0),this.max=void 0!==b?b:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;d>c;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){var b=a||new THREE.Vector2;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector2;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){var c=b||new THREE.Vector2;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==b?b:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x),a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y),a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z)},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;d>c;c++)this.addPoint(a[c])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;return b.updateMatrixWorld(!0),this.makeEmpty(),b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var d=b.geometry.vertices,e=0,f=d.length;f>e;e++)a.copy(d[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)}),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){var c=b||new THREE.Vector3;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){var c=b||new THREE.Sphere;return c.center=this.center(),c.radius=.5*this.size(a).length(),c}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){return a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b),a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b),a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b),a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b),a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b),a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b),a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b),a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b),this.makeEmpty(),this.setFromPoints(a),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(a,b,c,d,e,f,g,h,i){this.elements=new Float32Array(9),this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==i?i:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;d>c;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4];var e=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===e){var f="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(f);return console.warn(f),this.identity(),this}return this.multiplyScalar(1/e),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.elements=new Float32Array(16);var q=this.elements;q[0]=void 0!==a?a:1,q[4]=b||0,q[8]=c||0,q[12]=d||0,q[1]=e||0,q[5]=void 0!==f?f:1,q[9]=g||0,q[13]=h||0,q[2]=i||0,q[6]=j||0,q[10]=void 0!==k?k:1,q[14]=l||0,q[3]=m||0,q[7]=n||0,q[11]=o||0,q[15]=void 0!==p?p:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return this.elements.set(a.elements),this},extractPosition:function(a){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,d=b.elements,e=1/a.set(d[0],d[1],d[2]).length(),f=1/a.set(d[4],d[5],d[6]).length(),g=1/a.set(d[8],d[9],d[10]).length();return c[0]=d[0]*e,c[1]=d[1]*e,c[2]=d[2]*e,c[4]=d[4]*f,c[5]=d[5]*f,c[6]=d[6]*f,c[8]=d[8]*g,c[9]=d[9]*g,c[10]=d[10]*g,this}}(),makeRotationFromEuler:function(a){a instanceof THREE.Euler==!1&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p-s*g,b[4]=-f*k,b[8]=r+q*g,b[1]=q+r*g,b[5]=f*j,b[9]=s-p*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=n*i-m,b[8]=l*i+o,b[1]=h*k,b[5]=o*i+l,b[9]=m*i-n,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=w-t*k,b[8]=v*k+u,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=u*k+v,b[10]=t-w*k}else if("XZY"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=t*k+w,b[5]=f*j,b[9]=u*k-v,b[2]=v*k-u,b[6]=g*j,b[10]=w*k+t}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},setRotationFromQuaternion:function(a){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;return c.subVectors(d,e).normalize(),0===c.length()&&(c.z=1),a.crossVectors(f,c).normalize(),0===a.length()&&(c.x+=1e-4,a.crossVectors(f,c).normalize()),b.crossVectors(c,a),g[0]=a.x,g[4]=b.x,g[8]=c.x,g[1]=a.y,g[5]=b.y,g[9]=c.y,g[2]=a.z,g[6]=b.z,g[10]=c.z,this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;d>c;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],t=d[15];c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*t+j*o*t,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*t-f*o*t,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*t+f*k*t,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*t-i*o*t,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*t+e*o*t,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*t-e*k*t,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*t+i*n*t,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*t-e*n*t,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*t+e*j*t,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o;var u=e*c[0]+i*c[4]+m*c[8]+q*c[12];if(0==u){var v="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(v);return console.warn(v),this.identity(),this}return this.multiplyScalar(1/u),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),i=a.set(f[8],f[9],f[10]).length();c.x=f[12],c.y=f[13],c.z=f[14],b.elements.set(this.elements);var j=1/g,k=1/h,l=1/i;return b.elements[0]*=j,b.elements[1]*=j,b.elements[2]*=j,b.elements[4]*=k,b.elements[5]*=k,b.elements[6]*=k,b.elements[8]*=l,b.elements[9]*=l,b.elements[10]*=l,d.setFromRotationMatrix(b),e.x=g,e.y=h,e.z=i,this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var e=c*Math.tan(THREE.Math.degToRad(.5*a)),f=-e,g=f*b,h=e*b;return this.makeFrustum(g,h,f,e,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3,this.direction=void 0!==b?b:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,b){var c=b||new THREE.Vector3;return c.copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){return this.origin.copy(this.at(b,a)),this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);return 0>c?this.origin.distanceTo(b):(a.copy(this.direction).multiplyScalar(c).add(this.origin),a.distanceTo(b))}}(),distanceSqToSegment:function(a,b,c,d){var e,f,g,h,i=a.clone().add(b).multiplyScalar(.5),j=b.clone().sub(a).normalize(),k=.5*a.distanceTo(b),l=this.origin.clone().sub(i),m=-this.direction.dot(j),n=l.dot(this.direction),o=-l.dot(j),p=l.lengthSq(),q=Math.abs(1-m*m);if(q>=0)if(e=m*o-n,f=m*n-o,h=k*q,e>=0)if(f>=-h)if(h>=f){var r=1/q;e*=r,f*=r,g=e*(e+m*f+2*n)+f*(m*e+f+2*o)+p}else f=k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;else f=-k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;else-h>=f?(e=Math.max(0,-(-m*k+n)),f=e>0?-k:Math.min(Math.max(-k,-o),k),g=-e*e+f*(f+2*o)+p):h>=f?(e=0,f=Math.min(Math.max(-k,-o),k),g=f*(f+2*o)+p):(e=Math.max(0,-(m*k+n)),f=e>0?k:Math.min(Math.max(-k,-o),k),g=-e*e+f*(f+2*o)+p);else f=m>0?-k:k,e=Math.max(0,-(m*f+n)),g=-e*e+f*(f+2*o)+p;return c&&c.copy(this.direction.clone().multiplyScalar(e).add(this.origin)),d&&d.copy(j.clone().multiplyScalar(f).add(i)),g},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);if(0===b)return!0;var c=a.normal.dot(this.direction);return 0>c*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;var c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d?null:((e>c||c!==c)&&(c=e),(d>f||d!==d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d?null:((g>c||c!==c)&&(c=g),(d>h||d!==d)&&(d=h),0>d?null:this.at(c>=0?c:d,b)))},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,i){b.subVectors(f,e),c.subVectors(g,e),d.crossVectors(b,c);var j,k=this.direction.dot(d);if(k>0){if(h)return null;j=1}else{if(!(0>k))return null;j=-1,k=-k}a.subVectors(this.origin,e);var l=j*this.direction.dot(c.crossVectors(a,c));if(0>l)return null;var m=j*this.direction.dot(b.cross(a));if(0>m)return null;if(l+m>k)return null;var n=-j*a.dot(d);return 0>n?null:this.at(n/k,i)}}(),applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3,this.radius=void 0!==b?b:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;g>f;f++)e=Math.max(e,d.distanceToSquared(b[f]));return this.radius=Math.sqrt(e),this}}(),copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;return d.copy(a),c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center)),d},getBoundingBox:function(a){var b=a||new THREE.Box3;return b.set(this.center,this.center),b.expandByScalar(this.radius),b},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;return null===c.boundingSphere&&c.computeBoundingSphere(),a.copy(c.boundingSphere),a.applyMatrix4(b.matrixWorld),this.intersectsSphere(a)}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,d=-a.radius,e=0;6>e;e++){var f=b[e].distanceToPoint(c);if(d>f)return!1}return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=f.normal.x>0?c.min.x:c.max.x,b.x=f.normal.x>0?c.max.x:c.min.x,a.y=f.normal.y>0?c.min.y:c.max.y,b.y=f.normal.y>0?c.max.y:c.min.y,a.z=f.normal.z>0?c.min.z:c.max.z,b.z=f.normal.z>0?c.max.z:c.min.z;var g=f.distanceToPoint(a),h=f.distanceToPoint(b);if(0>g&&0>h)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(b[c].distanceToPoint(a)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0),this.constant=void 0!==b?b:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){var f=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();return this.setFromNormalAndCoplanarPoint(f,c),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a),d=b||new THREE.Vector3;return d.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return 0>b&&c>0||0>c&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f)return 0==this.distanceToPoint(b.start)?d.copy(b.start):void 0;var g=-(b.start.dot(this.normal)+this.constant)/f;return 0>g||g>1?void 0:d.copy(e).multiplyScalar(g).add(b.start)}}(),coplanarPoint:function(a){var b=a||new THREE.Vector3;return b.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){d=d||(new THREE.Matrix3).getNormalMatrix(c);var e=a.copy(this.normal).applyMatrix3(d),f=this.coplanarPoint(b);return f.applyMatrix4(c),this.setFromNormalAndCoplanarPoint(e,f),this}}(),translate:function(a){return this.constant=this.constant-a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a,b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=new Array(36),d=0;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?c[e]="-":14==e?c[e]="4":(2>=d&&(d=33554432+16777216*Math.random()|0),a=15&d,d>>=4,c[e]=b[19==e?3&a|8:a]);return c.join("")}}(),clamp:function(a,b,c){return b>a?b:a>c?c:a},clampBottom:function(a,b){return b>a?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())
},sign:function(a){return 0>a?-1:a>0?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()},THREE.Spline=function(a){function b(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}this.points=a;var c,d,e,f,g,h,i,j,k,l=[],m={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return c=(this.points.length-1)*a,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>this.points.length-2?this.points.length-1:d+1,l[3]=d>this.points.length-3?this.points.length-1:d+2,h=this.points[l[0]],i=this.points[l[1]],j=this.points[l[2]],k=this.points[l[3]],f=e*e,g=e*f,m.x=b(h.x,i.x,j.x,k.x,e,f,g),m.y=b(h.y,i.y,j.y,k.y,e,f,g),m.z=b(h.z,i.z,j.z,k.z,e,f,g),m},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;c>a;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e,f=0,g=0,h=0,i=new THREE.Vector3,j=new THREE.Vector3,k=[],l=0;for(k[0]=0,a||(a=100),d=this.points.length*a,i.copy(this.points[0]),b=1;d>b;b++)c=b/d,e=this.getPoint(c),j.copy(e),l+=j.distanceTo(i),i.copy(e),f=(this.points.length-1)*c,g=Math.floor(f),g!=h&&(k[g]=l,h=g);return k[k.length]=l,{chunks:k,total:l}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h,i,j=[],k=new THREE.Vector3,l=this.getLength();for(j.push(k.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(g=l.chunks[b]-l.chunks[b-1],h=Math.ceil(a*g/l.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;h-1>c;c++)d=e+c*(1/h)*(f-e),i=this.getPoint(d),j.push(k.copy(i).clone());j.push(k.copy(this.points[b]).clone())}this.points=j}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=e||new THREE.Vector3;f.subVectors(d,c),a.subVectors(b,c),f.cross(a);var g=f.lengthSq();return g>0?f.multiplyScalar(1/Math.sqrt(g)):f.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e),b.subVectors(f,e),c.subVectors(d,e);var i=a.dot(a),j=a.dot(b),k=a.dot(c),l=b.dot(b),m=b.dot(c),n=i*l-j*j,o=h||new THREE.Vector3;if(0==n)return o.set(-2,-1,-1);var p=1/n,q=(l*k-j*m)*p,r=(i*m-j*k)*p;return o.set(1-q-r,r,q)}}(),THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){return a.subVectors(this.c,this.b),b.subVectors(this.a,this.b),.5*a.cross(b).length()}}(),midpoint:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){var b=a||new THREE.Plane;return b.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(a){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),a},THREE.UV=function(a,b){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(a,b)},THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();a=.001*(b-this.oldTime),this.oldTime=b,this.elapsedTime+=a}return a}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener,a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a].indexOf(b);-1!==d&&c[a].splice(d,1)}},dispatchEvent:function(){var a=[];return function(b){if(void 0!==this._listeners){var c=this._listeners,d=c[b.type];if(void 0!==d){b.target=this;for(var e=d.length,f=0;e>f;f++)a[f]=d[f];for(var f=0;e>f;f++)a[f].call(this,b)}}}}()},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.near=d||0,this.far=e||1/0};var b=new a.Sphere,c=new a.Ray,d=(new a.Plane,new a.Vector3,new a.Vector3),e=new a.Matrix4,f=function(a,b){return a.distance-b.distance},g=new a.Vector3,h=new a.Vector3,i=new a.Vector3,j=function(f,k,l){if(f instanceof a.Sprite){d.getPositionFromMatrix(f.matrixWorld);var m=k.ray.distanceToPoint(d);if(m>f.scale.x)return l;l.push({distance:m,point:f.position,face:null,object:f})}else if(f instanceof a.LOD){d.getPositionFromMatrix(f.matrixWorld);var m=k.ray.origin.distanceTo(d);j(f.getObjectForDistance(m),k,l)}else if(f instanceof a.Mesh){var n=f.geometry;if(null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),k.ray.isIntersectionSphere(b)===!1)return l;if(e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e),null!==n.boundingBox&&c.isIntersectionBox(n.boundingBox)===!1)return l;if(n instanceof a.BufferGeometry){var o=f.material;if(void 0===o)return l;if(n.dynamic===!1)return l;var p,q,r,s=k.precision;if(void 0!==n.attributes.index)for(var t=n.offsets,u=n.attributes.index.array,v=n.attributes.position.array,w=n.offsets.length,x=n.attributes.index.array.length/3,y=0;w>y;++y)for(var z=t[y].start,A=t[y].count,B=t[y].index,C=z,D=z+A;D>C;C+=3){if(p=B+u[C],q=B+u[C+1],r=B+u[C+2],g.set(v[3*p],v[3*p+1],v[3*p+2]),h.set(v[3*q],v[3*q+1],v[3*q+2]),i.set(v[3*r],v[3*r+1],v[3*r+2]),o.side===a.BackSide)var E=c.intersectTriangle(i,h,g,!0);else var E=c.intersectTriangle(g,h,i,o.side!==a.DoubleSide);if(null!==E){E.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(E);s>m||m<k.near||m>k.far||l.push({distance:m,point:E,face:null,faceIndex:null,object:f})}}else for(var t=n.offsets,v=n.attributes.position.array,w=n.offsets.length,x=n.attributes.position.array.length,C=0;x>C;C+=3){if(p=C,q=C+1,r=C+2,g.set(v[3*p],v[3*p+1],v[3*p+2]),h.set(v[3*q],v[3*q+1],v[3*q+2]),i.set(v[3*r],v[3*r+1],v[3*r+2]),o.side===a.BackSide)var E=c.intersectTriangle(i,h,g,!0);else var E=c.intersectTriangle(g,h,i,o.side!==a.DoubleSide);if(null!==E){E.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(E);s>m||m<k.near||m>k.far||l.push({distance:m,point:E,face:null,faceIndex:null,object:f})}}}else if(n instanceof a.Geometry)for(var p,q,r,F=f.material instanceof a.MeshFaceMaterial,G=F===!0?f.material.materials:null,s=k.precision,H=n.vertices,I=0,x=n.faces.length;x>I;I++){var J=n.faces[I],o=F===!0?G[J.materialIndex]:f.material;if(void 0!==o){if(p=H[J.a],q=H[J.b],r=H[J.c],o.side===a.BackSide)var E=c.intersectTriangle(r,q,p,!0);else var E=c.intersectTriangle(p,q,r,o.side!==a.DoubleSide);if(null!==E){E.applyMatrix4(f.matrixWorld);var m=k.ray.origin.distanceTo(E);s>m||m<k.near||m>k.far||l.push({distance:m,point:E,face:J,faceIndex:I,object:f})}}}}else if(f instanceof a.Line){var s=k.linePrecision,K=s*s,n=f.geometry;if(null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),k.ray.isIntersectionSphere(b)===!1)return l;if(e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e),n instanceof a.Geometry)for(var H=n.vertices,L=H.length,M=new a.Vector3,N=new a.Vector3,O=f.type===a.LineStrip?1:2,C=0;L-1>C;C+=O){var P=c.distanceSqToSegment(H[C],H[C+1],N,M);if(!(P>K)){var m=c.origin.distanceTo(N);m<k.near||m>k.far||l.push({distance:m,point:M.clone().applyMatrix4(f.matrixWorld),face:null,faceIndex:null,object:f})}}}},k=function(a,b,c){for(var d=a.getDescendants(),e=0,f=d.length;f>e;e++)j(d[e],b,c)};a.Raycaster.prototype.precision=1e-4,a.Raycaster.prototype.linePrecision=1,a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)},a.Raycaster.prototype.intersectObject=function(a,b){var c=[];return b===!0&&k(a,this,c),j(a,this,c),c.sort(f),c},a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;e>d;d++)j(a[d],this,c),b===!0&&k(a[d],this,c);return c.sort(f),c}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this._rotation=new THREE.Euler,this._quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this._rotation._quaternion=this.quaternion,this._quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(a){this._rotation=a,this._rotation._quaternion=this._quaternion,this._quaternion._euler=this._rotation,this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(a){this._quaternion=a,this._quaternion._euler=this._rotation,this._rotation._quaternion=this._quaternion,this._quaternion._updateEuler()},get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var a=new THREE.Matrix4;return function(b){this.matrix.multiplyMatrices(b,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),a.extractRotation(this.matrix),this.quaternion.setFromRotationMatrix(a)}}(),setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){return a.setFromAxisAngle(b,c),this.quaternion.multiply(a),this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){return a.copy(b),a.applyQuaternion(this.quaternion),this.position.add(a.multiplyScalar(c)),this}}(),translate:function(a,b){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up),this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)return console.warn("THREE.Object3D.add: An object can't be added as a child of itself."),void 0;if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1);for(var c=this;void 0!==c.parent;)c=c.parent;void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c];if(e.id===a)return e;if(b===!0&&(e=e.getObjectById(a,b),void 0!==e))return e}return void 0},getObjectByName:function(a,b){for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c];if(e.name===a)return e;if(b===!0&&(e=e.getObjectByName(a,b),void 0!==e))return e}return void 0},getChildByName:function(a,b){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]),Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;c>b;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||a===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){if(void 0===a&&(a=new THREE.Object3D),void 0===b&&(b=!0),a.name=this.name,a.up.copy(this.up),a.position.copy(this.position),a.quaternion.copy(this.quaternion),a.scale.copy(this.scale),a.renderDepth=this.renderDepth,a.rotationAutoUpdate=this.rotationAutoUpdate,a.matrix.copy(this.matrix),a.matrixWorld.copy(this.matrixWorld),a.matrixAutoUpdate=this.matrixAutoUpdate,a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,a.visible=this.visible,a.castShadow=this.castShadow,a.receiveShadow=this.receiveShadow,a.frustumCulled=this.frustumCulled,a.userData=JSON.parse(JSON.stringify(this.userData)),b===!0)for(var c=0;c<this.children.length;c++){var d=this.children[c];a.add(d.clone())}return a}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function a(){if(i===t){var a=new THREE.RenderableObject;return s.push(a),t++,i++,a}return s[i++]}function b(){if(k===v){var a=new THREE.RenderableVertex;return u.push(a),v++,k++,a}return u[k++]}function c(){if(m===x){var a=new THREE.RenderableFace3;return w.push(a),x++,m++,a}return w[m++]}function d(){if(o===z){var a=new THREE.RenderableLine;return y.push(a),z++,o++,a}return y[o++]}function e(){if(q===B){var a=new THREE.RenderableSprite;return A.push(a),B++,q++,a}return A[q++]}function f(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function g(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:0>e&&0>f||0>g&&0>h?!1:(0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f))),0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h))),c>d?!1:(a.lerp(b,c),b.lerp(a,1-d),!0))}var h,i,j,k,l,m,n,o,p,q,r,s=[],t=0,u=[],v=0,w=[],x=0,y=[],z=0,A=[],B=0,C={objects:[],sprites:[],lights:[],elements:[]},D=new THREE.Vector3,E=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),G=new THREE.Box3,H=new Array(3),I=(new Array(4),new THREE.Matrix4),J=new THREE.Matrix4,K=new THREE.Matrix4,L=new THREE.Matrix3,M=new THREE.Matrix3,N=new THREE.Vector3,O=new THREE.Frustum,P=new THREE.Vector4,Q=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),J.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),a.applyProjection(J)},this.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),J.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse),a.applyProjection(J)},this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);return this.unprojectVector(a,b),this.unprojectVector(c,b),c.sub(a).normalize(),new THREE.Raycaster(a,c)};var R=function(b){return h=a(),h.id=b.id,h.object=b,null!==b.renderDepth?h.z=b.renderDepth:(D.getPositionFromMatrix(b.matrixWorld),D.applyProjection(J),h.z=D.z),h},S=function(a){if(a.visible!==!1){a instanceof THREE.Light?C.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?(a.frustumCulled===!1||O.intersectsObject(a)===!0)&&C.objects.push(R(a)):a instanceof THREE.Sprite&&C.sprites.push(R(a));for(var b=0,c=a.children.length;c>b;b++)S(a.children[b])}},T=function(a,b){i=0,C.objects.length=0,C.sprites.length=0,C.lights.length=0,S(a),b===!0&&C.objects.sort(f)};this.projectScene=function(a,h,i,s){var t,v,w,x,y,z,A,B,D,R,S,U,V,W,X,Y,Z,$,_,ab,bb,cb,db,eb,fb,gb=!1;for(m=0,o=0,q=0,C.elements.length=0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===h.parent&&h.updateMatrixWorld(),I.copy(h.matrixWorldInverse.getInverse(h.matrixWorld)),J.multiplyMatrices(h.projectionMatrix,I),M.getNormalMatrix(I),O.setFromMatrix(J),T(a,i),t=0,v=C.objects.length;v>t;t++)if(V=C.objects[t].object,r=V.matrixWorld,k=0,V instanceof THREE.Mesh){for(W=V.geometry,X=W.vertices,Y=W.faces,_=W.faceVertexUvs,L.getNormalMatrix(r),eb=V.material instanceof THREE.MeshFaceMaterial,fb=eb===!0?V.material:null,w=0,x=X.length;x>w;w++){j=b(),j.positionWorld.copy(X[w]).applyMatrix4(r),j.positionScreen.copy(j.positionWorld).applyMatrix4(J);var hb=1/j.positionScreen.w;j.positionScreen.x*=hb,j.positionScreen.y*=hb,j.positionScreen.z*=hb,j.visible=!(j.positionScreen.x<-1||j.positionScreen.x>1||j.positionScreen.y<-1||j.positionScreen.y>1||j.positionScreen.z<-1||j.positionScreen.z>1)}for(y=0,z=Y.length;z>y;y++){Z=Y[y];var ib=eb===!0?fb.materials[Z.materialIndex]:V.material;if(void 0!==ib){var jb=ib.side;if(bb=u[Z.a],cb=u[Z.b],db=u[Z.c],H[0]=bb.positionScreen,H[1]=cb.positionScreen,H[2]=db.positionScreen,(bb.visible===!0||cb.visible===!0||db.visible===!0||F.isIntersectionBox(G.setFromPoints(H)))&&(gb=(db.positionScreen.x-bb.positionScreen.x)*(cb.positionScreen.y-bb.positionScreen.y)-(db.positionScreen.y-bb.positionScreen.y)*(cb.positionScreen.x-bb.positionScreen.x)<0,jb===THREE.DoubleSide||gb===(jb===THREE.FrontSide))){for(l=c(),l.id=V.id,l.v1.copy(bb),l.v2.copy(cb),l.v3.copy(db),l.normalModel.copy(Z.normal),gb!==!1||jb!==THREE.BackSide&&jb!==THREE.DoubleSide||l.normalModel.negate(),l.normalModel.applyMatrix3(L).normalize(),l.normalModelView.copy(l.normalModel).applyMatrix3(M),l.centroidModel.copy(Z.centroid).applyMatrix4(r),$=Z.vertexNormals,A=0,B=Math.min($.length,3);B>A;A++){var kb=l.vertexNormalsModel[A];kb.copy($[A]),gb!==!1||jb!==THREE.BackSide&&jb!==THREE.DoubleSide||kb.negate(),kb.applyMatrix3(L).normalize();var lb=l.vertexNormalsModelView[A];lb.copy(kb).applyMatrix3(M)}for(l.vertexNormalsLength=$.length,D=0,R=Math.min(_.length,3);R>D;D++)if(ab=_[D][y],void 0!==ab)for(S=0,U=ab.length;U>S;S++)l.uvs[D][S]=ab[S];l.color=Z.color,l.material=ib,N.copy(l.centroidModel).applyProjection(J),l.z=N.z,C.elements.push(l)}}}}else if(V instanceof THREE.Line){K.multiplyMatrices(J,r),X=V.geometry.vertices,bb=b(),bb.positionScreen.copy(X[0]).applyMatrix4(K);var mb=V.type===THREE.LinePieces?2:1;for(w=1,x=X.length;x>w;w++)bb=b(),bb.positionScreen.copy(X[w]).applyMatrix4(K),(w+1)%mb>0||(cb=u[k-2],P.copy(bb.positionScreen),Q.copy(cb.positionScreen),g(P,Q)===!0&&(P.multiplyScalar(1/P.w),Q.multiplyScalar(1/Q.w),n=d(),n.id=V.id,n.v1.positionScreen.copy(P),n.v2.positionScreen.copy(Q),n.z=Math.max(P.z,Q.z),n.material=V.material,V.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(V.geometry.colors[w]),n.vertexColors[1].copy(V.geometry.colors[w-1])),C.elements.push(n)))}for(t=0,v=C.sprites.length;v>t;t++)if(V=C.sprites[t].object,r=V.matrixWorld,V instanceof THREE.Sprite){E.set(r.elements[12],r.elements[13],r.elements[14],1),E.applyMatrix4(J);var hb=1/E.w;E.z*=hb,E.z>-1&&E.z<1&&(p=e(),p.id=V.id,p.x=E.x*hb,p.y=E.y*hb,p.z=E.z,p.object=V,p.rotation=V.rotation,p.scale.x=V.scale.x*Math.abs(p.x-(E.x+h.projectionMatrix.elements[0])/(E.w+h.projectionMatrix.elements[12])),p.scale.y=V.scale.y*Math.abs(p.y-(E.y+h.projectionMatrix.elements[5])/(E.w+h.projectionMatrix.elements[13])),p.material=V.material,C.elements.push(p))}return s===!0&&C.elements.sort(f),C}},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=void 0!==f?f:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;c>b;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;c>b;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;c>b;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(a,b,c,e,f,g)},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;d>c;c++){var e=this.vertices[c];e.applyMatrix4(a)}for(var c=0,d=this.faces.length;d>c;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var g=0,h=f.vertexNormals.length;h>g;g++)f.vertexNormals[g].applyMatrix3(b).normalize();f.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c.centroid.set(0,0,0),c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;d>c;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b],h=this.vertices[e.c];a.subVectors(h,g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e,f,g;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),g=this.__tmpVertices,b=0,c=this.vertices.length;c>b;b++)g[b]=new THREE.Vector3;for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(g=this.__tmpVertices,b=0,c=this.vertices.length;c>b;b++)g[b].set(0,0,0);if(a){{var h,i,j,k=new THREE.Vector3,l=new THREE.Vector3;new THREE.Vector3,new THREE.Vector3,new THREE.Vector3}for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],h=this.vertices[f.a],i=this.vertices[f.b],j=this.vertices[f.c],k.subVectors(j,i),l.subVectors(h,i),k.cross(l),g[f.a].add(k),g[f.b].add(k),g[f.c].add(k)}else for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],g[f.a].add(f.normal),g[f.b].add(f.normal),g[f.c].add(f.normal);for(b=0,c=this.vertices.length;c>b;b++)g[b].normalize();for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c])},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;d>c;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;b>a;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;b>a;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var g,h,i=this.morphNormals[a].faceNormals,j=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},i.push(g),j.push(h)}var k=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals();var g,h;for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=k.faceNormals[c],h=k.vertexNormals[c],g.copy(e.normal),h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2])}for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,g){j=a.vertices[b],k=a.vertices[c],l=a.vertices[d],m=i[e],n=i[f],o=i[g],p=k.x-j.x,q=l.x-j.x,r=k.y-j.y,s=l.y-j.y,t=k.z-j.z,u=l.z-j.z,v=n.x-m.x,w=o.x-m.x,x=n.y-m.y,y=o.y-m.y,z=1/(v*y-w*x),F.set((y*p-x*q)*z,(y*r-x*s)*z,(y*t-x*u)*z),G.set((v*q-w*p)*z,(v*s-w*r)*z,(v*u-w*t)*z),D[b].add(F),D[c].add(F),D[d].add(F),E[b].add(G),E[c].add(G),E[d].add(G)}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=[],F=new THREE.Vector3,G=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3,J=new THREE.Vector3;for(d=0,e=this.vertices.length;e>d;d++)D[d]=new THREE.Vector3,E[d]=new THREE.Vector3;for(b=0,c=this.faces.length;c>b;b++)h=this.faces[b],i=this.faceVertexUvs[0][b],a(this,h.a,h.b,h.c,0,1,2);var K=["a","b","c","d"];for(b=0,c=this.faces.length;c>b;b++)for(h=this.faces[b],f=0;f<Math.min(h.vertexNormals.length,3);f++)J.copy(h.vertexNormals[f]),g=h[K[f]],A=D[g],H.copy(A),H.sub(J.multiplyScalar(J.dot(A))).normalize(),I.crossVectors(h.vertexNormals[f],A),B=I.dot(E[g]),C=0>B?-1:1,h.vertexTangents[f]=new THREE.Vector4(H.x,H.y,H.z,C);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;d>c;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a,b,c,d,e,f,g,h,i={},j=[],k=[],l=4,m=Math.pow(10,l);for(this.__tmpVertices=void 0,c=0,d=this.vertices.length;d>c;c++)a=this.vertices[c],b=Math.round(a.x*m)+"_"+Math.round(a.y*m)+"_"+Math.round(a.z*m),void 0===i[b]?(i[b]=c,j.push(this.vertices[c]),k[c]=j.length-1):k[c]=k[i[b]];var n=[];for(c=0,d=this.faces.length;d>c;c++){e=this.faces[c],e.a=k[e.a],e.b=k[e.b],e.c=k[e.c],f=[e.a,e.b,e.c];for(var o=-1,p=0;3>p;p++)if(f[p]==f[(p+1)%3]){o=p,n.push(c);break}}for(c=n.length-1;c>=0;c--){var q=n[c];for(this.faces.splice(q,1),g=0,h=this.faceVertexUvs.length;h>g;g++)this.faceVertexUvs[g].splice(q,1)}var r=this.vertices.length-j.length;return this.vertices=j,r},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;d>c;c++)a.vertices.push(b[c].clone());for(var e=this.faces,c=0,d=e.length;d>c;c++)a.faces.push(e[c].clone());for(var f=this.faceVertexUvs[0],c=0,d=f.length;d>c;c++){for(var g=f[c],h=[],i=0,j=g.length;j>i;i++)h.push(new THREE.Vector2(g[i].x,g[i].y));a.faceVertexUvs[0].push(h)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.dynamic=!0,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c,d){this.attributes[a]={itemSize:d,array:new b(c*d)}},applyMatrix:function(a){var b,c;if(this.attributes.position&&(b=this.attributes.position.array),this.attributes.normal&&(c=this.attributes.normal.array),void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0),void 0!==c){var d=(new THREE.Matrix3).getNormalMatrix(a);d.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b,c,d,e=this.boundingBox;a.length>=3&&(e.min.x=e.max.x=a[0],e.min.y=e.max.y=a[1],e.min.z=e.max.z=a[2]);for(var f=3,g=a.length;g>f;f+=3)b=a[f],c=a[f+1],d=a[f+2],b<e.min.x?e.min.x=b:b>e.max.x&&(e.max.x=b),c<e.min.y?e.min.y=c:c>e.max.y&&(e.max.y=c),d<e.min.z?e.min.z=d:d>e.max.z&&(e.max.z=d)}(void 0===a||0===a.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){for(var d=this.boundingSphere.center,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),a.addPoint(b);a.center(d);for(var g=0,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g)}}}(),computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d,e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e)};else for(a=0,b=this.attributes.normal.array.length;b>a;a++)this.attributes.normal.array[a]=0;
var f,g,h,i,j,k,l=this.attributes.position.array,m=this.attributes.normal.array,n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(this.attributes.index){var s=this.attributes.index.array,t=this.offsets;for(c=0,d=t.length;d>c;++c){var u=t[c].start,v=t[c].count,w=t[c].index;for(a=u,b=u+v;b>a;a+=3)f=w+s[a],g=w+s[a+1],h=w+s[a+2],i=l[3*f],j=l[3*f+1],k=l[3*f+2],n.set(i,j,k),i=l[3*g],j=l[3*g+1],k=l[3*g+2],o.set(i,j,k),i=l[3*h],j=l[3*h+1],k=l[3*h+2],p.set(i,j,k),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),m[3*f]+=q.x,m[3*f+1]+=q.y,m[3*f+2]+=q.z,m[3*g]+=q.x,m[3*g+1]+=q.y,m[3*g+2]+=q.z,m[3*h]+=q.x,m[3*h+1]+=q.y,m[3*h+2]+=q.z}}else for(a=0,b=l.length;b>a;a+=9)i=l[a],j=l[a+1],k=l[a+2],n.set(i,j,k),i=l[a+3],j=l[a+4],k=l[a+5],o.set(i,j,k),i=l[a+6],j=l[a+7],k=l[a+8],p.set(i,j,k),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),m[a]=q.x,m[a+1]=q.y,m[a+2]=q.z,m[a+3]=q.x,m[a+4]=q.y,m[a+5]=q.z,m[a+6]=q.x,m[a+7]=q.y,m[a+8]=q.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a,b,c,d,e=this.attributes.normal.array,f=0,g=e.length;g>f;f+=3)a=e[f],b=e[f+1],c=e[f+2],d=1/Math.sqrt(a*a+b*b+c*c),e[f]*=d,e[f+1]*=d,e[f+2]*=d},computeTangents:function(){function a(a,b,c){m=d[3*a],n=d[3*a+1],o=d[3*a+2],p=d[3*b],q=d[3*b+1],r=d[3*b+2],s=d[3*c],t=d[3*c+1],u=d[3*c+2],v=f[2*a],w=f[2*a+1],x=f[2*b],y=f[2*b+1],z=f[2*c],A=f[2*c+1],B=p-m,C=s-m,D=q-n,E=t-n,F=r-o,G=u-o,H=x-v,I=z-v,J=y-w,K=A-w,L=1/(H*K-I*J),T.set((K*B-J*C)*L,(K*D-J*E)*L,(K*F-J*G)*L),U.set((H*C-I*B)*L,(H*E-I*D)*L,(H*G-I*F)*L),j[a].add(T),j[b].add(T),j[c].add(T),k[a].add(U),k[b].add(U),k[c].add(U)}function b(a){cb.x=e[3*a],cb.y=e[3*a+1],cb.z=e[3*a+2],db.copy(cb),$=j[a],ab.copy($),ab.sub(cb.multiplyScalar(cb.dot($))).normalize(),bb.crossVectors(db,$),_=bb.dot(k[a]),Z=0>_?-1:1,i[4*a]=ab.x,i[4*a+1]=ab.y,i[4*a+2]=ab.z,i[4*a+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()"),void 0;var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;if(void 0===this.attributes.tangent){var h=4*g;this.attributes.tangent={itemSize:4,array:new Float32Array(h)}}for(var i=this.attributes.tangent.array,j=[],k=[],l=0;g>l;l++)j[l]=new THREE.Vector3,k[l]=new THREE.Vector3;var m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T=new THREE.Vector3,U=new THREE.Vector3,V=this.offsets;for(O=0,P=V.length;P>O;++O){var W=V[O].start,X=V[O].count,Y=V[O].index;for(M=W,N=W+X;N>M;M+=3)Q=Y+c[M],R=Y+c[M+1],S=Y+c[M+2],a(Q,R,S)}var Z,$,_,ab=new THREE.Vector3,bb=new THREE.Vector3,cb=new THREE.Vector3,db=new THREE.Vector3;for(O=0,P=V.length;P>O;++O){var W=V[O].start,X=V[O].count,Y=V[O].index;for(M=W,N=W+X;N>M;M+=3)Q=Y+c[M],R=Y+c[M+1],S=Y+c[M+2],b(Q),b(R),b(S)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},clone:function(){var a=new THREE.BufferGeometry,b=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var c in this.attributes){for(var d=this.attributes[c],e=d.array,f={itemSize:d.itemSize,numItems:d.numItems,array:null},g=0,h=b.length;h>g;g++){var i=b[g];if(e instanceof i){f.array=new i(e);break}}a.attributes[c]=f}for(var g=0,h=this.offsets.length;h>g;g++){var j=this.offsets[g];a.offsets.push({start:j.start,index:j.index,count:j.count})}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up),this.quaternion.setFromRotationMatrix(a)}}(),THREE.Camera.prototype.clone=function(a){return void 0===a&&(a=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,a),a.matrixWorldInverse.copy(this.matrixWorldInverse),a.projectionMatrix.copy(this.projectionMatrix),a.projectionMatrixInverse.copy(this.projectionMatrixInverse),a},THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,a),a.left=this.left,a.right=this.right,a.top=this.top,a.bottom=this.bottom,a.near=this.near,a.far=this.far,a},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24),this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,e=a*b,f=Math.abs(e-d),g=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*f/this.fullWidth,d+(this.x+this.width)*f/this.fullWidth,b-(this.y+this.height)*g/this.fullHeight,b-this.y*g/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,a),a.fov=this.fov,a.aspect=this.aspect,a.near=this.near,a.far=this.far,a},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(a){return void 0===a&&(a=new THREE.Light),THREE.Object3D.prototype.clone.call(this,a),a.color.copy(this.color),a},THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,a),a},THREE.AreaLight=function(a,b){THREE.Light.call(this,a),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==b?b:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a),this.position.set(0,100,0),this.groundColor=new THREE.Color(b),this.intensity=void 0!==c?c:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,a),a.groundColor.copy(this.groundColor),a.intensity=this.intensity,a},THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.intensity=this.intensity,a.distance=this.distance,a},THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.exponent=void 0!==e?e:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.distance=this.distance,a.angle=this.angle,a.exponent=this.exponent,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.Loader=function(a){this.showStatus=a,this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return b.pop(),(b.length<1?".":b.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;c>b;b++){var d=a[b];if(d instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function c(a){var b=Math.log(a)/Math.LN2;return Math.floor(b)==b}function d(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function e(a,b){var e=new Image;e.onload=function(){if(c(this.width)&&c(this.height))a.image=this;else{var b=d(this.width),e=d(this.height);a.image.width=b,a.image.height=e,a.image.getContext("2d").drawImage(this,0,0,b,e)}a.needsUpdate=!0},e.crossOrigin=h.crossOrigin,e.src=b}function f(a,c,d,f,g,h,i){var j=/\.dds$/i.test(d),k=b+"/"+d;if(j){var l=THREE.ImageUtils.loadCompressedTexture(k);a[c]=l}else{var l=document.createElement("canvas");a[c]=new THREE.Texture(l)}if(a[c].sourceFile=d,f&&(a[c].repeat.set(f[0],f[1]),1!==f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]),h){var m={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==m[h[0]]&&(a[c].wrapS=m[h[0]]),void 0!==m[h[1]]&&(a[c].wrapT=m[h[1]])}i&&(a[c].anisotropy=i),j||e(a[c],k)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?i="MeshPhongMaterial":"basic"===k&&(i="MeshBasicMaterial")}if(void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]),(void 0!==a.transparent||a.opacity<1)&&(j.transparent=a.transparent),void 0!==a.depthTest&&(j.depthTest=a.depthTest),void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite),void 0!==a.visible&&(j.visible=a.visible),void 0!==a.flipSided&&(j.side=THREE.BackSide),void 0!==a.doubleSided&&(j.side=THREE.DoubleSide),void 0!==a.wireframe&&(j.wireframe=a.wireframe),void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=g(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=g(a.colorSpecular)),a.colorAmbient&&(j.ambient=g(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy),a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy),a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy),a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy),a.mapSpecular&&b&&f(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy),a.mapBumpScale&&(j.bumpScale=a.mapBumpScale),a.mapNormal){var l=THREE.ShaderLib.normalmap,m=THREE.UniformsUtils.clone(l.uniforms);m.tNormal.value=j.normalMap,a.mapNormalFactor&&m.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(m.tDiffuse.value=j.map,m.enableDiffuse.value=!0),j.specularMap&&(m.tSpecular.value=j.specularMap,m.enableSpecular.value=!0),j.lightMap&&(m.tAO.value=j.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(j.color),m.uSpecularColor.value.setHex(j.specular),m.uAmbientColor.value.setHex(j.ambient),m.uShininess.value=j.shininess,void 0!==j.opacity&&(m.uOpacity.value=j.opacity);var n={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:m,lights:!0,fog:!0},o=new THREE.ShaderMaterial(n);j.transparent&&(o.transparent=!0)}else var o=new THREE[i](j);return void 0!==a.DbgName&&(o.name=a.DbgName),o}},THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=new XMLHttpRequest;void 0!==b&&f.addEventListener("load",function(c){b(c.target.responseText),e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.open("GET",a,!0),f.send(null),e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");return void 0!==b&&f.addEventListener("load",function(){e.manager.itemEnd(a),b(this)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a),f},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.JSONLoader=function(a){THREE.Loader.call(this,a),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),i=a.parse(h,d);c(i.geometry,i.materials)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},THREE.JSONLoader.prototype.parse=function(a,b){function c(b){function c(a,b){return a&1<<b}var d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=a.faces,G=a.vertices,H=a.normals,I=a.colors,J=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&J++;for(d=0;J>d;d++)f.faceVertexUvs[d]=[]}for(h=0,i=G.length;i>h;)v=new THREE.Vector3,v.x=G[h++]*b,v.y=G[h++]*b,v.z=G[h++]*b,f.vertices.push(v);for(h=0,i=F.length;i>h;)if(n=F[h++],o=c(n,0),p=c(n,1),q=c(n,3),r=c(n,4),s=c(n,5),t=c(n,6),u=c(n,7),o){if(x=new THREE.Face3,x.a=F[h],x.b=F[h+1],x.c=F[h+3],y=new THREE.Face3,y.a=F[h+1],y.b=F[h+2],y.c=F[h+3],h+=4,p&&(m=F[h++],x.materialIndex=m,y.materialIndex=m),g=f.faces.length,q)for(d=0;J>d;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],f.faceVertexUvs[d][g+1]=[],e=0;4>e;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),2!==e&&f.faceVertexUvs[d][g].push(C),0!==e&&f.faceVertexUvs[d][g+1].push(C);if(r&&(k=3*F[h++],x.normal.set(H[k++],H[k++],H[k]),y.normal.copy(x.normal)),s)for(d=0;4>d;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),2!==d&&x.vertexNormals.push(A),0!==d&&y.vertexNormals.push(A);if(t&&(j=F[h++],z=I[j],x.color.setHex(z),y.color.setHex(z)),u)for(d=0;4>d;d++)j=F[h++],z=I[j],2!==d&&x.vertexColors.push(new THREE.Color(z)),0!==d&&y.vertexColors.push(new THREE.Color(z));f.faces.push(x),f.faces.push(y)}else{if(w=new THREE.Face3,w.a=F[h++],w.b=F[h++],w.c=F[h++],p&&(m=F[h++],w.materialIndex=m),g=f.faces.length,q)for(d=0;J>d;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],e=0;3>e;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),f.faceVertexUvs[d][g].push(C);if(r&&(k=3*F[h++],w.normal.set(H[k++],H[k++],H[k])),s)for(d=0;3>d;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),w.vertexNormals.push(A);if(t&&(j=F[h++],w.color.setHex(I[j])),u)for(d=0;3>d;d++)j=F[h++],w.vertexColors.push(new THREE.Color(I[j]));f.faces.push(w)}}function d(){var b,c,d,e,g,h,i,j,k,l;if(a.skinWeights)for(b=0,c=a.skinWeights.length;c>b;b+=2)d=a.skinWeights[b],e=a.skinWeights[b+1],g=0,h=0,f.skinWeights.push(new THREE.Vector4(d,e,g,h));if(a.skinIndices)for(b=0,c=a.skinIndices.length;c>b;b+=2)i=a.skinIndices[b],j=a.skinIndices[b+1],k=0,l=0,f.skinIndices.push(new THREE.Vector4(i,j,k,l));f.bones=a.bones,f.animation=a.animation,f.animations=a.animations}function e(b){if(void 0!==a.morphTargets){var c,d,e,g,h,i;for(c=0,d=a.morphTargets.length;d>c;c++)for(f.morphTargets[c]={},f.morphTargets[c].name=a.morphTargets[c].name,f.morphTargets[c].vertices=[],h=f.morphTargets[c].vertices,i=a.morphTargets[c].vertices,e=0,g=i.length;g>e;e+=3){var j=new THREE.Vector3;j.x=i[e]*b,j.y=i[e+1]*b,j.z=i[e+2]*b,h.push(j)}}if(void 0!==a.morphColors){var c,d,k,l,m,n,o;for(c=0,d=a.morphColors.length;d>c;c++)for(f.morphColors[c]={},f.morphColors[c].name=a.morphColors[c].name,f.morphColors[c].colors=[],m=f.morphColors[c].colors,n=a.morphColors[c].colors,k=0,l=n.length;l>k;k+=3)o=new THREE.Color(16755200),o.setRGB(n[k],n[k+1],n[k+2]),m.push(o)}}var f=new THREE.Geometry,g=void 0!==a.scale?1/a.scale:1;if(c(g),d(),e(g),f.computeCentroids(),f.computeFaceNormals(),f.computeBoundingSphere(),void 0===a.materials)return{geometry:f};var h=this.initMaterials(a.materials,b);return this.needsTangents(h)&&f.computeTangents(),{geometry:f,materials:h}},THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(){f++},this.itemEnd=function(a){e++,void 0!==d.onProgress&&d.onProgress(a,e,f),e===f&&void 0!==d.onLoad&&d.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin),d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.attributes,d=a.offsets,e=a.boundingSphere;for(var f in c){var g=c[f];b.attributes[f]={itemSize:g.itemSize,array:new self[g.type](g.array)}}return void 0!==d&&(b.offsets=JSON.parse(JSON.stringify(d))),void 0!==e&&(b.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),b}},THREE.GeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin),d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(){}},THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader;d.setCrossOrigin(this.crossOrigin),d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];if(void 0!==a.color&&b.color.setHex(a.color),void 0!==a.ambient&&b.ambient.setHex(a.ambient),void 0!==a.emissive&&b.emissive.setHex(a.emissive),void 0!==a.specular&&b.specular.setHex(a.specular),void 0!==a.shininess&&(b.shininess=a.shininess),void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors),void 0!==a.blending&&(b.blending=a.blending),void 0!==a.side&&(b.side=a.side),void 0!==a.opacity&&(b.opacity=a.opacity),void 0!==a.transparent&&(b.transparent=a.transparent),void 0!==a.wireframe&&(b.wireframe=a.wireframe),void 0!==a.materials)for(var c=0,d=a.materials.length;d>c;c++)b.materials.push(this.parse(a.materials[c]));return b}},THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader(c.manager);d.setCrossOrigin(this.crossOrigin),d.load(a,function(a){b(c.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials),d=this.parseObject(a.object,b,c);return d},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;f>e;e++){var g,h=a[e];switch(h.type){case"PlaneGeometry":g=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case"CircleGeometry":g=new THREE.CircleGeometry(h.radius,h.segments);break;case"CubeGeometry":g=new THREE.CubeGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CylinderGeometry":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case"SphereGeometry":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"IcosahedronGeometry":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case"TorusGeometry":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case"BufferGeometry":g=d.parse(h.data);break;case"Geometry":g=c.parse(h.data).geometry}g.uuid=h.uuid,void 0!==h.name&&(g.name=h.name),b[h.uuid]=g}return b},parseMaterials:function(a){var b={};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;e>d;d++){var f=a[d],g=c.parse(f);g.uuid=f.uuid,void 0!==f.name&&(g.name=f.name),b[f.uuid]=g}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case"Scene":e=new THREE.Scene;break;case"PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case"OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case"AmbientLight":e=new THREE.AmbientLight(b.color);break;case"DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case"PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case"SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case"HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case"Mesh":var f=c[b.geometry],g=d[b.material];void 0===f&&console.error("THREE.ObjectLoader: Undefined geometry "+b.geometry),void 0===g&&console.error("THREE.ObjectLoader: Undefined material "+b.material),e=new THREE.Mesh(f,g);break;case"Sprite":var g=d[b.material];void 0===g&&console.error("THREE.ObjectLoader: Undefined material "+b.material),e=new THREE.Sprite(g);break;default:e=new THREE.Object3D}if(e.uuid=b.uuid,void 0!==b.name&&(e.name=b.name),void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale)),void 0!==b.visible&&(e.visible=b.visible),void 0!==b.userData&&(e.userData=b.userData),void 0!==b.children)for(var h in b.children)e.add(this.parseObject(b.children[h],c,d));return e}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b){var c=this,d=new THREE.XHRLoader(c.manager);d.setCrossOrigin(this.crossOrigin),d.load(a,function(d){c.parse(JSON.parse(d),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:B+"/"+a}function e(){f(z.scene,D.objects)}function f(a,b){var c,e,g,h,i;for(var k in b){var l=z.objects[k],m=b[k];if(void 0===l){if(m.type&&m.type in A.hierarchyHandlers){if(void 0===m.loading){var n={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},r={};for(var s in m)s in n||(r[s]=m[s]);p=z.materials[m.material],m.loading=!0;var t=A.hierarchyHandlers[m.type].loaderObject;t.options?t.load(d(m.url,D.urlBaseType),j(k,a,p,m)):t.load(d(m.url,D.urlBaseType),j(k,a,p,m),r)}}else if(void 0!==m.geometry){if(o=z.geometries[m.geometry]){var v=!1;if(p=z.materials[m.material],v=p instanceof THREE.ShaderMaterial,e=m.position,g=m.rotation,h=m.scale,c=m.matrix,i=m.quaternion,m.material||(p=new THREE.MeshFaceMaterial(z.face_materials[m.geometry])),p instanceof THREE.MeshFaceMaterial&&0===p.materials.length&&(p=new THREE.MeshFaceMaterial(z.face_materials[m.geometry])),p instanceof THREE.MeshFaceMaterial)for(var w=0;w<p.materials.length;w++)v=v||p.materials[w]instanceof THREE.ShaderMaterial;v&&o.computeTangents(),m.skin?l=new THREE.SkinnedMesh(o,p):m.morph?(l=new THREE.MorphAnimMesh(o,p),void 0!==m.duration&&(l.duration=m.duration),void 0!==m.time&&(l.time=m.time),void 0!==m.mirroredLoop&&(l.mirroredLoop=m.mirroredLoop),p.morphNormals&&o.computeMorphNormals()):l=new THREE.Mesh(o,p),l.name=k,c?(l.matrixAutoUpdate=!1,l.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(l.position.fromArray(e),i?l.quaternion.fromArray(i):l.rotation.fromArray(g),l.scale.fromArray(h)),l.visible=m.visible,l.castShadow=m.castShadow,l.receiveShadow=m.receiveShadow,a.add(l),z.objects[k]=l}}else if("AmbientLight"===m.type||"PointLight"===m.type||"DirectionalLight"===m.type||"SpotLight"===m.type||"HemisphereLight"===m.type||"AreaLight"===m.type){var x=m.color,y=m.intensity,B=m.distance,C=m.position,E=m.rotation;switch(m.type){case"AmbientLight":u=new THREE.AmbientLight(x);break;case"PointLight":u=new THREE.PointLight(x,y,B),u.position.fromArray(C);break;case"DirectionalLight":u=new THREE.DirectionalLight(x,y),u.position.fromArray(m.direction);break;case"SpotLight":u=new THREE.SpotLight(x,y,B,1),u.angle=m.angle,u.position.fromArray(C),u.target.set(C[0],C[1]-B,C[2]),u.target.applyEuler(new THREE.Euler(E[0],E[1],E[2],"XYZ"));break;case"HemisphereLight":u=new THREE.DirectionalLight(x,y,B),u.target.set(C[0],C[1]-B,C[2]),u.target.applyEuler(new THREE.Euler(E[0],E[1],E[2],"XYZ"));break;case"AreaLight":u=new THREE.AreaLight(x,y),u.position.fromArray(C),u.width=m.size,u.height=m.size_y}a.add(u),u.name=k,z.lights[k]=u,z.objects[k]=u}else"PerspectiveCamera"===m.type||"OrthographicCamera"===m.type?(e=m.position,g=m.rotation,i=m.quaternion,"PerspectiveCamera"===m.type?q=new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far):"OrthographicCamera"===m.type&&(q=new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),q.name=k,q.position.fromArray(e),void 0!==i?q.quaternion.fromArray(i):void 0!==g&&q.rotation.fromArray(g),a.add(q),z.cameras[k]=q,z.objects[k]=q):(e=m.position,g=m.rotation,h=m.scale,i=m.quaternion,l=new THREE.Object3D,l.name=k,l.position.fromArray(e),i?l.quaternion.fromArray(i):l.rotation.fromArray(g),l.scale.fromArray(h),l.visible=void 0!==m.visible?m.visible:!1,a.add(l),z.objects[k]=l,z.empties[k]=l);if(l){if(void 0!==m.userData)for(var F in m.userData){var G=m.userData[F];l.userData[F]=G}if(void 0!==m.groups)for(var w=0;w<m.groups.length;w++){var H=m.groups[w];void 0===z.groups[H]&&(z.groups[H]=[]),z.groups[H].push(k)}}}void 0!==l&&void 0!==m.children&&f(l,m.children)}}function g(a,b,c){z.geometries[c]=a,z.face_materials[c]=b,e()}function h(a,b,c,d,f){var g=f.position,h=f.rotation,i=f.quaternion,j=f.scale;a.position.fromArray(g),i?a.quaternion.fromArray(i):a.rotation.fromArray(h),a.scale.fromArray(j),d&&a.traverse(function(a){a.material=d});var k=void 0!==f.visible?f.visible:!0;a.traverse(function(a){a.visible=k}),c.add(a),a.name=b,z.objects[b]=a,e()}function i(a){return function(b,c){b.name=a,g(b,c,a),v-=1,A.onLoadComplete(),l()}}function j(a,b,c,d){return function(e){var f;f=e.content?e.content:e.dae?e.scene:e,h(f,a,b,c,d),v-=1,A.onLoadComplete(),l()}}function k(a){return function(b,c){b.name=a,z.geometries[a]=b,z.face_materials[a]=c}}function l(){var a={totalModels:x,totalTextures:y,loadedModels:x-v,loadedTextures:y-w};A.callbackProgress(a,z),A.onLoadProgress(),0===v&&0===w&&(m(),b(z))}function m(){for(var a=0;a<C.length;a++){var b=C[a],c=z.objects[b.targetName];c?b.object.target=c:(b.object.target=new THREE.Object3D,z.scene.add(b.object.target)),b.object.target.userData.targetInverse=b.object}}function n(a,b){if(b(a),void 0!==a.children)for(var c in a.children)n(a.children[c],b)}var o,p,q,r,s,t,u,v,w,x,y,z,A=this,B=THREE.Loader.prototype.extractUrlBase(c),C=[],D=a;for(var E in this.geometryHandlers){var F=this.geometryHandlers[E].loaderClass;this.geometryHandlers[E].loaderObject=new F}for(var E in this.hierarchyHandlers){var F=this.hierarchyHandlers[E].loaderClass;
this.hierarchyHandlers[E].loaderObject=new F}if(v=0,w=0,z={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},D.transform){var G=D.transform.position,H=D.transform.rotation,I=D.transform.scale;G&&z.scene.position.fromArray(G),H&&z.scene.rotation.fromArray(H),I&&z.scene.scale.fromArray(I),(G||H||I)&&(z.scene.updateMatrix(),z.scene.updateMatrixWorld())}var J,K,L=function(a){w-=a,l(),A.onLoadComplete()},M=function(a){return function(){L(a)}};for(J in D.fogs)K=D.fogs[J],"linear"===K.type?r=new THREE.Fog(0,K.near,K.far):"exp2"===K.type&&(r=new THREE.FogExp2(0,K.density)),t=K.color,r.color.setRGB(t[0],t[1],t[2]),z.fogs[J]=r;var N,O;for(N in D.geometries)O=D.geometries[N],O.type in this.geometryHandlers&&(v+=1,A.onLoadStart());for(var P in D.objects)n(D.objects[P],function(a){a.type&&a.type in A.hierarchyHandlers&&(v+=1,A.onLoadStart())});x=v;for(N in D.geometries)if(O=D.geometries[N],"cube"===O.type)o=new THREE.CubeGeometry(O.width,O.height,O.depth,O.widthSegments,O.heightSegments,O.depthSegments),o.name=N,z.geometries[N]=o;else if("plane"===O.type)o=new THREE.PlaneGeometry(O.width,O.height,O.widthSegments,O.heightSegments),o.name=N,z.geometries[N]=o;else if("sphere"===O.type)o=new THREE.SphereGeometry(O.radius,O.widthSegments,O.heightSegments),o.name=N,z.geometries[N]=o;else if("cylinder"===O.type)o=new THREE.CylinderGeometry(O.topRad,O.botRad,O.height,O.radSegs,O.heightSegs),o.name=N,z.geometries[N]=o;else if("torus"===O.type)o=new THREE.TorusGeometry(O.radius,O.tube,O.segmentsR,O.segmentsT),o.name=N,z.geometries[N]=o;else if("icosahedron"===O.type)o=new THREE.IcosahedronGeometry(O.radius,O.subdivisions),o.name=N,z.geometries[N]=o;else if(O.type in this.geometryHandlers){var Q={};for(var R in O)"type"!==R&&"url"!==R&&(Q[R]=O[R]);var S=this.geometryHandlers[O.type].loaderObject;S.load(d(O.url,D.urlBaseType),i(N),Q)}else if("embedded"===O.type){var T=D.embeds[O.id],U="";if(T.metadata=D.metadata,T){var V=this.geometryHandlers.ascii.loaderObject,W=V.parse(T,U);k(N)(W.geometry,W.materials)}}var X,Y;for(X in D.textures)if(Y=D.textures[X],Y.url instanceof Array){w+=Y.url.length;for(var Z=0;Z<Y.url.length;Z++)A.onLoadStart()}else w+=1,A.onLoadStart();y=w;for(X in D.textures){if(Y=D.textures[X],void 0!==Y.mapping&&void 0!==THREE[Y.mapping]&&(Y.mapping=new THREE[Y.mapping]),Y.url instanceof Array){for(var $=Y.url.length,_=[],ab=0;$>ab;ab++)_[ab]=d(Y.url[ab],D.urlBaseType);var bb=/\.dds$/i.test(_[0]);s=bb?THREE.ImageUtils.loadCompressedTextureCube(_,Y.mapping,M($)):THREE.ImageUtils.loadTextureCube(_,Y.mapping,M($))}else{var bb=/\.dds$/i.test(Y.url),cb=d(Y.url,D.urlBaseType),db=M(1);if(s=bb?THREE.ImageUtils.loadCompressedTexture(cb,Y.mapping,db):THREE.ImageUtils.loadTexture(cb,Y.mapping,db),void 0!==THREE[Y.minFilter]&&(s.minFilter=THREE[Y.minFilter]),void 0!==THREE[Y.magFilter]&&(s.magFilter=THREE[Y.magFilter]),Y.anisotropy&&(s.anisotropy=Y.anisotropy),Y.repeat&&(s.repeat.set(Y.repeat[0],Y.repeat[1]),1!==Y.repeat[0]&&(s.wrapS=THREE.RepeatWrapping),1!==Y.repeat[1]&&(s.wrapT=THREE.RepeatWrapping)),Y.offset&&s.offset.set(Y.offset[0],Y.offset[1]),Y.wrap){var eb={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==eb[Y.wrap[0]]&&(s.wrapS=eb[Y.wrap[0]]),void 0!==eb[Y.wrap[1]]&&(s.wrapT=eb[Y.wrap[1]])}}z.textures[X]=s}var fb,gb,hb;for(fb in D.materials){gb=D.materials[fb];for(hb in gb.parameters)if("envMap"===hb||"map"===hb||"lightMap"===hb||"bumpMap"===hb)gb.parameters[hb]=z.textures[gb.parameters[hb]];else if("shading"===hb)gb.parameters[hb]="flat"===gb.parameters[hb]?THREE.FlatShading:THREE.SmoothShading;else if("side"===hb)gb.parameters[hb]="double"==gb.parameters[hb]?THREE.DoubleSide:"back"==gb.parameters[hb]?THREE.BackSide:THREE.FrontSide;else if("blending"===hb)gb.parameters[hb]=gb.parameters[hb]in THREE?THREE[gb.parameters[hb]]:THREE.NormalBlending;else if("combine"===hb)gb.parameters[hb]=gb.parameters[hb]in THREE?THREE[gb.parameters[hb]]:THREE.MultiplyOperation;else if("vertexColors"===hb)"face"==gb.parameters[hb]?gb.parameters[hb]=THREE.FaceColors:gb.parameters[hb]&&(gb.parameters[hb]=THREE.VertexColors);else if("wrapRGB"===hb){var ib=gb.parameters[hb];gb.parameters[hb]=new THREE.Vector3(ib[0],ib[1],ib[2])}if(void 0!==gb.parameters.opacity&&gb.parameters.opacity<1&&(gb.parameters.transparent=!0),gb.parameters.normalMap){var jb=THREE.ShaderLib.normalmap,kb=THREE.UniformsUtils.clone(jb.uniforms),lb=gb.parameters.color,mb=gb.parameters.specular,nb=gb.parameters.ambient,ob=gb.parameters.shininess;kb.tNormal.value=z.textures[gb.parameters.normalMap],gb.parameters.normalScale&&kb.uNormalScale.value.set(gb.parameters.normalScale[0],gb.parameters.normalScale[1]),gb.parameters.map&&(kb.tDiffuse.value=gb.parameters.map,kb.enableDiffuse.value=!0),gb.parameters.envMap&&(kb.tCube.value=gb.parameters.envMap,kb.enableReflection.value=!0,kb.uReflectivity.value=gb.parameters.reflectivity),gb.parameters.lightMap&&(kb.tAO.value=gb.parameters.lightMap,kb.enableAO.value=!0),gb.parameters.specularMap&&(kb.tSpecular.value=z.textures[gb.parameters.specularMap],kb.enableSpecular.value=!0),gb.parameters.displacementMap&&(kb.tDisplacement.value=z.textures[gb.parameters.displacementMap],kb.enableDisplacement.value=!0,kb.uDisplacementBias.value=gb.parameters.displacementBias,kb.uDisplacementScale.value=gb.parameters.displacementScale),kb.uDiffuseColor.value.setHex(lb),kb.uSpecularColor.value.setHex(mb),kb.uAmbientColor.value.setHex(nb),kb.uShininess.value=ob,gb.parameters.opacity&&(kb.uOpacity.value=gb.parameters.opacity);var pb={fragmentShader:jb.fragmentShader,vertexShader:jb.vertexShader,uniforms:kb,lights:!0,fog:!0};p=new THREE.ShaderMaterial(pb)}else p=new THREE[gb.type](gb.parameters);p.name=fb,z.materials[fb]=p}for(fb in D.materials)if(gb=D.materials[fb],gb.parameters.materials){for(var qb=[],ab=0;ab<gb.parameters.materials.length;ab++){var rb=gb.parameters.materials[ab];qb.push(z.materials[rb])}z.materials[fb].materials=qb}e(),z.cameras&&D.defaults.camera&&(z.currentCamera=z.cameras[D.defaults.camera]),z.fogs&&D.defaults.fog&&(z.scene.fog=z.fogs[D.defaults.fog]),A.callbackSync(z),l()}},THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b){var c=this,d=new THREE.ImageLoader(c.manager);d.setCrossOrigin(this.crossOrigin),d.load(a,function(a){var c=new THREE.Texture(a);c.needsUpdate=!0,void 0!==b&&b(c)})},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0!==c){if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}else console.warn("THREE.Material: '"+b+"' parameter is undefined.")}},clone:function(a){return void 0===a&&(a=new THREE.Material),a.name=this.name,a.side=this.side,a.opacity=this.opacity,a.transparent=this.transparent,a.blending=this.blending,a.blendSrc=this.blendSrc,a.blendDst=this.blendDst,a.blendEquation=this.blendEquation,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.polygonOffset=this.polygonOffset,a.polygonOffsetFactor=this.polygonOffsetFactor,a.polygonOffsetUnits=this.polygonOffsetUnits,a.alphaTest=this.alphaTest,a.overdraw=this.overdraw,a.visible=this.visible,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.linecap=this.linecap,a.linejoin=this.linejoin,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.LineDashedMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.scale=this.scale,a.dashSize=this.dashSize,a.gapSize=this.gapSize,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.MeshBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(a)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a},THREE.MeshLambertMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshPhongMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.specular.copy(this.specular),a.shininess=this.shininess,a.metal=this.metal,a.perPixel=this.perPixel,a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.bumpMap=this.bumpMap,a.bumpScale=this.bumpScale,a.normalMap=this.normalMap,a.normalScale.copy(this.normalScale),a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshDepthMaterial=function(a){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(a)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,a),a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a},THREE.ParticleSystemMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var a=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(a){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(a)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,a),a.fragmentShader=this.fragmentShader,a.vertexShader=this.vertexShader,a.uniforms=THREE.UniformsUtils.clone(this.uniforms),a.attributes=this.attributes,a.defines=this.defines,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.fog=this.fog,a.lights=this.lights,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.SpriteMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(a)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.rotation=this.rotation,a.uvOffset.copy(this.uvOffset),a.uvScale.copy(this.uvScale),a.fog=this.fog,a},THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(a)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.program=this.program,a},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(a,b,c,d,e,f,g,h,i){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=a,this.mipmaps=[],this.mapping=void 0!==b?b:new THREE.UVMapping,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){return void 0===a&&(a=new THREE.Texture),a.image=this.image,a.mipmaps=this.mipmaps.slice(0),a.mapping=this.mapping,a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.format=this.format,a.type=this.type,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.generateMipmaps=this.generateMipmaps,a.premultiplyAlpha=this.premultiplyAlpha,a.flipY=this.flipY,a.unpackAlignment=this.unpackAlignment,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={width:b,height:c},this.mipmaps=a,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(a){return void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material)),a.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,a),a},THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==c?c:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(a){return void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;b>a;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix()),(b||this.matrixWorldNeedsUpdate)&&(a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);var c,d=this.children.length;for(c=0;d>c;c++)this.children[c].update(this.skinMatrix,b)},THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b),this.useVertexTexture=void 0!==c?c:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var d,e,f,g,h,i;if(this.geometry&&void 0!==this.geometry.bones){for(d=0;d<this.geometry.bones.length;d++)f=this.geometry.bones[d],g=f.pos,h=f.rotq,i=f.scl,e=this.addBone(),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),void 0!==i?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)f=this.geometry.bones[d],e=this.bones[d],-1===f.parent?this.add(e):this.bones[f.parent].add(e);var j=this.bones.length;if(this.useVertexTexture){var k;k=j>256?64:j>64?32:j>16?16:8,this.boneTextureWidth=k,this.boneTextureHeight=k,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*j);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(a){return void 0===a&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||b)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c];e instanceof THREE.Bone?e.update(this.identityMatrix,!1):e.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var f=0,g=this.bones.length;g>f;f++){var h=new THREE.Matrix4;h.getInverse(this.bones[f].skinMatrix),this.boneInverses.push(h)}}for(var f=0,g=this.bones.length;g>f;f++)a.multiplyMatrices(this.bones[f].skinMatrix,this.boneInverses[f]),a.flattenToArrayOffset(this.boneMatrices,16*f);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();1/0!==c?b.multiplyScalar(c):b.set(1)}},THREE.SkinnedMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,a),a},THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;f>e;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){{var i=h[1];h[2]}c[i]||(c[i]={start:1/0,end:-1/0});var j=c[i];e<j.start&&(j.start=e),e>j.end&&(j.end=e),b||(b=i)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var c=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);c!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[c]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=c);var d=this.time%b/b;this.directionBackwards&&(d=1-d),this.morphTargetInfluences[this.currentKeyframe]=d,this.morphTargetInfluences[this.lastKeyframe]=1-d},THREE.MorphAnimMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material)),a.duration=this.duration,a.mirroredLoop=this.mirroredLoop,a.time=this.time,a.lastKeyframe=this.lastKeyframe,a.currentKeyframe=this.currentKeyframe,a.direction=this.direction,a.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,a),a},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;c>b&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(this.objects.length>1){a.getPositionFromMatrix(c.matrixWorld),b.getPositionFromMatrix(this.matrixWorld);var d=a.distanceTo(b);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;f>e&&d>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;f>e;e++)this.objects[e].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(a){THREE.Object3D.call(this),this.material=void 0!==a?a:new THREE.SpriteMaterial},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(a){return void 0===a&&(a=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(var c=0;c<a.children.length;c++)this.__addObject(a.children[c])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);if(-1!==b&&this.__lights.splice(b,1),a.shadowCascadeArray)for(var c=0;c<a.shadowCascadeArray.length;c++)this.__removeObject(a.shadowCascadeArray[c])}else if(!(a instanceof THREE.Camera)){this.__objectsRemoved.push(a);var b=this.__objectsAdded.indexOf(a);-1!==b&&this.__objectsAdded.splice(b,1)}for(var d=0;d<a.children.length;d++)this.__removeObject(a.children[d])},THREE.Scene.prototype.clone=function(a){return void 0===a&&(a=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,a),null!==this.fog&&(a.fog=this.fog.clone()),null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone()),a.autoUpdate=this.autoUpdate,a.matrixAutoUpdate=this.matrixAutoUpdate,a},THREE.Fog=function(a,b,c){this.name="",this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(a,b){this.name="",this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(a){function b(){Db.setRGB(0,0,0),Eb.setRGB(0,0,0),Fb.setRGB(0,0,0);for(var a=0,b=y.length;b>a;a++){var c=y[a],d=c.color;c instanceof THREE.AmbientLight?Db.add(d):c instanceof THREE.DirectionalLight?Eb.add(d):c instanceof THREE.PointLight&&Fb.add(d)}}function c(a,b,c){for(var d=0,e=y.length;e>d;d++){var f=y[d];if(xb.copy(f.color),f instanceof THREE.DirectionalLight){var g=Gb.getPositionFromMatrix(f.matrixWorld).normalize(),h=b.dot(g);if(0>=h)continue;h*=f.intensity,c.add(xb.multiplyScalar(h))}else if(f instanceof THREE.PointLight){var g=Gb.getPositionFromMatrix(f.matrixWorld),h=b.dot(Gb.subVectors(g,a).normalize());
if(0>=h)continue;if(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0==h)continue;h*=f.intensity,c.add(xb.multiplyScalar(h))}}}function d(a,b,c){n(c.opacity),o(c.blending);var d=b.scale.x*cb,e=b.scale.y*db;if(Cb.min.set(a.x-.5*d,a.y-.5*e),Cb.max.set(a.x+.5*d,a.y+.5*e),Ab.isIntersectionBox(Cb)===!1)return Cb.makeEmpty(),void 0;if(c instanceof THREE.SpriteMaterial||c instanceof THREE.ParticleSystemMaterial)if(null!==c.map){var f=c.map.image;eb.save(),eb.translate(a.x,a.y),eb.rotate(-c.rotation),eb.scale(d,-e),eb.drawImage(f,0,0,f.width,f.height,-.5,-.5,1,1),eb.restore()}else t(c.color.getStyle()),eb.save(),eb.translate(a.x,a.y),eb.rotate(-b.rotation),eb.scale(d,e),eb.fillRect(-.5,-.5,1,1),eb.restore();else c instanceof THREE.SpriteCanvasMaterial&&(s(c.color.getStyle()),t(c.color.getStyle()),eb.save(),eb.translate(a.x,a.y),eb.rotate(-b.rotation),eb.scale(d,e),c.program(eb),eb.restore())}function e(a,b,c,d){if(n(d.opacity),o(d.blending),eb.beginPath(),eb.moveTo(a.positionScreen.x,a.positionScreen.y),eb.lineTo(b.positionScreen.x,b.positionScreen.y),d instanceof THREE.LineBasicMaterial){if(p(d.linewidth),q(d.linecap),r(d.linejoin),d.vertexColors!==THREE.VertexColors)s(d.color.getStyle());else{var e=c.vertexColors[0].getStyle(),f=c.vertexColors[1].getStyle();if(e===f)s(e);else{try{var g=eb.createLinearGradient(a.positionScreen.x,a.positionScreen.y,b.positionScreen.x,b.positionScreen.y);g.addColorStop(0,e),g.addColorStop(1,f)}catch(h){g=e}s(g)}}eb.stroke(),Cb.expandByScalar(2*d.linewidth)}else d instanceof THREE.LineDashedMaterial&&(p(d.linewidth),q(d.linecap),r(d.linejoin),s(d.color.getStyle()),u(d.dashSize,d.gapSize),eb.stroke(),Cb.expandByScalar(2*d.linewidth),u(null,null))}function f(a,b,d,e,f,m,p,q){if(Z.info.render.vertices+=3,Z.info.render.faces++,n(q.opacity),o(q.blending),D=a.positionScreen.x,E=a.positionScreen.y,F=b.positionScreen.x,G=b.positionScreen.y,H=d.positionScreen.x,I=d.positionScreen.y,g(D,E,F,G,H,I),(q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)&&null===q.map)vb.copy(q.color),wb.copy(q.emissive),q.vertexColors===THREE.FaceColors&&vb.multiply(p.color),q.wireframe===!1&&q.shading===THREE.SmoothShading&&3===p.vertexNormalsLength?(rb.copy(Db),sb.copy(Db),tb.copy(Db),c(p.v1.positionWorld,p.vertexNormalsModel[0],rb),c(p.v2.positionWorld,p.vertexNormalsModel[1],sb),c(p.v3.positionWorld,p.vertexNormalsModel[2],tb),rb.multiply(vb).add(wb),sb.multiply(vb).add(wb),tb.multiply(vb).add(wb),ub.addColors(sb,tb).multiplyScalar(.5),L=l(rb,sb,tb,ub),k(D,E,F,G,H,I,0,0,1,0,0,1,L)):(qb.copy(Db),c(p.centroidModel,p.normalModel,qb),qb.multiply(vb).add(wb),q.wireframe===!0?h(qb,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qb));else if(q instanceof THREE.MeshBasicMaterial||q instanceof THREE.MeshLambertMaterial||q instanceof THREE.MeshPhongMaterial)null!==q.map?q.map.mapping instanceof THREE.UVMapping&&(M=p.uvs[0],j(D,E,F,G,H,I,M[e].x,M[e].y,M[f].x,M[f].y,M[m].x,M[m].y,q.map)):null!==q.envMap?q.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Gb.copy(p.vertexNormalsModelView[e]),N=.5*Gb.x+.5,O=.5*Gb.y+.5,Gb.copy(p.vertexNormalsModelView[f]),P=.5*Gb.x+.5,Q=.5*Gb.y+.5,Gb.copy(p.vertexNormalsModelView[m]),R=.5*Gb.x+.5,S=.5*Gb.y+.5,j(D,E,F,G,H,I,N,O,P,Q,R,S,q.envMap)):(qb.copy(q.color),q.vertexColors===THREE.FaceColors&&qb.multiply(p.color),q.wireframe===!0?h(qb,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qb));else if(q instanceof THREE.MeshDepthMaterial)J=z.near,K=z.far,rb.r=rb.g=rb.b=1-v(a.positionScreen.z*a.positionScreen.w,J,K),sb.r=sb.g=sb.b=1-v(b.positionScreen.z*b.positionScreen.w,J,K),tb.r=tb.g=tb.b=1-v(d.positionScreen.z*d.positionScreen.w,J,K),ub.addColors(sb,tb).multiplyScalar(.5),L=l(rb,sb,tb,ub),k(D,E,F,G,H,I,0,0,1,0,0,1,L);else if(q instanceof THREE.MeshNormalMaterial){var r;q.shading===THREE.FlatShading?(r=p.normalModelView,qb.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),q.wireframe===!0?h(qb,q.wireframeLinewidth,q.wireframeLinecap,q.wireframeLinejoin):i(qb)):q.shading===THREE.SmoothShading&&(r=p.vertexNormalsModelView[e],rb.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=p.vertexNormalsModelView[f],sb.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),r=p.vertexNormalsModelView[m],tb.setRGB(r.x,r.y,r.z).multiplyScalar(.5).addScalar(.5),ub.addColors(sb,tb).multiplyScalar(.5),L=l(rb,sb,tb,ub),k(D,E,F,G,H,I,0,0,1,0,0,1,L))}}function g(a,b,c,d,e,f){eb.beginPath(),eb.moveTo(a,b),eb.lineTo(c,d),eb.lineTo(e,f),eb.closePath()}function h(a,b,c,d){p(b),q(c),r(d),s(a.getStyle()),eb.stroke(),Cb.expandByScalar(2*b)}function i(a){t(a.getStyle()),eb.fill()}function j(a,b,c,d,e,f,g,h,j,k,l,m,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0===n.image.width)){if(n.needsUpdate===!0){var o=n.wrapS===THREE.RepeatWrapping,p=n.wrapT===THREE.RepeatWrapping;yb[n.id]=eb.createPattern(n.image,o===!0&&p===!0?"repeat":o===!0&&p===!1?"repeat-x":o===!1&&p===!0?"repeat-y":"no-repeat"),n.needsUpdate=!1}void 0===yb[n.id]?t("rgba(0,0,0,1)"):t(yb[n.id]);var q,r,s,u,v,w,x,y,z=n.offset.x/n.repeat.x,A=n.offset.y/n.repeat.y,B=n.image.width*n.repeat.x,C=n.image.height*n.repeat.y;if(g=(g+z)*B,h=(1-h+A)*C,j=(j+z)*B,k=(1-k+A)*C,l=(l+z)*B,m=(1-m+A)*C,c-=a,d-=b,e-=a,f-=b,j-=g,k-=h,l-=g,m-=h,x=j*m-l*k,0===x){if(void 0===zb[n.id]){var D=document.createElement("canvas");D.width=n.image.width,D.height=n.image.height;var E=D.getContext("2d");E.drawImage(n.image,0,0),zb[n.id]=E.getImageData(0,0,n.image.width,n.image.height).data}var F=zb[n.id],G=4*(Math.floor(g)+Math.floor(h)*n.image.width);return qb.setRGB(F[G]/255,F[G+1]/255,F[G+2]/255),i(qb),void 0}y=1/x,q=(m*c-k*e)*y,r=(m*d-k*f)*y,s=(j*e-l*c)*y,u=(j*f-l*d)*y,v=a-q*g-s*h,w=b-r*g-u*h,eb.save(),eb.transform(q,r,s,u,v,w),eb.fill(),eb.restore()}}function k(a,b,c,d,e,f,g,h,i,j,k,l,m){var n,o,p,q,r,s,t,u,v=m.width-1,w=m.height-1;g*=v,h*=w,i*=v,j*=w,k*=v,l*=w,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,t=i*l-k*j,u=1/t,n=(l*c-j*e)*u,o=(l*d-j*f)*u,p=(i*e-k*c)*u,q=(i*f-k*d)*u,r=a-n*g-p*h,s=b-o*g-q*h,eb.save(),eb.transform(n,o,p,q,r,s),eb.clip(),eb.drawImage(m,0,0),eb.restore()}function l(a,b,c,d){return W[0]=255*a.r|0,W[1]=255*a.g|0,W[2]=255*a.b|0,W[4]=255*b.r|0,W[5]=255*b.g|0,W[6]=255*b.b|0,W[8]=255*c.r|0,W[9]=255*c.g|0,W[10]=255*c.b|0,W[12]=255*d.r|0,W[13]=255*d.g|0,W[14]=255*d.b|0,U.putImageData(V,0,0),Y.drawImage(T,0,0),X}function m(a,b,c){var d,e=b.x-a.x,f=b.y-a.y,g=e*e+f*f;0!==g&&(d=c/Math.sqrt(g),e*=d,f*=d,b.x+=e,b.y+=f,a.x-=e,a.y-=f)}function n(a){hb!==a&&(eb.globalAlpha=a,hb=a)}function o(a){ib!==a&&(a===THREE.NormalBlending?eb.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?eb.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(eb.globalCompositeOperation="darker"),ib=a)}function p(a){lb!==a&&(eb.lineWidth=a,lb=a)}function q(a){mb!==a&&(eb.lineCap=a,mb=a)}function r(a){nb!==a&&(eb.lineJoin=a,nb=a)}function s(a){jb!==a&&(eb.strokeStyle=a,jb=a)}function t(a){kb!==a&&(eb.fillStyle=a,kb=a)}function u(a,b){(ob!==a||pb!==b)&&(eb.setLineDash([a,b]),ob=a,pb=b)}console.log("THREE.CanvasRenderer",THREE.REVISION);var v=THREE.Math.smoothstep;a=a||{};var w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z=this,$=new THREE.Projector,_=void 0!==a.canvas?a.canvas:document.createElement("canvas"),ab=_.width,bb=_.height,cb=Math.floor(ab/2),db=Math.floor(bb/2),eb=_.getContext("2d"),fb=new THREE.Color(0),gb=0,hb=1,ib=0,jb=null,kb=null,lb=null,mb=null,nb=null,ob=null,pb=0,qb=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),rb=new THREE.Color,sb=new THREE.Color,tb=new THREE.Color,ub=new THREE.Color,vb=new THREE.Color,wb=new THREE.Color,xb=new THREE.Color,yb={},zb={},Ab=new THREE.Box2,Bb=new THREE.Box2,Cb=new THREE.Box2,Db=new THREE.Color,Eb=new THREE.Color,Fb=new THREE.Color,Gb=new THREE.Vector3,Hb=16;T=document.createElement("canvas"),T.width=T.height=2,U=T.getContext("2d"),U.fillStyle="rgba(0,0,0,1)",U.fillRect(0,0,2,2),V=U.getImageData(0,0,2,2),W=V.data,X=document.createElement("canvas"),X.width=X.height=Hb,Y=X.getContext("2d"),Y.translate(-Hb/2,-Hb/2),Y.scale(Hb,Hb),Hb--,void 0===eb.setLineDash&&(eb.setLineDash=void 0!==eb.mozDash?function(a){eb.mozDash=null!==a[0]?a:null}:function(){}),this.domElement=_,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(a,b,c){ab=a*this.devicePixelRatio,bb=b*this.devicePixelRatio,cb=Math.floor(ab/2),db=Math.floor(bb/2),_.width=ab,_.height=bb,1!==this.devicePixelRatio&&c!==!1&&(_.style.width=a+"px",_.style.height=b+"px"),Ab.set(new THREE.Vector2(-cb,-db),new THREE.Vector2(cb,db)),Bb.set(new THREE.Vector2(-cb,-db),new THREE.Vector2(cb,db)),hb=1,ib=0,jb=null,kb=null,lb=null,mb=null,nb=null},this.setClearColor=function(a,b){fb.set(a),gb=void 0!==b?b:1,Bb.set(new THREE.Vector2(-cb,-db),new THREE.Vector2(cb,db))},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){eb.setTransform(1,0,0,-1,cb,db),Bb.empty()===!1&&(Bb.intersect(Ab),Bb.expandByScalar(2),1>gb&&eb.clearRect(0|Bb.min.x,0|Bb.min.y,Bb.max.x-Bb.min.x|0,Bb.max.y-Bb.min.y|0),gb>0&&(o(THREE.NormalBlending),n(1),t("rgba("+Math.floor(255*fb.r)+","+Math.floor(255*fb.g)+","+Math.floor(255*fb.b)+","+gb+")"),eb.fillRect(0|Bb.min.x,0|Bb.min.y,Bb.max.x-Bb.min.x|0,Bb.max.y-Bb.min.y|0)),Bb.makeEmpty())},this.render=function(a,c){if(c instanceof THREE.Camera==!1)return console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera."),void 0;this.autoClear===!0&&this.clear(),eb.setTransform(1,0,0,-1,cb,db),Z.info.render.vertices=0,Z.info.render.faces=0,w=$.projectScene(a,c,this.sortObjects,this.sortElements),x=w.elements,y=w.lights,z=c,b();for(var g=0,h=x.length;h>g;g++){var i=x[g],j=i.material;if(void 0!==j&&j.visible!==!1){if(Cb.makeEmpty(),i instanceof THREE.RenderableSprite)A=i,A.x*=cb,A.y*=db,d(A,i,j);else if(i instanceof THREE.RenderableLine)A=i.v1,B=i.v2,A.positionScreen.x*=cb,A.positionScreen.y*=db,B.positionScreen.x*=cb,B.positionScreen.y*=db,Cb.setFromPoints([A.positionScreen,B.positionScreen]),Ab.isIntersectionBox(Cb)===!0&&e(A,B,i,j);else if(i instanceof THREE.RenderableFace3){if(A=i.v1,B=i.v2,C=i.v3,A.positionScreen.z<-1||A.positionScreen.z>1)continue;if(B.positionScreen.z<-1||B.positionScreen.z>1)continue;if(C.positionScreen.z<-1||C.positionScreen.z>1)continue;A.positionScreen.x*=cb,A.positionScreen.y*=db,B.positionScreen.x*=cb,B.positionScreen.y*=db,C.positionScreen.x*=cb,C.positionScreen.y*=db,j.overdraw>0&&(m(A.positionScreen,B.positionScreen,j.overdraw),m(B.positionScreen,C.positionScreen,j.overdraw),m(C.positionScreen,A.positionScreen,j.overdraw)),Cb.setFromPoints([A.positionScreen,B.positionScreen,C.positionScreen]),Ab.isIntersectionBox(Cb)===!0&&f(A,B,C,0,1,2,i,j)}Bb.union(Cb)}}eb.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","uniform int boneTextureWidth;","uniform int boneTextureHeight;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, float( boneTextureWidth ) );","float y = floor( j / float( boneTextureWidth ) );","float dx = 1.0 / float( boneTextureWidth );","float dy = 1.0 / float( boneTextureHeight );","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};
for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,d,e={};for(b in a){e[b]={};for(c in a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(a){function b(a){a.__webglVertexBuffer=Ib.createBuffer(),a.__webglColorBuffer=Ib.createBuffer(),Ob.info.memory.geometries++}function c(a){a.__webglVertexBuffer=Ib.createBuffer(),a.__webglColorBuffer=Ib.createBuffer(),a.__webglLineDistanceBuffer=Ib.createBuffer(),Ob.info.memory.geometries++}function d(a){a.__webglVertexBuffer=Ib.createBuffer(),a.__webglNormalBuffer=Ib.createBuffer(),a.__webglTangentBuffer=Ib.createBuffer(),a.__webglColorBuffer=Ib.createBuffer(),a.__webglUVBuffer=Ib.createBuffer(),a.__webglUV2Buffer=Ib.createBuffer(),a.__webglSkinIndicesBuffer=Ib.createBuffer(),a.__webglSkinWeightsBuffer=Ib.createBuffer(),a.__webglFaceBuffer=Ib.createBuffer(),a.__webglLineBuffer=Ib.createBuffer();var b,c;if(a.numMorphTargets)for(a.__webglMorphTargetsBuffers=[],b=0,c=a.numMorphTargets;c>b;b++)a.__webglMorphTargetsBuffers.push(Ib.createBuffer());if(a.numMorphNormals)for(a.__webglMorphNormalsBuffers=[],b=0,c=a.numMorphNormals;c>b;b++)a.__webglMorphNormalsBuffers.push(Ib.createBuffer());Ob.info.memory.geometries++}function e(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=Ib.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function f(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__sortArray=[],a.__webglParticleCount=c,e(a,b)}function g(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,e(a,b)}function h(a,b){var c=b.geometry,d=a.faces3,e=3*d.length,f=1*d.length,g=3*d.length,h=i(b,a),j=m(h),n=k(h),o=l(h);a.__vertexArray=new Float32Array(3*e),n&&(a.__normalArray=new Float32Array(3*e)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*e)),o&&(a.__colorArray=new Float32Array(3*e)),j&&(c.faceVertexUvs.length>0&&(a.__uvArray=new Float32Array(2*e)),c.faceVertexUvs.length>1&&(a.__uv2Array=new Float32Array(2*e))),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*e),a.__skinWeightArray=new Float32Array(4*e)),a.__faceArray=new Uint16Array(3*f),a.__lineArray=new Uint16Array(2*g);var p,q;if(a.numMorphTargets)for(a.__morphTargetsArrays=[],p=0,q=a.numMorphTargets;q>p;p++)a.__morphTargetsArrays.push(new Float32Array(3*e));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],p=0,q=a.numMorphNormals;q>p;p++)a.__morphNormalsArrays.push(new Float32Array(3*e));if(a.__webglFaceCount=3*f,a.__webglLineCount=2*g,h.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var r in h.attributes){var s=h.attributes[r],t={};for(var u in s)t[u]=s[u];if(!t.__webglInitialized||t.createUniqueBuffers){t.__webglInitialized=!0;var v=1;"v2"===t.type?v=2:"v3"===t.type?v=3:"v4"===t.type?v=4:"c"===t.type&&(v=3),t.size=v,t.array=new Float32Array(e*v),t.buffer=Ib.createBuffer(),t.buffer.belongsToAttribute=r,s.needsUpdate=!0,t.__original=s}a.__webglCustomAttributesList.push(t)}}a.__inittedArrays=!0}function i(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function j(a){return a&&void 0!==a.shading&&a.shading===THREE.SmoothShading}function k(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:j(a)?THREE.SmoothShading:THREE.FlatShading}function l(a){return a.vertexColors?a.vertexColors:!1}function m(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function n(a){var b,c,d;for(b in a.attributes)d="index"===b?Ib.ELEMENT_ARRAY_BUFFER:Ib.ARRAY_BUFFER,c=a.attributes[b],void 0===c.numItems&&(c.numItems=c.array.length),c.buffer=Ib.createBuffer(),Ib.bindBuffer(d,c.buffer),Ib.bufferData(d,c.array,Ib.STATIC_DRAW)}function o(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p=a.vertices,q=p.length,r=a.colors,s=r.length,t=a.__vertexArray,u=a.__colorArray,v=a.__sortArray,x=a.verticesNeedUpdate,y=(a.elementsNeedUpdate,a.colorsNeedUpdate),z=a.__webglCustomAttributesList;if(c.sortParticles){for(rc.copy(qc),rc.multiply(c.matrixWorld),d=0;q>d;d++)f=p[d],sc.copy(f),sc.applyProjection(rc),v[d]=[sc.z,d];for(v.sort(w),d=0;q>d;d++)f=p[v[d][1]],g=3*d,t[g]=f.x,t[g+1]=f.y,t[g+2]=f.z;for(e=0;s>e;e++)g=3*e,i=r[v[e][1]],u[g]=i.r,u[g+1]=i.g,u[g+2]=i.b;if(z)for(j=0,k=z.length;k>j;j++)if(o=z[j],void 0===o.boundTo||"vertices"===o.boundTo)if(g=0,m=o.value.length,1===o.size)for(l=0;m>l;l++)h=v[l][1],o.array[l]=o.value[h];else if(2===o.size)for(l=0;m>l;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,g+=2;
else if(3===o.size)if("c"===o.type)for(l=0;m>l;l++)h=v[l][1],n=o.value[h],o.array[g]=n.r,o.array[g+1]=n.g,o.array[g+2]=n.b,g+=3;else for(l=0;m>l;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,g+=3;else if(4===o.size)for(l=0;m>l;l++)h=v[l][1],n=o.value[h],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,o.array[g+3]=n.w,g+=4}else{if(x)for(d=0;q>d;d++)f=p[d],g=3*d,t[g]=f.x,t[g+1]=f.y,t[g+2]=f.z;if(y)for(e=0;s>e;e++)i=r[e],g=3*e,u[g]=i.r,u[g+1]=i.g,u[g+2]=i.b;if(z)for(j=0,k=z.length;k>j;j++)if(o=z[j],o.needsUpdate&&(void 0===o.boundTo||"vertices"===o.boundTo))if(m=o.value.length,g=0,1===o.size)for(l=0;m>l;l++)o.array[l]=o.value[l];else if(2===o.size)for(l=0;m>l;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,g+=2;else if(3===o.size)if("c"===o.type)for(l=0;m>l;l++)n=o.value[l],o.array[g]=n.r,o.array[g+1]=n.g,o.array[g+2]=n.b,g+=3;else for(l=0;m>l;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,g+=3;else if(4===o.size)for(l=0;m>l;l++)n=o.value[l],o.array[g]=n.x,o.array[g+1]=n.y,o.array[g+2]=n.z,o.array[g+3]=n.w,g+=4}if((x||c.sortParticles)&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglVertexBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,t,b)),(y||c.sortParticles)&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglColorBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,u,b)),z)for(j=0,k=z.length;k>j;j++)o=z[j],(o.needsUpdate||c.sortParticles)&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,o.buffer),Ib.bufferData(Ib.ARRAY_BUFFER,o.array,b))}function p(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=a.colors,q=a.lineDistances,r=o.length,s=p.length,t=q.length,u=a.__vertexArray,v=a.__colorArray,w=a.__lineDistanceArray,x=a.verticesNeedUpdate,y=a.colorsNeedUpdate,z=a.lineDistancesNeedUpdate,A=a.__webglCustomAttributesList;if(x){for(c=0;r>c;c++)f=o[c],g=3*c,u[g]=f.x,u[g+1]=f.y,u[g+2]=f.z;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglVertexBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,u,b)}if(y){for(d=0;s>d;d++)h=p[d],g=3*d,v[g]=h.r,v[g+1]=h.g,v[g+2]=h.b;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglColorBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,v,b)}if(z){for(e=0;t>e;e++)w[e]=q[e];Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglLineDistanceBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,w,b)}if(A)for(i=0,j=A.length;j>i;i++)if(n=A[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,l=n.value.length,1===n.size)for(k=0;l>k;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;Ib.bindBuffer(Ib.ARRAY_BUFFER,n.buffer),Ib.bufferData(Ib.ARRAY_BUFFER,n.array,b)}}function q(a,b,c,d,e){if(a.__inittedArrays){var f,g,h,i,j,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y=k(e),Z=l(e),$=m(e),_=Y===THREE.SmoothShading,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=a.__vertexArray,ob=a.__uvArray,pb=a.__uv2Array,qb=a.__normalArray,rb=a.__tangentArray,sb=a.__colorArray,tb=a.__skinIndexArray,ub=a.__skinWeightArray,vb=a.__morphTargetsArrays,wb=a.__morphNormalsArrays,xb=a.__webglCustomAttributesList,yb=a.__faceArray,zb=a.__lineArray,Ab=b.geometry,Bb=Ab.verticesNeedUpdate,Cb=Ab.elementsNeedUpdate,Db=Ab.uvsNeedUpdate,Eb=Ab.normalsNeedUpdate,Fb=Ab.tangentsNeedUpdate,Gb=Ab.colorsNeedUpdate,Hb=Ab.morphTargetsNeedUpdate,Jb=Ab.vertices,Kb=a.faces3,Lb=Ab.faces,Mb=Ab.faceVertexUvs[0],Nb=Ab.faceVertexUvs[1],Ob=(Ab.colors,Ab.skinIndices),Pb=Ab.skinWeights,Qb=Ab.morphTargets,Rb=Ab.morphNormals;if(Bb){for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],t=Jb[i.a],u=Jb[i.b],v=Jb[i.c],nb[bb]=t.x,nb[bb+1]=t.y,nb[bb+2]=t.z,nb[bb+3]=u.x,nb[bb+4]=u.y,nb[bb+5]=u.z,nb[bb+6]=v.x,nb[bb+7]=v.y,nb[bb+8]=v.z,bb+=9;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglVertexBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,nb,c)}if(Hb)for(Q=0,R=Qb.length;R>Q;Q++){for(kb=0,f=0,g=Kb.length;g>f;f++)U=Kb[f],i=Lb[U],t=Qb[Q].vertices[i.a],u=Qb[Q].vertices[i.b],v=Qb[Q].vertices[i.c],S=vb[Q],S[kb]=t.x,S[kb+1]=t.y,S[kb+2]=t.z,S[kb+3]=u.x,S[kb+4]=u.y,S[kb+5]=u.z,S[kb+6]=v.x,S[kb+7]=v.y,S[kb+8]=v.z,e.morphNormals&&(_?(V=Rb[Q].vertexNormals[U],z=V.a,A=V.b,B=V.c):(z=Rb[Q].faceNormals[U],A=z,B=z),T=wb[Q],T[kb]=z.x,T[kb+1]=z.y,T[kb+2]=z.z,T[kb+3]=A.x,T[kb+4]=A.y,T[kb+5]=A.z,T[kb+6]=B.x,T[kb+7]=B.y,T[kb+8]=B.z),kb+=9;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglMorphTargetsBuffers[Q]),Ib.bufferData(Ib.ARRAY_BUFFER,vb[Q],c),e.morphNormals&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglMorphNormalsBuffers[Q]),Ib.bufferData(Ib.ARRAY_BUFFER,wb[Q],c))}if(Pb.length){for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],F=Pb[i.a],G=Pb[i.b],H=Pb[i.c],ub[jb]=F.x,ub[jb+1]=F.y,ub[jb+2]=F.z,ub[jb+3]=F.w,ub[jb+4]=G.x,ub[jb+5]=G.y,ub[jb+6]=G.z,ub[jb+7]=G.w,ub[jb+8]=H.x,ub[jb+9]=H.y,ub[jb+10]=H.z,ub[jb+11]=H.w,I=Ob[i.a],J=Ob[i.b],K=Ob[i.c],tb[jb]=I.x,tb[jb+1]=I.y,tb[jb+2]=I.z,tb[jb+3]=I.w,tb[jb+4]=J.x,tb[jb+5]=J.y,tb[jb+6]=J.z,tb[jb+7]=J.w,tb[jb+8]=K.x,tb[jb+9]=K.y,tb[jb+10]=K.z,tb[jb+11]=K.w,jb+=12;jb>0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,tb,c),Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,ub,c))}if(Gb&&Z){for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],o=i.vertexColors,p=i.color,3===o.length&&Z===THREE.VertexColors?(C=o[0],D=o[1],E=o[2]):(C=p,D=p,E=p),sb[ib]=C.r,sb[ib+1]=C.g,sb[ib+2]=C.b,sb[ib+3]=D.r,sb[ib+4]=D.g,sb[ib+5]=D.b,sb[ib+6]=E.r,sb[ib+7]=E.g,sb[ib+8]=E.b,ib+=9;ib>0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglColorBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,sb,c))}if(Fb&&Ab.hasTangents){for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],q=i.vertexTangents,w=q[0],x=q[1],y=q[2],rb[gb]=w.x,rb[gb+1]=w.y,rb[gb+2]=w.z,rb[gb+3]=w.w,rb[gb+4]=x.x,rb[gb+5]=x.y,rb[gb+6]=x.z,rb[gb+7]=x.w,rb[gb+8]=y.x,rb[gb+9]=y.y,rb[gb+10]=y.z,rb[gb+11]=y.w,gb+=12;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglTangentBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,rb,c)}if(Eb&&Y){for(f=0,g=Kb.length;g>f;f++)if(i=Lb[Kb[f]],j=i.vertexNormals,n=i.normal,3===j.length&&_)for(L=0;3>L;L++)N=j[L],qb[fb]=N.x,qb[fb+1]=N.y,qb[fb+2]=N.z,fb+=3;else for(L=0;3>L;L++)qb[fb]=n.x,qb[fb+1]=n.y,qb[fb+2]=n.z,fb+=3;Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglNormalBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,qb,c)}if(Db&&Mb&&$){for(f=0,g=Kb.length;g>f;f++)if(h=Kb[f],r=Mb[h],void 0!==r)for(L=0;3>L;L++)O=r[L],ob[cb]=O.x,ob[cb+1]=O.y,cb+=2;cb>0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglUVBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,ob,c))}if(Db&&Nb&&$){for(f=0,g=Kb.length;g>f;f++)if(h=Kb[f],s=Nb[h],void 0!==s)for(L=0;3>L;L++)P=s[L],pb[db]=P.x,pb[db+1]=P.y,db+=2;db>0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglUV2Buffer),Ib.bufferData(Ib.ARRAY_BUFFER,pb,c))}if(Cb){for(f=0,g=Kb.length;g>f;f++)yb[eb]=ab,yb[eb+1]=ab+1,yb[eb+2]=ab+2,eb+=3,zb[hb]=ab,zb[hb+1]=ab+1,zb[hb+2]=ab,zb[hb+3]=ab+2,zb[hb+4]=ab+1,zb[hb+5]=ab+2,hb+=6,ab+=3;Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),Ib.bufferData(Ib.ELEMENT_ARRAY_BUFFER,yb,c),Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),Ib.bufferData(Ib.ELEMENT_ARRAY_BUFFER,zb,c)}if(xb)for(L=0,M=xb.length;M>L;L++)if(X=xb[L],X.__original.needsUpdate){if(lb=0,mb=0,1===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],X.array[lb]=X.value[i.a],X.array[lb+1]=X.value[i.b],X.array[lb+2]=X.value[i.c],lb+=3;else if("faces"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],X.array[lb]=W,X.array[lb+1]=W,X.array[lb+2]=W,lb+=3}else if(2===X.size){if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[lb]=t.x,X.array[lb+1]=t.y,X.array[lb+2]=u.x,X.array[lb+3]=u.y,X.array[lb+4]=v.x,X.array[lb+5]=v.y,lb+=6;else if("faces"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],t=W,u=W,v=W,X.array[lb]=t.x,X.array[lb+1]=t.y,X.array[lb+2]=u.x,X.array[lb+3]=u.y,X.array[lb+4]=v.x,X.array[lb+5]=v.y,lb+=6}else if(3===X.size){var Sb;if(Sb="c"===X.type?["r","g","b"]:["x","y","z"],void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[lb]=t[Sb[0]],X.array[lb+1]=t[Sb[1]],X.array[lb+2]=t[Sb[2]],X.array[lb+3]=u[Sb[0]],X.array[lb+4]=u[Sb[1]],X.array[lb+5]=u[Sb[2]],X.array[lb+6]=v[Sb[0]],X.array[lb+7]=v[Sb[1]],X.array[lb+8]=v[Sb[2]],lb+=9;else if("faces"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],t=W,u=W,v=W,X.array[lb]=t[Sb[0]],X.array[lb+1]=t[Sb[1]],X.array[lb+2]=t[Sb[2]],X.array[lb+3]=u[Sb[0]],X.array[lb+4]=u[Sb[1]],X.array[lb+5]=u[Sb[2]],X.array[lb+6]=v[Sb[0]],X.array[lb+7]=v[Sb[1]],X.array[lb+8]=v[Sb[2]],lb+=9;else if("faceVertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],t=W[0],u=W[1],v=W[2],X.array[lb]=t[Sb[0]],X.array[lb+1]=t[Sb[1]],X.array[lb+2]=t[Sb[2]],X.array[lb+3]=u[Sb[0]],X.array[lb+4]=u[Sb[1]],X.array[lb+5]=u[Sb[2]],X.array[lb+6]=v[Sb[0]],X.array[lb+7]=v[Sb[1]],X.array[lb+8]=v[Sb[2]],lb+=9}else if(4===X.size)if(void 0===X.boundTo||"vertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)i=Lb[Kb[f]],t=X.value[i.a],u=X.value[i.b],v=X.value[i.c],X.array[lb]=t.x,X.array[lb+1]=t.y,X.array[lb+2]=t.z,X.array[lb+3]=t.w,X.array[lb+4]=u.x,X.array[lb+5]=u.y,X.array[lb+6]=u.z,X.array[lb+7]=u.w,X.array[lb+8]=v.x,X.array[lb+9]=v.y,X.array[lb+10]=v.z,X.array[lb+11]=v.w,lb+=12;else if("faces"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],t=W,u=W,v=W,X.array[lb]=t.x,X.array[lb+1]=t.y,X.array[lb+2]=t.z,X.array[lb+3]=t.w,X.array[lb+4]=u.x,X.array[lb+5]=u.y,X.array[lb+6]=u.z,X.array[lb+7]=u.w,X.array[lb+8]=v.x,X.array[lb+9]=v.y,X.array[lb+10]=v.z,X.array[lb+11]=v.w,lb+=12;else if("faceVertices"===X.boundTo)for(f=0,g=Kb.length;g>f;f++)W=X.value[Kb[f]],t=W[0],u=W[1],v=W[2],X.array[lb]=t.x,X.array[lb+1]=t.y,X.array[lb+2]=t.z,X.array[lb+3]=t.w,X.array[lb+4]=u.x,X.array[lb+5]=u.y,X.array[lb+6]=u.z,X.array[lb+7]=u.w,X.array[lb+8]=v.x,X.array[lb+9]=v.y,X.array[lb+10]=v.z,X.array[lb+11]=v.w,lb+=12;Ib.bindBuffer(Ib.ARRAY_BUFFER,X.buffer),Ib.bufferData(Ib.ARRAY_BUFFER,X.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}}function r(a,b,c){var d,e,f=a.attributes;for(d in f)e=f[d],e.needsUpdate&&("index"===d?(Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,e.buffer),Ib.bufferData(Ib.ELEMENT_ARRAY_BUFFER,e.array,b)):(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.buffer),Ib.bufferData(Ib.ARRAY_BUFFER,e.array,b)),e.needsUpdate=!1),c&&!e.dynamic&&(e.array=null)}function s(a){oc[a]||(Ib.enableVertexAttribArray(a),oc[a]=!0)}function t(){for(var a in oc)oc[a]&&(Ib.disableVertexAttribArray(a),oc[a]=!1)}function u(a,b,c){var d=a.program.attributes;if(-1!==c.morphTargetBase&&d.position>=0?(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),s(d.position),Ib.vertexAttribPointer(d.position,3,Ib.FLOAT,!1,0,0)):d.position>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglVertexBuffer),s(d.position),Ib.vertexAttribPointer(d.position,3,Ib.FLOAT,!1,0,0)),c.morphTargetForcedOrder.length)for(var e=0,f=c.morphTargetForcedOrder,g=c.morphTargetInfluences;e<a.numSupportedMorphTargets&&e<f.length;)d["morphTarget"+e]>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[f[e]]),s(d["morphTarget"+e]),Ib.vertexAttribPointer(d["morphTarget"+e],3,Ib.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[f[e]]),s(d["morphNormal"+e]),Ib.vertexAttribPointer(d["morphNormal"+e],3,Ib.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[f[e]],e++;else{var h,i,j=[],g=c.morphTargetInfluences,k=g.length;for(i=0;k>i;i++)h=g[i],h>0&&j.push([h,i]);j.length>a.numSupportedMorphTargets?(j.sort(w),j.length=a.numSupportedMorphTargets):j.length>a.numSupportedMorphNormals?j.sort(w):0===j.length&&j.push([0,0]);for(var l,e=0;e<a.numSupportedMorphTargets;)j[e]?(l=j[e][1],d["morphTarget"+e]>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[l]),s(d["morphTarget"+e]),Ib.vertexAttribPointer(d["morphTarget"+e],3,Ib.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[l]),s(d["morphNormal"+e]),Ib.vertexAttribPointer(d["morphNormal"+e],3,Ib.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[l]):c.__webglMorphTargetInfluences[e]=0,e++}null!==a.program.uniforms.morphTargetInfluences&&Ib.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function v(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function w(a,b){return b[0]-a[0]}function x(a,b,c){if(a.length)for(var d=0,e=a.length;e>d;d++)Rb=null,Vb=null,$b=-1,cc=-1,dc=-1,Yb=-1,Zb=-1,Ub=-1,Tb=-1,uc=!0,a[d].render(b,c,mc,nc),Rb=null,Vb=null,$b=-1,cc=-1,dc=-1,Yb=-1,Zb=-1,Ub=-1,Tb=-1,uc=!0}function y(a,b,c,d,e,f,g,h){var i,j,k,l,m,n,o;b?(m=a.length-1,n=-1,o=-1):(m=0,n=a.length,o=1);for(var p=m;p!==n;p+=o)if(i=a[p],i.render){if(j=i.object,k=i.buffer,h)l=h;else{if(l=i[c],!l)continue;g&&Ob.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Ob.setDepthTest(l.depthTest),Ob.setDepthWrite(l.depthWrite),db(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Ob.setMaterialFaces(l),k instanceof THREE.BufferGeometry?Ob.renderBufferDirect(d,e,f,l,k,j):Ob.renderBuffer(d,e,f,l,k,j)}}function z(a,b,c,d,e,f,g){for(var h,i,j,k=0,l=a.length;l>k;k++)if(h=a[k],i=h.object,i.visible){if(g)j=g;else{if(j=h[b],!j)continue;f&&Ob.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst),Ob.setDepthTest(j.depthTest),Ob.setDepthWrite(j.depthWrite),db(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}Ob.renderImmediateObject(c,d,e,j,i)}}function A(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function B(a){var b,c,d,e=a.object,f=a.buffer;d=e.material,d instanceof THREE.MeshFaceMaterial?(c=f.materialIndex,b=d.materials[c],b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)):(b=d,b&&(b.transparent?(a.transparent=b,a.opaque=null):(a.opaque=b,a.transparent=null)))}function C(a,b){var c,d,e,f,g,h,i={},j=a.morphTargets.length,k=a.morphNormals.length,l=b instanceof THREE.MeshFaceMaterial;for(a.geometryGroups={},c=0,d=a.faces.length;d>c;c++)e=a.faces[c],f=l?e.materialIndex:0,void 0===i[f]&&(i[f]={hash:f,counter:0}),h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k}),g=3,a.geometryGroups[h].vertices+g>65535&&(i[f].counter+=1,h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k})),a.geometryGroups[h].faces3.push(c),a.geometryGroups[h].vertices+=g;a.geometryGroupsList=[];for(var m in a.geometryGroups)a.geometryGroups[m].id=Wb++,a.geometryGroupsList.push(a.geometryGroups[m])}function D(a,e){var i,j,k,l;if(void 0===a.__webglInit)if(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",Ic)),j=a.geometry,void 0===j);else if(j instanceof THREE.BufferGeometry)n(j);else if(a instanceof THREE.Mesh){k=a.material,void 0===j.geometryGroups&&C(j,k);for(i in j.geometryGroups)l=j.geometryGroups[i],l.__webglVertexBuffer||(d(l),h(l,a),j.verticesNeedUpdate=!0,j.morphTargetsNeedUpdate=!0,j.elementsNeedUpdate=!0,j.uvsNeedUpdate=!0,j.normalsNeedUpdate=!0,j.tangentsNeedUpdate=!0,j.colorsNeedUpdate=!0)}else a instanceof THREE.Line?j.__webglVertexBuffer||(c(j),g(j,a),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0,j.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&(j.__webglVertexBuffer||(b(j),f(j,a),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0));if(void 0===a.__webglActive){if(a instanceof THREE.Mesh){if(j=a.geometry,j instanceof THREE.BufferGeometry)E(e.__webglObjects,j,a);else if(j instanceof THREE.Geometry)for(i in j.geometryGroups)l=j.geometryGroups[i],E(e.__webglObjects,l,a)}else a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(j=a.geometry,E(e.__webglObjects,j,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?F(e.__webglObjectsImmediate,a):a instanceof THREE.Sprite?e.__webglSprites.push(a):a instanceof THREE.LensFlare&&e.__webglFlares.push(a);a.__webglActive=!0}}function E(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function F(a,b){a.push({id:null,object:b,opaque:null,transparent:null,z:0})}function G(a){var b,c,d,e=a.geometry;if(e instanceof THREE.BufferGeometry)r(e,Ib.DYNAMIC_DRAW,!e.dynamic);else if(a instanceof THREE.Mesh){for(var f=0,g=e.geometryGroupsList.length;g>f;f++)b=e.geometryGroupsList[f],d=i(a,b),e.buffersNeedUpdate&&h(b,a),c=d.attributes&&H(d),(e.verticesNeedUpdate||e.morphTargetsNeedUpdate||e.elementsNeedUpdate||e.uvsNeedUpdate||e.normalsNeedUpdate||e.colorsNeedUpdate||e.tangentsNeedUpdate||c)&&q(b,a,Ib.DYNAMIC_DRAW,!e.dynamic,d);e.verticesNeedUpdate=!1,e.morphTargetsNeedUpdate=!1,e.elementsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.tangentsNeedUpdate=!1,e.buffersNeedUpdate=!1,d.attributes&&I(d)}else a instanceof THREE.Line?(d=i(a,e),c=d.attributes&&H(d),(e.verticesNeedUpdate||e.colorsNeedUpdate||e.lineDistancesNeedUpdate||c)&&p(e,Ib.DYNAMIC_DRAW),e.verticesNeedUpdate=!1,e.colorsNeedUpdate=!1,e.lineDistancesNeedUpdate=!1,d.attributes&&I(d)):a instanceof THREE.ParticleSystem&&(d=i(a,e),c=d.attributes&&H(d),(e.verticesNeedUpdate||e.colorsNeedUpdate||a.sortParticles||c)&&o(e,Ib.DYNAMIC_DRAW,a),e.verticesNeedUpdate=!1,e.colorsNeedUpdate=!1,d.attributes&&I(d))}function H(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function I(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function J(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Line?K(b.__webglObjects,a):a instanceof THREE.Sprite?L(b.__webglSprites,a):a instanceof THREE.LensFlare?L(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&K(b.__webglObjectsImmediate,a),delete a.__webglActive}function K(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function L(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function M(a,b){a.uniforms=THREE.UniformsUtils.clone(b.uniforms),a.vertexShader=b.vertexShader,a.fragmentShader=b.fragmentShader}function N(a,b,c,d,e){Xb=0,d.needsUpdate&&(d.program&&Qc(d),Ob.initMaterial(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&(e.__webglMorphTargetInfluences||(e.__webglMorphTargetInfluences=new Float32Array(Ob.maxMorphTargets)));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;if(g!==Rb&&(Ib.useProgram(g),Rb=g,f=!0),d.id!==Tb&&(Tb=d.id,f=!0),(f||a!==Vb)&&(Ib.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==Vb&&(Vb=a)),d.skinning)if(Bc&&e.useVertexTexture){if(null!==h.boneTexture){var j=Y();Ib.uniform1i(h.boneTexture,j),Ob.setTexture(e.boneTexture,j)}null!==h.boneTextureWidth&&Ib.uniform1i(h.boneTextureWidth,e.boneTextureWidth),null!==h.boneTextureHeight&&Ib.uniform1i(h.boneTextureHeight,e.boneTextureHeight)}else null!==h.boneGlobalMatrices&&Ib.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);return f&&(c&&d.fog&&S(i,c),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights)&&(uc&&(bb(g,b),uc=!1),V(i,vc)),(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&O(i,d),d instanceof THREE.LineBasicMaterial?P(i,d):d instanceof THREE.LineDashedMaterial?(P(i,d),Q(i,d)):d instanceof THREE.ParticleSystemMaterial?R(i,d):d instanceof THREE.MeshPhongMaterial?T(i,d):d instanceof THREE.MeshLambertMaterial?U(i,d):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&W(i,b),Z(g,d.uniformsList),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition&&(sc.getPositionFromMatrix(a.matrixWorld),Ib.uniform3f(h.cameraPosition,sc.x,sc.y,sc.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&Ib.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)),X(h,e),null!==h.modelMatrix&&Ib.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements),g}function O(a,b){a.opacity.value=b.opacity,Ob.gammaInput?a.diffuse.value.copyGammaToLinear(b.color):a.diffuse.value=b.color,a.map.value=b.map,a.lightMap.value=b.lightMap,a.specularMap.value=b.specularMap,b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale),b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));var c;if(b.map?c=b.map:b.specularMap?c=b.specularMap:b.normalMap?c=b.normalMap:b.bumpMap&&(c=b.bumpMap),void 0!==c){var d=c.offset,e=c.repeat;a.offsetRepeat.value.set(d.x,d.y,e.x,e.y)}a.envMap.value=b.envMap,a.flipEnvMap.value=b.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,a.reflectivity.value=Ob.gammaInput?b.reflectivity:b.reflectivity,a.refractionRatio.value=b.refractionRatio,a.combine.value=b.combine,a.useRefract.value=b.envMap&&b.envMap.mapping instanceof THREE.CubeRefractionMapping}function P(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function Q(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function R(a,b){a.psColor.value=b.color,a.opacity.value=b.opacity,a.size.value=b.size,a.scale.value=zb.height/2,a.map.value=b.map}function S(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function T(a,b){a.shininess.value=b.shininess,Ob.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive),a.specular.value.copyGammaToLinear(b.specular)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive,a.specular.value=b.specular),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function U(a,b){Ob.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function V(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function W(a,b){if(a.shadowMatrix)for(var c=0,d=0,e=b.length;e>d;d++){var f=b[d];f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)&&(a.shadowMap.value[c]=f.shadowMap,a.shadowMapSize.value[c]=f.shadowMapSize,a.shadowMatrix.value[c]=f.shadowMatrix,a.shadowDarkness.value[c]=f.shadowDarkness,a.shadowBias.value[c]=f.shadowBias,c++)}}function X(a,b){Ib.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&Ib.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function Y(){var a=Xb;return a>=wc&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+wc),Xb+=1,a}function Z(a,b){var c,d,e,f,g,h,i,j,k,l,m;for(k=0,l=b.length;l>k;k++)if(f=a.uniforms[b[k][1]])if(c=b[k][0],e=c.type,d=c.value,"i"===e)Ib.uniform1i(f,d);else if("f"===e)Ib.uniform1f(f,d);else if("v2"===e)Ib.uniform2f(f,d.x,d.y);else if("v3"===e)Ib.uniform3f(f,d.x,d.y,d.z);else if("v4"===e)Ib.uniform4f(f,d.x,d.y,d.z,d.w);else if("c"===e)Ib.uniform3f(f,d.r,d.g,d.b);else if("iv1"===e)Ib.uniform1iv(f,d);else if("iv"===e)Ib.uniform3iv(f,d);else if("fv1"===e)Ib.uniform1fv(f,d);else if("fv"===e)Ib.uniform3fv(f,d);else if("v2v"===e){for(void 0===c._array&&(c._array=new Float32Array(2*d.length)),i=0,j=d.length;j>i;i++)m=2*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y;Ib.uniform2fv(f,c._array)}else if("v3v"===e){for(void 0===c._array&&(c._array=new Float32Array(3*d.length)),i=0,j=d.length;j>i;i++)m=3*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y,c._array[m+2]=d[i].z;Ib.uniform3fv(f,c._array)}else if("v4v"===e){for(void 0===c._array&&(c._array=new Float32Array(4*d.length)),i=0,j=d.length;j>i;i++)m=4*i,c._array[m]=d[i].x,c._array[m+1]=d[i].y,c._array[m+2]=d[i].z,c._array[m+3]=d[i].w;Ib.uniform4fv(f,c._array)}else if("m4"===e)void 0===c._array&&(c._array=new Float32Array(16)),d.flattenToArray(c._array),Ib.uniformMatrix4fv(f,!1,c._array);else if("m4v"===e){for(void 0===c._array&&(c._array=new Float32Array(16*d.length)),i=0,j=d.length;j>i;i++)d[i].flattenToArrayOffset(c._array,16*i);Ib.uniformMatrix4fv(f,!1,c._array)}else if("t"===e){if(g=d,h=Y(),Ib.uniform1i(f,h),!g)continue;g.image instanceof Array&&6===g.image.length?nb(g,h):g instanceof THREE.WebGLRenderTargetCube?ob(g,h):Ob.setTexture(g,h)}else if("tv"===e){for(void 0===c._array&&(c._array=[]),i=0,j=c.value.length;j>i;i++)c._array[i]=Y();for(Ib.uniform1iv(f,c._array),i=0,j=c.value.length;j>i;i++)g=c.value[i],h=c._array[i],g&&Ob.setTexture(g,h)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+e)}function $(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function _(a,b,c,d){a[b]=c.r*c.r*d,a[b+1]=c.g*c.g*d,a[b+2]=c.b*c.b*d}function ab(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function bb(a,b){var c,d,e,f,g,h,i,j,k,l=0,m=0,n=0,o=vc,p=o.directional.colors,q=o.directional.positions,r=o.point.colors,s=o.point.positions,t=o.point.distances,u=o.spot.colors,v=o.spot.positions,w=o.spot.distances,x=o.spot.directions,y=o.spot.anglesCos,z=o.spot.exponents,A=o.hemi.skyColors,B=o.hemi.groundColors,C=o.hemi.positions,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;for(c=0,d=b.length;d>c;c++)if(e=b[c],!e.onlyShadow)if(f=e.color,i=e.intensity,k=e.distance,e instanceof THREE.AmbientLight){if(!e.visible)continue;Ob.gammaInput?(l+=f.r*f.r,m+=f.g*f.g,n+=f.b*f.b):(l+=f.r,m+=f.g,n+=f.b)}else if(e instanceof THREE.DirectionalLight){if(H+=1,!e.visible)continue;if(tc.getPositionFromMatrix(e.matrixWorld),sc.getPositionFromMatrix(e.target.matrixWorld),tc.sub(sc),tc.normalize(),0===tc.x&&0===tc.y&&0===tc.z)continue;L=3*D,q[L]=tc.x,q[L+1]=tc.y,q[L+2]=tc.z,Ob.gammaInput?_(p,L,f,i*i):ab(p,L,f,i),D+=1}else if(e instanceof THREE.PointLight){if(I+=1,!e.visible)continue;M=3*E,Ob.gammaInput?_(r,M,f,i*i):ab(r,M,f,i),sc.getPositionFromMatrix(e.matrixWorld),s[M]=sc.x,s[M+1]=sc.y,s[M+2]=sc.z,t[E]=k,E+=1}else if(e instanceof THREE.SpotLight){if(J+=1,!e.visible)continue;N=3*F,Ob.gammaInput?_(u,N,f,i*i):ab(u,N,f,i),sc.getPositionFromMatrix(e.matrixWorld),v[N]=sc.x,v[N+1]=sc.y,v[N+2]=sc.z,w[F]=k,tc.copy(sc),sc.getPositionFromMatrix(e.target.matrixWorld),tc.sub(sc),tc.normalize(),x[N]=tc.x,x[N+1]=tc.y,x[N+2]=tc.z,y[F]=Math.cos(e.angle),z[F]=e.exponent,F+=1}else if(e instanceof THREE.HemisphereLight){if(K+=1,!e.visible)continue;if(tc.getPositionFromMatrix(e.matrixWorld),tc.normalize(),0===tc.x&&0===tc.y&&0===tc.z)continue;O=3*G,C[O]=tc.x,C[O+1]=tc.y,C[O+2]=tc.z,g=e.color,h=e.groundColor,Ob.gammaInput?(j=i*i,_(A,O,g,j),_(B,O,h,j)):(ab(A,O,g,i),ab(B,O,h,i)),G+=1}for(c=3*D,d=Math.max(p.length,3*H);d>c;c++)p[c]=0;for(c=3*E,d=Math.max(r.length,3*I);d>c;c++)r[c]=0;for(c=3*F,d=Math.max(u.length,3*J);d>c;c++)u[c]=0;for(c=3*G,d=Math.max(A.length,3*K);d>c;c++)A[c]=0;for(c=3*G,d=Math.max(B.length,3*K);d>c;c++)B[c]=0;o.directional.length=D,o.point.length=E,o.spot.length=F,o.hemi.length=G,o.ambient[0]=l,o.ambient[1]=m,o.ambient[2]=n}function cb(a){a!==hc&&(Ib.lineWidth(a),hc=a)}function db(a,b,c){ec!==a&&(a?Ib.enable(Ib.POLYGON_OFFSET_FILL):Ib.disable(Ib.POLYGON_OFFSET_FILL),ec=a),!a||fc===b&&gc===c||(Ib.polygonOffset(b,c),fc=b,gc=c)}function eb(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")}function fb(a,b,c,d,e,f,g,h){var i,j,k,l,m,n=[];a?n.push(a):(n.push(b),n.push(c));for(k in f)n.push(k),n.push(f[k]);for(i in g)n.push(i),n.push(g[i]);for(m=n.join(),i=0,j=Pb.length;j>i;i++){var o=Pb[i];if(o.code===m)return o.usedTimes++,o.program}var p="SHADOWMAP_TYPE_BASIC";g.shadowMapType===THREE.PCFShadowMap?p="SHADOWMAP_TYPE_PCF":g.shadowMapType===THREE.PCFSoftShadowMap&&(p="SHADOWMAP_TYPE_PCF_SOFT");var q=eb(f);l=Ib.createProgram();var r=["precision "+Ab+" float;","precision "+Ab+" int;",q,Ac?"#define VERTEX_TEXTURES":"",Ob.gammaInput?"#define GAMMA_INPUT":"",Ob.gammaOutput?"#define GAMMA_OUTPUT":"",Ob.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,"#define MAX_BONES "+g.maxBones,g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.vertexColors?"#define USE_COLOR":"",g.skinning?"#define USE_SKINNING":"",g.useVertexTexture?"#define BONE_TEXTURE":"",g.morphTargets?"#define USE_MORPHTARGETS":"",g.morphNormals?"#define USE_MORPHNORMALS":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+p:"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",g.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),s=["precision "+Ab+" float;","precision "+Ab+" int;",g.bumpMap||g.normalMap?"#extension GL_OES_standard_derivatives : enable":"",q,"#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_HEMI_LIGHTS "+g.maxHemiLights,"#define MAX_SHADOWS "+g.maxShadows,g.alphaTest?"#define ALPHATEST "+g.alphaTest:"",Ob.gammaInput?"#define GAMMA_INPUT":"",Ob.gammaOutput?"#define GAMMA_OUTPUT":"",Ob.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",g.useFog&&g.fog?"#define USE_FOG":"",g.useFog&&g.fogExp?"#define FOG_EXP2":"",g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.bumpMap?"#define USE_BUMPMAP":"",g.normalMap?"#define USE_NORMALMAP":"",g.specularMap?"#define USE_SPECULARMAP":"",g.vertexColors?"#define USE_COLOR":"",g.metal?"#define METAL":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.flipSided?"#define FLIP_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapEnabled?"#define "+p:"",g.shadowMapDebug?"#define shadowMapDebug":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),t=jb("vertex",r+c),u=jb("fragment",s+b);
Ib.attachShader(l,t),Ib.attachShader(l,u),h&&Ib.bindAttribLocation(l,0,h),Ib.linkProgram(l),Ib.getProgramParameter(l,Ib.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+Ib.getProgramParameter(l,Ib.VALIDATE_STATUS)+", gl error ["+Ib.getError()+"]"),console.error("Program Info Log: "+Ib.getProgramInfoLog(l))),Ib.deleteShader(u),Ib.deleteShader(t),l.uniforms={},l.attributes={};var v,w,x,y;v=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],g.useVertexTexture?(v.push("boneTexture"),v.push("boneTextureWidth"),v.push("boneTextureHeight")):v.push("boneGlobalMatrices");for(w in d)v.push(w);for(gb(l,v),v=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],y=0;y<g.maxMorphTargets;y++)v.push("morphTarget"+y);for(y=0;y<g.maxMorphNormals;y++)v.push("morphNormal"+y);for(x in e)v.push(x);return hb(l,v),l.id=Qb++,Pb.push({program:l,code:m,usedTimes:1}),Ob.info.memory.programs=Pb.length,l}function gb(a,b){var c,d,e;for(c=0,d=b.length;d>c;c++)e=b[c],a.uniforms[e]=Ib.getUniformLocation(a,e)}function hb(a,b){var c,d,e;for(c=0,d=b.length;d>c;c++)e=b[c],a.attributes[e]=Ib.getAttribLocation(a,e)}function ib(a){for(var b=a.split("\n"),c=0,d=b.length;d>c;c++)b[c]=c+1+": "+b[c];return b.join("\n")}function jb(a,b){var c;return"fragment"===a?c=Ib.createShader(Ib.FRAGMENT_SHADER):"vertex"===a&&(c=Ib.createShader(Ib.VERTEX_SHADER)),Ib.shaderSource(c,b),Ib.compileShader(c),Ib.getShaderParameter(c,Ib.COMPILE_STATUS)?c:(console.error(Ib.getShaderInfoLog(c)),console.error(ib(b)),null)}function kb(a){return 0===(a&a-1)}function lb(a,b,c){c?(Ib.texParameteri(a,Ib.TEXTURE_WRAP_S,tb(b.wrapS)),Ib.texParameteri(a,Ib.TEXTURE_WRAP_T,tb(b.wrapT)),Ib.texParameteri(a,Ib.TEXTURE_MAG_FILTER,tb(b.magFilter)),Ib.texParameteri(a,Ib.TEXTURE_MIN_FILTER,tb(b.minFilter))):(Ib.texParameteri(a,Ib.TEXTURE_WRAP_S,Ib.CLAMP_TO_EDGE),Ib.texParameteri(a,Ib.TEXTURE_WRAP_T,Ib.CLAMP_TO_EDGE),Ib.texParameteri(a,Ib.TEXTURE_MAG_FILTER,sb(b.magFilter)),Ib.texParameteri(a,Ib.TEXTURE_MIN_FILTER,sb(b.minFilter))),Mb&&b.type!==THREE.FloatType&&(b.anisotropy>1||b.__oldAnisotropy)&&(Ib.texParameterf(a,Mb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,zc)),b.__oldAnisotropy=b.anisotropy)}function mb(a,b){if(a.width<=b&&a.height<=b)return a;var c=Math.max(a.width,a.height),d=Math.floor(a.width*b/c),e=Math.floor(a.height*b/c),f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");return g.drawImage(a,0,0,a.width,a.height,0,0,d,e),f}function nb(a,b){if(6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||(a.addEventListener("dispose",Jc),a.image.__webglTextureCube=Ib.createTexture(),Ob.info.memory.textures++),Ib.activeTexture(Ib.TEXTURE0+b),Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,a.image.__webglTextureCube),Ib.pixelStorei(Ib.UNPACK_FLIP_Y_WEBGL,a.flipY);for(var c=a instanceof THREE.CompressedTexture,d=[],e=0;6>e;e++)d[e]=Ob.autoScaleCubemaps&&!c?mb(a.image[e],yc):a.image[e];var f=d[0],g=kb(f.width)&&kb(f.height),h=tb(a.format),i=tb(a.type);lb(Ib.TEXTURE_CUBE_MAP,a,g);for(var e=0;6>e;e++)if(c)for(var j,k=d[e].mipmaps,l=0,m=k.length;m>l;l++)j=k[l],a.format!==THREE.RGBAFormat?Ib.compressedTexImage2D(Ib.TEXTURE_CUBE_MAP_POSITIVE_X+e,l,h,j.width,j.height,0,j.data):Ib.texImage2D(Ib.TEXTURE_CUBE_MAP_POSITIVE_X+e,l,h,j.width,j.height,0,h,i,j.data);else Ib.texImage2D(Ib.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,h,h,i,d[e]);a.generateMipmaps&&g&&Ib.generateMipmap(Ib.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else Ib.activeTexture(Ib.TEXTURE0+b),Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}function ob(a,b){Ib.activeTexture(Ib.TEXTURE0+b),Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,a.__webglTexture)}function pb(a,b,c){Ib.bindFramebuffer(Ib.FRAMEBUFFER,a),Ib.framebufferTexture2D(Ib.FRAMEBUFFER,Ib.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function qb(a,b){Ib.bindRenderbuffer(Ib.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(Ib.renderbufferStorage(Ib.RENDERBUFFER,Ib.DEPTH_COMPONENT16,b.width,b.height),Ib.framebufferRenderbuffer(Ib.FRAMEBUFFER,Ib.DEPTH_ATTACHMENT,Ib.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(Ib.renderbufferStorage(Ib.RENDERBUFFER,Ib.DEPTH_STENCIL,b.width,b.height),Ib.framebufferRenderbuffer(Ib.FRAMEBUFFER,Ib.DEPTH_STENCIL_ATTACHMENT,Ib.RENDERBUFFER,a)):Ib.renderbufferStorage(Ib.RENDERBUFFER,Ib.RGBA4,b.width,b.height)}function rb(a){a instanceof THREE.WebGLRenderTargetCube?(Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,a.__webglTexture),Ib.generateMipmap(Ib.TEXTURE_CUBE_MAP),Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,null)):(Ib.bindTexture(Ib.TEXTURE_2D,a.__webglTexture),Ib.generateMipmap(Ib.TEXTURE_2D),Ib.bindTexture(Ib.TEXTURE_2D,null))}function sb(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?Ib.NEAREST:Ib.LINEAR}function tb(a){if(a===THREE.RepeatWrapping)return Ib.REPEAT;if(a===THREE.ClampToEdgeWrapping)return Ib.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return Ib.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return Ib.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return Ib.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return Ib.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return Ib.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return Ib.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return Ib.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return Ib.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return Ib.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return Ib.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return Ib.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return Ib.BYTE;if(a===THREE.ShortType)return Ib.SHORT;if(a===THREE.UnsignedShortType)return Ib.UNSIGNED_SHORT;if(a===THREE.IntType)return Ib.INT;if(a===THREE.UnsignedIntType)return Ib.UNSIGNED_INT;if(a===THREE.FloatType)return Ib.FLOAT;if(a===THREE.AlphaFormat)return Ib.ALPHA;if(a===THREE.RGBFormat)return Ib.RGB;if(a===THREE.RGBAFormat)return Ib.RGBA;if(a===THREE.LuminanceFormat)return Ib.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return Ib.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return Ib.FUNC_ADD;if(a===THREE.SubtractEquation)return Ib.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return Ib.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return Ib.ZERO;if(a===THREE.OneFactor)return Ib.ONE;if(a===THREE.SrcColorFactor)return Ib.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return Ib.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return Ib.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return Ib.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return Ib.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return Ib.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return Ib.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return Ib.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return Ib.SRC_ALPHA_SATURATE;if(void 0!==Nb){if(a===THREE.RGB_S3TC_DXT1_Format)return Nb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Nb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Nb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Nb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function ub(a){if(Bc&&a&&a.useVertexTexture)return 1024;var b=Ib.getParameter(Ib.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((b-20)/4),d=c;return void 0!==a&&a instanceof THREE.SkinnedMesh&&(d=Math.min(a.bones.length,d),d<a.bones.length&&console.warn("WebGLRenderer: too many bones - "+a.bones.length+", this GPU supports just "+d+" (try OpenGL instead of ANGLE)")),d}function vb(a){for(var b=0,c=0,d=0,e=0,f=0,g=a.length;g>f;f++){var h=a[f];h.onlyShadow||(h instanceof THREE.DirectionalLight&&b++,h instanceof THREE.PointLight&&c++,h instanceof THREE.SpotLight&&d++,h instanceof THREE.HemisphereLight&&e++)}return{directional:b,point:c,spot:d,hemi:e}}function wb(a){for(var b=0,c=0,d=a.length;d>c;c++){var e=a[c];e.castShadow&&(e instanceof THREE.SpotLight&&b++,e instanceof THREE.DirectionalLight&&!e.shadowCascade&&b++)}return b}function xb(){try{var a={alpha:Bb,premultipliedAlpha:Cb,antialias:Db,stencil:Eb,preserveDrawingBuffer:Fb};if(Ib=zb.getContext("webgl",a)||zb.getContext("experimental-webgl",a),null===Ib)throw"Error creating WebGL context."}catch(b){console.error(b)}Jb=Ib.getExtension("OES_texture_float"),Kb=Ib.getExtension("OES_texture_float_linear"),Lb=Ib.getExtension("OES_standard_derivatives"),Mb=Ib.getExtension("EXT_texture_filter_anisotropic")||Ib.getExtension("MOZ_EXT_texture_filter_anisotropic")||Ib.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Nb=Ib.getExtension("WEBGL_compressed_texture_s3tc")||Ib.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Ib.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),Jb||console.log("THREE.WebGLRenderer: Float textures not supported."),Lb||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),Mb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Nb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===Ib.getShaderPrecisionFormat&&(Ib.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function yb(){Ib.clearColor(0,0,0,1),Ib.clearDepth(1),Ib.clearStencil(0),Ib.enable(Ib.DEPTH_TEST),Ib.depthFunc(Ib.LEQUAL),Ib.frontFace(Ib.CCW),Ib.cullFace(Ib.BACK),Ib.enable(Ib.CULL_FACE),Ib.enable(Ib.BLEND),Ib.blendEquation(Ib.FUNC_ADD),Ib.blendFunc(Ib.SRC_ALPHA,Ib.ONE_MINUS_SRC_ALPHA),Ib.viewport(ic,jc,kc,lc),Ib.clearColor(Gb.r,Gb.g,Gb.b,Hb)}console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var zb=void 0!==a.canvas?a.canvas:document.createElement("canvas"),Ab=void 0!==a.precision?a.precision:"highp",Bb=void 0!==a.alpha?a.alpha:!1,Cb=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,Db=void 0!==a.antialias?a.antialias:!1,Eb=void 0!==a.stencil?a.stencil:!0,Fb=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,Gb=new THREE.Color(0),Hb=0;this.domElement=zb,this.context=null,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Ib,Jb,Kb,Lb,Mb,Nb,Ob=this,Pb=[],Qb=0,Rb=null,Sb=null,Tb=-1,Ub=null,Vb=null,Wb=0,Xb=0,Yb=-1,Zb=-1,$b=-1,_b=-1,ac=-1,bc=-1,cc=-1,dc=-1,ec=null,fc=null,gc=null,hc=null,ic=0,jc=0,kc=zb.width,lc=zb.height,mc=0,nc=0,oc={},pc=new THREE.Frustum,qc=new THREE.Matrix4,rc=new THREE.Matrix4,sc=new THREE.Vector3,tc=new THREE.Vector3,uc=!0,vc={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};xb(),yb(),this.context=Ib;var wc=Ib.getParameter(Ib.MAX_TEXTURE_IMAGE_UNITS),xc=Ib.getParameter(Ib.MAX_VERTEX_TEXTURE_IMAGE_UNITS),yc=(Ib.getParameter(Ib.MAX_TEXTURE_SIZE),Ib.getParameter(Ib.MAX_CUBE_MAP_TEXTURE_SIZE)),zc=Mb?Ib.getParameter(Mb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ac=xc>0,Bc=Ac&&Jb,Cc=(Nb?Ib.getParameter(Ib.COMPRESSED_TEXTURE_FORMATS):[],Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.HIGH_FLOAT)),Dc=Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.MEDIUM_FLOAT),Ec=(Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.LOW_FLOAT),Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.HIGH_FLOAT)),Fc=Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.MEDIUM_FLOAT),Gc=(Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.LOW_FLOAT),Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.HIGH_INT),Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.MEDIUM_INT),Ib.getShaderPrecisionFormat(Ib.VERTEX_SHADER,Ib.LOW_INT),Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.HIGH_INT),Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.MEDIUM_INT),Ib.getShaderPrecisionFormat(Ib.FRAGMENT_SHADER,Ib.LOW_INT),Cc.precision>0&&Ec.precision>0),Hc=Dc.precision>0&&Fc.precision>0;"highp"!==Ab||Gc||(Hc?(Ab="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(Ab="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==Ab||Hc||(Ab="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Ib},this.supportsVertexTextures=function(){return Ac},this.supportsFloatTextures=function(){return Jb},this.supportsStandardDerivatives=function(){return Lb},this.supportsCompressedTextureS3TC=function(){return Nb},this.getMaxAnisotropy=function(){return zc},this.getPrecision=function(){return Ab},this.setSize=function(a,b,c){zb.width=a*this.devicePixelRatio,zb.height=b*this.devicePixelRatio,1!==this.devicePixelRatio&&c!==!1&&(zb.style.width=a+"px",zb.style.height=b+"px"),this.setViewport(0,0,zb.width,zb.height)},this.setViewport=function(a,b,c,d){ic=void 0!==a?a:0,jc=void 0!==b?b:0,kc=void 0!==c?c:zb.width,lc=void 0!==d?d:zb.height,Ib.viewport(ic,jc,kc,lc)},this.setScissor=function(a,b,c,d){Ib.scissor(a,b,c,d)},this.enableScissorTest=function(a){a?Ib.enable(Ib.SCISSOR_TEST):Ib.disable(Ib.SCISSOR_TEST)},this.setClearColor=function(a,b){Gb.set(a),Hb=void 0!==b?b:1,Ib.clearColor(Gb.r,Gb.g,Gb.b,Hb)},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getClearColor=function(){return Gb},this.getClearAlpha=function(){return Hb},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=Ib.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=Ib.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=Ib.STENCIL_BUFFER_BIT),Ib.clear(d)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.updateShadowMap=function(a,b){Rb=null,$b=-1,cc=-1,dc=-1,Ub=-1,Tb=-1,uc=!0,Yb=-1,Zb=-1,this.shadowMapPlugin.update(a,b)};var Ic=function(a){var b=a.target;b.removeEventListener("dispose",Ic),Nc(b)},Jc=function(a){var b=a.target;b.removeEventListener("dispose",Jc),Oc(b),Ob.info.memory.textures--},Kc=function(a){var b=a.target;b.removeEventListener("dispose",Kc),Pc(b),Ob.info.memory.textures--},Lc=function(a){var b=a.target;b.removeEventListener("dispose",Lc),Qc(b)},Mc=function(a){if(void 0!==a.__webglVertexBuffer&&Ib.deleteBuffer(a.__webglVertexBuffer),void 0!==a.__webglNormalBuffer&&Ib.deleteBuffer(a.__webglNormalBuffer),void 0!==a.__webglTangentBuffer&&Ib.deleteBuffer(a.__webglTangentBuffer),void 0!==a.__webglColorBuffer&&Ib.deleteBuffer(a.__webglColorBuffer),void 0!==a.__webglUVBuffer&&Ib.deleteBuffer(a.__webglUVBuffer),void 0!==a.__webglUV2Buffer&&Ib.deleteBuffer(a.__webglUV2Buffer),void 0!==a.__webglSkinIndicesBuffer&&Ib.deleteBuffer(a.__webglSkinIndicesBuffer),void 0!==a.__webglSkinWeightsBuffer&&Ib.deleteBuffer(a.__webglSkinWeightsBuffer),void 0!==a.__webglFaceBuffer&&Ib.deleteBuffer(a.__webglFaceBuffer),void 0!==a.__webglLineBuffer&&Ib.deleteBuffer(a.__webglLineBuffer),void 0!==a.__webglLineDistanceBuffer&&Ib.deleteBuffer(a.__webglLineDistanceBuffer),void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)Ib.deleteBuffer(a.__webglCustomAttributesList[b].buffer);Ob.info.memory.geometries--},Nc=function(a){if(a.__webglInit=void 0,a instanceof THREE.BufferGeometry){var b=a.attributes;for(var c in b)void 0!==b[c].buffer&&Ib.deleteBuffer(b[c].buffer);Ob.info.memory.geometries--}else if(void 0!==a.geometryGroups)for(var d in a.geometryGroups){var e=a.geometryGroups[d];if(void 0!==e.numMorphTargets)for(var f=0,g=e.numMorphTargets;g>f;f++)Ib.deleteBuffer(e.__webglMorphTargetsBuffers[f]);if(void 0!==e.numMorphNormals)for(var f=0,g=e.numMorphNormals;g>f;f++)Ib.deleteBuffer(e.__webglMorphNormalsBuffers[f]);Mc(e)}else Mc(a)},Oc=function(a){if(a.image&&a.image.__webglTextureCube)Ib.deleteTexture(a.image.__webglTextureCube);else{if(!a.__webglInit)return;a.__webglInit=!1,Ib.deleteTexture(a.__webglTexture)}},Pc=function(a){if(a&&a.__webglTexture)if(Ib.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)Ib.deleteFramebuffer(a.__webglFramebuffer[b]),Ib.deleteRenderbuffer(a.__webglRenderbuffer[b]);else Ib.deleteFramebuffer(a.__webglFramebuffer),Ib.deleteRenderbuffer(a.__webglRenderbuffer)},Qc=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=Pb.length;d>c;c++)if(e=Pb[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=Pb.length;d>c;c++)e=Pb[c],e.program!==b&&g.push(e);Pb=g,Ib.deleteProgram(b),Ob.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=Ib.createBuffer()),a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=Ib.createBuffer()),a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=Ib.createBuffer()),a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=Ib.createBuffer()),a.hasPositions&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglVertexBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,a.positionArray,Ib.DYNAMIC_DRAW),Ib.enableVertexAttribArray(b.attributes.position),Ib.vertexAttribPointer(b.attributes.position,3,Ib.FLOAT,!1,0,0)),a.hasNormals){if(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglNormalBuffer),c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=3*a.count;for(q=0;r>q;q+=9)p=a.normalArray,g=p[q],j=p[q+1],m=p[q+2],h=p[q+3],k=p[q+4],n=p[q+5],i=p[q+6],l=p[q+7],o=p[q+8],d=(g+h+i)/3,e=(j+k+l)/3,f=(m+n+o)/3,p[q]=d,p[q+1]=e,p[q+2]=f,p[q+3]=d,p[q+4]=e,p[q+5]=f,p[q+6]=d,p[q+7]=e,p[q+8]=f}Ib.bufferData(Ib.ARRAY_BUFFER,a.normalArray,Ib.DYNAMIC_DRAW),Ib.enableVertexAttribArray(b.attributes.normal),Ib.vertexAttribPointer(b.attributes.normal,3,Ib.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglUvBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,a.uvArray,Ib.DYNAMIC_DRAW),Ib.enableVertexAttribArray(b.attributes.uv),Ib.vertexAttribPointer(b.attributes.uv,2,Ib.FLOAT,!1,0,0)),a.hasColors&&c.vertexColors!==THREE.NoColors&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,a.__webglColorBuffer),Ib.bufferData(Ib.ARRAY_BUFFER,a.colorArray,Ib.DYNAMIC_DRAW),Ib.enableVertexAttribArray(b.attributes.color),Ib.vertexAttribPointer(b.attributes.color,3,Ib.FLOAT,!1,0,0)),Ib.drawArrays(Ib.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,i,j,k=N(a,b,c,d,f),l=k.attributes,m=e.attributes,n=!1,o=d.wireframe?1:0,p=16777215*e.id+2*k.id+o;if(p!==Ub&&(Ub=p,n=!0),n&&t(),f instanceof THREE.Mesh){var q=m.index;if(q){var r=e.offsets;r.length>1&&(n=!0);for(var u=0,v=r.length;v>u;u++){var w=r[u].index;if(n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,Ib.bindBuffer(Ib.ARRAY_BUFFER,g.buffer),s(i),Ib.vertexAttribPointer(i,j,Ib.FLOAT,!1,0,w*j*4)):d.defaultAttributeValues&&(2===d.defaultAttributeValues[h].length?Ib.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&Ib.vertexAttrib3fv(i,d.defaultAttributeValues[h])));Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,q.buffer)}Ib.drawElements(Ib.TRIANGLES,r[u].count,Ib.UNSIGNED_SHORT,2*r[u].start),Ob.info.render.calls++,Ob.info.render.vertices+=r[u].count,Ob.info.render.faces+=r[u].count/3}}else{if(n)for(h in l)"index"!==h&&(i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,Ib.bindBuffer(Ib.ARRAY_BUFFER,g.buffer),s(i),Ib.vertexAttribPointer(i,j,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?Ib.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&Ib.vertexAttrib3fv(i,d.defaultAttributeValues[h]))));var x=e.attributes.position;Ib.drawArrays(Ib.TRIANGLES,0,x.numItems/3),Ob.info.render.calls++,Ob.info.render.vertices+=x.numItems/3,Ob.info.render.faces+=x.numItems/3/3}}else if(f instanceof THREE.ParticleSystem){if(n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,Ib.bindBuffer(Ib.ARRAY_BUFFER,g.buffer),s(i),Ib.vertexAttribPointer(i,j,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?Ib.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&Ib.vertexAttrib3fv(i,d.defaultAttributeValues[h])));var x=m.position;Ib.drawArrays(Ib.POINTS,0,x.numItems/3),Ob.info.render.calls++,Ob.info.render.points+=x.numItems/3}}else if(f instanceof THREE.Line&&n){for(h in l)i=l[h],g=m[h],i>=0&&(g?(j=g.itemSize,Ib.bindBuffer(Ib.ARRAY_BUFFER,g.buffer),s(i),Ib.vertexAttribPointer(i,j,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[h]&&(2===d.defaultAttributeValues[h].length?Ib.vertexAttrib2fv(i,d.defaultAttributeValues[h]):3===d.defaultAttributeValues[h].length&&Ib.vertexAttrib3fv(i,d.defaultAttributeValues[h])));var y=f.type===THREE.LineStrip?Ib.LINE_STRIP:Ib.LINES;cb(d.linewidth);var x=m.position;Ib.drawArrays(y,0,x.numItems/3),Ob.info.render.calls++,Ob.info.render.points+=x.numItems}}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,i,j=N(a,b,c,d,f),k=j.attributes,l=!1,m=d.wireframe?1:0,n=16777215*e.id+2*j.id+m;if(n!==Ub&&(Ub=n,l=!0),l&&t(),!d.morphTargets&&k.position>=0?l&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglVertexBuffer),s(k.position),Ib.vertexAttribPointer(k.position,3,Ib.FLOAT,!1,0,0)):f.morphTargetBase&&u(d,e,f),l){if(e.__webglCustomAttributesList)for(h=0,i=e.__webglCustomAttributesList.length;i>h;h++)g=e.__webglCustomAttributesList[h],k[g.buffer.belongsToAttribute]>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,g.buffer),s(k[g.buffer.belongsToAttribute]),Ib.vertexAttribPointer(k[g.buffer.belongsToAttribute],g.size,Ib.FLOAT,!1,0,0));k.color>=0&&(f.geometry.colors.length>0||f.geometry.faces.length>0?(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglColorBuffer),s(k.color),Ib.vertexAttribPointer(k.color,3,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&Ib.vertexAttrib3fv(k.color,d.defaultAttributeValues.color)),k.normal>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglNormalBuffer),s(k.normal),Ib.vertexAttribPointer(k.normal,3,Ib.FLOAT,!1,0,0)),k.tangent>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglTangentBuffer),s(k.tangent),Ib.vertexAttribPointer(k.tangent,4,Ib.FLOAT,!1,0,0)),k.uv>=0&&(f.geometry.faceVertexUvs[0]?(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglUVBuffer),s(k.uv),Ib.vertexAttribPointer(k.uv,2,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&Ib.vertexAttrib2fv(k.uv,d.defaultAttributeValues.uv)),k.uv2>=0&&(f.geometry.faceVertexUvs[1]?(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglUV2Buffer),s(k.uv2),Ib.vertexAttribPointer(k.uv2,2,Ib.FLOAT,!1,0,0)):d.defaultAttributeValues&&Ib.vertexAttrib2fv(k.uv2,d.defaultAttributeValues.uv2)),d.skinning&&k.skinIndex>=0&&k.skinWeight>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),s(k.skinIndex),Ib.vertexAttribPointer(k.skinIndex,4,Ib.FLOAT,!1,0,0),Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),s(k.skinWeight),Ib.vertexAttribPointer(k.skinWeight,4,Ib.FLOAT,!1,0,0)),k.lineDistance>=0&&(Ib.bindBuffer(Ib.ARRAY_BUFFER,e.__webglLineDistanceBuffer),s(k.lineDistance),Ib.vertexAttribPointer(k.lineDistance,1,Ib.FLOAT,!1,0,0))}if(f instanceof THREE.Mesh)d.wireframe?(cb(d.wireframeLinewidth),l&&Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Ib.drawElements(Ib.LINES,e.__webglLineCount,Ib.UNSIGNED_SHORT,0)):(l&&Ib.bindBuffer(Ib.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Ib.drawElements(Ib.TRIANGLES,e.__webglFaceCount,Ib.UNSIGNED_SHORT,0)),Ob.info.render.calls++,Ob.info.render.vertices+=e.__webglFaceCount,Ob.info.render.faces+=e.__webglFaceCount/3;else if(f instanceof THREE.Line){var o=f.type===THREE.LineStrip?Ib.LINE_STRIP:Ib.LINES;cb(d.linewidth),Ib.drawArrays(o,0,e.__webglLineCount),Ob.info.render.calls++}else f instanceof THREE.ParticleSystem&&(Ib.drawArrays(Ib.POINTS,0,e.__webglParticleCount),Ob.info.render.calls++,Ob.info.render.points+=e.__webglParticleCount)}},this.render=function(a,b,c,d){if(b instanceof THREE.Camera==!1)return console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."),void 0;var e,f,g,h,i,j=a.__lights,k=a.fog;for(Tb=-1,uc=!0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),qc.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),pc.setFromMatrix(qc),this.autoUpdateObjects&&this.initWebGLObjects(a),x(this.renderPluginsPre,a,b),Ob.info.render.calls=0,Ob.info.render.vertices=0,Ob.info.render.faces=0,Ob.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=a.__webglObjects,e=0,f=i.length;f>e;e++)g=i[e],h=g.object,g.id=e,g.render=!1,h.visible&&((h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)&&h.frustumCulled&&!pc.intersectsObject(h)||($(h,b),B(g),g.render=!0,this.sortObjects===!0&&(null!==h.renderDepth?g.z=h.renderDepth:(sc.getPositionFromMatrix(h.matrixWorld),sc.applyProjection(qc),g.z=sc.z))));for(this.sortObjects&&i.sort(v),i=a.__webglObjectsImmediate,e=0,f=i.length;f>e;e++)g=i[e],h=g.object,h.visible&&($(h,b),A(g));if(a.overrideMaterial){var l=a.overrideMaterial;this.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),this.setDepthTest(l.depthTest),this.setDepthWrite(l.depthWrite),db(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits),y(a.__webglObjects,!1,"",b,j,k,!0,l),z(a.__webglObjectsImmediate,"",b,j,k,!1,l)}else{var l=null;this.setBlending(THREE.NoBlending),y(a.__webglObjects,!0,"opaque",b,j,k,!1,l),z(a.__webglObjectsImmediate,"opaque",b,j,k,!1,l),y(a.__webglObjects,!1,"transparent",b,j,k,!0,l),z(a.__webglObjectsImmediate,"transparent",b,j,k,!0,l)}x(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&rb(c),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=N(a,b,c,d,e);Ub=-1,Ob.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,Ib,pc):e.render(function(a){Ob.renderBufferImmediate(a,f,d)})},this.initWebGLObjects=function(a){for(a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;)D(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)J(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,c=a.__webglObjects.length;c>b;b++){var d=a.__webglObjects[b].object;void 0===d.__webglInit&&(void 0!==d.__webglActive&&J(d,a),D(d,a)),G(d)}},this.initMaterial=function(a,b,c,d){a.addEventListener("dispose",Lc);var e,f,g,h,i,j,k;a instanceof THREE.MeshDepthMaterial?k="depth":a instanceof THREE.MeshNormalMaterial?k="normal":a instanceof THREE.MeshBasicMaterial?k="basic":a instanceof THREE.MeshLambertMaterial?k="lambert":a instanceof THREE.MeshPhongMaterial?k="phong":a instanceof THREE.LineBasicMaterial?k="basic":a instanceof THREE.LineDashedMaterial?k="dashed":a instanceof THREE.ParticleSystemMaterial&&(k="particle_basic"),k&&M(a,THREE.ShaderLib[k]),h=vb(b),j=wb(b),i=ub(d),g={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:i,useVertexTexture:Bc&&d&&d.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:j,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},a.program=fb(k,a.fragmentShader,a.vertexShader,a.uniforms,a.attributes,a.defines,g,a.index0AttributeName);var l=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;var m,n="morphTarget";for(f=0;f<this.maxMorphTargets;f++)m=n+f,l[m]>=0&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;var m,n="morphNormal";for(f=0;f<this.maxMorphNormals;f++)m=n+f,l[m]>=0&&a.numSupportedMorphNormals++}a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])},this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?Ib.disable(Ib.CULL_FACE):(b===THREE.FrontFaceDirectionCW?Ib.frontFace(Ib.CW):Ib.frontFace(Ib.CCW),a===THREE.CullFaceBack?Ib.cullFace(Ib.BACK):a===THREE.CullFaceFront?Ib.cullFace(Ib.FRONT):Ib.cullFace(Ib.FRONT_AND_BACK),Ib.enable(Ib.CULL_FACE))},this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,c=a.side===THREE.BackSide;Yb!==b&&(b?Ib.disable(Ib.CULL_FACE):Ib.enable(Ib.CULL_FACE),Yb=b),Zb!==c&&(c?Ib.frontFace(Ib.CW):Ib.frontFace(Ib.CCW),Zb=c)},this.setDepthTest=function(a){cc!==a&&(a?Ib.enable(Ib.DEPTH_TEST):Ib.disable(Ib.DEPTH_TEST),cc=a)},this.setDepthWrite=function(a){dc!==a&&(Ib.depthMask(a),dc=a)},this.setBlending=function(a,b,c,d){a!==$b&&(a===THREE.NoBlending?Ib.disable(Ib.BLEND):a===THREE.AdditiveBlending?(Ib.enable(Ib.BLEND),Ib.blendEquation(Ib.FUNC_ADD),Ib.blendFunc(Ib.SRC_ALPHA,Ib.ONE)):a===THREE.SubtractiveBlending?(Ib.enable(Ib.BLEND),Ib.blendEquation(Ib.FUNC_ADD),Ib.blendFunc(Ib.ZERO,Ib.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(Ib.enable(Ib.BLEND),Ib.blendEquation(Ib.FUNC_ADD),Ib.blendFunc(Ib.ZERO,Ib.SRC_COLOR)):a===THREE.CustomBlending?Ib.enable(Ib.BLEND):(Ib.enable(Ib.BLEND),Ib.blendEquationSeparate(Ib.FUNC_ADD,Ib.FUNC_ADD),Ib.blendFuncSeparate(Ib.SRC_ALPHA,Ib.ONE_MINUS_SRC_ALPHA,Ib.ONE,Ib.ONE_MINUS_SRC_ALPHA)),$b=a),a===THREE.CustomBlending?(b!==_b&&(Ib.blendEquation(tb(b)),_b=b),(c!==ac||d!==bc)&&(Ib.blendFunc(tb(c),tb(d)),ac=c,bc=d)):(_b=null,ac=null,bc=null)},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Jc),a.__webglTexture=Ib.createTexture(),Ob.info.memory.textures++),Ib.activeTexture(Ib.TEXTURE0+b),Ib.bindTexture(Ib.TEXTURE_2D,a.__webglTexture),Ib.pixelStorei(Ib.UNPACK_FLIP_Y_WEBGL,a.flipY),Ib.pixelStorei(Ib.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),Ib.pixelStorei(Ib.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=kb(c.width)&&kb(c.height),e=tb(a.format),f=tb(a.type);lb(Ib.TEXTURE_2D,a,d);var g,h=a.mipmaps;if(a instanceof THREE.DataTexture)if(h.length>0&&d){for(var i=0,j=h.length;j>i;i++)g=h[i],Ib.texImage2D(Ib.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);a.generateMipmaps=!1}else Ib.texImage2D(Ib.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture)for(var i=0,j=h.length;j>i;i++)g=h[i],a.format!==THREE.RGBAFormat?Ib.compressedTexImage2D(Ib.TEXTURE_2D,i,e,g.width,g.height,0,g.data):Ib.texImage2D(Ib.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);else if(h.length>0&&d){for(var i=0,j=h.length;j>i;i++)g=h[i],Ib.texImage2D(Ib.TEXTURE_2D,i,e,e,f,g);a.generateMipmaps=!1}else Ib.texImage2D(Ib.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&Ib.generateMipmap(Ib.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else Ib.activeTexture(Ib.TEXTURE0+b),Ib.bindTexture(Ib.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.addEventListener("dispose",Kc),a.__webglTexture=Ib.createTexture(),Ob.info.memory.textures++;
var c=kb(a.width)&&kb(a.height),d=tb(a.format),e=tb(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,a.__webglTexture),lb(Ib.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++)a.__webglFramebuffer[f]=Ib.createFramebuffer(),a.__webglRenderbuffer[f]=Ib.createRenderbuffer(),Ib.texImage2D(Ib.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null),pb(a.__webglFramebuffer[f],a,Ib.TEXTURE_CUBE_MAP_POSITIVE_X+f),qb(a.__webglRenderbuffer[f],a);c&&Ib.generateMipmap(Ib.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=Ib.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:Ib.createRenderbuffer(),Ib.bindTexture(Ib.TEXTURE_2D,a.__webglTexture),lb(Ib.TEXTURE_2D,a,c),Ib.texImage2D(Ib.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),pb(a.__webglFramebuffer,a,Ib.TEXTURE_2D),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?Ib.framebufferRenderbuffer(Ib.FRAMEBUFFER,Ib.DEPTH_ATTACHMENT,Ib.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&Ib.framebufferRenderbuffer(Ib.FRAMEBUFFER,Ib.DEPTH_STENCIL_ATTACHMENT,Ib.RENDERBUFFER,a.__webglRenderbuffer):qb(a.__webglRenderbuffer,a),c&&Ib.generateMipmap(Ib.TEXTURE_2D);b?Ib.bindTexture(Ib.TEXTURE_CUBE_MAP,null):Ib.bindTexture(Ib.TEXTURE_2D,null),Ib.bindRenderbuffer(Ib.RENDERBUFFER,null),Ib.bindFramebuffer(Ib.FRAMEBUFFER,null)}var g,h,i,j,k;a?(g=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,h=a.width,i=a.height,j=0,k=0):(g=null,h=kc,i=lc,j=ic,k=jc),g!==Sb&&(Ib.bindFramebuffer(Ib.FRAMEBUFFER,g),Ib.viewport(j,k,h,i),Sb=g),mc=h,nc=i},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0,this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a.generateMipmaps=this.generateMipmaps,a.shareDepthFrom=this.shareDepthFrom,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(a,b,c){var d,e,f=a.vertices.length,g=(a.faceVertexUvs[0].length,b instanceof THREE.Mesh?b.geometry:b),h=a.vertices,i=g.vertices,j=a.faces,k=g.faces,l=a.faceVertexUvs[0],m=g.faceVertexUvs[0];void 0===c&&(c=0),b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,e=(new THREE.Matrix3).getNormalMatrix(d));for(var n=0,o=i.length;o>n;n++){var p=i[n],q=p.clone();d&&q.applyMatrix4(d),h.push(q)}for(n=0,o=k.length;o>n;n++){var r,s,t,u=k[n],v=u.vertexNormals,w=u.vertexColors;r=new THREE.Face3(u.a+f,u.b+f,u.c+f),r.normal.copy(u.normal),e&&r.normal.applyMatrix3(e).normalize();for(var x=0,y=v.length;y>x;x++)s=v[x].clone(),e&&s.applyMatrix3(e).normalize(),r.vertexNormals.push(s);r.color.copy(u.color);for(var x=0,y=w.length;y>x;x++)t=w[x],r.vertexColors.push(t.clone());r.materialIndex=u.materialIndex+c,r.centroid.copy(u.centroid),d&&r.centroid.applyMatrix4(d),j.push(r)}for(n=0,o=m.length;o>n;n++){for(var z=m[n],A=[],x=0,y=z.length;y>x;x++)A.push(new THREE.Vector2(z[x].x,z[x].y));l.push(A)}},randomPointInTriangle:function(){var a=new THREE.Vector3;return function(b,c,d){var e=new THREE.Vector3,f=THREE.Math.random16(),g=THREE.Math.random16();f+g>1&&(f=1-f,g=1-g);var h=1-f-g;return e.copy(b),e.multiplyScalar(f),a.copy(c),a.multiplyScalar(g),e.add(a),a.copy(d),a.multiplyScalar(h),e.add(a),e}}(),randomPointInFace:function(a,b){var c,d,e;return c=b.vertices[a.a],d=b.vertices[a.b],e=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(c,d,e)},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(c>d)return c;var e=c+Math.floor((d-c)/2);return m[e]>a?b(c,e-1):m[e]<a?b(e+1,d):e}var c=b(0,m.length-1);return c}var d,e,f,g,h,i=a.faces,j=a.vertices,k=i.length,l=0,m=[];for(e=0;k>e;e++)d=i[e],f=j[d.a],g=j[d.b],h=j[d.c],d._area=THREE.GeometryUtils.triangleArea(f,g,h),l+=d._area,m[e]=l;var n,o,p=[],q={};for(e=0;b>e;e++)n=THREE.Math.random16()*l,o=c(n),p[e]=THREE.GeometryUtils.randomPointInFace(i[o],a,!0),q[o]?q[o]+=1:q[o]=1;return p},triangleArea:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){return a.subVectors(d,c),b.subVectors(e,c),a.cross(b),.5*a.length()}}(),center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.addVectors(b.min,b.max),c.multiplyScalar(-.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},triangulateQuads:function(a){var b,c,d,e,f=[],g=[];for(b=0,c=a.faceVertexUvs.length;c>b;b++)g[b]=[];for(b=0,c=a.faces.length;c>b;b++){var h=a.faces[b];for(f.push(h),d=0,e=a.faceVertexUvs.length;e>d;d++)g[d].push(a.faceVertexUvs[d][b])}a.faces=f,a.faceVertexUvs=g,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()}},THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new THREE.ImageLoader;d.crossOrigin=this.crossOrigin;var e=new THREE.Texture(void 0,b),f=d.load(a,function(){e.needsUpdate=!0,c&&c(e)});return e.image=f,e.sourceFile=a,e},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;return f.onload=function(){var a=f.response,b=THREE.ImageUtils.parseDDS(a,!0);e.format=b.format,e.mipmaps=b.mipmaps,e.image.width=b.width,e.image.height=b.height,e.generateMipmaps=!1,e.needsUpdate=!0,c&&c(e)},f.onerror=d,f.open("GET",a,!0),f.responseType="arraybuffer",f.send(null),e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1;for(var g=0,h=a.length;h>g;++g){var i=new Image;e[g]=i,i.onload=function(){e.loadCount+=1,6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))},i.onerror=d,i.crossOrigin=this.crossOrigin,i.src=a[g]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1;var g=function(a,b){return function(){var d=a.response,g=THREE.ImageUtils.parseDDS(d,!0);b.format=g.format,b.mipmaps=g.mipmaps,b.width=g.width,b.height=g.height,e.loadCount+=1,6===e.loadCount&&(f.format=g.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var h=0,i=a.length;i>h;++h){var j={};e[h]=j;var k=new XMLHttpRequest;k.onload=g(k,j),k.onerror=d;var l=a[h];k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}else{var l=a,k=new XMLHttpRequest;k.onload=function(){var a=k.response,b=THREE.ImageUtils.parseDDS(a,!0);if(b.isCubemap){for(var d=b.mipmaps.length/b.mipmapCount,g=0;d>g;g++){e[g]={mipmaps:[]};for(var h=0;h<b.mipmapCount;h++)e[g].mipmaps.push(b.mipmaps[g*b.mipmapCount+h]),e[g].format=b.format,e[g].width=b.width,e[g].height=b.height}f.format=b.format,f.needsUpdate=!0,c&&c(f)}},k.onerror=d,k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}return f},loadDDSTexture:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1;var g=new XMLHttpRequest;return g.onload=function(){var a=g.response,b=THREE.ImageUtils.parseDDS(a,!0);if(b.isCubemap)for(var d=b.mipmaps.length/b.mipmapCount,h=0;d>h;h++){e[h]={mipmaps:[]};for(var i=0;i<b.mipmapCount;i++)e[h].mipmaps.push(b.mipmaps[h*b.mipmapCount+i]),e[h].format=b.format,e[h].width=b.width,e[h].height=b.height}else f.image.width=b.width,f.image.height=b.height,f.mipmaps=b.mipmaps;f.format=b.format,f.needsUpdate=!0,c&&c(f)},g.onerror=d,g.open("GET",a,!0),g.responseType="arraybuffer",g.send(null),f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function d(a){return String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255)}function e(a,b,c,d){for(var e=c*d*4,f=new Uint8Array(a,b,e),g=new Uint8Array(e),h=0,i=0,j=0;d>j;j++)for(var k=0;c>k;k++){var l=f[i];i++;var m=f[i];i++;var n=f[i];i++;var o=f[i];i++,g[h]=n,h++,g[h]=m,h++,g[h]=l,h++,g[h]=o,h++}return g}var f={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},g=542327876,h=131072,i=512,j=4,k=c("DXT1"),l=c("DXT3"),m=c("DXT5"),n=31,o=0,p=1,q=2,r=3,s=4,t=7,u=20,v=21,w=22,x=23,y=24,z=25,A=26,B=28,C=new Int32Array(a,0,n);if(C[o]!==g)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),f;if(!C[u]&j)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),f;var D,E=C[v],F=!1;switch(E){case k:D=8,f.format=THREE.RGB_S3TC_DXT1_Format;break;case l:D=16,f.format=THREE.RGBA_S3TC_DXT3_Format;break;case m:D=16,f.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==C[w]&&16711680&C[x]&&65280&C[y]&&255&C[z]&&4278190080&C[A]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",d(E)),f;F=!0,D=64,f.format=THREE.RGBAFormat}f.mipmapCount=1,C[q]&h&&b!==!1&&(f.mipmapCount=Math.max(1,C[t])),f.isCubemap=C[B]&i?!0:!1,f.width=C[s],f.height=C[r];for(var G=C[p]+4,H=f.width,I=f.height,J=f.isCubemap?6:1,K=0;J>K;K++){for(var L=0;L<f.mipmapCount;L++){if(F)var M=e(a,G,H,I),N=M.length;else var N=Math.max(4,H)/4*Math.max(4,I)/4*D,M=new Uint8Array(a,G,N);var O={data:M,width:H,height:I};f.mipmaps.push(O),G+=N,H=Math.max(.5*H,1),I=Math.max(.5*I,1)}H=f.width,I=f.height}return f},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b=1|b;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);for(var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data,m=0;f>m;m++)for(var n=0;g>n;n++){var o=0>n-1?0:n-1,p=n+1>g-1?g-1:n+1,q=0>m-1?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[4*(n*f+m)]/255*b];s.push([-1,0,j[4*(n*f+q)]/255*b]),s.push([-1,-1,j[4*(o*f+q)]/255*b]),s.push([0,-1,j[4*(o*f+m)]/255*b]),s.push([1,-1,j[4*(o*f+r)]/255*b]),s.push([1,0,j[4*(n*f+r)]/255*b]),s.push([1,1,j[4*(p*f+r)]/255*b]),s.push([0,1,j[4*(p*f+m)]/255*b]),s.push([-1,1,j[4*(p*f+q)]/255*b]);for(var u=[],v=s.length,w=0;v>w;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}for(var z=[0,0,0],w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=4*(n*f+m);l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+1)/2*255|0,l[A+2]=255*z[2]|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),h=Math.floor(255*c.b),i=0;d>i;i++)e[3*i]=f,e[3*i+1]=g,e[3*i+2]=h;var j=new THREE.DataTexture(e,a,b,THREE.RGBFormat);return j.needsUpdate=!0,j}},THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;e>d;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return a},drawText:function(a){var b,c=this.getFace(),d=this.size/c.resolution,e=0,f=String(a).split(""),g=f.length,h=[];for(b=0;g>b;b++){var i=new THREE.Path,j=this.extractGlyphPoints(f[b],c,d,e,i);e+=j.offset,h.push(j.path)}var k=e/2;return{paths:h,offset:k}},extractGlyphPoints:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[],z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(i=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),k=i.length,l=c,m=c,f=0;k>f;)switch(j=i[f++]){case"m":n=i[f++]*l+d,o=i[f++]*m,e.moveTo(n,o);break;case"l":n=i[f++]*l+d,o=i[f++]*m,e.lineTo(n,o);break;case"q":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*m,e.quadraticCurveTo(t,u,p,q),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;h>=g;g++){var A=g/h;THREE.Shape.Utils.b2(A,r,t,p),THREE.Shape.Utils.b2(A,s,u,q)}break;case"b":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*-m,v=i[f++]*l+d,w=i[f++]*-m,e.bezierCurveTo(p,q,t,u,v,w),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;h>=g;g++){var A=g/h;THREE.Shape.Utils.b3(A,r,t,v,p),THREE.Shape.Utils.b3(A,s,u,w,q)}}return{offset:z.ha*c,path:e}}}},THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.size?b.size:100,d=void 0!==b.curveSegments?b.curveSegments:4,e=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=c,THREE.FontUtils.divisions=d,THREE.FontUtils.face=e,THREE.FontUtils.weight=f,THREE.FontUtils.style=g;for(var h=THREE.FontUtils.drawText(a),i=h.paths,j=[],k=0,l=i.length;l>k;k++)Array.prototype.push.apply(j,i[k].toShapes());return j},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(3>c)return null;var f,g,h,i=[],j=[],k=[];if(d(a)>0)for(g=0;c>g;g++)j[g]=g;else for(g=0;c>g;g++)j[g]=c-1-g;var l=c,m=2*l;for(g=l-1;l>2;){if(m--<=0)return console.log("Warning, unable to triangulate polygon!"),b?k:i;if(f=g,f>=l&&(f=0),g=f+1,g>=l&&(g=0),h=g+1,h>=l&&(h=0),e(a,f,g,h,l,j)){var n,o,p,q,r;for(n=j[f],o=j[g],p=j[h],i.push([a[n],a[o],a[p]]),k.push([j[f],j[g],j[h]]),q=g,r=g+1;l>r;q++,r++)j[q]=j[r];l--,m=2*l}}return b?k:i},d=function(a){for(var b=a.length,c=0,d=b-1,e=0;b>e;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},e=function(a,c,d,e,f,g){var h,i,j,k,l,m,n,o,p;if(i=a[g[c]].x,j=a[g[c]].y,k=a[g[d]].x,l=a[g[d]].y,m=a[g[e]].x,n=a[g[e]].y,b>(k-i)*(n-j)-(l-j)*(m-i))return!1;var q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;for(q=m-k,r=n-l,s=i-m,t=j-n,u=k-i,v=l-j,h=0;f>h;h++)if(h!==c&&h!==d&&h!==e&&(o=a[g[h]].x,p=a[g[h]].y,w=o-i,x=p-j,y=o-k,z=p-l,A=o-m,B=p-n,E=q*z-r*y,C=u*x-v*w,D=s*B-t*A,E>=-b&&D>=-b&&C>=-b))return!1;return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b,c,d=[],e=this.getPoint(0),f=0;for(d.push(0),c=1;a>=c;c++)b=this.getPoint(c/a),f+=b.distanceTo(e),d.push(f),e=b;return this.cacheArcLengths=d,d},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c,d=this.getLengths(),e=0,f=d.length;c=b?b:a*d[f-1];for(var g,h=0,i=f-1;i>=h;)if(e=Math.floor(h+(i-h)/2),g=d[e]-c,0>g)h=e+1;else{if(!(g>0)){i=e;break}i=e-1}if(e=i,d[e]==c){var j=e/(f-1);return j}var k=d[e],l=d[e+1],m=l-k,n=(c-k)/m,j=(e+n)/(f-1);return j},THREE.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;0>c&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().sub(e);return g.normalize()},THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){var b=6*a*a-6*a,c=3*a*a-4*a+1,d=-6*a*a+6*a,e=3*a*a-2*a;return b+c+d+e},interpolate:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},THREE.Curve.create=function(a,b){return a.prototype=Object.create(THREE.Curve.prototype),a.prototype.getPoint=b,a},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){for(var b,c,d=a*this.getLength(),e=this.getCurveLengths(),f=0;f<e.length;){if(e[f]>=d){b=e[f]-d,c=this.curves[f];var g=1-b/c.getLength();return c.getPointAt(g)}f++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a,b=[],c=0,d=this.curves.length;for(a=0;d>a;a++)c+=this.curves[a].getLength(),b.push(c);return this.cacheLengths=b,b},THREE.CurvePath.prototype.getBoundingBox=function(){var a,b,c,d,e,f,g=this.getPoints();a=b=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var h,i,j,k,l=g[0]instanceof THREE.Vector3;for(k=l?new THREE.Vector3:new THREE.Vector2,i=0,j=g.length;j>i;i++)h=g[i],h.x>a?a=h.x:h.x<d&&(d=h.x),h.y>b?b=h.y:h.y<e&&(e=h.y),l&&(h.z>c?c=h.z:h.z<f&&(f=h.z)),k.add(h);var m={minX:d,minY:e,maxX:a,maxY:b,centroid:k.divideScalar(j)};return l&&(m.maxZ=c,m.minZ=f),m},THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c,d,e=this.getPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c,d,e=this.getSpacedPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c,d,e,f,g,h,i=this.getBoundingBox();for(c=0,d=a.length;d>c;c++){e=a[c],f=e.x,g=e.y,h=f/i.maxX,h=b.getUtoTmapping(h,f);var j=b.getPoint(h),k=b.getNormalVector(h).multiplyScalar(g);e.x=j.x+k.x,e.y=j.y+k.y}return a},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;c>b;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(){var a=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:a})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=new THREE.LineCurve(new THREE.Vector2(e,f),new THREE.Vector2(a,b));this.curves.push(g),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,g=f[f.length-2],h=f[f.length-1],i=new THREE.QuadraticBezierCurve(new THREE.Vector2(g,h),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(i),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1],k=new THREE.CubicBezierCurve(new THREE.Vector2(i,j),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(k),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,d=c[c.length-2],e=c[c.length-1],f=[new THREE.Vector2(d,e)];Array.prototype.push.apply(f,a);var g=new THREE.SplineCurve(f);this.curves.push(g),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1];this.absarc(a+h,b+i,c,d,e,f)},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1];this.absellipse(a+i,b+j,c,d,e,f,g)},THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);var j=i.getPoint(1);h.push(j.x),h.push(j.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})},THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;a>c;c++)b.push(this.getPoint(c/a));return b},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=[];for(c=0,d=this.actions.length;d>c;c++)switch(e=this.actions[c],f=e.action,g=e.args,f){case THREE.PathActions.MOVE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(h=g[2],i=g[3],l=g[0],m=g[1],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;a>=q;q++)r=q/a,s=THREE.Shape.Utils.b2(r,n,l,h),t=THREE.Shape.Utils.b2(r,o,m,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.BEZIER_CURVE_TO:for(h=g[4],i=g[5],l=g[0],m=g[1],j=g[2],k=g[3],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;a>=q;q++)r=q/a,s=THREE.Shape.Utils.b3(r,n,l,j,h),t=THREE.Shape.Utils.b3(r,o,m,k,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.CSPLINE_THRU:p=this.actions[c-1].args;var v=new THREE.Vector2(p[p.length-2],p[p.length-1]),w=[v],x=a*g[0].length;w=w.concat(g[0]);var y=new THREE.SplineCurve(w);for(q=1;x>=q;q++)u.push(y.getPointAt(q/x));break;case THREE.PathActions.ARC:var z,A=g[0],B=g[1],C=g[2],D=g[3],E=g[4],F=!!g[5],G=E-D,H=2*a;for(q=1;H>=q;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+C*Math.cos(z),t=B+C*Math.sin(z),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.ELLIPSE:var z,A=g[0],B=g[1],I=g[2],J=g[3],D=g[4],E=g[5],F=!!g[6],G=E-D,H=2*a;for(q=1;H>=q;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+I*Math.cos(z),t=B+J*Math.sin(z),u.push(new THREE.Vector2(s,t))}var K=u[u.length-1],L=1e-10;return Math.abs(K.x-u[0].x)<L&&Math.abs(K.y-u[0].y)<L&&u.splice(u.length-1,1),b&&u.push(u[0]),u},THREE.Path.prototype.toShapes=function(a){var b,c,d,e,f,g=[],h=new THREE.Path;for(b=0,c=this.actions.length;c>b;b++)d=this.actions[b],f=d.args,e=d.action,e==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(g.push(h),h=new THREE.Path),h[e].apply(h,f);if(0!=h.actions.length&&g.push(h),0==g.length)return[];var i,j,k,l=[];if(1==g.length)return j=g[0],k=new THREE.Shape,k.actions=j.actions,k.curves=j.curves,l.push(k),l;var m=!THREE.Shape.Utils.isClockWise(g[0].getPoints());if(m=a?!m:m)for(k=new THREE.Shape,b=0,c=g.length;c>b;b++)j=g[b],i=THREE.Shape.Utils.isClockWise(j.getPoints()),i=a?!i:i,i?(k.actions=j.actions,k.curves=j.curves,l.push(k),k=new THREE.Shape):k.holes.push(j);else{for(k=void 0,b=0,c=g.length;c>b;b++)j=g[b],i=THREE.Shape.Utils.isClockWise(j.getPoints()),i=a?!i:i,i?(k&&l.push(k),k=new THREE.Shape,k.actions=j.actions,k.curves=j.curves):k.holes.push(j);l.push(k)}return l},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(a){var b=new THREE.ExtrudeGeometry(this,a);return b},THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={removeHoles:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s=a.concat(),t=s.concat(),u=[];for(g=0;g<b.length;g++){for(i=b[g],Array.prototype.push.apply(t,i),j=Number.POSITIVE_INFINITY,h=0;h<i.length;h++){m=i[h];var v=[];for(l=0;l<s.length;l++)n=s[l],k=m.distanceToSquared(n),v.push(k),j>k&&(j=k,e=h,f=l)}c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1;var w=[i[e],s[f],s[c]],x=THREE.FontUtils.Triangulate.area(w),y=[i[e],i[d],s[f]],z=THREE.FontUtils.Triangulate.area(y),A=1,B=-1,C=f,D=e;f+=A,e+=B,0>f&&(f+=s.length),f%=s.length,0>e&&(e+=i.length),e%=i.length,c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1,w=[i[e],s[f],s[c]];var E=THREE.FontUtils.Triangulate.area(w);y=[i[e],i[d],s[f]];var F=THREE.FontUtils.Triangulate.area(y);x+z>E+F&&(f=C,e=D,0>f&&(f+=s.length),f%=s.length,0>e&&(e+=i.length),e%=i.length,c=f-1>=0?f-1:s.length-1,d=e-1>=0?e-1:i.length-1),o=s.slice(0,f),p=s.slice(f),q=i.slice(e),r=i.slice(0,e);var G=[i[e],s[f],s[c]],H=[i[e],i[d],s[f]];u.push(G),u.push(H),s=o.concat(q).concat(r).concat(p)}return{shape:s,isolatedPts:u,allpoints:t}},triangulateShape:function(a,b){var c,d,e,f,g,h,i=THREE.Shape.Utils.removeHoles(a,b),j=i.shape,k=i.allpoints,l=i.isolatedPts,m=THREE.FontUtils.Triangulate(j,!1),n={};for(c=0,d=k.length;d>c;c++)g=k[c].x+":"+k[c].y,void 0!==n[g]&&console.log("Duplicate point",g),n[g]=c;for(c=0,d=m.length;d>c;c++)for(f=m[c],e=0;3>e;e++)g=f[e].x+":"+f[e].y,h=n[g],void 0!==h&&(f[e]=h);for(c=0,d=l.length;d>c;c++)for(f=l[c],e=0;3>e;e++)g=f[e].x+":"+f[e].y,h=n[g],void 0!==h&&(f[e]=h);return m.concat(l)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(){var a=this.v2.clone().sub(this.v1);return a.normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(b,c)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b,c;
b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,c)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.SplineCurve=function(a){this.points=void 0==a?[]:a},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(a){var b,c,d,e=new THREE.Vector2,f=[],g=this.points;return b=(g.length-1)*a,c=Math.floor(b),d=b-c,f[0]=0==c?c:c-1,f[1]=c,f[2]=c>g.length-2?g.length-1:c+1,f[3]=c>g.length-3?g.length-1:c+2,e.x=THREE.Curve.Utils.interpolate(g[f[0]].x,g[f[1]].x,g[f[2]].x,g[f[3]].x,d),e.y=THREE.Curve.Utils.interpolate(g[f[0]].y,g[f[1]].y,g[f[2]].y,g[f[3]].y,d),e},THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(a){var b,c=this.aEndAngle-this.aStartAngle;0>c&&(c+=2*Math.PI),c>2*Math.PI&&(c-=2*Math.PI),b=this.aClockwise===!0?this.aEndAngle+(1-a)*(2*Math.PI-c):this.aStartAngle+a*c;var d=this.aX+this.xRadius*Math.cos(b),e=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(d,e)},THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.subVectors(this.v2,this.v1),b.multiplyScalar(a),b.add(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b,c,d;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),d=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(b,c,d)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b,c,d;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),d=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(b,c,d)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c,d,e=new THREE.Vector3,f=[],g=this.points;b=(g.length-1)*a,c=Math.floor(b),d=b-c,f[0]=0==c?c:c-1,f[1]=c,f[2]=c>g.length-2?g.length-1:c+1,f[3]=c>g.length-3?g.length-1:c+2;var h=g[f[0]],i=g[f[1]],j=g[f[2]],k=g[f[3]];return e.x=THREE.Curve.Utils.interpolate(h.x,i.x,j.x,k.x,d),e.y=THREE.Curve.Utils.interpolate(h.y,i.y,j.y,k.y,d),e.z=THREE.Curve.Utils.interpolate(h.z,i.z,j.z,k.z,d),e}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c,d,e=new THREE.Vector3,f=[],g=this.points;return b=(g.length-0)*a,c=Math.floor(b),d=b-c,c+=c>0?0:(Math.floor(Math.abs(c)/g.length)+1)*g.length,f[0]=(c-1)%g.length,f[1]=c%g.length,f[2]=(c+1)%g.length,f[3]=(c+2)%g.length,e.x=THREE.Curve.Utils.interpolate(g[f[0]].x,g[f[1]].x,g[f[2]].x,g[f[3]].x,d),e.y=THREE.Curve.Utils.interpolate(g[f[0]].y,g[f[1]].y,g[f[2]].y,g[f[3]].y,d),e.z=THREE.Curve.Utils.interpolate(g[f[0]].z,g[f[1]].z,g[f[2]].z,g[f[3]].z,d),e}),THREE.AnimationHandler=function(){var a=[],b={},c={};c.update=function(b){for(var c=0;c<a.length;c++)a[c].update(b)},c.addToUpdate=function(b){-1===a.indexOf(b)&&a.push(b)},c.removeFromUpdate=function(b){var c=a.indexOf(b);-1!==c&&a.splice(c,1)},c.add=function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a,e(a)},c.get=function(a){return"string"==typeof a?b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null):void 0},c.parse=function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b};var d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)},e=function(a){if(a.initialized!==!0){for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(a.hierarchy[b].keys[c].time<0&&(a.hierarchy[b].keys[c].time=0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=new THREE.Quaternion(d[0],d[1],d[2],d[3])}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){for(var e={},c=0;c<a.hierarchy[b].keys.length;c++)for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++){var g=a.hierarchy[b].keys[c].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(var c=0;c<a.hierarchy[b].keys.length;c++){var h={};for(var g in e){for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++)if(a.hierarchy[b].keys[c].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[c].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=h}}for(var c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(var c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}var i=parseInt(a.length*a.fps,10);a.JIT={},a.JIT.hierarchy=[];for(var b=0;b<a.hierarchy.length;b++)a.JIT.hierarchy.push(new Array(i));a.initialized=!0}};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(a,b){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==a?a:!0,this.currentTime=void 0!==b?b:0;var c,d,e=this.hierarchy.length;for(c=0;e>c;c++){d=this.hierarchy[c],d.matrixAutoUpdate=!0,void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey={pos:0,rot:0,scl:0},d.animationCache.nextKey={pos:0,rot:0,scl:0},d.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix);var f=d.animationCache.prevKey,g=d.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0],f.rot=this.data.hierarchy[c].keys[0],f.scl=this.data.hierarchy[c].keys[0],g.pos=this.getNextKeyWith("pos",c,1),g.rot=this.getNextKeyWith("rot",c,1),g.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(a){if(this.isPlaying!==!1){{var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q=["pos","rot","scl"];this.data.JIT.hierarchy}this.currentTime+=a*this.timeScale,m=this.currentTime,l=this.currentTime=this.currentTime%this.data.length,k=parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var r=0,s=this.hierarchy.length;s>r;r++){i=this.hierarchy[r],j=i.animationCache;for(var t=0;3>t;t++){if(b=q[t],g=j.prevKey[b],h=j.nextKey[b],h.time<=m){if(m>l){if(!this.loop)return this.stop(),void 0;for(g=this.data.hierarchy[r].keys[0],h=this.getNextKeyWith(b,r,1);h.time<l;)g=h,h=this.getNextKeyWith(b,r,h.index+1)}else do g=h,h=this.getNextKeyWith(b,r,h.index+1);while(h.time<l);j.prevKey[b]=g,j.nextKey[b]=h}i.matrixAutoUpdate=!0,i.matrixWorldNeedsUpdate=!0,c=(l-g.time)/(h.time-g.time),e=g[b],f=h[b],(0>c||c>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+c+" on bone "+r),c=0>c?0:1),"pos"===b?(d=i.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(d.x=e[0]+(f[0]-e[0])*c,d.y=e[1]+(f[1]-e[1])*c,d.z=e[2]+(f[2]-e[2])*c):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",r,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",r,h.index+1).pos,c=.33*c+.33,n=this.interpolateCatmullRom(this.points,c),d.x=n[0],d.y=n[1],d.z=n[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(o=this.interpolateCatmullRom(this.points,1.01*c),this.target.set(o[0],o[1],o[2]),this.target.sub(d),this.target.y=0,this.target.normalize(),p=Math.atan2(this.target.x,this.target.z),i.rotation.set(0,p,0)))):"rot"===b?THREE.Quaternion.slerp(e,f,i.quaternion,c):"scl"===b&&(d=i.scale,d.x=e[0]+(f[0]-e[0])*c,d.y=e[1]+(f[1]-e[1])*c,d.z=e[2]+(f[2]-e[2])*c)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c,d,e,f,g,h,i,j,k,l=[],m=[];return c=(a.length-1)*b,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>a.length-2?d:d+1,l[3]=d>a.length-3?d:d+2,h=a[l[0]],i=a[l[1]],j=a[l[2]],k=a[l[3]],f=e*e,g=e*f,m[0]=this.interpolate(h[0],i[0],j[0],k[0],e,f,g),m[1]=this.interpolate(h[1],i[1],j[1],k[1],e,f,g),m[2]=this.interpolate(h[2],i[2],j[2],k[2],e,f,g),m},THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b},THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<d.length-1?c:d.length-1:c%=d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]},THREE.KeyFrameAnimation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==c?c:!0;for(var d=0,e=this.hierarchy.length;e>d;d++){var f=this.data.hierarchy[d].keys,g=this.data.hierarchy[d].sids,h=this.hierarchy[d];if(f.length&&g){for(var i=0;i<g.length;i++){var j=g[i],k=this.getNextKeyWith(j,d,0);k&&k.apply(j)}h.matrixAutoUpdate=!1,this.data.hierarchy[d].node.updateMatrix(),h.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==a?a:!0,this.currentTime=void 0!==b?b:0,this.startTimeMs=b,this.startTime=1e7,this.endTime=-this.startTime;var c,d,e,f=this.hierarchy.length;for(c=0;f>c;c++){d=this.hierarchy[c],e=this.data.hierarchy[c],void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey=null,e.animationCache.nextKey=null,e.animationCache.originalMatrix=d instanceof THREE.Bone?d.skinMatrix:d.matrix);var g=this.data.hierarchy[c].keys;g.length&&(e.animationCache.prevKey=g[0],e.animationCache.nextKey=g[1],this.startTime=Math.min(g[0].time,this.startTime),this.endTime=Math.max(g[g.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d),delete c.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f,g,h,i,j=this.data.JIT.hierarchy;if(this.currentTime+=a*this.timeScale,h=this.currentTime,g=this.currentTime=this.currentTime%this.data.length,g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g),f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10),i=h>g,i&&!this.loop){for(var k=0,l=this.hierarchy.length;l>k;k++){var m=this.data.hierarchy[k].keys,n=this.data.hierarchy[k].sids,o=m.length-1,p=this.hierarchy[k];if(m.length){for(var q=0;q<n.length;q++){var r=n[q],s=this.getPrevKeyWith(r,k,o);s&&s.apply(r)}this.data.hierarchy[k].node.updateMatrix(),p.matrixWorldNeedsUpdate=!0}}return this.stop(),void 0}if(!(g<this.startTime)){for(var k=0,l=this.hierarchy.length;l>k;k++){d=this.hierarchy[k],e=this.data.hierarchy[k];var m=e.keys,t=e.animationCache;if(this.JITCompile&&void 0!==j[k][f])d instanceof THREE.Bone?(d.skinMatrix=j[k][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=j[k][f],d.matrixWorldNeedsUpdate=!0);else if(m.length){if(this.JITCompile&&t&&(d instanceof THREE.Bone?d.skinMatrix=t.originalMatrix:d.matrix=t.originalMatrix),b=t.prevKey,c=t.nextKey,b&&c){if(c.time<=h){if(i&&this.loop)for(b=m[0],c=m[1];c.time<g;)b=c,c=m[b.index+1];else if(!i)for(var u=m.length-1;c.time<g&&c.index!==u;)b=c,c=m[b.index+1];t.prevKey=b,t.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[k].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===j[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(var k=0;k<this.hierarchy.length;k++)j[k][f]=this.hierarchy[k]instanceof THREE.Bone?this.hierarchy[k].skinMatrix.clone():this.hierarchy[k].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c%=d.length;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=c>=0?c:c+d.length;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=90,e=1,f=new THREE.PerspectiveCamera(d,e,a,b);f.up.set(0,-1,0),f.lookAt(new THREE.Vector3(1,0,0)),this.add(f);var g=new THREE.PerspectiveCamera(d,e,a,b);g.up.set(0,-1,0),g.lookAt(new THREE.Vector3(-1,0,0)),this.add(g);var h=new THREE.PerspectiveCamera(d,e,a,b);h.up.set(0,0,1),h.lookAt(new THREE.Vector3(0,1,0)),this.add(h);var i=new THREE.PerspectiveCamera(d,e,a,b);i.up.set(0,0,-1),i.lookAt(new THREE.Vector3(0,-1,0)),this.add(i);var j=new THREE.PerspectiveCamera(d,e,a,b);j.up.set(0,-1,0),j.lookAt(new THREE.Vector3(0,0,1)),this.add(j);var k=new THREE.PerspectiveCamera(d,e,a,b);k.up.set(0,-1,0),k.lookAt(new THREE.Vector3(0,0,-1)),this.add(k),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,f,c),c.activeCubeFace=1,a.render(b,g,c),c.activeCubeFace=2,a.render(b,h,c),c.activeCubeFace=3,a.render(b,i,c),c.activeCubeFace=4,a.render(b,j,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,k,c)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this),this.fov=c,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2,this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.fov,b=this.cameraP.aspect,c=this.cameraP.near,d=this.cameraP.far,e=(c+d)/2,f=Math.tan(a/2)*e,g=2*f,h=g*b,i=h/2;f/=this.zoom,i/=this.zoom,this.cameraO.left=-i,this.cameraO.right=i,this.cameraO.top=f,this.cameraO.bottom=-f,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.radius=a=a||50,this.segments=b=void 0!==b?Math.max(3,b):8,this.thetaStart=c=void 0!==c?c:0,this.thetaLength=d=void 0!==d?d:2*Math.PI;var e,f=[],g=new THREE.Vector3,h=new THREE.Vector2(.5,.5);for(this.vertices.push(g),f.push(h),e=0;b>=e;e++){var i=new THREE.Vector3,j=c+e/b*d;i.x=a*Math.cos(j),i.y=a*Math.sin(j),this.vertices.push(i),f.push(new THREE.Vector2((i.x/a+1)/2,(i.y/a+1)/2))}var k=new THREE.Vector3(0,0,1);for(e=1;b>=e;e++){var l=e,m=e+1,n=0;this.faces.push(new THREE.Face3(l,m,n,[k.clone(),k.clone(),k.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),h.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,i){var j,k,l,m=h.widthSegments,n=h.heightSegments,o=e/2,p=f/2,q=h.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?j="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(j="y",n=h.depthSegments):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(j="x",m=h.depthSegments);var r=m+1,s=n+1,t=e/m,u=f/n,v=new THREE.Vector3;for(v[j]=g>0?1:-1,l=0;s>l;l++)for(k=0;r>k;k++){var w=new THREE.Vector3;w[a]=(k*t-o)*c,w[b]=(l*u-p)*d,w[j]=g,h.vertices.push(w)}for(l=0;n>l;l++)for(k=0;m>k;k++){var x=k+r*l,y=k+r*(l+1),z=k+1+r*(l+1),A=k+1+r*l,B=new THREE.Vector2(k/m,1-l/n),C=new THREE.Vector2(k/m,1-(l+1)/n),D=new THREE.Vector2((k+1)/m,1-(l+1)/n),E=new THREE.Vector2((k+1)/m,1-l/n),F=new THREE.Face3(x+q,y+q,A+q);F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([B,C,E]),F=new THREE.Face3(y+q,z+q,A+q),F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([C.clone(),D,E.clone()])}}THREE.Geometry.call(this);var h=this;this.width=a,this.height=b,this.depth=c,this.widthSegments=d||1,this.heightSegments=e||1,this.depthSegments=f||1;var i=this.width/2,j=this.height/2,k=this.depth/2;g("z","y",-1,-1,this.depth,this.height,i,0),g("z","y",1,-1,this.depth,this.height,-i,1),g("x","z",1,1,this.width,this.depth,j,2),g("x","z",1,-1,this.width,this.depth,-j,3),g("x","y",1,-1,this.width,this.height,k,4),g("x","y",-1,-1,this.width,this.height,-k,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.radiusTop=a=void 0!==a?a:20,this.radiusBottom=b=void 0!==b?b:20,this.height=c=void 0!==c?c:100,this.radialSegments=d=d||8,this.heightSegments=e=e||1,this.openEnded=f=void 0!==f?f:!1;var g,h,i=c/2,j=[],k=[];for(h=0;e>=h;h++){var l=[],m=[],n=h/e,o=n*(b-a)+a;for(g=0;d>=g;g++){var p=g/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+i,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.Vector2(p,1-n))}j.push(l),k.push(m)}var r,s,t=(b-a)/c;for(g=0;d>g;g++)for(0!==a?(r=this.vertices[j[0][g]].clone(),s=this.vertices[j[0][g+1]].clone()):(r=this.vertices[j[1][g]].clone(),s=this.vertices[j[1][g+1]].clone()),r.setY(Math.sqrt(r.x*r.x+r.z*r.z)*t).normalize(),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*t).normalize(),h=0;e>h;h++){var u=j[h][g],v=j[h+1][g],w=j[h+1][g+1],x=j[h][g+1],y=r.clone(),z=r.clone(),A=s.clone(),B=s.clone(),C=k[h][g].clone(),D=k[h+1][g].clone(),E=k[h+1][g+1].clone(),F=k[h][g+1].clone();this.faces.push(new THREE.Face3(u,v,x,[y,z,B])),this.faceVertexUvs[0].push([C,D,F]),this.faces.push(new THREE.Face3(v,w,x,[z.clone(),A,B.clone()])),this.faceVertexUvs[0].push([D.clone(),E,F.clone()])}if(f===!1&&a>0)for(this.vertices.push(new THREE.Vector3(0,i,0)),g=0;d>g;g++){var u=j[0][g],v=j[0][g+1],w=this.vertices.length-1,y=new THREE.Vector3(0,1,0),z=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),C=k[0][g].clone(),D=k[0][g+1].clone(),E=new THREE.Vector2(D.x,0);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}if(f===!1&&b>0)for(this.vertices.push(new THREE.Vector3(0,-i,0)),g=0;d>g;g++){var u=j[h][g+1],v=j[h][g],w=this.vertices.length-1,y=new THREE.Vector3(0,-1,0),z=new THREE.Vector3(0,-1,0),A=new THREE.Vector3(0,-1,0),C=k[h][g+1].clone(),D=k[h][g].clone(),E=new THREE.Vector2(D.x,1);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(a,b){return"undefined"==typeof a?(a=[],void 0):(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals(),void 0)},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;c>d;d++){var e=a[d];this.addShape(e,b)}},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).add(a)}function d(a,b,c){return f(a,b,c)}function e(a,b,c){var d=Math.atan2(b.y-a.y,b.x-a.x),e=Math.atan2(c.y-a.y,c.x-a.x);d>e&&(e+=2*Math.PI);var f=(d+e)/2,g=-Math.cos(f),h=-Math.sin(f),i=new THREE.Vector2(g,h);return i}function f(a,b,c){var d,f,g,h,i,j,k=THREE.ExtrudeGeometry.__v1,l=THREE.ExtrudeGeometry.__v2,m=THREE.ExtrudeGeometry.__v3,n=THREE.ExtrudeGeometry.__v4,o=THREE.ExtrudeGeometry.__v5,p=THREE.ExtrudeGeometry.__v6;return k.set(a.x-b.x,a.y-b.y),l.set(a.x-c.x,a.y-c.y),d=k.normalize(),f=l.normalize(),m.set(-d.y,d.x),n.set(f.y,-f.x),o.copy(a).add(m),p.copy(a).add(n),o.equals(p)?n.clone():(o.copy(b).add(m),p.copy(c).add(n),g=d.dot(n),h=p.sub(o).dot(n),0===g&&(console.log("Either infinite or no solutions!"),0===h?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),i=h/g,0>i?e(a,b,c):(j=d.multiplyScalar(i).add(o),j.sub(a).clone()))}function g(){if(v){var a=0,b=U*a;for(X=0;V>X;X++)T=M[X],k(T[2]+b,T[1]+b,T[0]+b,!0);for(a=x+2*u,b=U*a,X=0;V>X;X++)T=M[X],k(T[0]+b,T[1]+b,T[2]+b,!1)}else{for(X=0;V>X;X++)T=M[X],k(T[2],T[1],T[0],!0);for(X=0;V>X;X++)T=M[X],k(T[0]+U*x,T[1]+U*x,T[2]+U*x,!1)}}function h(){var a=0;for(i(N,a),a+=N.length,E=0,F=K.length;F>E;E++)D=K[E],i(D,a),a+=D.length}function i(a,b){var c,d;for(X=a.length;--X>=0;){c=X,d=X-1,0>d&&(d=a.length-1);var e=0,f=x+2*u;for(e=0;f>e;e++){var g=U*e,h=U*(e+1),i=b+c+g,j=b+d+g,k=b+d+h,m=b+c+h;l(i,j,k,m,a,e,f,c,d)}}}function j(a,b,c){G.vertices.push(new THREE.Vector3(a,b,c))}function k(c,d,e,f){c+=H,d+=H,e+=H,G.faces.push(new THREE.Face3(c,d,e,null,null,A));var g=f?C.generateBottomUV(G,a,b,c,d,e):C.generateTopUV(G,a,b,c,d,e);G.faceVertexUvs[0].push(g)}function l(c,d,e,f,g,h,i,j,k){c+=H,d+=H,e+=H,f+=H,G.faces.push(new THREE.Face3(c,d,f,null,null,B)),G.faces.push(new THREE.Face3(d,e,f,null,null,B));var l=C.generateSideWallUV(G,a,g,b,c,d,e,f,h,i,j,k);G.faceVertexUvs[0].push([l[0],l[1],l[3]]),G.faceVertexUvs[0].push([l[1],l[2],l[3]])}{var m,n,o,p,q,r=void 0!==b.amount?b.amount:100,s=void 0!==b.bevelThickness?b.bevelThickness:6,t=void 0!==b.bevelSize?b.bevelSize:s-2,u=void 0!==b.bevelSegments?b.bevelSegments:3,v=void 0!==b.bevelEnabled?b.bevelEnabled:!0,w=void 0!==b.curveSegments?b.curveSegments:12,x=void 0!==b.steps?b.steps:1,y=b.extrudePath,z=!1,A=b.material,B=b.extrudeMaterial,C=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb}y&&(m=y.getSpacedPoints(x),z=!0,v=!1,n=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(y,x,!1),o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3),v||(u=0,s=0,t=0);var D,E,F,G=this,H=this.vertices.length,I=a.extractPoints(w),J=I.shape,K=I.holes,L=!THREE.Shape.Utils.isClockWise(J);if(L){for(J=J.reverse(),E=0,F=K.length;F>E;E++)D=K[E],THREE.Shape.Utils.isClockWise(D)&&(K[E]=D.reverse());L=!1}var M=THREE.Shape.Utils.triangulateShape(J,K),N=J;for(E=0,F=K.length;F>E;E++)D=K[E],J=J.concat(D);for(var O,P,Q,R,S,T,U=J.length,V=M.length,W=(N.length,180/Math.PI,[]),X=0,Y=N.length,Z=Y-1,$=X+1;Y>X;X++,Z++,$++){Z===Y&&(Z=0),$===Y&&($=0);{N[X],N[Z],N[$]}W[X]=d(N[X],N[Z],N[$])}var _,ab=[],bb=W.concat();for(E=0,F=K.length;F>E;E++){for(D=K[E],_=[],X=0,Y=D.length,Z=Y-1,$=X+1;Y>X;X++,Z++,$++)Z===Y&&(Z=0),$===Y&&($=0),_[X]=d(D[X],D[Z],D[$]);ab.push(_),bb=bb.concat(_)}for(O=0;u>O;O++){for(Q=O/u,R=s*(1-Q),P=t*Math.sin(Q*Math.PI/2),X=0,Y=N.length;Y>X;X++)S=c(N[X],W[X],P),j(S.x,S.y,-R);for(E=0,F=K.length;F>E;E++)for(D=K[E],_=ab[E],X=0,Y=D.length;Y>X;X++)S=c(D[X],_[X],P),j(S.x,S.y,-R)}for(P=t,X=0;U>X;X++)S=v?c(J[X],bb[X],P):J[X],z?(p.copy(n.normals[0]).multiplyScalar(S.x),o.copy(n.binormals[0]).multiplyScalar(S.y),q.copy(m[0]).add(p).add(o),j(q.x,q.y,q.z)):j(S.x,S.y,0);var cb;for(cb=1;x>=cb;cb++)for(X=0;U>X;X++)S=v?c(J[X],bb[X],P):J[X],z?(p.copy(n.normals[cb]).multiplyScalar(S.x),o.copy(n.binormals[cb]).multiplyScalar(S.y),q.copy(m[cb]).add(p).add(o),j(q.x,q.y,q.z)):j(S.x,S.y,r/x*cb);for(O=u-1;O>=0;O--){for(Q=O/u,R=s*(1-Q),P=t*Math.sin(Q*Math.PI/2),X=0,Y=N.length;Y>X;X++)S=c(N[X],W[X],P),j(S.x,S.y,r+R);for(E=0,F=K.length;F>E;E++)for(D=K[E],_=ab[E],X=0,Y=D.length;Y>X;X++)S=c(D[X],_[X],P),z?j(S.x,S.y+m[x-1].y,m[x-1].x+R):j(S.x,S.y,r+R)}g(),h()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){var g=a.vertices[d].x,h=a.vertices[d].y,i=a.vertices[e].x,j=a.vertices[e].y,k=a.vertices[f].x,l=a.vertices[f].y;return[new THREE.Vector2(g,h),new THREE.Vector2(i,j),new THREE.Vector2(k,l)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var i=a.vertices[e].x,j=a.vertices[e].y,k=a.vertices[e].z,l=a.vertices[f].x,m=a.vertices[f].y,n=a.vertices[f].z,o=a.vertices[g].x,p=a.vertices[g].y,q=a.vertices[g].z,r=a.vertices[h].x,s=a.vertices[h].y,t=a.vertices[h].z;return Math.abs(j-m)<.01?[new THREE.Vector2(i,1-k),new THREE.Vector2(l,1-n),new THREE.Vector2(o,1-q),new THREE.Vector2(r,1-t)]:[new THREE.Vector2(j,1-k),new THREE.Vector2(m,1-n),new THREE.Vector2(p,1-q),new THREE.Vector2(s,1-t)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this),a instanceof Array==!1&&(a=[a]),this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;d>c;c++)this.addShape(a[c],b);return this},THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c,d,e,f=void 0!==b.curveSegments?b.curveSegments:12,g=b.material,h=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,i=(this.shapebb,this.vertices.length),j=a.extractPoints(f),k=j.shape,l=j.holes,m=!THREE.Shape.Utils.isClockWise(k);if(m){for(k=k.reverse(),c=0,d=l.length;d>c;c++)e=l[c],THREE.Shape.Utils.isClockWise(e)&&(l[c]=e.reverse());m=!1}var n=THREE.Shape.Utils.triangulateShape(k,l),o=k;for(c=0,d=l.length;d>c;c++)e=l[c],k=k.concat(e);{var p,q,r=k.length,s=n.length;o.length}for(c=0;r>c;c++)p=k[c],this.vertices.push(new THREE.Vector3(p.x,p.y,0));for(c=0;s>c;c++){q=n[c];var t=q[0]+i,u=q[1]+i,v=q[2]+i;this.faces.push(new THREE.Face3(t,u,v,null,null,g)),this.faceVertexUvs[0].push(h.generateBottomUV(this,a,b,t,u,v))}},THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this),b=b||12,c=c||0,d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;h>=g;g++)for(var i=c+g*f*d,j=Math.cos(i),k=Math.sin(i),l=0,m=a.length;m>l;l++){var n=a[l],o=new THREE.Vector3;o.x=j*n.x-k*n.y,o.y=k*n.x+j*n.y,o.z=n.z,this.vertices.push(o)}for(var p=a.length,g=0,h=b;h>g;g++)for(var l=0,m=a.length-1;m>l;l++){var q=l+p*g,r=q,s=q+p,j=q+1+p,t=q+1,u=g*f,v=l*e,w=u+f,x=v+e;this.faces.push(new THREE.Face3(r,s,t)),this.faceVertexUvs[0].push([new THREE.Vector2(u,v),new THREE.Vector2(w,v),new THREE.Vector2(u,x)]),this.faces.push(new THREE.Face3(s,j,t)),this.faceVertexUvs[0].push([new THREE.Vector2(w,v),new THREE.Vector2(w,x),new THREE.Vector2(u,x)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.width=a,this.height=b,this.widthSegments=c||1,this.heightSegments=d||1;var e,f,g=a/2,h=b/2,i=this.widthSegments,j=this.heightSegments,k=i+1,l=j+1,m=this.width/i,n=this.height/j,o=new THREE.Vector3(0,0,1);for(f=0;l>f;f++)for(e=0;k>e;e++){var p=e*m-g,q=f*n-h;this.vertices.push(new THREE.Vector3(p,-q,0))}for(f=0;j>f;f++)for(e=0;i>e;e++){var r=e+k*f,s=e+k*(f+1),t=e+1+k*(f+1),u=e+1+k*f,v=new THREE.Vector2(e/i,1-f/j),w=new THREE.Vector2(e/i,1-(f+1)/j),x=new THREE.Vector2((e+1)/i,1-(f+1)/j),y=new THREE.Vector2((e+1)/i,1-f/j),z=new THREE.Face3(r,s,u);z.normal.copy(o),z.vertexNormals.push(o.clone(),o.clone(),o.clone()),this.faces.push(z),this.faceVertexUvs[0].push([v,w,y]),z=new THREE.Face3(s,t,u),z.normal.copy(o),z.vertexNormals.push(o.clone(),o.clone(),o.clone()),this.faces.push(z),this.faceVertexUvs[0].push([w.clone(),x,y.clone()])
}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),a=a||0,b=b||50,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(3,d):8;var g,h,i=[],j=a,k=(b-a)/d;for(g=0;d>=g;g++){for(h=0;c>=h;h++){var l=new THREE.Vector3,m=e+h/c*f;l.x=j*Math.cos(m),l.y=j*Math.sin(m),this.vertices.push(l),i.push(new THREE.Vector2((l.x/b+1)/2,(l.y/b+1)/2))}j+=k}var n=new THREE.Vector3(0,0,1);for(g=0;d>g;g++){var o=g*c;for(h=0;c>=h;h++){var m=h+o,p=m+g,q=m+c+g,r=m+c+1+g;this.faces.push(new THREE.Face3(p,q,r,[n.clone(),n.clone(),n.clone()])),this.faceVertexUvs[0].push([i[p].clone(),i[q].clone(),i[r].clone()]),p=m+g,q=m+c+1+g,r=m+1+g,this.faces.push(new THREE.Face3(p,q,r,[n.clone(),n.clone(),n.clone()])),this.faceVertexUvs[0].push([i[p].clone(),i[q].clone(),i[r].clone()])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this),this.radius=a=a||50,this.widthSegments=b=Math.max(3,Math.floor(b)||8),this.heightSegments=c=Math.max(2,Math.floor(c)||6),this.phiStart=d=void 0!==d?d:0,this.phiLength=e=void 0!==e?e:2*Math.PI,this.thetaStart=f=void 0!==f?f:0,this.thetaLength=g=void 0!==g?g:Math.PI;var h,i,j=[],k=[];for(i=0;c>=i;i++){var l=[],m=[];for(h=0;b>=h;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.Vector2(n,1-o))}j.push(l),k.push(m)}for(i=0;i<this.heightSegments;i++)for(h=0;h<this.widthSegments;h++){var q=j[i][h+1],r=j[i][h],s=j[i+1][h],t=j[i+1][h+1],u=this.vertices[q].clone().normalize(),v=this.vertices[r].clone().normalize(),w=this.vertices[s].clone().normalize(),x=this.vertices[t].clone().normalize(),y=k[i][h+1].clone(),z=k[i][h].clone(),A=k[i+1][h].clone(),B=k[i+1][h+1].clone();Math.abs(this.vertices[q].y)===this.radius?(y.x=(y.x+z.x)/2,this.faces.push(new THREE.Face3(q,s,t,[u,w,x])),this.faceVertexUvs[0].push([y,A,B])):Math.abs(this.vertices[s].y)===this.radius?(A.x=(A.x+B.x)/2,this.faces.push(new THREE.Face3(q,r,s,[u,v,w])),this.faceVertexUvs[0].push([y,z,A])):(this.faces.push(new THREE.Face3(q,r,t,[u,v,x])),this.faceVertexUvs[0].push([y,z,B]),this.faces.push(new THREE.Face3(r,s,t,[v.clone(),w,x.clone()])),this.faceVertexUvs[0].push([z.clone(),A,B.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,c,b)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100,this.tube=b||40,this.radialSegments=c||8,this.tubularSegments=d||6,this.arc=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],i=0;i<=this.radialSegments;i++)for(var j=0;j<=this.tubularSegments;j++){var k=j/this.tubularSegments*this.arc,l=i/this.radialSegments*Math.PI*2;f.x=this.radius*Math.cos(k),f.y=this.radius*Math.sin(k);var m=new THREE.Vector3;m.x=(this.radius+this.tube*Math.cos(l))*Math.cos(k),m.y=(this.radius+this.tube*Math.cos(l))*Math.sin(k),m.z=this.tube*Math.sin(l),this.vertices.push(m),g.push(new THREE.Vector2(j/this.tubularSegments,i/this.radialSegments)),h.push(m.clone().sub(f).normalize())}for(var i=1;i<=this.radialSegments;i++)for(var j=1;j<=this.tubularSegments;j++){var n=(this.tubularSegments+1)*i+j-1,o=(this.tubularSegments+1)*(i-1)+j-1,p=(this.tubularSegments+1)*(i-1)+j,q=(this.tubularSegments+1)*i+j,r=new THREE.Face3(n,o,q,[h[n],h[o],h[q]]);r.normal.add(h[n]),r.normal.add(h[o]),r.normal.add(h[q]),r.normal.normalize(),this.faces.push(r),this.faceVertexUvs[0].push([g[n].clone(),g[o].clone(),g[q].clone()]),r=new THREE.Face3(o,p,q,[h[o],h[p],h[q]]),r.normal.add(h[o]),r.normal.add(h[p]),r.normal.add(h[q]),r.normal.normalize(),this.faces.push(r),this.faceVertexUvs[0].push([g[o].clone(),g[p].clone(),g[q].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a),h=b/c*a,i=Math.cos(h),j=d*(2+i)*.5*f,k=d*(2+i)*g*.5,l=e*d*Math.sin(h)*.5;return new THREE.Vector3(j,k,l)}THREE.Geometry.call(this);var i=this;this.radius=a||100,this.tube=b||40,this.radialSegments=c||64,this.tubularSegments=d||8,this.p=e||2,this.q=f||3,this.heightScale=g||1,this.grid=new Array(this.radialSegments);for(var j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=0;m<this.radialSegments;++m){this.grid[m]=new Array(this.tubularSegments);var n=m/this.radialSegments*2*this.p*Math.PI,o=h(n,this.q,this.p,this.radius,this.heightScale),p=h(n+.01,this.q,this.p,this.radius,this.heightScale);j.subVectors(p,o),k.addVectors(p,o),l.crossVectors(j,k),k.crossVectors(l,j),l.normalize(),k.normalize();for(var q=0;q<this.tubularSegments;++q){var r=q/this.tubularSegments*2*Math.PI,s=-this.tube*Math.cos(r),t=this.tube*Math.sin(r),u=new THREE.Vector3;u.x=o.x+s*k.x+t*l.x,u.y=o.y+s*k.y+t*l.y,u.z=o.z+s*k.z+t*l.z,this.grid[m][q]=i.vertices.push(u)-1}}for(var m=0;m<this.radialSegments;++m)for(var q=0;q<this.tubularSegments;++q){var v=(m+1)%this.radialSegments,w=(q+1)%this.tubularSegments,x=this.grid[m][q],y=this.grid[v][q],z=this.grid[v][w],A=this.grid[m][w],B=new THREE.Vector2(m/this.radialSegments,q/this.tubularSegments),C=new THREE.Vector2((m+1)/this.radialSegments,q/this.tubularSegments),D=new THREE.Vector2((m+1)/this.radialSegments,(q+1)/this.tubularSegments),E=new THREE.Vector2(m/this.radialSegments,(q+1)/this.tubularSegments);this.faces.push(new THREE.Face3(x,y,A)),this.faceVertexUvs[0].push([B,C,E]),this.faces.push(new THREE.Face3(y,z,A)),this.faceVertexUvs[0].push([C.clone(),D,E.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(a,b,c,d,e){function f(a,b,c){return A.vertices.push(new THREE.Vector3(a,b,c))-1}THREE.Geometry.call(this),this.path=a,this.segments=b||64,this.radius=c||1,this.radialSegments=d||8,this.closed=e||!1,this.grid=[];var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A=this,B=this.segments+1,C=new THREE.Vector3,D=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),E=D.tangents,F=D.normals,G=D.binormals;for(this.tangents=E,this.normals=F,this.binormals=G,o=0;B>o;o++)for(this.grid[o]=[],j=o/(B-1),n=a.getPointAt(j),g=E[o],h=F[o],i=G[o],p=0;p<this.radialSegments;p++)k=p/this.radialSegments*2*Math.PI,l=-this.radius*Math.cos(k),m=this.radius*Math.sin(k),C.copy(n),C.x+=l*h.x+m*i.x,C.y+=l*h.y+m*i.y,C.z+=l*h.z+m*i.z,this.grid[o][p]=f(C.x,C.y,C.z);for(o=0;o<this.segments;o++)for(p=0;p<this.radialSegments;p++)q=this.closed?(o+1)%this.segments:o+1,r=(p+1)%this.radialSegments,s=this.grid[o][p],t=this.grid[q][p],u=this.grid[q][r],v=this.grid[o][r],w=new THREE.Vector2(o/this.segments,p/this.radialSegments),x=new THREE.Vector2((o+1)/this.segments,p/this.radialSegments),y=new THREE.Vector2((o+1)/this.segments,(p+1)/this.radialSegments),z=new THREE.Vector2(o/this.segments,(p+1)/this.radialSegments),this.faces.push(new THREE.Face3(s,t,v)),this.faceVertexUvs[0].push([w,x,z]),this.faces.push(new THREE.Face3(t,u,v)),this.faceVertexUvs[0].push([x.clone(),y,z.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(a,b,c){function d(){n[0]=new THREE.Vector3,o[0]=new THREE.Vector3,f=Number.MAX_VALUE,g=Math.abs(m[0].x),h=Math.abs(m[0].y),i=Math.abs(m[0].z),f>=g&&(f=g,l.set(1,0,0)),f>=h&&(f=h,l.set(0,1,0)),f>=i&&l.set(0,0,1),p.crossVectors(m[0],l).normalize(),n[0].crossVectors(m[0],p),o[0].crossVectors(m[0],n[0])}var e,f,g,h,i,j,k,l=(new THREE.Vector3,new THREE.Vector3),m=(new THREE.Vector3,[]),n=[],o=[],p=new THREE.Vector3,q=new THREE.Matrix4,r=b+1,s=1e-4;for(this.tangents=m,this.normals=n,this.binormals=o,j=0;r>j;j++)k=j/(r-1),m[j]=a.getTangentAt(k),m[j].normalize();for(d(),j=1;r>j;j++)n[j]=n[j-1].clone(),o[j]=o[j-1].clone(),p.crossVectors(m[j-1],m[j]),p.length()>s&&(p.normalize(),e=Math.acos(THREE.Math.clamp(m[j-1].dot(m[j]),-1,1)),n[j].applyMatrix4(q.makeRotationAxis(p,e))),o[j].crossVectors(m[j],n[j]);if(c)for(e=Math.acos(THREE.Math.clamp(n[0].dot(n[r-1]),-1,1)),e/=r-1,m[0].dot(p.crossVectors(n[0],n[r-1]))>0&&(e=-e),j=1;r>j;j++)n[j].applyMatrix4(q.makeRotationAxis(m[j],e*j)),o[j].crossVectors(m[j],n[j])},THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=h(a)/2/Math.PI+.5,d=i(a)/Math.PI+.5;return b.uv=new THREE.Vector2(c,1-d),b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.add(a).add(b).add(c).divideScalar(3),k.faces.push(d);var e=h(d.centroid);k.faceVertexUvs[0].push([j(a.uv,a,e),j(b.uv,b,e),j(c.uv,c,e)])}function g(a,b){for(var c=Math.pow(2,b),d=(Math.pow(4,b),e(k.vertices[a.a])),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),i=[],j=0;c>=j;j++){i[j]=[];for(var l=e(d.clone().lerp(h,j/c)),m=e(g.clone().lerp(h,j/c)),n=c-j,o=0;n>=o;o++)i[j][o]=0==o&&j==c?l:e(l.clone().lerp(m,o/n))}for(var j=0;c>j;j++)for(var o=0;2*(c-j)-1>o;o++){var p=Math.floor(o/2);o%2==0?f(i[j][p+1],i[j+1][p],i[j][p]):f(i[j][p+1],i[j+1][p+1],i[j+1][p])}}function h(a){return Math.atan2(a.z,-a.x)}function i(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function j(a,b,c){return 0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y)),0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y)),a.clone()}THREE.Geometry.call(this),c=c||1,d=d||0;for(var k=this,l=0,m=a.length;m>l;l++)e(new THREE.Vector3(a[l][0],a[l][1],a[l][2]));for(var n=this.vertices,o=[],l=0,m=b.length;m>l;l++){var p=n[b[l][0]],q=n[b[l][1]],r=n[b[l][2]];o[l]=new THREE.Face3(p.index,q.index,r.index,[p.clone(),q.clone(),r.clone()])}for(var l=0,m=o.length;m>l;l++)g(o[l],d);for(var l=0,m=this.faceVertexUvs[0].length;m>l;l++){var s=this.faceVertexUvs[0][l],t=s[0].x,u=s[1].x,v=s[2].x,w=Math.max(t,Math.max(u,v)),x=Math.min(t,Math.min(u,v));w>.9&&.1>x&&(.2>t&&(s[0].x+=1),.2>u&&(s[1].x+=1),.2>v&&(s[2].x+=1))}for(var l=0,m=this.vertices.length;m>l;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(a,b){this.radius=a,this.detail=b;var c=(1+Math.sqrt(5))/2,d=[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],e=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,d,e,a,b)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(a,b){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],d=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(a,b){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],d=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);var d,e,f,g,h,i=this.vertices,j=this.faces,k=this.faceVertexUvs[0],l=b+1;for(d=0;c>=d;d++)for(h=d/c,e=0;b>=e;e++)g=e/b,f=a(g,h),i.push(f);var m,n,o,p,q,r,s,t;for(d=0;c>d;d++)for(e=0;b>e;e++)m=d*l+e,n=d*l+e+1,o=(d+1)*l+e+1,p=(d+1)*l+e,q=new THREE.Vector2(e/b,d/c),r=new THREE.Vector2((e+1)/b,d/c),s=new THREE.Vector2((e+1)/b,(d+1)/c),t=new THREE.Vector2(e/b,(d+1)/c),j.push(new THREE.Face3(m,n,p)),k.push([q,r,t]),j.push(new THREE.Face3(n,o,p)),k.push([r.clone(),s,t.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(a){a=a||1;var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a,0,0),new THREE.Vector3,new THREE.Vector3(0,a,0),new THREE.Vector3,new THREE.Vector3(0,0,a)),b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,c,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this),void 0===d&&(d=16776960),void 0===c&&(c=1),this.position=b;var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0)),e.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d})),this.line.matrixAutoUpdate=!1,this.add(this.line);var f=new THREE.CylinderGeometry(0,.05,.25,5,1);f.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var a,b=new THREE.Vector3;return function(c){c.y>.99999?this.quaternion.set(0,0,0,1):c.y<-.99999?this.quaternion.set(1,0,0,0):(b.set(c.z,0,-c.x).normalize(),a=Math.acos(c.y),this.quaternion.setFromAxisAngle(b,a))}}(),THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.BoxHelper=function(a){var b=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=b;var c=new THREE.Geometry;c.vertices.push(b[0],b[1],b[1],b[2],b[2],b[3],b[3],b[0],b[4],b[5],b[5],b[6],b[6],b[7],b[7],b[4],b[0],b[4],b[1],b[5],b[2],b[6],b[3],b[7]),THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==a&&this.update(a)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,d=b.boundingBox.max,e=this.vertices;e[0].set(d.x,d.y,d.z),e[1].set(c.x,d.y,d.z),e[2].set(c.x,c.y,d.z),e[3].set(d.x,c.y,d.z),e[4].set(d.x,d.y,c.z),e[5].set(c.x,d.y,c.z),e[6].set(c.x,c.y,c.z),e[7].set(d.x,c.y,c.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.BoundingBoxHelper=function(a,b){var c=b||8947848;this.object=a,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(a){function b(a,b,d){c(a,d),c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3),d.colors.push(new THREE.Color(b)),void 0===f[a]&&(f[a]=[]),f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={},g=16755200,h=16711680,i=43775,j=16777215,k=3355443;b("n1","n2",g),b("n2","n4",g),b("n4","n3",g),b("n3","n1",g),b("f1","f2",g),b("f2","f4",g),b("f4","f3",g),b("f3","f1",g),b("n1","f1",g),b("n2","f2",g),b("n3","f3",g),b("n4","f4",g),b("p","n1",h),b("p","n2",h),b("p","n3",h),b("p","n4",h),b("u1","u2",i),b("u2","u3",i),b("u3","u1",i),b("c","t",j),b("p","c",k),b("cn1","cn2",k),b("cn3","cn4",k),b("cf1","cf2",k),b("cf3","cf4",k),THREE.Line.call(this,d,e,THREE.LinePieces),this.camera=a,this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,f,g,h){a.set(f,g,h),c.unprojectVector(a,b);var i=e.pointMap[d];if(void 0!==i)for(var j=0,k=i.length;k>j;j++)e.geometry.vertices[i[j]].copy(a)}var e=this,f=1,g=1;b.projectionMatrix.copy(this.camera.projectionMatrix),d("c",0,0,-1),d("t",0,0,1),d("n1",-f,-g,-1),d("n2",f,-g,-1),d("n3",-f,g,-1),d("n4",f,g,-1),d("f1",-f,-g,1),d("f2",f,-g,1),d("f3",-f,g,1),d("f4",f,g,1),d("u1",.7*f,1.1*g,-1),d("u2",.7*-f,1.1*g,-1),d("u3",0,2*g,-1),d("cf1",-f,0,1),d("cf2",f,0,1),d("cf3",0,-g,1),d("cf4",0,g,1),d("cn1",-f,0,-1),d("cn2",f,0,-1),d("cn3",0,-g,-1),d("cn4",0,g,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,b=b||1;var c=new THREE.PlaneGeometry(b,b),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(c,d),this.add(this.lightPlane),c=new THREE.Geometry,c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3),d=new THREE.LineBasicMaterial({fog:!1}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(c,d),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.getPositionFromMatrix(this.light.matrixWorld),b.getPositionFromMatrix(this.light.target.matrixWorld),c.subVectors(b,a),this.lightPlane.lookAt(c),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(c),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||16776960,f=d||1,g=new THREE.Geometry,h=this.object.geometry.faces,i=0,j=h.length;j>i;i++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var b=this.geometry.vertices,c=this.object.geometry.faces,d=this.object.matrixWorld,e=0,f=c.length;f>e;e++){var g=c[e];a.copy(g.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var h=2*e;b[h].copy(g.centroid).applyMatrix4(d),b[h+1].addVectors(b[h],a)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var e=-a;a>=e;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a),this.color2.set(b),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var d=0,e=8;e>d;d++)c.faces[d].color=this.colors[4>d?0:1];var f=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,f),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(a.getPositionFromMatrix(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(a,b){this.light=a,this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,c,d),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(a){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1;var b=new THREE.CylinderGeometry(0,1,1,8,1,!0);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),b.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(b,c),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1e4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c),a.getPositionFromMatrix(this.light.matrixWorld),b.getPositionFromMatrix(this.light.target.matrixWorld),this.cone.lookAt(b.sub(a)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||16711680,f=d||1,g=new THREE.Geometry,h=(a.geometry.vertices,a.geometry.faces),i=0,j=h.length;j>i;i++)for(var k=h[i],l=0,m=k.vertexNormals.length;m>l;l++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){var b=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexNormals.length;l>k;k++){var m=j[b[k]],n=d[m],o=j.vertexNormals[k];c[g].copy(n).applyMatrix4(f),a.copy(o).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),a.add(c[g]),g+=1,c[g].copy(a),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a,this.size=b||1;for(var e=c||255,f=d||1,g=new THREE.Geometry,h=(a.geometry.vertices,a.geometry.faces),i=0,j=h.length;j>i;i++)for(var k=h[i],l=0,m=k.vertexTangents.length;m>l;l++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){var b=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexTangents.length;l>k;k++){var m=j[b[k]],n=d[m],o=j.vertexTangents[k];c[g].copy(n).applyMatrix4(f),a.copy(o).transformDirection(f).multiplyScalar(this.size),a.add(c[g]),g+=1,c[g].copy(a),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(a){for(var b=[0,0],c={},d=function(a,b){return a-b},e=["a","b","c","d"],f=new THREE.Geometry,g=a.geometry.vertices,h=a.geometry.faces,i=0,j=h.length;j>i;i++)for(var k=h[i],l=0;3>l;l++){b[0]=k[e[l]],b[1]=k[e[(l+1)%3]],b.sort(d);var m=b.toString();void 0===c[m]&&(f.vertices.push(g[b[0]]),f.vertices.push(g[b[1]]),c[m]=!0)}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==a&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1),void 0===c&&(c=0),void 0===f&&(f=1),void 0===e&&(e=new THREE.Color(16777215)),void 0===d&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;c>a;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=b.x*Math.PI*.25,b.rotation+=.25*(b.wantedRotation-b.rotation)},THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length,d="__default",e=0,f=c-1,g=c/1;this.createAnimation(d,e,f,g),this.setAnimationWeight(d,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b,c=/([a-z]+)(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;g>f;f++){var h=e.morphTargets[f],i=h.name.match(c);if(i&&i.length>1){{var j=i[1];i[2]}d[j]||(d[j]={start:1/0,end:-1/0});var k=d[j];f<k.start&&(k.start=f),f>k.end&&(k.end=f),b||(b=j)}}for(var j in d){var k=d[j];this.createAnimation(j,k.start,k.end,a)}this.firstAnimation=b},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;c>b;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a,d.mirroredLoop?(d.time>d.duration||d.time<0)&&(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),d.time<0&&(d.time=0,d.directionBackwards=!1)):(d.time=d.time%d.duration,d.time<0&&(d.time+=d.duration));var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);var h=d.time%e/e;d.directionBackwards&&(h=1-h),this.morphTargetInfluences[d.currentFrame]=h*g,this.morphTargetInfluences[d.lastFrame]=(1-h)*g}}},THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";return b.shaderSource(e,g+a.fragmentShader),b.shaderSource(f,g+a.vertexShader),b.compileShader(e),b.compileShader(f),b.attachShader(d,e),b.attachShader(d,f),b.linkProgram(d),d}var b,c,d,e={};this.init=function(f){b=f.context,c=f,d=f.getPrecision(),e.vertices=new Float32Array(16),e.faces=new Uint16Array(6);var g=0;e.vertices[g++]=-1,e.vertices[g++]=-1,e.vertices[g++]=0,e.vertices[g++]=0,e.vertices[g++]=1,e.vertices[g++]=-1,e.vertices[g++]=1,e.vertices[g++]=0,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=1,e.vertices[g++]=-1,e.vertices[g++]=1,e.vertices[g++]=0,e.vertices[g++]=1,g=0,e.faces[g++]=0,e.faces[g++]=1,e.faces[g++]=2,e.faces[g++]=0,e.faces[g++]=2,e.faces[g++]=3,e.vertexBuffer=b.createBuffer(),e.elementBuffer=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,e.vertexBuffer),b.bufferData(b.ARRAY_BUFFER,e.vertices,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.elementBuffer),b.bufferData(b.ELEMENT_ARRAY_BUFFER,e.faces,b.STATIC_DRAW),e.tempTexture=b.createTexture(),e.occlusionTexture=b.createTexture(),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.bindTexture(b.TEXTURE_2D,e.occlusionTexture),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(e.hasVertexTexture=!1,e.program=a(THREE.ShaderFlares.lensFlare,d)):(e.hasVertexTexture=!0,e.program=a(THREE.ShaderFlares.lensFlareVertexTexture,d)),e.attributes={},e.uniforms={},e.attributes.vertex=b.getAttribLocation(e.program,"position"),e.attributes.uv=b.getAttribLocation(e.program,"uv"),e.uniforms.renderType=b.getUniformLocation(e.program,"renderType"),e.uniforms.map=b.getUniformLocation(e.program,"map"),e.uniforms.occlusionMap=b.getUniformLocation(e.program,"occlusionMap"),e.uniforms.opacity=b.getUniformLocation(e.program,"opacity"),e.uniforms.color=b.getUniformLocation(e.program,"color"),e.uniforms.scale=b.getUniformLocation(e.program,"scale"),e.uniforms.rotation=b.getUniformLocation(e.program,"rotation"),e.uniforms.screenPosition=b.getUniformLocation(e.program,"screenPosition")
},this.render=function(a,d,f,g){var h=a.__webglFlares,i=h.length;if(i){var j=new THREE.Vector3,k=g/f,l=.5*f,m=.5*g,n=16/g,o=new THREE.Vector2(n*k,n),p=new THREE.Vector3(1,1,0),q=new THREE.Vector2(1,1),r=e.uniforms,s=e.attributes;b.useProgram(e.program),b.enableVertexAttribArray(e.attributes.vertex),b.enableVertexAttribArray(e.attributes.uv),b.uniform1i(r.occlusionMap,0),b.uniform1i(r.map,1),b.bindBuffer(b.ARRAY_BUFFER,e.vertexBuffer),b.vertexAttribPointer(s.vertex,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(s.uv,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,e.elementBuffer),b.disable(b.CULL_FACE),b.depthMask(!1);var t,u,v,w,x;for(t=0;i>t;t++)if(n=16/g,o.set(n*k,n),w=h[t],j.set(w.matrixWorld.elements[12],w.matrixWorld.elements[13],w.matrixWorld.elements[14]),j.applyMatrix4(d.matrixWorldInverse),j.applyProjection(d.projectionMatrix),p.copy(j),q.x=p.x*l+l,q.y=p.y*m+m,e.hasVertexTexture||q.x>0&&q.x<f&&q.y>0&&q.y<g)for(b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,q.x-8,q.y-8,16,16,0),b.uniform1i(r.renderType,0),b.uniform2f(r.scale,o.x,o.y),b.uniform3f(r.screenPosition,p.x,p.y,p.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,e.occlusionTexture),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,q.x-8,q.y-8,16,16,0),b.uniform1i(r.renderType,1),b.disable(b.DEPTH_TEST),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,e.tempTexture),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),w.positionScreen.copy(p),w.customUpdateCallback?w.customUpdateCallback(w):w.updateLensFlares(),b.uniform1i(r.renderType,2),b.enable(b.BLEND),u=0,v=w.lensFlares.length;v>u;u++)x=w.lensFlares[u],x.opacity>.001&&x.scale>.001&&(p.x=x.x,p.y=x.y,p.z=x.z,n=x.size*x.scale/g,o.x=n*k,o.y=n,b.uniform3f(r.screenPosition,p.x,p.y,p.z),b.uniform2f(r.scale,o.x,o.y),b.uniform1f(r.rotation,x.rotation),b.uniform1f(r.opacity,x.opacity),b.uniform3f(r.color,x.color.r,x.color.g,x.color.b),c.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),c.setTexture(x.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE),b.enable(b.DEPTH_TEST),b.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function a(a,b){var c=new THREE.DirectionalLight;c.isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=a.shadowCameraNear,c.shadowCameraFar=a.shadowCameraFar,c.shadowCameraLeft=a.shadowCameraLeft,c.shadowCameraRight=a.shadowCameraRight,c.shadowCameraBottom=a.shadowCameraBottom,c.shadowCameraTop=a.shadowCameraTop,c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b],c.shadowMapWidth=a.shadowCascadeWidth[b],c.shadowMapHeight=a.shadowCascadeHeight[b],c.pointsWorld=[],c.pointsFrustum=[];for(var d=c.pointsWorld,e=c.pointsFrustum,f=0;8>f;f++)d[f]=new THREE.Vector3,e[f]=new THREE.Vector3;var g=a.shadowCascadeNearZ[b],h=a.shadowCascadeFarZ[b];return e[0].set(-1,-1,g),e[1].set(1,-1,g),e[2].set(-1,1,g),e[3].set(1,1,g),e[4].set(-1,-1,h),e[5].set(1,-1,h),e[6].set(-1,1,h),e[7].set(1,1,h),c}function b(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function c(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;m.set(1/0,1/0,1/0),n.set(-1/0,-1/0,-1/0);for(var f=0;8>f;f++){var g=e[f];g.copy(d[f]),THREE.ShadowMapPlugin.__projector.unprojectVector(g,a),g.applyMatrix4(c.matrixWorldInverse),g.x<m.x&&(m.x=g.x),g.x>n.x&&(n.x=g.x),g.y<m.y&&(m.y=g.y),g.y>n.y&&(n.y=g.y),g.z<m.z&&(m.z=g.z),g.z>n.z&&(n.z=g.z)}c.left=m.x,c.right=n.x,c.top=n.y,c.bottom=m.y,c.updateProjectionMatrix()}function d(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}var e,f,g,h,i,j,k=new THREE.Frustum,l=new THREE.Matrix4,m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;this.init=function(a){e=a.context,f=a;var b=THREE.ShaderLib.depthRGBA,c=THREE.UniformsUtils.clone(b.uniforms);g=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c}),h=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,morphTargets:!0}),i=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,skinning:!0}),j=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:c,morphTargets:!0,skinning:!0}),g._shadowPass=!0,h._shadowPass=!0,i._shadowPass=!0,j._shadowPass=!0},this.render=function(a,b){f.shadowMapEnabled&&f.shadowMapAutoUpdate&&this.update(a,b)},this.update=function(m,n){var p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=0,F=null;for(e.clearColor(1,1,1,1),e.disable(e.BLEND),e.enable(e.CULL_FACE),e.frontFace(e.CCW),f.shadowMapCullFace===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.BACK),f.setDepthTest(!0),p=0,q=m.__lights.length;q>p;p++)if(B=m.__lights[p],B.castShadow)if(B instanceof THREE.DirectionalLight&&B.shadowCascade)for(t=0;t<B.shadowCascadeCount;t++){var G;if(B.shadowCascadeArray[t])G=B.shadowCascadeArray[t];else{G=a(B,t),G.originalCamera=n;var H=new THREE.Gyroscope;H.position=B.shadowCascadeOffset,H.add(G),H.add(G.target),n.add(H),B.shadowCascadeArray[t]=G,console.log("Created virtualLight",G)}b(B,t),D[E]=G,E++}else D[E]=B,E++;for(p=0,q=D.length;q>p;p++){if(B=D[p],!B.shadowMap){var I=THREE.LinearFilter;f.shadowMapType===THREE.PCFSoftShadowMap&&(I=THREE.NearestFilter);var J={minFilter:I,magFilter:I,format:THREE.RGBAFormat};B.shadowMap=new THREE.WebGLRenderTarget(B.shadowMapWidth,B.shadowMapHeight,J),B.shadowMapSize=new THREE.Vector2(B.shadowMapWidth,B.shadowMapHeight),B.shadowMatrix=new THREE.Matrix4}if(!B.shadowCamera){if(B instanceof THREE.SpotLight)B.shadowCamera=new THREE.PerspectiveCamera(B.shadowCameraFov,B.shadowMapWidth/B.shadowMapHeight,B.shadowCameraNear,B.shadowCameraFar);else{if(!(B instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}B.shadowCamera=new THREE.OrthographicCamera(B.shadowCameraLeft,B.shadowCameraRight,B.shadowCameraTop,B.shadowCameraBottom,B.shadowCameraNear,B.shadowCameraFar)}m.add(B.shadowCamera),m.autoUpdate===!0&&m.updateMatrixWorld()}for(B.shadowCameraVisible&&!B.cameraHelper&&(B.cameraHelper=new THREE.CameraHelper(B.shadowCamera),B.shadowCamera.add(B.cameraHelper)),B.isVirtual&&G.originalCamera==n&&c(n,B),u=B.shadowMap,v=B.shadowMatrix,w=B.shadowCamera,w.position.getPositionFromMatrix(B.matrixWorld),o.getPositionFromMatrix(B.target.matrixWorld),w.lookAt(o),w.updateMatrixWorld(),w.matrixWorldInverse.getInverse(w.matrixWorld),B.cameraHelper&&(B.cameraHelper.visible=B.shadowCameraVisible),B.shadowCameraVisible&&B.cameraHelper.update(),v.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),v.multiply(w.projectionMatrix),v.multiply(w.matrixWorldInverse),l.multiplyMatrices(w.projectionMatrix,w.matrixWorldInverse),k.setFromMatrix(l),f.setRenderTarget(u),f.clear(),C=m.__webglObjects,r=0,s=C.length;s>r;r++)z=C[r],A=z.object,z.render=!1,A.visible&&A.castShadow&&((A instanceof THREE.Mesh||A instanceof THREE.ParticleSystem)&&A.frustumCulled&&!k.intersectsObject(A)||(A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,A.matrixWorld),z.render=!0));var K,L,M;for(r=0,s=C.length;s>r;r++)z=C[r],z.render&&(A=z.object,x=z.buffer,K=d(A),L=A.geometry.morphTargets.length>0&&K.morphTargets,M=A instanceof THREE.SkinnedMesh&&K.skinning,y=A.customDepthMaterial?A.customDepthMaterial:M?L?j:i:L?h:g,x instanceof THREE.BufferGeometry?f.renderBufferDirect(w,m.__lights,F,y,x,A):f.renderBuffer(w,m.__lights,F,y,x,A));for(C=m.__webglObjectsImmediate,r=0,s=C.length;s>r;r++)z=C[r],A=z.object,A.visible&&A.castShadow&&(A._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,A.matrixWorld),f.renderImmediateObject(w,m.__lights,F,g,A))}var N=f.getClearColor(),O=f.getClearAlpha();e.clearColor(N.r,N.g,N.b,O),e.enable(e.BLEND),f.shadowMapCullFace===THREE.CullFaceFront&&e.cullFace(e.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function a(){var a=c.createProgram(),b=c.createShader(c.VERTEX_SHADER),e=c.createShader(c.FRAGMENT_SHADER);return c.shaderSource(b,["precision "+d.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),c.shaderSource(e,["precision "+d.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),c.compileShader(b),c.compileShader(e),c.attachShader(a,b),c.attachShader(a,e),c.linkProgram(a),a}function b(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var c,d,e,f,g,h,i,j,k,l;this.init=function(b){c=b.context,d=b,f=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),g=new Uint16Array([0,1,2,0,2,3]),h=c.createBuffer(),i=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,h),c.bufferData(c.ARRAY_BUFFER,f,c.STATIC_DRAW),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,i),c.bufferData(c.ELEMENT_ARRAY_BUFFER,g,c.STATIC_DRAW),j=a(),k={position:c.getAttribLocation(j,"position"),uv:c.getAttribLocation(j,"uv")},l={uvOffset:c.getUniformLocation(j,"uvOffset"),uvScale:c.getUniformLocation(j,"uvScale"),rotation:c.getUniformLocation(j,"rotation"),scale:c.getUniformLocation(j,"scale"),color:c.getUniformLocation(j,"color"),map:c.getUniformLocation(j,"map"),opacity:c.getUniformLocation(j,"opacity"),modelViewMatrix:c.getUniformLocation(j,"modelViewMatrix"),projectionMatrix:c.getUniformLocation(j,"projectionMatrix"),fogType:c.getUniformLocation(j,"fogType"),fogDensity:c.getUniformLocation(j,"fogDensity"),fogNear:c.getUniformLocation(j,"fogNear"),fogFar:c.getUniformLocation(j,"fogFar"),fogColor:c.getUniformLocation(j,"fogColor"),alphaTest:c.getUniformLocation(j,"alphaTest")};var m=document.createElement("canvas");m.width=8,m.height=8;var n=m.getContext("2d");n.fillStyle="#ffffff",n.fillRect(0,0,m.width,m.height),e=new THREE.Texture(m),e.needsUpdate=!0},this.render=function(a,f){var g=a.__webglSprites,m=g.length;if(m){c.useProgram(j),c.enableVertexAttribArray(k.position),c.enableVertexAttribArray(k.uv),c.disable(c.CULL_FACE),c.enable(c.BLEND),c.bindBuffer(c.ARRAY_BUFFER,h),c.vertexAttribPointer(k.position,2,c.FLOAT,!1,16,0),c.vertexAttribPointer(k.uv,2,c.FLOAT,!1,16,8),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,i),c.uniformMatrix4fv(l.projectionMatrix,!1,f.projectionMatrix.elements),c.activeTexture(c.TEXTURE0),c.uniform1i(l.map,0);var n=0,o=0,p=a.fog;p?(c.uniform3f(l.fogColor,p.color.r,p.color.g,p.color.b),p instanceof THREE.Fog?(c.uniform1f(l.fogNear,p.near),c.uniform1f(l.fogFar,p.far),c.uniform1i(l.fogType,1),n=1,o=1):p instanceof THREE.FogExp2&&(c.uniform1f(l.fogDensity,p.density),c.uniform1i(l.fogType,2),n=2,o=2)):(c.uniform1i(l.fogType,0),n=0,o=0);var q,r,s,t,u=[];for(q=0;m>q;q++)r=g[q],s=r.material,r.visible!==!1&&(r._modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,r.matrixWorld),r.z=-r._modelViewMatrix.elements[14]);for(g.sort(b),q=0;m>q;q++)r=g[q],r.visible!==!1&&(s=r.material,c.uniform1f(l.alphaTest,s.alphaTest),c.uniformMatrix4fv(l.modelViewMatrix,!1,r._modelViewMatrix.elements),u[0]=r.scale.x,u[1]=r.scale.y,t=a.fog&&s.fog?o:0,n!==t&&(c.uniform1i(l.fogType,t),n=t),c.uniform2f(l.uvScale,s.uvScale.x,s.uvScale.y),c.uniform2f(l.uvOffset,s.uvOffset.x,s.uvOffset.y),c.uniform1f(l.opacity,s.opacity),c.uniform3f(l.color,s.color.r,s.color.g,s.color.b),c.uniform1f(l.rotation,s.rotation),c.uniform2fv(l.scale,u),d.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),d.setDepthTest(s.depthTest),d.setDepthWrite(s.depthWrite),s.map&&s.map.image&&s.map.image.width?d.setTexture(s.map,0):d.setTexture(e,0),c.drawElements(c.TRIANGLES,6,c.UNSIGNED_SHORT,0));c.enable(c.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function a(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}this.enabled=!1,this.renderTarget=null;var b,c,d,e,f,g,h=new THREE.Frustum,i=new THREE.Matrix4;this.init=function(a){b=a.context,c=a;var h=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(h.uniforms);d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i}),e=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0}),f=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,skinning:!0}),g=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0,g._shadowPass=!0},this.render=function(a,b){this.enabled&&this.update(a,b)},this.update=function(j,k){var l,m,n,o,p,q,r,s=null;for(b.clearColor(1,1,1,1),b.disable(b.BLEND),c.setDepthTest(!0),j.autoUpdate===!0&&j.updateMatrixWorld(),k.matrixWorldInverse.getInverse(k.matrixWorld),i.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),h.setFromMatrix(i),c.setRenderTarget(this.renderTarget),c.clear(),r=j.__webglObjects,l=0,m=r.length;m>l;l++)p=r[l],q=p.object,p.render=!1,q.visible&&((q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)&&q.frustumCulled&&!h.intersectsObject(q)||(q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,q.matrixWorld),p.render=!0));var t,u,v;for(l=0,m=r.length;m>l;l++)if(p=r[l],p.render){if(q=p.object,n=p.buffer,q instanceof THREE.ParticleSystem&&!q.customDepthMaterial)continue;t=a(q),t&&c.setMaterialFaces(q.material),u=q.geometry.morphTargets.length>0&&t.morphTargets,v=q instanceof THREE.SkinnedMesh&&t.skinning,o=q.customDepthMaterial?q.customDepthMaterial:v?u?g:f:u?e:d,n instanceof THREE.BufferGeometry?c.renderBufferDirect(k,j.__lights,s,o,n,q):c.renderBuffer(k,j.__lights,s,o,n,q)}for(r=j.__webglObjectsImmediate,l=0,m=r.length;m>l;l++)p=r[l],q=p.object,q.visible&&(q._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,q.matrixWorld),c.renderImmediateObject(k,j.__lights,s,d,q));var w=c.getClearColor(),x=c.getClearAlpha();b.clearColor(w.r,w.g,w.b,x),b.enable(b.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},(window._gsQueue||(window._gsQueue=[])).push(function(){"use strict";window._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,b,c){var d=[].slice,e=function(a,b,d){c.call(this,a,b,d),this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=e.prototype.render},f=1e-10,g=c._internals.isSelector,h=c._internals.isArray,i=e.prototype=c.to({},.1,{}),j=[];e.version="1.11.1",i.constructor=e,i.kill()._gc=!1,e.killTweensOf=e.killDelayedCallsTo=c.killTweensOf,e.getTweensOf=c.getTweensOf,e.ticker=c.ticker,i.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),c.prototype.invalidate.call(this)},i.updateTo=function(a,b){var d,e=this.ratio;b&&this.timeline&&this._startTime<this._timeline._time&&(this._startTime=this._timeline._time,this._uncache(!1),this._gc?this._enabled(!0,!1):this._timeline.insert(this,this._startTime-this._delay));for(d in a)this.vars[d]=a[d];if(this._initted)if(b)this._initted=!1;else if(this._notifyPluginsOfEnabled&&this._firstPT&&c._onPluginEvent("_onDisable",this),this._time/this._duration>.998){var f=this._time;this.render(0,!0,!1),this._initted=!1,this.render(f,!0,!1)}else if(this._time>0){this._initted=!1,this._init();for(var g,h=1/(1-e),i=this._firstPT;i;)g=i.s+i.c,i.c*=h,i.s=g-i.c,i=i._next}return this},i.render=function(a,b,c){this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var d,e,g,h,i,k,l,m,n=this._dirty?this.totalDuration():this._totalDuration,o=this._time,p=this._totalTime,q=this._cycle,r=this._duration;if(a>=n?(this._totalTime=n,this._cycle=this._repeat,this._yoyo&&0!==(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=r,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(d=!0,e="onComplete"),0===r&&(m=this._rawPrevTime,(0===a||0>m||m===f)&&m!==a&&(c=!0,m>f&&(e="onReverseComplete")),this._rawPrevTime=m=!b||a?a:f)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==p||0===r&&this._rawPrevTime>f)&&(e="onReverseComplete",d=this._reversed),0>a?(this._active=!1,0===r&&(this._rawPrevTime>=0&&(c=!0),this._rawPrevTime=m=!b||a?a:f)):this._initted||(c=!0)):(this._totalTime=this._time=a,0!==this._repeat&&(h=r+this._repeatDelay,this._cycle=this._totalTime/h>>0,0!==this._cycle&&this._cycle===this._totalTime/h&&this._cycle--,this._time=this._totalTime-this._cycle*h,this._yoyo&&0!==(1&this._cycle)&&(this._time=r-this._time),this._time>r?this._time=r:this._time<0&&(this._time=0)),this._easeType?(i=this._time/r,k=this._easeType,l=this._easePower,(1===k||3===k&&i>=.5)&&(i=1-i),3===k&&(i*=2),1===l?i*=i:2===l?i*=i*i:3===l?i*=i*i*i:4===l&&(i*=i*i*i*i),this.ratio=1===k?1-i:2===k?i:this._time/r<.5?i/2:1-i/2):this.ratio=this._ease.getRatio(this._time/r)),o===this._time&&!c&&q===this._cycle)return p!==this._totalTime&&this._onUpdate&&(b||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||j)),void 0;if(!this._initted){if(this._init(),!this._initted||this._gc)return;this._time&&!d?this.ratio=this._ease.getRatio(this._time/r):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._active||!this._paused&&this._time!==o&&a>=0&&(this._active=!0),0===p&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===r)&&(b||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||j))),g=this._firstPT;g;)g.f?g.t[g.p](g.c*this.ratio+g.s):g.t[g.p]=g.c*this.ratio+g.s,g=g._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||j)),this._cycle!==q&&(b||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||j)),e&&(this._gc||(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this.vars[e].apply(this.vars[e+"Scope"]||this,this.vars[e+"Params"]||j),0===r&&this._rawPrevTime===f&&m!==f&&(this._rawPrevTime=0)))},e.to=function(a,b,c){return new e(a,b,c)},e.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new e(a,b,c)},e.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new e(a,b,d)},e.staggerTo=e.allTo=function(a,b,f,i,k,l,m){i=i||0;var n,o,p,q,r=f.delay||0,s=[],t=function(){f.onComplete&&f.onComplete.apply(f.onCompleteScope||this,arguments),k.apply(m||this,l||j)};for(h(a)||("string"==typeof a&&(a=c.selector(a)||a),g(a)&&(a=d.call(a,0))),n=a.length,p=0;n>p;p++){o={};for(q in f)o[q]=f[q];o.delay=r,p===n-1&&k&&(o.onComplete=t),s[p]=new e(a[p],b,o),r+=i}return s},e.staggerFrom=e.allFrom=function(a,b,c,d,f,g,h){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,e.staggerTo(a,b,c,d,f,g,h)},e.staggerFromTo=e.allFromTo=function(a,b,c,d,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,e.staggerTo(a,b,d,f,g,h,i)},e.delayedCall=function(a,b,c,d,f){return new e(b,0,{delay:a,onComplete:b,onCompleteParams:c,onCompleteScope:d,onReverseComplete:b,onReverseCompleteParams:c,onReverseCompleteScope:d,immediateRender:!1,useFrames:f,overwrite:0})},e.set=function(a,b){return new e(a,0,b)},e.isTweening=function(a){return c.getTweensOf(a,!0).length>0};var k=function(a,b){for(var d=[],e=0,f=a._first;f;)f instanceof c?d[e++]=f:(b&&(d[e++]=f),d=d.concat(k(f,b)),e=d.length),f=f._next;return d},l=e.getAllTweens=function(b){return k(a._rootTimeline,b).concat(k(a._rootFramesTimeline,b))};e.killAll=function(a,c,d,e){null==c&&(c=!0),null==d&&(d=!0);var f,g,h,i=l(0!=e),j=i.length,k=c&&d&&e;for(h=0;j>h;h++)g=i[h],(k||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&(a?g.totalTime(g.totalDuration()):g._enabled(!1,!1))},e.killChildTweensOf=function(a,b){if(null!=a){var f,i,j,k,l,m=c._tweenLookup;if("string"==typeof a&&(a=c.selector(a)||a),g(a)&&(a=d(a,0)),h(a))for(k=a.length;--k>-1;)e.killChildTweensOf(a[k],b);else{f=[];for(j in m)for(i=m[j].target.parentNode;i;)i===a&&(f=f.concat(m[j].tweens)),i=i.parentNode;for(l=f.length,k=0;l>k;k++)b&&f[k].totalTime(f[k].totalDuration()),f[k]._enabled(!1,!1)}}};var m=function(a,c,d,e){c=c!==!1,d=d!==!1,e=e!==!1;for(var f,g,h=l(e),i=c&&d&&e,j=h.length;--j>-1;)g=h[j],(i||g instanceof b||(f=g.target===g.vars.onComplete)&&d||c&&!f)&&g.paused(a)};return e.pauseAll=function(a,b,c){m(!0,a,b,c)},e.resumeAll=function(a,b,c){m(!1,a,b,c)},e.globalTimeScale=function(b){var d=a._rootTimeline,e=c.ticker.time;return arguments.length?(b=b||f,d._startTime=e-(e-d._startTime)*d._timeScale/b,d=a._rootFramesTimeline,e=c.ticker.frame,d._startTime=e-(e-d._startTime)*d._timeScale/b,d._timeScale=a._rootTimeline._timeScale=b,b):d._timeScale},i.progress=function(a){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},i.totalProgress=function(a){return arguments.length?this.totalTime(this.totalDuration()*a,!1):this._totalTime/this.totalDuration()},i.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},i.duration=function(b){return arguments.length?a.prototype.duration.call(this,b):this._duration},i.totalDuration=function(a){return arguments.length?-1===this._repeat?this:this.duration((a-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},i.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},i.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},i.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},e},!0),window._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,b,c){var d=function(a){b.call(this,a),this._labels={},this.autoRemoveChildren=this.vars.autoRemoveChildren===!0,this.smoothChildTiming=this.vars.smoothChildTiming===!0,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var c,d,e=this.vars;for(d in e)c=e[d],g(c)&&-1!==c.join("").indexOf("{self}")&&(e[d]=this._swapSelfInParams(c));g(e.tweens)&&this.add(e.tweens,0,e.align,e.stagger)},e=1e-10,f=c._internals.isSelector,g=c._internals.isArray,h=[],i=function(a){var b,c={};for(b in a)c[b]=a[b];return c},j=function(a,b,c,d){a._timeline.pause(a._startTime),b&&b.apply(d||a._timeline,c||h)},k=h.slice,l=d.prototype=new b;return d.version="1.11.0",l.constructor=d,l.kill()._gc=!1,l.to=function(a,b,d,e){return b?this.add(new c(a,b,d),e):this.set(a,d,e)},l.from=function(a,b,d,e){return this.add(c.from(a,b,d),e)},l.fromTo=function(a,b,d,e,f){return b?this.add(c.fromTo(a,b,d,e),f):this.set(a,e,f)},l.staggerTo=function(a,b,e,g,h,j,l,m){var n,o=new d({onComplete:j,onCompleteParams:l,onCompleteScope:m});for("string"==typeof a&&(a=c.selector(a)||a),f(a)&&(a=k.call(a,0)),g=g||0,n=0;n<a.length;n++)e.startAt&&(e.startAt=i(e.startAt)),o.to(a[n],b,i(e),n*g);return this.add(o,h)},l.staggerFrom=function(a,b,c,d,e,f,g,h){return c.immediateRender=0!=c.immediateRender,c.runBackwards=!0,this.staggerTo(a,b,c,d,e,f,g,h)},l.staggerFromTo=function(a,b,c,d,e,f,g,h,i){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,this.staggerTo(a,b,d,e,f,g,h,i)},l.call=function(a,b,d,e){return this.add(c.delayedCall(0,a,b,d),e)},l.set=function(a,b,d){return d=this._parseTimeOrLabel(d,0,!0),null==b.immediateRender&&(b.immediateRender=d===this._time&&!this._paused),this.add(new c(a,0,b),d)},d.exportRoot=function(a,b){a=a||{},null==a.smoothChildTiming&&(a.smoothChildTiming=!0);var e,f,g=new d(a),h=g._timeline;for(null==b&&(b=!0),h._remove(g,!0),g._startTime=0,g._rawPrevTime=g._time=g._totalTime=h._time,e=h._first;e;)f=e._next,b&&e instanceof c&&e.target===e.vars.onComplete||g.add(e,e._startTime-e._delay),e=f;return h.add(g,0),g},l.add=function(e,f,h,i){var j,k,l,m,n,o;if("number"!=typeof f&&(f=this._parseTimeOrLabel(f,0,!0,e)),!(e instanceof a)){if(e instanceof Array||e&&e.push&&g(e)){for(h=h||"normal",i=i||0,j=f,k=e.length,l=0;k>l;l++)g(m=e[l])&&(m=new d({tweens:m})),this.add(m,j),"string"!=typeof m&&"function"!=typeof m&&("sequence"===h?j=m._startTime+m.totalDuration()/m._timeScale:"start"===h&&(m._startTime-=m.delay())),j+=i;return this._uncache(!0)}if("string"==typeof e)return this.addLabel(e,f);if("function"!=typeof e)throw"Cannot add "+e+" into the timeline; it is not a tween, timeline, function, or string.";e=c.delayedCall(0,e)}if(b.prototype.add.call(this,e,f),this._gc&&!this._paused&&this._duration<this.duration())for(n=this,o=n.rawTime()>e._startTime;n._gc&&n._timeline;)n._timeline.smoothChildTiming&&o?n.totalTime(n._totalTime,!0):n._enabled(!0,!1),n=n._timeline;return this},l.remove=function(b){if(b instanceof a)return this._remove(b,!1);if(b instanceof Array||b&&b.push&&g(b)){for(var c=b.length;--c>-1;)this.remove(b[c]);return this}return"string"==typeof b?this.removeLabel(b):this.kill(null,b)},l._remove=function(a,c){b.prototype._remove.call(this,a,c);var d=this._last;return d?this._time>d._startTime+d._totalDuration/d._timeScale&&(this._time=this.duration(),this._totalTime=this._totalDuration):this._time=this._totalTime=0,this},l.append=function(a,b){return this.add(a,this._parseTimeOrLabel(null,b,!0,a))},l.insert=l.insertMultiple=function(a,b,c,d){return this.add(a,b||0,c,d)},l.appendMultiple=function(a,b,c,d){return this.add(a,this._parseTimeOrLabel(null,b,!0,a),c,d)},l.addLabel=function(a,b){return this._labels[a]=this._parseTimeOrLabel(b),this},l.addPause=function(a,b,c,d){return this.call(j,["{self}",b,c,d],this,a)},l.removeLabel=function(a){return delete this._labels[a],this},l.getLabelTime=function(a){return null!=this._labels[a]?this._labels[a]:-1},l._parseTimeOrLabel=function(b,c,d,e){var f;if(e instanceof a&&e.timeline===this)this.remove(e);else if(e&&(e instanceof Array||e.push&&g(e)))for(f=e.length;--f>-1;)e[f]instanceof a&&e[f].timeline===this&&this.remove(e[f]);if("string"==typeof c)return this._parseTimeOrLabel(c,d&&"number"==typeof b&&null==this._labels[c]?b-this.duration():0,d);if(c=c||0,"string"!=typeof b||!isNaN(b)&&null==this._labels[b])null==b&&(b=this.duration());else{if(f=b.indexOf("="),-1===f)return null==this._labels[b]?d?this._labels[b]=this.duration()+c:c:this._labels[b]+c;c=parseInt(b.charAt(f-1)+"1",10)*Number(b.substr(f+1)),b=f>1?this._parseTimeOrLabel(b.substr(0,f-1),0,d):this.duration()}return Number(b)+c},l.seek=function(a,b){return this.totalTime("number"==typeof a?a:this._parseTimeOrLabel(a),b!==!1)
},l.stop=function(){return this.paused(!0)},l.gotoAndPlay=function(a,b){return this.play(a,b)},l.gotoAndStop=function(a,b){return this.pause(a,b)},l.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,f,g,i,j,k=this._dirty?this.totalDuration():this._totalDuration,l=this._time,m=this._startTime,n=this._timeScale,o=this._paused;if(a>=k?(this._totalTime=this._time=k,this._reversed||this._hasPausedChild()||(f=!0,i="onComplete",0===this._duration&&(0===a||this._rawPrevTime<0||this._rawPrevTime===e)&&this._rawPrevTime!==a&&this._first&&(j=!0,this._rawPrevTime>e&&(i="onReverseComplete"))),this._rawPrevTime=this._duration||!b||a?a:e,a=k+1e-6):1e-7>a?(this._totalTime=this._time=0,(0!==l||0===this._duration&&(this._rawPrevTime>e||0>a&&this._rawPrevTime>=0))&&(i="onReverseComplete",f=this._reversed),0>a?(this._active=!1,0===this._duration&&this._rawPrevTime>=0&&this._first&&(j=!0),this._rawPrevTime=a):(this._rawPrevTime=this._duration||!b||a?a:e,a=0,this._initted||(j=!0))):this._totalTime=this._time=this._rawPrevTime=a,this._time!==l&&this._first||c||j){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._time!==l&&a>0&&(this._active=!0),0===l&&this.vars.onStart&&0!==this._time&&(b||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||h)),this._time>=l)for(d=this._first;d&&(g=d._next,!this._paused||o);)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;else for(d=this._last;d&&(g=d._prev,!this._paused||o);)(d._active||d._startTime<=l&&!d._paused&&!d._gc)&&(d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=g;this._onUpdate&&(b||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||h)),i&&(this._gc||(m===this._startTime||n!==this._timeScale)&&(0===this._time||k>=this.totalDuration())&&(f&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[i]&&this.vars[i].apply(this.vars[i+"Scope"]||this,this.vars[i+"Params"]||h)))}},l._hasPausedChild=function(){for(var a=this._first;a;){if(a._paused||a instanceof d&&a._hasPausedChild())return!0;a=a._next}return!1},l.getChildren=function(a,b,d,e){e=e||-9999999999;for(var f=[],g=this._first,h=0;g;)g._startTime<e||(g instanceof c?b!==!1&&(f[h++]=g):(d!==!1&&(f[h++]=g),a!==!1&&(f=f.concat(g.getChildren(!0,b,d)),h=f.length))),g=g._next;return f},l.getTweensOf=function(a,b){for(var d=c.getTweensOf(a),e=d.length,f=[],g=0;--e>-1;)(d[e].timeline===this||b&&this._contains(d[e]))&&(f[g++]=d[e]);return f},l._contains=function(a){for(var b=a.timeline;b;){if(b===this)return!0;b=b.timeline}return!1},l.shiftChildren=function(a,b,c){c=c||0;for(var d,e=this._first,f=this._labels;e;)e._startTime>=c&&(e._startTime+=a),e=e._next;if(b)for(d in f)f[d]>=c&&(f[d]+=a);return this._uncache(!0)},l._kill=function(a,b){if(!a&&!b)return this._enabled(!1,!1);for(var c=b?this.getTweensOf(b):this.getChildren(!0,!0,!1),d=c.length,e=!1;--d>-1;)c[d]._kill(a,b)&&(e=!0);return e},l.clear=function(a){var b=this.getChildren(!1,!0,!0),c=b.length;for(this._time=this._totalTime=0;--c>-1;)b[c]._enabled(!1,!1);return a!==!1&&(this._labels={}),this._uncache(!0)},l.invalidate=function(){for(var a=this._first;a;)a.invalidate(),a=a._next;return this},l._enabled=function(a,c){if(a===this._gc)for(var d=this._first;d;)d._enabled(a,!0),d=d._next;return b.prototype._enabled.call(this,a,c)},l.duration=function(a){return arguments.length?(0!==this.duration()&&0!==a&&this.timeScale(this._duration/a),this):(this._dirty&&this.totalDuration(),this._duration)},l.totalDuration=function(a){if(!arguments.length){if(this._dirty){for(var b,c,d=0,e=this._last,f=999999999999;e;)b=e._prev,e._dirty&&e.totalDuration(),e._startTime>f&&this._sortChildren&&!e._paused?this.add(e,e._startTime-e._delay):f=e._startTime,e._startTime<0&&!e._paused&&(d-=e._startTime,this._timeline.smoothChildTiming&&(this._startTime+=e._startTime/this._timeScale),this.shiftChildren(-e._startTime,!1,-9999999999),f=0),c=e._startTime+e._totalDuration/e._timeScale,c>d&&(d=c),e=b;this._duration=this._totalDuration=d,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==a&&this.timeScale(this._totalDuration/a),this},l.usesFrames=function(){for(var b=this._timeline;b._timeline;)b=b._timeline;return b===a._rootFramesTimeline},l.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},d},!0),window._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(a,b,c){var d=function(b){a.call(this,b),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=this.vars.yoyo===!0,this._dirty=!0},e=1e-10,f=[],g=new c(null,null,1,0),h=d.prototype=new a;return h.constructor=d,h.kill()._gc=!1,d.version="1.11.0",h.invalidate=function(){return this._yoyo=this.vars.yoyo===!0,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._uncache(!0),a.prototype.invalidate.call(this)},h.addCallback=function(a,c,d,e){return this.add(b.delayedCall(0,a,d,e),c)},h.removeCallback=function(a,b){if(a)if(null==b)this._kill(null,a);else for(var c=this.getTweensOf(a,!1),d=c.length,e=this._parseTimeOrLabel(b);--d>-1;)c[d]._startTime===e&&c[d]._enabled(!1,!1);return this},h.tweenTo=function(a,c){c=c||{};var d,e,h={ease:g,overwrite:2,useFrames:this.usesFrames(),immediateRender:!1};for(d in c)h[d]=c[d];return h.time=this._parseTimeOrLabel(a),e=new b(this,Math.abs(Number(h.time)-this._time)/this._timeScale||.001,h),h.onStart=function(){e.target.paused(!0),e.vars.time!==e.target.time()&&e.duration(Math.abs(e.vars.time-e.target.time())/e.target._timeScale),c.onStart&&c.onStart.apply(c.onStartScope||e,c.onStartParams||f)},e},h.tweenFromTo=function(a,b,c){c=c||{},a=this._parseTimeOrLabel(a),c.startAt={onComplete:this.seek,onCompleteParams:[a],onCompleteScope:this},c.immediateRender=c.immediateRender!==!1;var d=this.tweenTo(b,c);return d.duration(Math.abs(d.vars.time-a)/this._timeScale||.001)},h.render=function(a,b,c){this._gc&&this._enabled(!0,!1);var d,g,h,i,j,k,l=this._dirty?this.totalDuration():this._totalDuration,m=this._duration,n=this._time,o=this._totalTime,p=this._startTime,q=this._timeScale,r=this._rawPrevTime,s=this._paused,t=this._cycle;if(a>=l?(this._locked||(this._totalTime=l,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(g=!0,i="onComplete",0===this._duration&&(0===a||0>r||r===e)&&r!==a&&this._first&&(j=!0,r>e&&(i="onReverseComplete"))),this._rawPrevTime=this._duration||!b||a?a:e,this._yoyo&&0!==(1&this._cycle)?this._time=a=0:(this._time=m,a=m+1e-6)):1e-7>a?(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==n||0===m&&(r>e||0>a&&r>=0)&&!this._locked)&&(i="onReverseComplete",g=this._reversed),0>a?(this._active=!1,0===m&&r>=0&&this._first&&(j=!0),this._rawPrevTime=a):(this._rawPrevTime=m||!b||a?a:e,a=0,this._initted||(j=!0))):(0===m&&0>r&&(j=!0),this._time=this._rawPrevTime=a,this._locked||(this._totalTime=a,0!==this._repeat&&(k=m+this._repeatDelay,this._cycle=this._totalTime/k>>0,0!==this._cycle&&this._cycle===this._totalTime/k&&this._cycle--,this._time=this._totalTime-this._cycle*k,this._yoyo&&0!==(1&this._cycle)&&(this._time=m-this._time),this._time>m?(this._time=m,a=m+1e-6):this._time<0?this._time=a=0:a=this._time))),this._cycle!==t&&!this._locked){var u=this._yoyo&&0!==(1&t),v=u===(this._yoyo&&0!==(1&this._cycle)),w=this._totalTime,x=this._cycle,y=this._rawPrevTime,z=this._time;if(this._totalTime=t*m,this._cycle<t?u=!u:this._totalTime+=m,this._time=n,this._rawPrevTime=0===m?r-1e-5:r,this._cycle=t,this._locked=!0,n=u?0:m,this.render(n,b,0===m),b||this._gc||this.vars.onRepeat&&this.vars.onRepeat.apply(this.vars.onRepeatScope||this,this.vars.onRepeatParams||f),v&&(n=u?m+1e-6:-1e-6,this.render(n,!0,!1)),this._locked=!1,this._paused&&!s)return;this._time=z,this._totalTime=w,this._cycle=x,this._rawPrevTime=y}if(!(this._time!==n&&this._first||c||j))return o!==this._totalTime&&this._onUpdate&&(b||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||f)),void 0;if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==o&&a>0&&(this._active=!0),0===o&&this.vars.onStart&&0!==this._totalTime&&(b||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||f)),this._time>=n)for(d=this._first;d&&(h=d._next,!this._paused||s);)(d._active||d._startTime<=this._time&&!d._paused&&!d._gc)&&(d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=h;else for(d=this._last;d&&(h=d._prev,!this._paused||s);)(d._active||d._startTime<=n&&!d._paused&&!d._gc)&&(d._reversed?d.render((d._dirty?d.totalDuration():d._totalDuration)-(a-d._startTime)*d._timeScale,b,c):d.render((a-d._startTime)*d._timeScale,b,c)),d=h;this._onUpdate&&(b||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||f)),i&&(this._locked||this._gc||(p===this._startTime||q!==this._timeScale)&&(0===this._time||l>=this.totalDuration())&&(g&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[i]&&this.vars[i].apply(this.vars[i+"Scope"]||this,this.vars[i+"Params"]||f)))},h.getActive=function(a,b,c){null==a&&(a=!0),null==b&&(b=!0),null==c&&(c=!1);var d,e,f=[],g=this.getChildren(a,b,c),h=0,i=g.length;for(d=0;i>d;d++)e=g[d],e.isActive()&&(f[h++]=e);return f},h.getLabelAfter=function(a){a||0!==a&&(a=this._time);var b,c=this.getLabelsArray(),d=c.length;for(b=0;d>b;b++)if(c[b].time>a)return c[b].name;return null},h.getLabelBefore=function(a){null==a&&(a=this._time);for(var b=this.getLabelsArray(),c=b.length;--c>-1;)if(b[c].time<a)return b[c].name;return null},h.getLabelsArray=function(){var a,b=[],c=0;for(a in this._labels)b[c++]={time:this._labels[a],name:a};return b.sort(function(a,b){return a.time-b.time}),b},h.progress=function(a){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!==(1&this._cycle)?1-a:a)+this._cycle*(this._duration+this._repeatDelay),!1):this._time/this.duration()},h.totalProgress=function(a){return arguments.length?this.totalTime(this.totalDuration()*a,!1):this._totalTime/this.totalDuration()},h.totalDuration=function(b){return arguments.length?-1===this._repeat?this:this.duration((b-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},h.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),a>this._duration&&(a=this._duration),this._yoyo&&0!==(1&this._cycle)?a=this._duration-a+this._cycle*(this._duration+this._repeatDelay):0!==this._repeat&&(a+=this._cycle*(this._duration+this._repeatDelay)),this.totalTime(a,b)):this._time},h.repeat=function(a){return arguments.length?(this._repeat=a,this._uncache(!0)):this._repeat},h.repeatDelay=function(a){return arguments.length?(this._repeatDelay=a,this._uncache(!0)):this._repeatDelay},h.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},h.currentLabel=function(a){return arguments.length?this.seek(a,!0):this.getLabelBefore(this._time+1e-8)},d},!0),function(){var a=180/Math.PI,b=[],c=[],d=[],e={},f=function(a,b,c,d){this.a=a,this.b=b,this.c=c,this.d=d,this.da=d-a,this.ca=c-a,this.ba=b-a},g=",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",h=function(a,b,c,d){var e={a:a},f={},g={},h={c:d},i=(a+b)/2,j=(b+c)/2,k=(c+d)/2,l=(i+j)/2,m=(j+k)/2,n=(m-l)/8;return e.b=i+(a-i)/4,f.b=l+n,e.c=f.a=(e.b+f.b)/2,f.c=g.a=(l+m)/2,g.b=m-n,h.b=k+(d-k)/4,g.c=h.a=(g.b+h.b)/2,[e,f,g,h]},i=function(a,e,f,g,i){var j,k,l,m,n,o,p,q,r,s,t,u,v,w=a.length-1,x=0,y=a[0].a;for(j=0;w>j;j++)n=a[x],k=n.a,l=n.d,m=a[x+1].d,i?(t=b[j],u=c[j],v=(u+t)*e*.25/(g?.5:d[j]||.5),o=l-(l-k)*(g?.5*e:0!==t?v/t:0),p=l+(m-l)*(g?.5*e:0!==u?v/u:0),q=l-(o+((p-o)*(3*t/(t+u)+.5)/4||0))):(o=l-(l-k)*e*.5,p=l+(m-l)*e*.5,q=l-(o+p)/2),o+=q,p+=q,n.c=r=o,n.b=0!==j?y:y=n.a+.6*(n.c-n.a),n.da=l-k,n.ca=r-k,n.ba=y-k,f?(s=h(k,y,r,l),a.splice(x,1,s[0],s[1],s[2],s[3]),x+=4):x++,y=p;n=a[x],n.b=y,n.c=y+.4*(n.d-y),n.da=n.d-n.a,n.ca=n.c-n.a,n.ba=y-n.a,f&&(s=h(n.a,y,n.c,n.d),a.splice(x,1,s[0],s[1],s[2],s[3]))},j=function(a,d,e,g){var h,i,j,k,l,m,n=[];if(g)for(a=[g].concat(a),i=a.length;--i>-1;)"string"==typeof(m=a[i][d])&&"="===m.charAt(1)&&(a[i][d]=g[d]+Number(m.charAt(0)+m.substr(2)));if(h=a.length-2,0>h)return n[0]=new f(a[0][d],0,0,a[-1>h?0:1][d]),n;for(i=0;h>i;i++)j=a[i][d],k=a[i+1][d],n[i]=new f(j,0,0,k),e&&(l=a[i+2][d],b[i]=(b[i]||0)+(k-j)*(k-j),c[i]=(c[i]||0)+(l-k)*(l-k));return n[i]=new f(a[i][d],0,0,a[i+1][d]),n},k=function(a,f,h,k,l,m){var n,o,p,q,r,s,t,u,v={},w=[],x=m||a[0];l="string"==typeof l?","+l+",":g,null==f&&(f=1);for(o in a[0])w.push(o);if(a.length>1){for(u=a[a.length-1],t=!0,n=w.length;--n>-1;)if(o=w[n],Math.abs(x[o]-u[o])>.05){t=!1;break}t&&(a=a.concat(),m&&a.unshift(m),a.push(a[1]),m=a[a.length-3])}for(b.length=c.length=d.length=0,n=w.length;--n>-1;)o=w[n],e[o]=-1!==l.indexOf(","+o+","),v[o]=j(a,o,e[o],m);for(n=b.length;--n>-1;)b[n]=Math.sqrt(b[n]),c[n]=Math.sqrt(c[n]);if(!k){for(n=w.length;--n>-1;)if(e[o])for(p=v[w[n]],s=p.length-1,q=0;s>q;q++)r=p[q+1].da/c[q]+p[q].da/b[q],d[q]=(d[q]||0)+r*r;for(n=d.length;--n>-1;)d[n]=Math.sqrt(d[n])}for(n=w.length,q=h?4:1;--n>-1;)o=w[n],p=v[o],i(p,f,h,k,e[o]),t&&(p.splice(0,q),p.splice(p.length-q,q));return v},l=function(a,b,c){b=b||"soft";var d,e,g,h,i,j,k,l,m,n,o,p={},q="cubic"===b?3:2,r="soft"===b,s=[];if(r&&c&&(a=[c].concat(a)),null==a||a.length<q+1)throw"invalid Bezier data";for(m in a[0])s.push(m);for(j=s.length;--j>-1;){for(m=s[j],p[m]=i=[],n=0,l=a.length,k=0;l>k;k++)d=null==c?a[k][m]:"string"==typeof(o=a[k][m])&&"="===o.charAt(1)?c[m]+Number(o.charAt(0)+o.substr(2)):Number(o),r&&k>1&&l-1>k&&(i[n++]=(d+i[n-2])/2),i[n++]=d;for(l=n-q+1,n=0,k=0;l>k;k+=q)d=i[k],e=i[k+1],g=i[k+2],h=2===q?0:i[k+3],i[n++]=o=3===q?new f(d,e,g,h):new f(d,(2*e+d)/3,(2*e+g)/3,g);i.length=n}return p},m=function(a,b,c){for(var d,e,f,g,h,i,j,k,l,m,n,o=1/c,p=a.length;--p>-1;)for(m=a[p],f=m.a,g=m.d-f,h=m.c-f,i=m.b-f,d=e=0,k=1;c>=k;k++)j=o*k,l=1-j,d=e-(e=(j*j*g+3*l*(j*h+l*i))*j),n=p*c+k-1,b[n]=(b[n]||0)+d*d},n=function(a,b){b=b>>0||6;var c,d,e,f,g=[],h=[],i=0,j=0,k=b-1,l=[],n=[];for(c in a)m(a[c],g,b);for(e=g.length,d=0;e>d;d++)i+=Math.sqrt(g[d]),f=d%b,n[f]=i,f===k&&(j+=i,f=d/b>>0,l[f]=n,h[f]=j,i=0,n=[]);return{length:j,lengths:h,segments:l}},o=window._gsDefine.plugin({propName:"bezier",priority:-1,API:2,global:!0,init:function(a,b,c){this._target=a,b instanceof Array&&(b={values:b}),this._func={},this._round={},this._props=[],this._timeRes=null==b.timeResolution?6:parseInt(b.timeResolution,10);var d,e,f,g,h,i=b.values||[],j={},m=i[0],o=b.autoRotate||c.vars.orientToBezier;this._autoRotate=o?o instanceof Array?o:[["x","y","rotation",o===!0?0:Number(o)||0]]:null;for(d in m)this._props.push(d);for(f=this._props.length;--f>-1;)d=this._props[f],this._overwriteProps.push(d),e=this._func[d]="function"==typeof a[d],j[d]=e?a[d.indexOf("set")||"function"!=typeof a["get"+d.substr(3)]?d:"get"+d.substr(3)]():parseFloat(a[d]),h||j[d]!==i[0][d]&&(h=j);if(this._beziers="cubic"!==b.type&&"quadratic"!==b.type&&"soft"!==b.type?k(i,isNaN(b.curviness)?1:b.curviness,!1,"thruBasic"===b.type,b.correlate,h):l(i,b.type,j),this._segCount=this._beziers[d].length,this._timeRes){var p=n(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}if(o=this._autoRotate)for(o[0]instanceof Array||(this._autoRotate=o=[o]),f=o.length;--f>-1;)for(g=0;3>g;g++)d=o[f][g],this._func[d]="function"==typeof a[d]?a[d.indexOf("set")||"function"!=typeof a["get"+d.substr(3)]?d:"get"+d.substr(3)]:!1;return!0},set:function(b){var c,d,e,f,g,h,i,j,k,l,m=this._segCount,n=this._func,o=this._target;if(this._timeRes){if(k=this._lengths,l=this._curSeg,b*=this._length,e=this._li,b>this._l2&&m-1>e){for(j=m-1;j>e&&(this._l2=k[++e])<=b;);this._l1=k[e-1],this._li=e,this._curSeg=l=this._segments[e],this._s2=l[this._s1=this._si=0]}else if(b<this._l1&&e>0){for(;e>0&&(this._l1=k[--e])>=b;);0===e&&b<this._l1?this._l1=0:e++,this._l2=k[e],this._li=e,this._curSeg=l=this._segments[e],this._s1=l[(this._si=l.length-1)-1]||0,this._s2=l[this._si]}if(c=e,b-=this._l1,e=this._si,b>this._s2&&e<l.length-1){for(j=l.length-1;j>e&&(this._s2=l[++e])<=b;);this._s1=l[e-1],this._si=e}else if(b<this._s1&&e>0){for(;e>0&&(this._s1=l[--e])>=b;);0===e&&b<this._s1?this._s1=0:e++,this._s2=l[e],this._si=e}h=(e+(b-this._s1)/(this._s2-this._s1))*this._prec}else c=0>b?0:b>=1?m-1:m*b>>0,h=(b-c*(1/m))*m;for(d=1-h,e=this._props.length;--e>-1;)f=this._props[e],g=this._beziers[f][c],i=(h*h*g.da+3*d*(h*g.ca+d*g.ba))*h+g.a,this._round[f]&&(i=i+(i>0?.5:-.5)>>0),n[f]?o[f](i):o[f]=i;if(this._autoRotate){var p,q,r,s,t,u,v,w=this._autoRotate;for(e=w.length;--e>-1;)f=w[e][2],u=w[e][3]||0,v=w[e][4]===!0?1:a,g=this._beziers[w[e][0]],p=this._beziers[w[e][1]],g&&p&&(g=g[c],p=p[c],q=g.a+(g.b-g.a)*h,s=g.b+(g.c-g.b)*h,q+=(s-q)*h,s+=(g.c+(g.d-g.c)*h-s)*h,r=p.a+(p.b-p.a)*h,t=p.b+(p.c-p.b)*h,r+=(t-r)*h,t+=(p.c+(p.d-p.c)*h-t)*h,i=Math.atan2(t-r,s-q)*v+u,n[f]?o[f](i):o[f]=i)}}}),p=o.prototype;o.bezierThrough=k,o.cubicToQuadratic=h,o._autoCSS=!0,o.quadraticToCubic=function(a,b,c){return new f(a,(2*b+a)/3,(2*b+c)/3,c)},o._cssRegister=function(){var a=window._gsDefine.globals.CSSPlugin;if(a){var b=a._internals,c=b._parseToProxy,d=b._setPluginRatio,e=b.CSSPropTween;b._registerComplexSpecialProp("bezier",{parser:function(a,b,f,g,h,i){b instanceof Array&&(b={values:b}),i=new o;var j,k,l,m=b.values,n=m.length-1,p=[],q={};if(0>n)return h;for(j=0;n>=j;j++)l=c(a,m[j],g,h,i,n!==j),p[j]=l.end;for(k in b)q[k]=b[k];return q.values=p,h=new e(a,"bezier",0,0,l.pt,2),h.data=l,h.plugin=i,h.setRatio=d,0===q.autoRotate&&(q.autoRotate=!0),!q.autoRotate||q.autoRotate instanceof Array||(j=q.autoRotate===!0?0:Number(q.autoRotate),q.autoRotate=null!=l.end.left?[["left","top","rotation",j,!1]]:null!=l.end.x?[["x","y","rotation",j,!1]]:!1),q.autoRotate&&(g._transform||g._enableTransforms(!1),l.autoRotate=g._target._gsTransform),i._onInitTween(l.proxy,q,g._tween),h}})}},p._roundProps=function(a,b){for(var c=this._overwriteProps,d=c.length;--d>-1;)(a[c[d]]||a.bezier||a.bezierThrough)&&(this._round[c[d]]=b)},p._kill=function(a){var b,c,d=this._props;for(b in this._beziers)if(b in a)for(delete this._beziers[b],delete this._func[b],c=d.length;--c>-1;)d[c]===b&&d.splice(c,1);return this._super._kill.call(this,a)}}(),window._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],function(a,b){var c,d,e,f,g=function(){a.call(this,"css"),this._overwriteProps.length=0,this.setRatio=g.prototype.setRatio},h={},i=g.prototype=new a("css");i.constructor=g,g.version="1.11.0",g.API=2,g.defaultTransformPerspective=0,i="px",g.suffixMap={top:i,right:i,bottom:i,left:i,width:i,height:i,fontSize:i,padding:i,margin:i,perspective:i};var j,k,l,m,n,o,p=/(?:\d|\-\d|\.\d|\-\.\d)+/g,q=/(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,r=/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,s=/[^\d\-\.]/g,t=/(?:\d|\-|\+|=|#|\.)*/g,u=/opacity *= *([^)]*)/,v=/opacity:([^;]*)/,w=/alpha\(opacity *=.+?\)/i,x=/^(rgb|hsl)/,y=/([A-Z])/g,z=/-([a-z])/gi,A=/(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,B=function(a,b){return b.toUpperCase()},C=/(?:Left|Right|Width)/i,D=/(M11|M12|M21|M22)=[\d\-\.e]+/gi,E=/progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,F=/,(?=[^\)]*(?:\(|$))/gi,G=Math.PI/180,H=180/Math.PI,I={},J=document,K=J.createElement("div"),L=J.createElement("img"),M=g._internals={_specialProps:h},N=navigator.userAgent,O=function(){var a,b=N.indexOf("Android"),c=J.createElement("div");return l=-1!==N.indexOf("Safari")&&-1===N.indexOf("Chrome")&&(-1===b||Number(N.substr(b+8,1))>3),n=l&&Number(N.substr(N.indexOf("Version/")+8,1))<6,m=-1!==N.indexOf("Firefox"),/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(N),o=parseFloat(RegExp.$1),c.innerHTML="<a style='top:1px;opacity:.55;'>a</a>",a=c.getElementsByTagName("a")[0],a?/^0.55/.test(a.style.opacity):!1}(),P=function(a){return u.test("string"==typeof a?a:(a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100:1},Q=function(a){window.console&&console.log(a)},R="",S="",T=function(a,b){b=b||K;var c,d,e=b.style;if(void 0!==e[a])return a;for(a=a.charAt(0).toUpperCase()+a.substr(1),c=["O","Moz","ms","Ms","Webkit"],d=5;--d>-1&&void 0===e[c[d]+a];);return d>=0?(S=3===d?"ms":c[d],R="-"+S.toLowerCase()+"-",S+a):null},U=J.defaultView?J.defaultView.getComputedStyle:function(){},V=g.getStyle=function(a,b,c,d,e){var f;return O||"opacity"!==b?(!d&&a.style[b]?f=a.style[b]:(c=c||U(a,null))?(a=c.getPropertyValue(b.replace(y,"-$1").toLowerCase()),f=a||c.length?a:c[b]):a.currentStyle&&(f=a.currentStyle[b]),null==e||f&&"none"!==f&&"auto"!==f&&"auto auto"!==f?f:e):P(a)},W=function(a,b,c,d,e){if("px"===d||!d)return c;if("auto"===d||!c)return 0;var f,g=C.test(b),h=a,i=K.style,j=0>c;return j&&(c=-c),"%"===d&&-1!==b.indexOf("border")?f=c/100*(g?a.clientWidth:a.clientHeight):(i.cssText="border-style:solid;border-width:0;position:absolute;line-height:0;","%"!==d&&h.appendChild?i[g?"borderLeftWidth":"borderTopWidth"]=c+d:(h=a.parentNode||J.body,i[g?"width":"height"]=c+d),h.appendChild(K),f=parseFloat(K[g?"offsetWidth":"offsetHeight"]),h.removeChild(K),0!==f||e||(f=W(a,b,c,d,!0))),j?-f:f},X=function(a,b,c){if("absolute"!==V(a,"position",c))return 0;var d="left"===b?"Left":"Top",e=V(a,"margin"+d,c);return a["offset"+d]-(W(a,b,parseFloat(e),e.replace(t,""))||0)},Y=function(a,b){var c,d,e={};if(b=b||U(a,null))if(c=b.length)for(;--c>-1;)e[b[c].replace(z,B)]=b.getPropertyValue(b[c]);else for(c in b)e[c]=b[c];else if(b=a.currentStyle||a.style)for(c in b)"string"==typeof c&&void 0!==e[c]&&(e[c.replace(z,B)]=b[c]);return O||(e.opacity=P(a)),d=xb(a,b,!1),e.rotation=d.rotation,e.skewX=d.skewX,e.scaleX=d.scaleX,e.scaleY=d.scaleY,e.x=d.x,e.y=d.y,wb&&(e.z=d.z,e.rotationX=d.rotationX,e.rotationY=d.rotationY,e.scaleZ=d.scaleZ),e.filters&&delete e.filters,e},Z=function(a,b,c,d,e){var f,g,h,i={},j=a.style;for(g in c)"cssText"!==g&&"length"!==g&&isNaN(g)&&(b[g]!==(f=c[g])||e&&e[g])&&-1===g.indexOf("Origin")&&("number"==typeof f||"string"==typeof f)&&(i[g]="auto"!==f||"left"!==g&&"top"!==g?""!==f&&"auto"!==f&&"none"!==f||"string"!=typeof b[g]||""===b[g].replace(s,"")?f:0:X(a,g),void 0!==j[g]&&(h=new lb(j,g,j[g],h)));if(d)for(g in d)"className"!==g&&(i[g]=d[g]);return{difs:i,firstMPT:h}},$={width:["Left","Right"],height:["Top","Bottom"]},_=["marginLeft","marginRight","marginTop","marginBottom"],ab=function(a,b,c){var d=parseFloat("width"===b?a.offsetWidth:a.offsetHeight),e=$[b],f=e.length;for(c=c||U(a,null);--f>-1;)d-=parseFloat(V(a,"padding"+e[f],c,!0))||0,d-=parseFloat(V(a,"border"+e[f]+"Width",c,!0))||0;return d},bb=function(a,b){(null==a||""===a||"auto"===a||"auto auto"===a)&&(a="0 0");var c=a.split(" "),d=-1!==a.indexOf("left")?"0%":-1!==a.indexOf("right")?"100%":c[0],e=-1!==a.indexOf("top")?"0%":-1!==a.indexOf("bottom")?"100%":c[1];return null==e?e="0":"center"===e&&(e="50%"),("center"===d||isNaN(parseFloat(d))&&-1===(d+"").indexOf("="))&&(d="50%"),b&&(b.oxp=-1!==d.indexOf("%"),b.oyp=-1!==e.indexOf("%"),b.oxr="="===d.charAt(1),b.oyr="="===e.charAt(1),b.ox=parseFloat(d.replace(s,"")),b.oy=parseFloat(e.replace(s,""))),d+" "+e+(c.length>2?" "+c[2]:"")},cb=function(a,b){return"string"==typeof a&&"="===a.charAt(1)?parseInt(a.charAt(0)+"1",10)*parseFloat(a.substr(2)):parseFloat(a)-parseFloat(b)},db=function(a,b){return null==a?b:"string"==typeof a&&"="===a.charAt(1)?parseInt(a.charAt(0)+"1",10)*Number(a.substr(2))+b:parseFloat(a)},eb=function(a,b,c,d){var e,f,g,h,i=1e-6;return null==a?h=b:"number"==typeof a?h=a:(e=360,f=a.split("_"),g=Number(f[0].replace(s,""))*(-1===a.indexOf("rad")?1:H)-("="===a.charAt(1)?0:b),f.length&&(d&&(d[c]=b+g),-1!==a.indexOf("short")&&(g%=e,g!==g%(e/2)&&(g=0>g?g+e:g-e)),-1!==a.indexOf("_cw")&&0>g?g=(g+9999999999*e)%e-(g/e|0)*e:-1!==a.indexOf("ccw")&&g>0&&(g=(g-9999999999*e)%e-(g/e|0)*e)),h=b+g),i>h&&h>-i&&(h=0),h},fb={aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]},gb=function(a,b,c){return a=0>a?a+1:a>1?a-1:a,255*(1>6*a?b+(c-b)*a*6:.5>a?c:2>3*a?b+(c-b)*(2/3-a)*6:b)+.5|0},hb=function(a){var b,c,d,e,f,g;return a&&""!==a?"number"==typeof a?[a>>16,a>>8&255,255&a]:(","===a.charAt(a.length-1)&&(a=a.substr(0,a.length-1)),fb[a]?fb[a]:"#"===a.charAt(0)?(4===a.length&&(b=a.charAt(1),c=a.charAt(2),d=a.charAt(3),a="#"+b+b+c+c+d+d),a=parseInt(a.substr(1),16),[a>>16,a>>8&255,255&a]):"hsl"===a.substr(0,3)?(a=a.match(p),e=Number(a[0])%360/360,f=Number(a[1])/100,g=Number(a[2])/100,c=.5>=g?g*(f+1):g+f-g*f,b=2*g-c,a.length>3&&(a[3]=Number(a[3])),a[0]=gb(e+1/3,b,c),a[1]=gb(e,b,c),a[2]=gb(e-1/3,b,c),a):(a=a.match(p)||fb.transparent,a[0]=Number(a[0]),a[1]=Number(a[1]),a[2]=Number(a[2]),a.length>3&&(a[3]=Number(a[3])),a)):fb.black},ib="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";for(i in fb)ib+="|"+i+"\\b";ib=new RegExp(ib+")","gi");var jb=function(a,b,c,d){if(null==a)return function(a){return a};var e,f=b?(a.match(ib)||[""])[0]:"",g=a.split(f).join("").match(r)||[],h=a.substr(0,a.indexOf(g[0])),i=")"===a.charAt(a.length-1)?")":"",j=-1!==a.indexOf(" ")?" ":",",k=g.length,l=k>0?g[0].replace(p,""):"";return k?e=b?function(a){var b,m,n,o;if("number"==typeof a)a+=l;else if(d&&F.test(a)){for(o=a.replace(F,"|").split("|"),n=0;n<o.length;n++)o[n]=e(o[n]);return o.join(",")}if(b=(a.match(ib)||[f])[0],m=a.split(b).join("").match(r)||[],n=m.length,k>n--)for(;++n<k;)m[n]=c?m[(n-1)/2|0]:g[n];return h+m.join(j)+j+b+i+(-1!==a.indexOf("inset")?" inset":"")}:function(a){var b,f,m;if("number"==typeof a)a+=l;else if(d&&F.test(a)){for(f=a.replace(F,"|").split("|"),m=0;m<f.length;m++)f[m]=e(f[m]);return f.join(",")}if(b=a.match(r)||[],m=b.length,k>m--)for(;++m<k;)b[m]=c?b[(m-1)/2|0]:g[m];return h+b.join(j)+i}:function(a){return a}},kb=function(a){return a=a.split(","),function(b,c,d,e,f,g,h){var i,j=(c+"").split(" ");for(h={},i=0;4>i;i++)h[a[i]]=j[i]=j[i]||j[(i-1)/2>>0];return e.parse(b,h,f,g)}},lb=(M._setPluginRatio=function(a){this.plugin.setRatio(a);for(var b,c,d,e,f=this.data,g=f.proxy,h=f.firstMPT,i=1e-6;h;)b=g[h.v],h.r?b=b>0?b+.5|0:b-.5|0:i>b&&b>-i&&(b=0),h.t[h.p]=b,h=h._next;if(f.autoRotate&&(f.autoRotate.rotation=g.rotation),1===a)for(h=f.firstMPT;h;){if(c=h.t,c.type){if(1===c.type){for(e=c.xs0+c.s+c.xs1,d=1;d<c.l;d++)e+=c["xn"+d]+c["xs"+(d+1)];c.e=e}}else c.e=c.s+c.xs0;h=h._next}},function(a,b,c,d,e){this.t=a,this.p=b,this.v=c,this.r=e,d&&(d._prev=this,this._next=d)}),mb=(M._parseToProxy=function(a,b,c,d,e,f){var g,h,i,j,k,l=d,m={},n={},o=c._transform,p=I;for(c._transform=null,I=b,d=k=c.parse(a,b,d,e),I=p,f&&(c._transform=o,l&&(l._prev=null,l._prev&&(l._prev._next=null)));d&&d!==l;){if(d.type<=1&&(h=d.p,n[h]=d.s+d.c,m[h]=d.s,f||(j=new lb(d,"s",h,j,d.r),d.c=0),1===d.type))for(g=d.l;--g>0;)i="xn"+g,h=d.p+"_"+i,n[h]=d.data[i],m[h]=d[i],f||(j=new lb(d,i,h,j,d.rxp[i]));d=d._next}return{proxy:m,end:n,firstMPT:j,pt:k}},M.CSSPropTween=function(a,b,d,e,g,h,i,j,k,l,m){this.t=a,this.p=b,this.s=d,this.c=e,this.n=i||b,a instanceof mb||f.push(this.n),this.r=j,this.type=h||0,k&&(this.pr=k,c=!0),this.b=void 0===l?d:l,this.e=void 0===m?d+e:m,g&&(this._next=g,g._prev=this)}),nb=g.parseComplex=function(a,b,c,d,e,f,g,h,i,k){c=c||f||"",g=new mb(a,b,0,0,g,k?2:1,null,!1,h,c,d),d+="";var l,m,n,o,r,s,t,u,v,w,y,z,A=c.split(", ").join(",").split(" "),B=d.split(", ").join(",").split(" "),C=A.length,D=j!==!1;for((-1!==d.indexOf(",")||-1!==c.indexOf(","))&&(A=A.join(" ").replace(F,", ").split(" "),B=B.join(" ").replace(F,", ").split(" "),C=A.length),C!==B.length&&(A=(f||"").split(" "),C=A.length),g.plugin=i,g.setRatio=k,l=0;C>l;l++)if(o=A[l],r=B[l],u=parseFloat(o),u||0===u)g.appendXtra("",u,cb(r,u),r.replace(q,""),D&&-1!==r.indexOf("px"),!0);else if(e&&("#"===o.charAt(0)||fb[o]||x.test(o)))z=","===r.charAt(r.length-1)?"),":")",o=hb(o),r=hb(r),v=o.length+r.length>6,v&&!O&&0===r[3]?(g["xs"+g.l]+=g.l?" transparent":"transparent",g.e=g.e.split(B[l]).join("transparent")):(O||(v=!1),g.appendXtra(v?"rgba(":"rgb(",o[0],r[0]-o[0],",",!0,!0).appendXtra("",o[1],r[1]-o[1],",",!0).appendXtra("",o[2],r[2]-o[2],v?",":z,!0),v&&(o=o.length<4?1:o[3],g.appendXtra("",o,(r.length<4?1:r[3])-o,z,!1)));else if(s=o.match(p)){if(t=r.match(q),!t||t.length!==s.length)return g;for(n=0,m=0;m<s.length;m++)y=s[m],w=o.indexOf(y,n),g.appendXtra(o.substr(n,w-n),Number(y),cb(t[m],y),"",D&&"px"===o.substr(w+y.length,2),0===m),n=w+y.length;g["xs"+g.l]+=o.substr(n)}else g["xs"+g.l]+=g.l?" "+o:o;if(-1!==d.indexOf("=")&&g.data){for(z=g.xs0+g.data.s,l=1;l<g.l;l++)z+=g["xs"+l]+g.data["xn"+l];g.e=z+g["xs"+l]}return g.l||(g.type=-1,g.xs0=g.e),g.xfirst||g},ob=9;for(i=mb.prototype,i.l=i.pr=0;--ob>0;)i["xn"+ob]=0,i["xs"+ob]="";i.xs0="",i._next=i._prev=i.xfirst=i.data=i.plugin=i.setRatio=i.rxp=null,i.appendXtra=function(a,b,c,d,e,f){var g=this,h=g.l;return g["xs"+h]+=f&&h?" "+a:a||"",c||0===h||g.plugin?(g.l++,g.type=g.setRatio?2:1,g["xs"+g.l]=d||"",h>0?(g.data["xn"+h]=b+c,g.rxp["xn"+h]=e,g["xn"+h]=b,g.plugin||(g.xfirst=new mb(g,"xn"+h,b,c,g.xfirst||g,0,g.n,e,g.pr),g.xfirst.xs0=0),g):(g.data={s:b+c},g.rxp={},g.s=b,g.c=c,g.r=e,g)):(g["xs"+h]+=b+(d||""),g)};var pb=function(a,b){b=b||{},this.p=b.prefix?T(a)||a:a,h[a]=h[this.p]=this,this.format=b.formatter||jb(b.defaultValue,b.color,b.collapsible,b.multi),b.parser&&(this.parse=b.parser),this.clrs=b.color,this.multi=b.multi,this.keyword=b.keyword,this.dflt=b.defaultValue,this.pr=b.priority||0},qb=M._registerComplexSpecialProp=function(a,b,c){"object"!=typeof b&&(b={parser:c});var d,e,f=a.split(","),g=b.defaultValue;for(c=c||[g],d=0;d<f.length;d++)b.prefix=0===d&&b.prefix,b.defaultValue=c[d]||g,e=new pb(f[d],b)},rb=function(a){if(!h[a]){var b=a.charAt(0).toUpperCase()+a.substr(1)+"Plugin";qb(a,{parser:function(a,c,d,e,f,g,i){var j=(window.GreenSockGlobals||window).com.greensock.plugins[b];return j?(j._cssRegister(),h[d].parse(a,c,d,e,f,g,i)):(Q("Error: "+b+" js file not loaded."),f)}})}};i=pb.prototype,i.parseComplex=function(a,b,c,d,e,f){var g,h,i,j,k,l,m=this.keyword;if(this.multi&&(F.test(c)||F.test(b)?(h=b.replace(F,"|").split("|"),i=c.replace(F,"|").split("|")):m&&(h=[b],i=[c])),i){for(j=i.length>h.length?i.length:h.length,g=0;j>g;g++)b=h[g]=h[g]||this.dflt,c=i[g]=i[g]||this.dflt,m&&(k=b.indexOf(m),l=c.indexOf(m),k!==l&&(c=-1===l?i:h,c[g]+=" "+m));b=h.join(", "),c=i.join(", ")}return nb(a,this.p,b,c,this.clrs,this.dflt,d,this.pr,e,f)},i.parse=function(a,b,c,d,f,g){return this.parseComplex(a.style,this.format(V(a,this.p,e,!1,this.dflt)),this.format(b),f,g)},g.registerSpecialProp=function(a,b,c){qb(a,{parser:function(a,d,e,f,g,h){var i=new mb(a,e,0,0,g,2,e,!1,c);return i.plugin=h,i.setRatio=b(a,d,f._tween,e),i},priority:c})};var sb="scaleX,scaleY,scaleZ,x,y,z,skewX,rotation,rotationX,rotationY,perspective".split(","),tb=T("transform"),ub=R+"transform",vb=T("transformOrigin"),wb=null!==T("perspective"),xb=function(a,b,c,d){if(a._gsTransform&&c&&!d)return a._gsTransform;var e,f,h,i,j,k,l,m,n,o,p,q,r,s=c?a._gsTransform||{skewY:0}:{skewY:0},t=s.scaleX<0,u=2e-5,v=1e5,w=179.99,x=w*G,y=wb?parseFloat(V(a,vb,b,!1,"0 0 0").split(" ")[2])||s.zOrigin||0:0;for(tb?e=V(a,ub,b,!0):a.currentStyle&&(e=a.currentStyle.filter.match(D),e=e&&4===e.length?[e[0].substr(4),Number(e[2].substr(4)),Number(e[1].substr(4)),e[3].substr(4),s.x||0,s.y||0].join(","):""),f=(e||"").match(/(?:\-|\b)[\d\-\.e]+\b/gi)||[],h=f.length;--h>-1;)i=Number(f[h]),f[h]=(j=i-(i|=0))?(j*v+(0>j?-.5:.5)|0)/v+i:i;
if(16===f.length){var z=f[8],A=f[9],B=f[10],C=f[12],E=f[13],F=f[14];if(s.zOrigin&&(F=-s.zOrigin,C=z*F-f[12],E=A*F-f[13],F=B*F+s.zOrigin-f[14]),!c||d||null==s.rotationX){var I,J,K,L,M,N,O,P=f[0],Q=f[1],R=f[2],S=f[3],T=f[4],U=f[5],W=f[6],X=f[7],Y=f[11],Z=Math.atan2(W,B),$=-x>Z||Z>x;s.rotationX=Z*H,Z&&(L=Math.cos(-Z),M=Math.sin(-Z),I=T*L+z*M,J=U*L+A*M,K=W*L+B*M,z=T*-M+z*L,A=U*-M+A*L,B=W*-M+B*L,Y=X*-M+Y*L,T=I,U=J,W=K),Z=Math.atan2(z,P),s.rotationY=Z*H,Z&&(N=-x>Z||Z>x,L=Math.cos(-Z),M=Math.sin(-Z),I=P*L-z*M,J=Q*L-A*M,K=R*L-B*M,A=Q*M+A*L,B=R*M+B*L,Y=S*M+Y*L,P=I,Q=J,R=K),Z=Math.atan2(Q,U),s.rotation=Z*H,Z&&(O=-x>Z||Z>x,L=Math.cos(-Z),M=Math.sin(-Z),P=P*L+T*M,J=Q*L+U*M,U=Q*-M+U*L,W=R*-M+W*L,Q=J),O&&$?s.rotation=s.rotationX=0:O&&N?s.rotation=s.rotationY=0:N&&$&&(s.rotationY=s.rotationX=0),s.scaleX=(Math.sqrt(P*P+Q*Q)*v+.5|0)/v,s.scaleY=(Math.sqrt(U*U+A*A)*v+.5|0)/v,s.scaleZ=(Math.sqrt(W*W+B*B)*v+.5|0)/v,s.skewX=0,s.perspective=Y?1/(0>Y?-Y:Y):0,s.x=C,s.y=E,s.z=F}}else if(!(wb&&!d&&f.length&&s.x===f[4]&&s.y===f[5]&&(s.rotationX||s.rotationY)||void 0!==s.x&&"none"===V(a,"display",b))){var _=f.length>=6,ab=_?f[0]:1,bb=f[1]||0,cb=f[2]||0,db=_?f[3]:1;s.x=f[4]||0,s.y=f[5]||0,k=Math.sqrt(ab*ab+bb*bb),l=Math.sqrt(db*db+cb*cb),m=ab||bb?Math.atan2(bb,ab)*H:s.rotation||0,n=cb||db?Math.atan2(cb,db)*H+m:s.skewX||0,o=k-Math.abs(s.scaleX||0),p=l-Math.abs(s.scaleY||0),Math.abs(n)>90&&Math.abs(n)<270&&(t?(k*=-1,n+=0>=m?180:-180,m+=0>=m?180:-180):(l*=-1,n+=0>=n?180:-180)),q=(m-s.rotation)%180,r=(n-s.skewX)%180,(void 0===s.skewX||o>u||-u>o||p>u||-u>p||q>-w&&w>q&&q*v|!1||r>-w&&w>r&&r*v|!1)&&(s.scaleX=k,s.scaleY=l,s.rotation=m,s.skewX=n),wb&&(s.rotationX=s.rotationY=s.z=0,s.perspective=parseFloat(g.defaultTransformPerspective)||0,s.scaleZ=1)}s.zOrigin=y;for(h in s)s[h]<u&&s[h]>-u&&(s[h]=0);return c&&(a._gsTransform=s),s},yb=function(a){var b,c,d=this.data,e=-d.rotation*G,f=e+d.skewX*G,g=1e5,h=(Math.cos(e)*d.scaleX*g|0)/g,i=(Math.sin(e)*d.scaleX*g|0)/g,j=(Math.sin(f)*-d.scaleY*g|0)/g,k=(Math.cos(f)*d.scaleY*g|0)/g,l=this.t.style,m=this.t.currentStyle;if(m){c=i,i=-j,j=-c,b=m.filter,l.filter="";var n,p,q=this.t.offsetWidth,r=this.t.offsetHeight,s="absolute"!==m.position,v="progid:DXImageTransform.Microsoft.Matrix(M11="+h+", M12="+i+", M21="+j+", M22="+k,w=d.x,x=d.y;if(null!=d.ox&&(n=(d.oxp?q*d.ox*.01:d.ox)-q/2,p=(d.oyp?r*d.oy*.01:d.oy)-r/2,w+=n-(n*h+p*i),x+=p-(n*j+p*k)),s?(n=q/2,p=r/2,v+=", Dx="+(n-(n*h+p*i)+w)+", Dy="+(p-(n*j+p*k)+x)+")"):v+=", sizingMethod='auto expand')",l.filter=-1!==b.indexOf("DXImageTransform.Microsoft.Matrix(")?b.replace(E,v):v+" "+b,(0===a||1===a)&&1===h&&0===i&&0===j&&1===k&&(s&&-1===v.indexOf("Dx=0, Dy=0")||u.test(b)&&100!==parseFloat(RegExp.$1)||-1===b.indexOf("gradient("&&b.indexOf("Alpha"))&&l.removeAttribute("filter")),!s){var y,z,A,B=8>o?1:-1;for(n=d.ieOffsetX||0,p=d.ieOffsetY||0,d.ieOffsetX=Math.round((q-((0>h?-h:h)*q+(0>i?-i:i)*r))/2+w),d.ieOffsetY=Math.round((r-((0>k?-k:k)*r+(0>j?-j:j)*q))/2+x),ob=0;4>ob;ob++)z=_[ob],y=m[z],c=-1!==y.indexOf("px")?parseFloat(y):W(this.t,z,parseFloat(y),y.replace(t,""))||0,A=c!==d[z]?2>ob?-d.ieOffsetX:-d.ieOffsetY:2>ob?n-d.ieOffsetX:p-d.ieOffsetY,l[z]=(d[z]=Math.round(c-A*(0===ob||2===ob?1:B)))+"px"}}},zb=function(){var a,b,c,d,e,f,g,h,i,j,k,l,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B=this.data,C=this.t.style,D=B.rotation*G,E=B.scaleX,F=B.scaleY,H=B.scaleZ,I=B.perspective;if(m&&(y=C.top?"top":C.bottom?"bottom":parseFloat(V(this.t,"top",null,!1))?"bottom":"top",u=V(this.t,y,null,!1),z=parseFloat(u)||0,A=u.substr((z+"").length)||"px",B._ffFix=!B._ffFix,C[y]=(B._ffFix?z+.05:z-.05)+A),D||B.skewX)s=Math.cos(D),t=Math.sin(D),a=s,e=t,B.skewX&&(D-=B.skewX*G,s=Math.cos(D),t=Math.sin(D)),b=-t,f=s;else{if(!(B.rotationY||B.rotationX||1!==H||I))return C[tb]="translate3d("+B.x+"px,"+B.y+"px,"+B.z+"px)"+(1!==E||1!==F?" scale("+E+","+F+")":""),void 0;a=f=1,b=e=0}k=1,c=d=g=h=i=j=l=n=o=0,p=I?-1/I:0,q=B.zOrigin,r=1e5,D=B.rotationY*G,D&&(s=Math.cos(D),t=Math.sin(D),i=k*-t,n=p*-t,c=a*t,g=e*t,k*=s,p*=s,a*=s,e*=s),D=B.rotationX*G,D&&(s=Math.cos(D),t=Math.sin(D),u=b*s+c*t,v=f*s+g*t,w=j*s+k*t,x=o*s+p*t,c=b*-t+c*s,g=f*-t+g*s,k=j*-t+k*s,p=o*-t+p*s,b=u,f=v,j=w,o=x),1!==H&&(c*=H,g*=H,k*=H,p*=H),1!==F&&(b*=F,f*=F,j*=F,o*=F),1!==E&&(a*=E,e*=E,i*=E,n*=E),q&&(l-=q,d=c*l,h=g*l,l=k*l+q),d=(u=(d+=B.x)-(d|=0))?(u*r+(0>u?-.5:.5)|0)/r+d:d,h=(u=(h+=B.y)-(h|=0))?(u*r+(0>u?-.5:.5)|0)/r+h:h,l=(u=(l+=B.z)-(l|=0))?(u*r+(0>u?-.5:.5)|0)/r+l:l,C[tb]="matrix3d("+[(a*r|0)/r,(e*r|0)/r,(i*r|0)/r,(n*r|0)/r,(b*r|0)/r,(f*r|0)/r,(j*r|0)/r,(o*r|0)/r,(c*r|0)/r,(g*r|0)/r,(k*r|0)/r,(p*r|0)/r,d,h,l,I?1+-l/I:1].join(",")+")"},Ab=function(){var a,b,c,d,e,f,g,h,i,j=this.data,k=this.t,l=k.style;m&&(a=l.top?"top":l.bottom?"bottom":parseFloat(V(k,"top",null,!1))?"bottom":"top",b=V(k,a,null,!1),c=parseFloat(b)||0,d=b.substr((c+"").length)||"px",j._ffFix=!j._ffFix,l[a]=(j._ffFix?c+.05:c-.05)+d),j.rotation||j.skewX?(e=j.rotation*G,f=e-j.skewX*G,g=1e5,h=j.scaleX*g,i=j.scaleY*g,l[tb]="matrix("+(Math.cos(e)*h|0)/g+","+(Math.sin(e)*h|0)/g+","+(Math.sin(f)*-i|0)/g+","+(Math.cos(f)*i|0)/g+","+j.x+","+j.y+")"):l[tb]="matrix("+j.scaleX+",0,0,"+j.scaleY+","+j.x+","+j.y+")"};qb("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D",{parser:function(a,b,c,d,f,g,h){if(d._transform)return f;var i,j,k,l,m,n,o,p=d._transform=xb(a,e,!0,h.parseTransform),q=a.style,r=1e-6,s=sb.length,t=h,u={};if("string"==typeof t.transform&&tb)k=q.cssText,q[tb]=t.transform,q.display="block",i=xb(a,null,!1),q.cssText=k;else if("object"==typeof t){if(i={scaleX:db(null!=t.scaleX?t.scaleX:t.scale,p.scaleX),scaleY:db(null!=t.scaleY?t.scaleY:t.scale,p.scaleY),scaleZ:db(null!=t.scaleZ?t.scaleZ:t.scale,p.scaleZ),x:db(t.x,p.x),y:db(t.y,p.y),z:db(t.z,p.z),perspective:db(t.transformPerspective,p.perspective)},o=t.directionalRotation,null!=o)if("object"==typeof o)for(k in o)t[k]=o[k];else t.rotation=o;i.rotation=eb("rotation"in t?t.rotation:"shortRotation"in t?t.shortRotation+"_short":"rotationZ"in t?t.rotationZ:p.rotation,p.rotation,"rotation",u),wb&&(i.rotationX=eb("rotationX"in t?t.rotationX:"shortRotationX"in t?t.shortRotationX+"_short":p.rotationX||0,p.rotationX,"rotationX",u),i.rotationY=eb("rotationY"in t?t.rotationY:"shortRotationY"in t?t.shortRotationY+"_short":p.rotationY||0,p.rotationY,"rotationY",u)),i.skewX=null==t.skewX?p.skewX:eb(t.skewX,p.skewX),i.skewY=null==t.skewY?p.skewY:eb(t.skewY,p.skewY),(j=i.skewY-p.skewY)&&(i.skewX+=j,i.rotation+=j)}for(null!=t.force3D&&(p.force3D=t.force3D,n=!0),m=p.force3D||p.z||p.rotationX||p.rotationY||i.z||i.rotationX||i.rotationY||i.perspective,m||null==t.scale||(i.scaleZ=1);--s>-1;)c=sb[s],l=i[c]-p[c],(l>r||-r>l||null!=I[c])&&(n=!0,f=new mb(p,c,p[c],l,f),c in u&&(f.e=u[c]),f.xs0=0,f.plugin=g,d._overwriteProps.push(f.n));return l=t.transformOrigin,(l||wb&&m&&p.zOrigin)&&(tb?(n=!0,c=vb,l=(l||V(a,c,e,!1,"50% 50%"))+"",f=new mb(q,c,0,0,f,-1,"transformOrigin"),f.b=q[c],f.plugin=g,wb?(k=p.zOrigin,l=l.split(" "),p.zOrigin=(l.length>2&&(0===k||"0px"!==l[2])?parseFloat(l[2]):k)||0,f.xs0=f.e=q[c]=l[0]+" "+(l[1]||"50%")+" 0px",f=new mb(p,"zOrigin",0,0,f,-1,f.n),f.b=k,f.xs0=f.e=p.zOrigin):f.xs0=f.e=q[c]=l):bb(l+"",p)),n&&(d._transformType=m||3===this._transformType?3:2),f},prefix:!0}),qb("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),qb("borderRadius",{defaultValue:"0px",parser:function(a,b,c,f,g){b=this.format(b);var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x=["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],y=a.style;for(p=parseFloat(a.offsetWidth),q=parseFloat(a.offsetHeight),h=b.split(" "),i=0;i<x.length;i++)this.p.indexOf("border")&&(x[i]=T(x[i])),l=k=V(a,x[i],e,!1,"0px"),-1!==l.indexOf(" ")&&(k=l.split(" "),l=k[0],k=k[1]),m=j=h[i],n=parseFloat(l),s=l.substr((n+"").length),t="="===m.charAt(1),t?(o=parseInt(m.charAt(0)+"1",10),m=m.substr(2),o*=parseFloat(m),r=m.substr((o+"").length-(0>o?1:0))||""):(o=parseFloat(m),r=m.substr((o+"").length)),""===r&&(r=d[c]||s),r!==s&&(u=W(a,"borderLeft",n,s),v=W(a,"borderTop",n,s),"%"===r?(l=u/p*100+"%",k=v/q*100+"%"):"em"===r?(w=W(a,"borderLeft",1,"em"),l=u/w+"em",k=v/w+"em"):(l=u+"px",k=v+"px"),t&&(m=parseFloat(l)+o+r,j=parseFloat(k)+o+r)),g=nb(y,x[i],l+" "+k,m+" "+j,!1,"0px",g);return g},prefix:!0,formatter:jb("0px 0px 0px 0px",!1,!0)}),qb("backgroundPosition",{defaultValue:"0 0",parser:function(a,b,c,d,f,g){var h,i,j,k,l,m,n="background-position",p=e||U(a,null),q=this.format((p?o?p.getPropertyValue(n+"-x")+" "+p.getPropertyValue(n+"-y"):p.getPropertyValue(n):a.currentStyle.backgroundPositionX+" "+a.currentStyle.backgroundPositionY)||"0 0"),r=this.format(b);if(-1!==q.indexOf("%")!=(-1!==r.indexOf("%"))&&(m=V(a,"backgroundImage").replace(A,""),m&&"none"!==m)){for(h=q.split(" "),i=r.split(" "),L.setAttribute("src",m),j=2;--j>-1;)q=h[j],k=-1!==q.indexOf("%"),k!==(-1!==i[j].indexOf("%"))&&(l=0===j?a.offsetWidth-L.width:a.offsetHeight-L.height,h[j]=k?parseFloat(q)/100*l+"px":parseFloat(q)/l*100+"%");q=h.join(" ")}return this.parseComplex(a.style,q,r,f,g)},formatter:bb}),qb("backgroundSize",{defaultValue:"0 0",formatter:bb}),qb("perspective",{defaultValue:"0px",prefix:!0}),qb("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),qb("transformStyle",{prefix:!0}),qb("backfaceVisibility",{prefix:!0}),qb("userSelect",{prefix:!0}),qb("margin",{parser:kb("marginTop,marginRight,marginBottom,marginLeft")}),qb("padding",{parser:kb("paddingTop,paddingRight,paddingBottom,paddingLeft")}),qb("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(a,b,c,d,f,g){var h,i,j;return 9>o?(i=a.currentStyle,j=8>o?" ":",",h="rect("+i.clipTop+j+i.clipRight+j+i.clipBottom+j+i.clipLeft+")",b=this.format(b).split(",").join(j)):(h=this.format(V(a,this.p,e,!1,this.dflt)),b=this.format(b)),this.parseComplex(a.style,h,b,f,g)}}),qb("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),qb("autoRound,strictUnits",{parser:function(a,b,c,d,e){return e}}),qb("border",{defaultValue:"0px solid #000",parser:function(a,b,c,d,f,g){return this.parseComplex(a.style,this.format(V(a,"borderTopWidth",e,!1,"0px")+" "+V(a,"borderTopStyle",e,!1,"solid")+" "+V(a,"borderTopColor",e,!1,"#000")),this.format(b),f,g)},color:!0,formatter:function(a){var b=a.split(" ");return b[0]+" "+(b[1]||"solid")+" "+(a.match(ib)||["#000"])[0]}}),qb("float,cssFloat,styleFloat",{parser:function(a,b,c,d,e){var f=a.style,g="cssFloat"in f?"cssFloat":"styleFloat";return new mb(f,g,0,0,e,-1,c,!1,0,f[g],b)}});var Bb=function(a){var b,c=this.t,d=c.filter||V(this.data,"filter"),e=this.s+this.c*a|0;100===e&&(-1===d.indexOf("atrix(")&&-1===d.indexOf("radient(")&&-1===d.indexOf("oader(")?(c.removeAttribute("filter"),b=!V(this.data,"filter")):(c.filter=d.replace(w,""),b=!0)),b||(this.xn1&&(c.filter=d=d||"alpha(opacity="+e+")"),-1===d.indexOf("opacity")?0===e&&this.xn1||(c.filter=d+" alpha(opacity="+e+")"):c.filter=d.replace(u,"opacity="+e))};qb("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(a,b,c,d,f,g){var h=parseFloat(V(a,"opacity",e,!1,"1")),i=a.style,j="autoAlpha"===c;return"string"==typeof b&&"="===b.charAt(1)&&(b=("-"===b.charAt(0)?-1:1)*parseFloat(b.substr(2))+h),j&&1===h&&"hidden"===V(a,"visibility",e)&&0!==b&&(h=0),O?f=new mb(i,"opacity",h,b-h,f):(f=new mb(i,"opacity",100*h,100*(b-h),f),f.xn1=j?1:0,i.zoom=1,f.type=2,f.b="alpha(opacity="+f.s+")",f.e="alpha(opacity="+(f.s+f.c)+")",f.data=a,f.plugin=g,f.setRatio=Bb),j&&(f=new mb(i,"visibility",0,0,f,-1,null,!1,0,0!==h?"inherit":"hidden",0===b?"hidden":"inherit"),f.xs0="inherit",d._overwriteProps.push(f.n),d._overwriteProps.push(c)),f}});var Cb=function(a,b){b&&(a.removeProperty?a.removeProperty(b.replace(y,"-$1").toLowerCase()):a.removeAttribute(b))},Db=function(a){if(this.t._gsClassPT=this,1===a||0===a){this.t.className=0===a?this.b:this.e;for(var b=this.data,c=this.t.style;b;)b.v?c[b.p]=b.v:Cb(c,b.p),b=b._next;1===a&&this.t._gsClassPT===this&&(this.t._gsClassPT=null)}else this.t.className!==this.e&&(this.t.className=this.e)};qb("className",{parser:function(a,b,d,f,g,h,i){var j,k,l,m,n,o=a.className,p=a.style.cssText;if(g=f._classNamePT=new mb(a,d,0,0,g,2),g.setRatio=Db,g.pr=-11,c=!0,g.b=o,k=Y(a,e),l=a._gsClassPT){for(m={},n=l.data;n;)m[n.p]=1,n=n._next;l.setRatio(1)}return a._gsClassPT=g,g.e="="!==b.charAt(1)?b:o.replace(new RegExp("\\s*\\b"+b.substr(2)+"\\b"),"")+("+"===b.charAt(0)?" "+b.substr(2):""),f._tween._duration&&(a.className=g.e,j=Z(a,k,Y(a),i,m),a.className=o,g.data=j.firstMPT,a.style.cssText=p,g=g.xfirst=f.parse(a,j.difs,g,h)),g}});var Eb=function(a){if((1===a||0===a)&&this.data._totalTime===this.data._totalDuration&&"isFromStart"!==this.data.data){var b,c,d,e,f=this.t.style,g=h.transform.parse;if("all"===this.e)f.cssText="",e=!0;else for(b=this.e.split(","),d=b.length;--d>-1;)c=b[d],h[c]&&(h[c].parse===g?e=!0:c="transformOrigin"===c?vb:h[c].p),Cb(f,c);e&&(Cb(f,tb),this.t._gsTransform&&delete this.t._gsTransform)}};for(qb("clearProps",{parser:function(a,b,d,e,f){return f=new mb(a,d,0,0,f,2),f.setRatio=Eb,f.e=b,f.pr=-10,f.data=e._tween,c=!0,f}}),i="bezier,throwProps,physicsProps,physics2D".split(","),ob=i.length;ob--;)rb(i[ob]);i=g.prototype,i._firstPT=null,i._onInitTween=function(a,b,h){if(!a.nodeType)return!1;this._target=a,this._tween=h,this._vars=b,j=b.autoRound,c=!1,d=b.suffixMap||g.suffixMap,e=U(a,""),f=this._overwriteProps;var i,m,o,p,q,r,s,t,u,w=a.style;if(k&&""===w.zIndex&&(i=V(a,"zIndex",e),("auto"===i||""===i)&&(w.zIndex=0)),"string"==typeof b&&(p=w.cssText,i=Y(a,e),w.cssText=p+";"+b,i=Z(a,i,Y(a)).difs,!O&&v.test(b)&&(i.opacity=parseFloat(RegExp.$1)),b=i,w.cssText=p),this._firstPT=m=this.parse(a,b,null),this._transformType){for(u=3===this._transformType,tb?l&&(k=!0,""===w.zIndex&&(s=V(a,"zIndex",e),("auto"===s||""===s)&&(w.zIndex=0)),n&&(w.WebkitBackfaceVisibility=this._vars.WebkitBackfaceVisibility||(u?"visible":"hidden"))):w.zoom=1,o=m;o&&o._next;)o=o._next;t=new mb(a,"transform",0,0,null,2),this._linkCSSP(t,null,o),t.setRatio=u&&wb?zb:tb?Ab:yb,t.data=this._transform||xb(a,e,!0),f.pop()}if(c){for(;m;){for(r=m._next,o=p;o&&o.pr>m.pr;)o=o._next;(m._prev=o?o._prev:q)?m._prev._next=m:p=m,(m._next=o)?o._prev=m:q=m,m=r}this._firstPT=p}return!0},i.parse=function(a,b,c,f){var g,i,k,l,m,n,o,p,q,r,s=a.style;for(g in b)n=b[g],i=h[g],i?c=i.parse(a,n,g,this,c,f,b):(m=V(a,g,e)+"",q="string"==typeof n,"color"===g||"fill"===g||"stroke"===g||-1!==g.indexOf("Color")||q&&x.test(n)?(q||(n=hb(n),n=(n.length>3?"rgba(":"rgb(")+n.join(",")+")"),c=nb(s,g,m,n,!0,"transparent",c,0,f)):!q||-1===n.indexOf(" ")&&-1===n.indexOf(",")?(k=parseFloat(m),o=k||0===k?m.substr((k+"").length):"",(""===m||"auto"===m)&&("width"===g||"height"===g?(k=ab(a,g,e),o="px"):"left"===g||"top"===g?(k=X(a,g,e),o="px"):(k="opacity"!==g?0:1,o="")),r=q&&"="===n.charAt(1),r?(l=parseInt(n.charAt(0)+"1",10),n=n.substr(2),l*=parseFloat(n),p=n.replace(t,"")):(l=parseFloat(n),p=q?n.substr((l+"").length)||"":""),""===p&&(p=d[g]||o),n=l||0===l?(r?l+k:l)+p:b[g],o!==p&&""!==p&&(l||0===l)&&(k||0===k)&&(k=W(a,g,k,o),"%"===p?(k/=W(a,g,100,"%")/100,k>100&&(k=100),b.strictUnits!==!0&&(m=k+"%")):"em"===p?k/=W(a,g,1,"em"):(l=W(a,g,l,p),p="px"),r&&(l||0===l)&&(n=l+k+p)),r&&(l+=k),!k&&0!==k||!l&&0!==l?void 0!==s[g]&&(n||n+""!="NaN"&&null!=n)?(c=new mb(s,g,l||k||0,0,c,-1,g,!1,0,m,n),c.xs0="none"!==n||"display"!==g&&-1===g.indexOf("Style")?n:m):Q("invalid "+g+" tween value: "+b[g]):(c=new mb(s,g,k,l-k,c,0,g,j!==!1&&("px"===p||"zIndex"===g),0,m,n),c.xs0=p)):c=nb(s,g,m,n,!0,null,c,0,f)),f&&c&&!c.plugin&&(c.plugin=f);return c},i.setRatio=function(a){var b,c,d,e=this._firstPT,f=1e-6;if(1!==a||this._tween._time!==this._tween._duration&&0!==this._tween._time)if(a||this._tween._time!==this._tween._duration&&0!==this._tween._time||this._tween._rawPrevTime===-1e-6)for(;e;){if(b=e.c*a+e.s,e.r?b=b>0?b+.5|0:b-.5|0:f>b&&b>-f&&(b=0),e.type)if(1===e.type)if(d=e.l,2===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2;else if(3===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3;else if(4===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4;else if(5===d)e.t[e.p]=e.xs0+b+e.xs1+e.xn1+e.xs2+e.xn2+e.xs3+e.xn3+e.xs4+e.xn4+e.xs5;else{for(c=e.xs0+b+e.xs1,d=1;d<e.l;d++)c+=e["xn"+d]+e["xs"+(d+1)];e.t[e.p]=c}else-1===e.type?e.t[e.p]=e.xs0:e.setRatio&&e.setRatio(a);else e.t[e.p]=b+e.xs0;e=e._next}else for(;e;)2!==e.type?e.t[e.p]=e.b:e.setRatio(a),e=e._next;else for(;e;)2!==e.type?e.t[e.p]=e.e:e.setRatio(a),e=e._next},i._enableTransforms=function(a){this._transformType=a||3===this._transformType?3:2,this._transform=this._transform||xb(this._target,e,!0)},i._linkCSSP=function(a,b,c,d){return a&&(b&&(b._prev=a),a._next&&(a._next._prev=a._prev),a._prev?a._prev._next=a._next:this._firstPT===a&&(this._firstPT=a._next,d=!0),c?c._next=a:d||null!==this._firstPT||(this._firstPT=a),a._next=b,a._prev=c),a},i._kill=function(b){var c,d,e,f=b;if(b.autoAlpha||b.alpha){f={};for(d in b)f[d]=b[d];f.opacity=1,f.autoAlpha&&(f.visibility=1)}return b.className&&(c=this._classNamePT)&&(e=c.xfirst,e&&e._prev?this._linkCSSP(e._prev,c._next,e._prev._prev):e===this._firstPT&&(this._firstPT=c._next),c._next&&this._linkCSSP(c._next,c._next._next,e._prev),this._classNamePT=null),a.prototype._kill.call(this,f)};var Fb=function(a,b,c){var d,e,f,g;if(a.slice)for(e=a.length;--e>-1;)Fb(a[e],b,c);else for(d=a.childNodes,e=d.length;--e>-1;)f=d[e],g=f.type,f.style&&(b.push(Y(f)),c&&c.push(f)),1!==g&&9!==g&&11!==g||!f.childNodes.length||Fb(f,b,c)};return g.cascadeTo=function(a,c,d){var e,f,g,h=b.to(a,c,d),i=[h],j=[],k=[],l=[],m=b._internals.reservedProps;for(a=h._targets||h.target,Fb(a,j,l),h.render(c,!0),Fb(a,k),h.render(0,!0),h._enabled(!0),e=l.length;--e>-1;)if(f=Z(l[e],j[e],k[e]),f.firstMPT){f=f.difs;for(g in d)m[g]&&(f[g]=d[g]);i.push(b.to(l[e],c,f))}return i},a.activate([g]),g},!0),function(){var a=window._gsDefine.plugin({propName:"roundProps",priority:-1,API:2,init:function(a,b,c){return this._tween=c,!0}}),b=a.prototype;b._onInitAllProps=function(){for(var a,b,c,d=this._tween,e=d.vars.roundProps instanceof Array?d.vars.roundProps:d.vars.roundProps.split(","),f=e.length,g={},h=d._propLookup.roundProps;--f>-1;)g[e[f]]=1;for(f=e.length;--f>-1;)for(a=e[f],b=d._firstPT;b;)c=b._next,b.pg?b.t._roundProps(g,!0):b.n===a&&(this._add(b.t,a,b.s,b.c),c&&(c._prev=b._prev),b._prev?b._prev._next=c:d._firstPT===b&&(d._firstPT=c),b._next=b._prev=null,d._propLookup[a]=h),b=c;return!1},b._add=function(a,b,c,d){this._addTween(a,b,c,c+d,b,!0),this._overwriteProps.push(b)}}(),window._gsDefine.plugin({propName:"attr",API:2,init:function(a,b){var c;if("function"!=typeof a.setAttribute)return!1;this._target=a,this._proxy={};for(c in b)this._addTween(this._proxy,c,parseFloat(a.getAttribute(c)),b[c],c)&&this._overwriteProps.push(c);return!0},set:function(a){this._super.setRatio.call(this,a);for(var b,c=this._overwriteProps,d=c.length;--d>-1;)b=c[d],this._target.setAttribute(b,this._proxy[b]+"")}}),window._gsDefine.plugin({propName:"directionalRotation",API:2,init:function(a,b){"object"!=typeof b&&(b={rotation:b}),this.finals={};var c,d,e,f,g,h,i=b.useRadians===!0?2*Math.PI:360,j=1e-6;for(c in b)"useRadians"!==c&&(h=(b[c]+"").split("_"),d=h[0],e=parseFloat("function"!=typeof a[c]?a[c]:a[c.indexOf("set")||"function"!=typeof a["get"+c.substr(3)]?c:"get"+c.substr(3)]()),f=this.finals[c]="string"==typeof d&&"="===d.charAt(1)?e+parseInt(d.charAt(0)+"1",10)*Number(d.substr(2)):Number(d)||0,g=f-e,h.length&&(d=h.join("_"),-1!==d.indexOf("short")&&(g%=i,g!==g%(i/2)&&(g=0>g?g+i:g-i)),-1!==d.indexOf("_cw")&&0>g?g=(g+9999999999*i)%i-(g/i|0)*i:-1!==d.indexOf("ccw")&&g>0&&(g=(g-9999999999*i)%i-(g/i|0)*i)),(g>j||-j>g)&&(this._addTween(a,c,e,e+g,c),this._overwriteProps.push(c)));return!0},set:function(a){var b;if(1!==a)this._super.setRatio.call(this,a);else for(b=this._firstPT;b;)b.f?b.t[b.p](this.finals[b.p]):b.t[b.p]=this.finals[b.p],b=b._next}})._autoCSS=!0,window._gsDefine("easing.Back",["easing.Ease"],function(a){var b,c,d,e=window.GreenSockGlobals||window,f=e.com.greensock,g=2*Math.PI,h=Math.PI/2,i=f._class,j=function(b,c){var d=i("easing."+b,function(){},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,d},k=a.register||function(){},l=function(a,b,c,d){var e=i("easing."+a,{easeOut:new b,easeIn:new c,easeInOut:new d},!0);return k(e,a),e},m=function(a,b,c){this.t=a,this.v=b,c&&(this.next=c,c.prev=this,this.c=c.v-b,this.gap=c.t-a)},n=function(b,c){var d=i("easing."+b,function(a){this._p1=a||0===a?a:1.70158,this._p2=1.525*this._p1},!0),e=d.prototype=new a;return e.constructor=d,e.getRatio=c,e.config=function(a){return new d(a)},d},o=l("Back",n("BackOut",function(a){return(a-=1)*a*((this._p1+1)*a+this._p1)+1}),n("BackIn",function(a){return a*a*((this._p1+1)*a-this._p1)}),n("BackInOut",function(a){return(a*=2)<1?.5*a*a*((this._p2+1)*a-this._p2):.5*((a-=2)*a*((this._p2+1)*a+this._p2)+2)})),p=i("easing.SlowMo",function(a,b,c){b=b||0===b?b:.7,null==a?a=.7:a>1&&(a=1),this._p=1!==a?b:0,this._p1=(1-a)/2,this._p2=a,this._p3=this._p1+this._p2,this._calcEnd=c===!0},!0),q=p.prototype=new a;return q.constructor=p,q.getRatio=function(a){var b=a+(.5-a)*this._p;return a<this._p1?this._calcEnd?1-(a=1-a/this._p1)*a:b-(a=1-a/this._p1)*a*a*a*b:a>this._p3?this._calcEnd?1-(a=(a-this._p3)/this._p1)*a:b+(a-b)*(a=(a-this._p3)/this._p1)*a*a*a:this._calcEnd?1:b},p.ease=new p(.7,.7),q.config=p.config=function(a,b,c){return new p(a,b,c)},b=i("easing.SteppedEase",function(a){a=a||1,this._p1=1/a,this._p2=a+1},!0),q=b.prototype=new a,q.constructor=b,q.getRatio=function(a){return 0>a?a=0:a>=1&&(a=.999999999),(this._p2*a>>0)*this._p1},q.config=b.config=function(a){return new b(a)},c=i("easing.RoughEase",function(b){b=b||{};for(var c,d,e,f,g,h,i=b.taper||"none",j=[],k=0,l=0|(b.points||20),n=l,o=b.randomize!==!1,p=b.clamp===!0,q=b.template instanceof a?b.template:null,r="number"==typeof b.strength?.4*b.strength:.4;--n>-1;)c=o?Math.random():1/l*n,d=q?q.getRatio(c):c,"none"===i?e=r:"out"===i?(f=1-c,e=f*f*r):"in"===i?e=c*c*r:.5>c?(f=2*c,e=f*f*.5*r):(f=2*(1-c),e=f*f*.5*r),o?d+=Math.random()*e-.5*e:n%2?d+=.5*e:d-=.5*e,p&&(d>1?d=1:0>d&&(d=0)),j[k++]={x:c,y:d};for(j.sort(function(a,b){return a.x-b.x}),h=new m(1,1,null),n=l;--n>-1;)g=j[n],h=new m(g.x,g.y,h);this._prev=new m(0,0,0!==h.t?h:h.next)},!0),q=c.prototype=new a,q.constructor=c,q.getRatio=function(a){var b=this._prev;if(a>b.t){for(;b.next&&a>=b.t;)b=b.next;b=b.prev}else for(;b.prev&&a<=b.t;)b=b.prev;return this._prev=b,b.v+(a-b.t)/b.gap*b.c},q.config=function(a){return new c(a)},c.ease=new c,l("Bounce",j("BounceOut",function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}),j("BounceIn",function(a){return(a=1-a)<1/2.75?1-7.5625*a*a:2/2.75>a?1-(7.5625*(a-=1.5/2.75)*a+.75):2.5/2.75>a?1-(7.5625*(a-=2.25/2.75)*a+.9375):1-(7.5625*(a-=2.625/2.75)*a+.984375)}),j("BounceInOut",function(a){var b=.5>a;return a=b?1-2*a:2*a-1,a=1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375,b?.5*(1-a):.5*a+.5})),l("Circ",j("CircOut",function(a){return Math.sqrt(1-(a-=1)*a)}),j("CircIn",function(a){return-(Math.sqrt(1-a*a)-1)}),j("CircInOut",function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)})),d=function(b,c,d){var e=i("easing."+b,function(a,b){this._p1=a||1,this._p2=b||d,this._p3=this._p2/g*(Math.asin(1/this._p1)||0)},!0),f=e.prototype=new a;return f.constructor=e,f.getRatio=c,f.config=function(a,b){return new e(a,b)},e},l("Elastic",d("ElasticOut",function(a){return this._p1*Math.pow(2,-10*a)*Math.sin((a-this._p3)*g/this._p2)+1},.3),d("ElasticIn",function(a){return-(this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*g/this._p2))},.3),d("ElasticInOut",function(a){return(a*=2)<1?-.5*this._p1*Math.pow(2,10*(a-=1))*Math.sin((a-this._p3)*g/this._p2):this._p1*Math.pow(2,-10*(a-=1))*Math.sin((a-this._p3)*g/this._p2)*.5+1},.45)),l("Expo",j("ExpoOut",function(a){return 1-Math.pow(2,-10*a)}),j("ExpoIn",function(a){return Math.pow(2,10*(a-1))-.001}),j("ExpoInOut",function(a){return(a*=2)<1?.5*Math.pow(2,10*(a-1)):.5*(2-Math.pow(2,-10*(a-1)))})),l("Sine",j("SineOut",function(a){return Math.sin(a*h)}),j("SineIn",function(a){return-Math.cos(a*h)+1}),j("SineInOut",function(a){return-.5*(Math.cos(Math.PI*a)-1)})),i("easing.EaseLookup",{find:function(b){return a.map[b]}},!0),k(e.SlowMo,"SlowMo","ease,"),k(c,"RoughEase","ease,"),k(b,"SteppedEase","ease,"),o},!0)}),function(a){"use strict";var b=a.GreenSockGlobals||a;if(!b.TweenLite){var c,d,e,f,g,h=function(a){var c,d=a.split("."),e=b;for(c=0;c<d.length;c++)e[d[c]]=e=e[d[c]]||{};return e},i=h("com.greensock"),j=1e-10,k=[].slice,l=function(){},m=function(){var a=Object.prototype.toString,b=a.call([]);return function(c){return c instanceof Array||"object"==typeof c&&!!c.push&&a.call(c)===b}}(),n={},o=function(c,d,e,f){this.sc=n[c]?n[c].sc:[],n[c]=this,this.gsClass=null,this.func=e;var g=[];this.check=function(i){for(var j,k,l,m,p=d.length,q=p;--p>-1;)(j=n[d[p]]||new o(d[p],[])).gsClass?(g[p]=j.gsClass,q--):i&&j.sc.push(this);if(0===q&&e)for(k=("com.greensock."+c).split("."),l=k.pop(),m=h(k.join("."))[l]=this.gsClass=e.apply(e,g),f&&(b[l]=m,"function"==typeof define&&define.amd?define((a.GreenSockAMDPath?a.GreenSockAMDPath+"/":"")+c.split(".").join("/"),[],function(){return m}):"undefined"!=typeof module&&module.exports&&(module.exports=m)),p=0;p<this.sc.length;p++)this.sc[p].check()},this.check(!0)},p=a._gsDefine=function(a,b,c,d){return new o(a,b,c,d)},q=i._class=function(a,b,c){return b=b||function(){},p(a,[],function(){return b},c),b};p.globals=b;var r=[0,0,1,1],s=[],t=q("easing.Ease",function(a,b,c,d){this._func=a,this._type=c||0,this._power=d||0,this._params=b?r.concat(b):r},!0),u=t.map={},v=t.register=function(a,b,c,d){for(var e,f,g,h,j=b.split(","),k=j.length,l=(c||"easeIn,easeOut,easeInOut").split(",");--k>-1;)for(f=j[k],e=d?q("easing."+f,null,!0):i.easing[f]||{},g=l.length;--g>-1;)h=l[g],u[f+"."+h]=u[h+f]=e[h]=a.getRatio?a:a[h]||new a};for(e=t.prototype,e._calcEnd=!1,e.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var b=this._type,c=this._power,d=1===b?1-a:2===b?a:.5>a?2*a:2*(1-a);return 1===c?d*=d:2===c?d*=d*d:3===c?d*=d*d*d:4===c&&(d*=d*d*d*d),1===b?1-d:2===b?d:.5>a?d/2:1-d/2},c=["Linear","Quad","Cubic","Quart","Quint,Strong"],d=c.length;--d>-1;)e=c[d]+",Power"+d,v(new t(null,null,1,d),e,"easeOut",!0),v(new t(null,null,2,d),e,"easeIn"+(0===d?",easeNone":"")),v(new t(null,null,3,d),e,"easeInOut");u.linear=i.easing.Linear.easeIn,u.swing=i.easing.Quad.easeInOut;var w=q("events.EventDispatcher",function(a){this._listeners={},this._eventTarget=a||this});e=w.prototype,e.addEventListener=function(a,b,c,d,e){e=e||0;var h,i,j=this._listeners[a],k=0;for(null==j&&(this._listeners[a]=j=[]),i=j.length;--i>-1;)h=j[i],h.c===b&&h.s===c?j.splice(i,1):0===k&&h.pr<e&&(k=i+1);j.splice(k,0,{c:b,s:c,up:d,pr:e}),this!==f||g||f.wake()},e.removeEventListener=function(a,b){var c,d=this._listeners[a];if(d)for(c=d.length;--c>-1;)if(d[c].c===b)return d.splice(c,1),void 0},e.dispatchEvent=function(a){var b,c,d,e=this._listeners[a];if(e)for(b=e.length,c=this._eventTarget;--b>-1;)d=e[b],d.up?d.c.call(d.s||c,{type:a,target:c}):d.c.call(d.s||c)};var x=a.requestAnimationFrame,y=a.cancelAnimationFrame,z=Date.now||function(){return(new Date).getTime()},A=z();for(c=["ms","moz","webkit","o"],d=c.length;--d>-1&&!x;)x=a[c[d]+"RequestAnimationFrame"],y=a[c[d]+"CancelAnimationFrame"]||a[c[d]+"CancelRequestAnimationFrame"];q("Ticker",function(a,b){var c,d,e,h,i,j=this,k=z(),m=b!==!1&&x,n=function(a){A=z(),j.time=(A-k)/1e3;var b,f=j.time-i;(!c||f>0||a===!0)&&(j.frame++,i+=f+(f>=h?.004:h-f),b=!0),a!==!0&&(e=d(n)),b&&j.dispatchEvent("tick")};w.call(j),j.time=j.frame=0,j.tick=function(){n(!0)},j.sleep=function(){null!=e&&(m&&y?y(e):clearTimeout(e),d=l,e=null,j===f&&(g=!1))},j.wake=function(){null!==e&&j.sleep(),d=0===c?l:m&&x?x:function(a){return setTimeout(a,1e3*(i-j.time)+1|0)},j===f&&(g=!0),n(2)},j.fps=function(a){return arguments.length?(c=a,h=1/(c||60),i=this.time+h,j.wake(),void 0):c},j.useRAF=function(a){return arguments.length?(j.sleep(),m=a,j.fps(c),void 0):m},j.fps(a),setTimeout(function(){m&&(!e||j.frame<5)&&j.useRAF(!1)},1500)}),e=i.Ticker.prototype=new i.events.EventDispatcher,e.constructor=i.Ticker;var B=q("core.Animation",function(a,b){if(this.vars=b=b||{},this._duration=this._totalDuration=a||0,this._delay=Number(b.delay)||0,this._timeScale=1,this._active=b.immediateRender===!0,this.data=b.data,this._reversed=b.reversed===!0,O){g||f.wake();var c=this.vars.useFrames?N:O;c.add(this,c._time),this.vars.paused&&this.paused(!0)}});f=B.ticker=new i.Ticker,e=B.prototype,e._dirty=e._gc=e._initted=e._paused=!1,e._totalTime=e._time=0,e._rawPrevTime=-1,e._next=e._last=e._onUpdate=e._timeline=e.timeline=null,e._paused=!1;var C=function(){z()-A>2e3&&f.wake(),setTimeout(C,2e3)};C(),e.play=function(a,b){return arguments.length&&this.seek(a,b),this.reversed(!1).paused(!1)},e.pause=function(a,b){return arguments.length&&this.seek(a,b),this.paused(!0)},e.resume=function(a,b){return arguments.length&&this.seek(a,b),this.paused(!1)},e.seek=function(a,b){return this.totalTime(Number(a),b!==!1)},e.restart=function(a,b){return this.reversed(!1).paused(!1).totalTime(a?-this._delay:0,b!==!1,!0)},e.reverse=function(a,b){return arguments.length&&this.seek(a||this.totalDuration(),b),this.reversed(!0).paused(!1)},e.render=function(){},e.invalidate=function(){return this},e.isActive=function(){var a,b=this._timeline,c=this._startTime;return!b||!this._gc&&!this._paused&&b.isActive()&&(a=b.rawTime())>=c&&a<c+this.totalDuration()/this._timeScale},e._enabled=function(a,b){return g||f.wake(),this._gc=!a,this._active=this.isActive(),b!==!0&&(a&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!a&&this.timeline&&this._timeline._remove(this,!0)),!1},e._kill=function(){return this._enabled(!1,!1)},e.kill=function(a,b){return this._kill(a,b),this},e._uncache=function(a){for(var b=a?this:this.timeline;b;)b._dirty=!0,b=b.timeline;return this},e._swapSelfInParams=function(a){for(var b=a.length,c=a.concat();--b>-1;)"{self}"===a[b]&&(c[b]=this);return c},e.eventCallback=function(a,b,c,d){if("on"===(a||"").substr(0,2)){var e=this.vars;if(1===arguments.length)return e[a];null==b?delete e[a]:(e[a]=b,e[a+"Params"]=m(c)&&-1!==c.join("").indexOf("{self}")?this._swapSelfInParams(c):c,e[a+"Scope"]=d),"onUpdate"===a&&(this._onUpdate=b)}return this},e.delay=function(a){return arguments.length?(this._timeline.smoothChildTiming&&this.startTime(this._startTime+a-this._delay),this._delay=a,this):this._delay},e.duration=function(a){return arguments.length?(this._duration=this._totalDuration=a,this._uncache(!0),this._timeline.smoothChildTiming&&this._time>0&&this._time<this._duration&&0!==a&&this.totalTime(this._totalTime*(a/this._duration),!0),this):(this._dirty=!1,this._duration)},e.totalDuration=function(a){return this._dirty=!1,arguments.length?this.duration(a):this._totalDuration},e.time=function(a,b){return arguments.length?(this._dirty&&this.totalDuration(),this.totalTime(a>this._duration?this._duration:a,b)):this._time},e.totalTime=function(a,b,c){if(g||f.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>a&&!c&&(a+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var d=this._totalDuration,e=this._timeline;if(a>d&&!c&&(a=d),this._startTime=(this._paused?this._pauseTime:e._time)-(this._reversed?d-a:a)/this._timeScale,e._dirty||this._uncache(!1),e._timeline)for(;e._timeline;)e._timeline._time!==(e._startTime+e._totalTime)/e._timeScale&&e.totalTime(e._totalTime,!0),e=e._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==a||0===this._duration)&&this.render(a,b,!1)}return this},e.progress=e.totalProgress=function(a,b){return arguments.length?this.totalTime(this.duration()*a,b):this._time/this.duration()
},e.startTime=function(a){return arguments.length?(a!==this._startTime&&(this._startTime=a,this.timeline&&this.timeline._sortChildren&&this.timeline.add(this,a-this._delay)),this):this._startTime},e.timeScale=function(a){if(!arguments.length)return this._timeScale;if(a=a||j,this._timeline&&this._timeline.smoothChildTiming){var b=this._pauseTime,c=b||0===b?b:this._timeline.totalTime();this._startTime=c-(c-this._startTime)*this._timeScale/a}return this._timeScale=a,this._uncache(!1)},e.reversed=function(a){return arguments.length?(a!=this._reversed&&(this._reversed=a,this.totalTime(this._totalTime,!0)),this):this._reversed},e.paused=function(a){if(!arguments.length)return this._paused;if(a!=this._paused&&this._timeline){g||a||f.wake();var b=this._timeline,c=b.rawTime(),d=c-this._pauseTime;!a&&b.smoothChildTiming&&(this._startTime+=d,this._uncache(!1)),this._pauseTime=a?c:null,this._paused=a,this._active=this.isActive(),!a&&0!==d&&this._initted&&this.duration()&&this.render(b.smoothChildTiming?this._totalTime:(c-this._startTime)/this._timeScale,!0,!0)}return this._gc&&!a&&this._enabled(!0,!1),this};var D=q("core.SimpleTimeline",function(a){B.call(this,0,a),this.autoRemoveChildren=this.smoothChildTiming=!0});e=D.prototype=new B,e.constructor=D,e.kill()._gc=!1,e._first=e._last=null,e._sortChildren=!1,e.add=e.insert=function(a,b){var c,d;if(a._startTime=Number(b||0)+a._delay,a._paused&&this!==a._timeline&&(a._pauseTime=a._startTime+(this.rawTime()-a._startTime)/a._timeScale),a.timeline&&a.timeline._remove(a,!0),a.timeline=a._timeline=this,a._gc&&a._enabled(!0,!0),c=this._last,this._sortChildren)for(d=a._startTime;c&&c._startTime>d;)c=c._prev;return c?(a._next=c._next,c._next=a):(a._next=this._first,this._first=a),a._next?a._next._prev=a:this._last=a,a._prev=c,this._timeline&&this._uncache(!0),this},e._remove=function(a,b){return a.timeline===this&&(b||a._enabled(!1,!0),a.timeline=null,a._prev?a._prev._next=a._next:this._first===a&&(this._first=a._next),a._next?a._next._prev=a._prev:this._last===a&&(this._last=a._prev),this._timeline&&this._uncache(!0)),this},e.render=function(a,b,c){var d,e=this._first;for(this._totalTime=this._time=this._rawPrevTime=a;e;)d=e._next,(e._active||a>=e._startTime&&!e._paused)&&(e._reversed?e.render((e._dirty?e.totalDuration():e._totalDuration)-(a-e._startTime)*e._timeScale,b,c):e.render((a-e._startTime)*e._timeScale,b,c)),e=d},e.rawTime=function(){return g||f.wake(),this._totalTime};var E=q("TweenLite",function(b,c,d){if(B.call(this,c,d),this.render=E.prototype.render,null==b)throw"Cannot tween a null target.";this.target=b="string"!=typeof b?b:E.selector(b)||b;var e,f,g,h=b.jquery||b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType),i=this.vars.overwrite;if(this._overwrite=i=null==i?M[E.defaultOverwrite]:"number"==typeof i?i>>0:M[i],(h||b instanceof Array||b.push&&m(b))&&"number"!=typeof b[0])for(this._targets=g=k.call(b,0),this._propLookup=[],this._siblings=[],e=0;e<g.length;e++)f=g[e],f?"string"!=typeof f?f.length&&f!==a&&f[0]&&(f[0]===a||f[0].nodeType&&f[0].style&&!f.nodeType)?(g.splice(e--,1),this._targets=g=g.concat(k.call(f,0))):(this._siblings[e]=P(f,this,!1),1===i&&this._siblings[e].length>1&&Q(f,this,null,1,this._siblings[e])):(f=g[e--]=E.selector(f),"string"==typeof f&&g.splice(e+1,1)):g.splice(e--,1);else this._propLookup={},this._siblings=P(b,this,!1),1===i&&this._siblings.length>1&&Q(b,this,null,1,this._siblings);(this.vars.immediateRender||0===c&&0===this._delay&&this.vars.immediateRender!==!1)&&this.render(-this._delay,!1,!0)},!0),F=function(b){return b.length&&b!==a&&b[0]&&(b[0]===a||b[0].nodeType&&b[0].style&&!b.nodeType)},G=function(a,b){var c,d={};for(c in a)L[c]||c in b&&"x"!==c&&"y"!==c&&"width"!==c&&"height"!==c&&"className"!==c&&"border"!==c||!(!I[c]||I[c]&&I[c]._autoCSS)||(d[c]=a[c],delete a[c]);a.css=d};e=E.prototype=new B,e.constructor=E,e.kill()._gc=!1,e.ratio=0,e._firstPT=e._targets=e._overwrittenProps=e._startAt=null,e._notifyPluginsOfEnabled=!1,E.version="1.11.1",E.defaultEase=e._ease=new t(null,null,1,1),E.defaultOverwrite="auto",E.ticker=f,E.autoSleep=!0,E.selector=a.$||a.jQuery||function(b){return a.$?(E.selector=a.$,a.$(b)):a.document?a.document.getElementById("#"===b.charAt(0)?b.substr(1):b):b};var H=E._internals={isArray:m,isSelector:F},I=E._plugins={},J=E._tweenLookup={},K=0,L=H.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1},M={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,"true":1,"false":0},N=B._rootFramesTimeline=new D,O=B._rootTimeline=new D;O._startTime=f.time,N._startTime=f.frame,O._active=N._active=!0,B._updateRoot=function(){if(O.render((f.time-O._startTime)*O._timeScale,!1,!1),N.render((f.frame-N._startTime)*N._timeScale,!1,!1),!(f.frame%120)){var a,b,c;for(c in J){for(b=J[c].tweens,a=b.length;--a>-1;)b[a]._gc&&b.splice(a,1);0===b.length&&delete J[c]}if(c=O._first,(!c||c._paused)&&E.autoSleep&&!N._first&&1===f._listeners.tick.length){for(;c&&c._paused;)c=c._next;c||f.sleep()}}},f.addEventListener("tick",B._updateRoot);var P=function(a,b,c){var d,e,f=a._gsTweenID;if(J[f||(a._gsTweenID=f="t"+K++)]||(J[f]={target:a,tweens:[]}),b&&(d=J[f].tweens,d[e=d.length]=b,c))for(;--e>-1;)d[e]===b&&d.splice(e,1);return J[f].tweens},Q=function(a,b,c,d,e){var f,g,h,i;if(1===d||d>=4){for(i=e.length,f=0;i>f;f++)if((h=e[f])!==b)h._gc||h._enabled(!1,!1)&&(g=!0);else if(5===d)break;return g}var k,l=b._startTime+j,m=[],n=0,o=0===b._duration;for(f=e.length;--f>-1;)(h=e[f])===b||h._gc||h._paused||(h._timeline!==b._timeline?(k=k||R(b,0,o),0===R(h,k,o)&&(m[n++]=h)):h._startTime<=l&&h._startTime+h.totalDuration()/h._timeScale+j>l&&((o||!h._initted)&&l-h._startTime<=2e-10||(m[n++]=h)));for(f=n;--f>-1;)h=m[f],2===d&&h._kill(c,a)&&(g=!0),(2!==d||!h._firstPT&&h._initted)&&h._enabled(!1,!1)&&(g=!0);return g},R=function(a,b,c){for(var d=a._timeline,e=d._timeScale,f=a._startTime;d._timeline;){if(f+=d._startTime,e*=d._timeScale,d._paused)return-100;d=d._timeline}return f/=e,f>b?f-b:c&&f===b||!a._initted&&2*j>f-b?j:(f+=a.totalDuration()/a._timeScale/e)>b+j?0:f-b-j};e._init=function(){var a,b,c,d,e=this.vars,f=this._overwrittenProps,g=this._duration,h=e.immediateRender,i=e.ease;if(e.startAt){if(this._startAt&&this._startAt.render(-1,!0),e.startAt.overwrite=0,e.startAt.immediateRender=!0,this._startAt=E.to(this.target,0,e.startAt),h)if(this._time>0)this._startAt=null;else if(0!==g)return}else if(e.runBackwards&&0!==g)if(this._startAt)this._startAt.render(-1,!0),this._startAt=null;else{c={};for(d in e)L[d]&&"autoCSS"!==d||(c[d]=e[d]);if(c.overwrite=0,c.data="isFromStart",this._startAt=E.to(this.target,0,c),e.immediateRender){if(0===this._time)return}else this._startAt.render(-1,!0)}if(this._ease=i?i instanceof t?e.easeParams instanceof Array?i.config.apply(i,e.easeParams):i:"function"==typeof i?new t(i,e.easeParams):u[i]||E.defaultEase:E.defaultEase,this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(a=this._targets.length;--a>-1;)this._initProps(this._targets[a],this._propLookup[a]={},this._siblings[a],f?f[a]:null)&&(b=!0);else b=this._initProps(this.target,this._propLookup,this._siblings,f);if(b&&E._onPluginEvent("_onInitAllProps",this),f&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),e.runBackwards)for(c=this._firstPT;c;)c.s+=c.c,c.c=-c.c,c=c._next;this._onUpdate=e.onUpdate,this._initted=!0},e._initProps=function(b,c,d,e){var f,g,h,i,j,k;if(null==b)return!1;this.vars.css||b.style&&b!==a&&b.nodeType&&I.css&&this.vars.autoCSS!==!1&&G(this.vars,b);for(f in this.vars){if(k=this.vars[f],L[f])k&&(k instanceof Array||k.push&&m(k))&&-1!==k.join("").indexOf("{self}")&&(this.vars[f]=k=this._swapSelfInParams(k,this));else if(I[f]&&(i=new I[f])._onInitTween(b,this.vars[f],this)){for(this._firstPT=j={_next:this._firstPT,t:i,p:"setRatio",s:0,c:1,f:!0,n:f,pg:!0,pr:i._priority},g=i._overwriteProps.length;--g>-1;)c[i._overwriteProps[g]]=this._firstPT;(i._priority||i._onInitAllProps)&&(h=!0),(i._onDisable||i._onEnable)&&(this._notifyPluginsOfEnabled=!0)}else this._firstPT=c[f]=j={_next:this._firstPT,t:b,p:f,f:"function"==typeof b[f],n:f,pg:!1,pr:0},j.s=j.f?b[f.indexOf("set")||"function"!=typeof b["get"+f.substr(3)]?f:"get"+f.substr(3)]():parseFloat(b[f]),j.c="string"==typeof k&&"="===k.charAt(1)?parseInt(k.charAt(0)+"1",10)*Number(k.substr(2)):Number(k)-j.s||0;j&&j._next&&(j._next._prev=j)}return e&&this._kill(e,b)?this._initProps(b,c,d,e):this._overwrite>1&&this._firstPT&&d.length>1&&Q(b,this,c,this._overwrite,d)?(this._kill(c,b),this._initProps(b,c,d,e)):h},e.render=function(a,b,c){var d,e,f,g,h=this._time,i=this._duration;if(a>=i)this._totalTime=this._time=i,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(d=!0,e="onComplete"),0===i&&(g=this._rawPrevTime,(0===a||0>g||g===j)&&g!==a&&(c=!0,g>j&&(e="onReverseComplete")),this._rawPrevTime=g=!b||a?a:j);else if(1e-7>a)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==h||0===i&&this._rawPrevTime>j)&&(e="onReverseComplete",d=this._reversed),0>a?(this._active=!1,0===i&&(this._rawPrevTime>=0&&(c=!0),this._rawPrevTime=g=!b||a?a:j)):this._initted||(c=!0);else if(this._totalTime=this._time=a,this._easeType){var k=a/i,l=this._easeType,m=this._easePower;(1===l||3===l&&k>=.5)&&(k=1-k),3===l&&(k*=2),1===m?k*=k:2===m?k*=k*k:3===m?k*=k*k*k:4===m&&(k*=k*k*k*k),this.ratio=1===l?1-k:2===l?k:.5>a/i?k/2:1-k/2}else this.ratio=this._ease.getRatio(a/i);if(this._time!==h||c){if(!this._initted){if(this._init(),!this._initted||this._gc)return;this._time&&!d?this.ratio=this._ease.getRatio(this._time/i):d&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(this._active||!this._paused&&this._time!==h&&a>=0&&(this._active=!0),0===h&&(this._startAt&&(a>=0?this._startAt.render(a,b,c):e||(e="_dummyGS")),this.vars.onStart&&(0!==this._time||0===i)&&(b||this.vars.onStart.apply(this.vars.onStartScope||this,this.vars.onStartParams||s))),f=this._firstPT;f;)f.f?f.t[f.p](f.c*this.ratio+f.s):f.t[f.p]=f.c*this.ratio+f.s,f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,b,c),b||c&&0===this._time&&0===h||this._onUpdate.apply(this.vars.onUpdateScope||this,this.vars.onUpdateParams||s)),e&&(this._gc||(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,b,c),d&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!b&&this.vars[e]&&this.vars[e].apply(this.vars[e+"Scope"]||this,this.vars[e+"Params"]||s),0===i&&this._rawPrevTime===j&&g!==j&&(this._rawPrevTime=0)))}},e._kill=function(a,b){if("all"===a&&(a=null),null==a&&(null==b||b===this.target))return this._enabled(!1,!1);b="string"!=typeof b?b||this._targets||this.target:E.selector(b)||b;var c,d,e,f,g,h,i,j;if((m(b)||F(b))&&"number"!=typeof b[0])for(c=b.length;--c>-1;)this._kill(a,b[c])&&(h=!0);else{if(this._targets){for(c=this._targets.length;--c>-1;)if(b===this._targets[c]){g=this._propLookup[c]||{},this._overwrittenProps=this._overwrittenProps||[],d=this._overwrittenProps[c]=a?this._overwrittenProps[c]||{}:"all";break}}else{if(b!==this.target)return!1;g=this._propLookup,d=this._overwrittenProps=a?this._overwrittenProps||{}:"all"}if(g){i=a||g,j=a!==d&&"all"!==d&&a!==g&&("object"!=typeof a||!a._tempKill);for(e in i)(f=g[e])&&(f.pg&&f.t._kill(i)&&(h=!0),f.pg&&0!==f.t._overwriteProps.length||(f._prev?f._prev._next=f._next:f===this._firstPT&&(this._firstPT=f._next),f._next&&(f._next._prev=f._prev),f._next=f._prev=null),delete g[e]),j&&(d[e]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return h},e.invalidate=function(){return this._notifyPluginsOfEnabled&&E._onPluginEvent("_onDisable",this),this._firstPT=null,this._overwrittenProps=null,this._onUpdate=null,this._startAt=null,this._initted=this._active=this._notifyPluginsOfEnabled=!1,this._propLookup=this._targets?{}:[],this},e._enabled=function(a,b){if(g||f.wake(),a&&this._gc){var c,d=this._targets;if(d)for(c=d.length;--c>-1;)this._siblings[c]=P(d[c],this,!0);else this._siblings=P(this.target,this,!0)}return B.prototype._enabled.call(this,a,b),this._notifyPluginsOfEnabled&&this._firstPT?E._onPluginEvent(a?"_onEnable":"_onDisable",this):!1},E.to=function(a,b,c){return new E(a,b,c)},E.from=function(a,b,c){return c.runBackwards=!0,c.immediateRender=0!=c.immediateRender,new E(a,b,c)},E.fromTo=function(a,b,c,d){return d.startAt=c,d.immediateRender=0!=d.immediateRender&&0!=c.immediateRender,new E(a,b,d)},E.delayedCall=function(a,b,c,d,e){return new E(b,0,{delay:a,onComplete:b,onCompleteParams:c,onCompleteScope:d,onReverseComplete:b,onReverseCompleteParams:c,onReverseCompleteScope:d,immediateRender:!1,useFrames:e,overwrite:0})},E.set=function(a,b){return new E(a,0,b)},E.getTweensOf=function(a,b){if(null==a)return[];a="string"!=typeof a?a:E.selector(a)||a;var c,d,e,f;if((m(a)||F(a))&&"number"!=typeof a[0]){for(c=a.length,d=[];--c>-1;)d=d.concat(E.getTweensOf(a[c],b));for(c=d.length;--c>-1;)for(f=d[c],e=c;--e>-1;)f===d[e]&&d.splice(c,1)}else for(d=P(a).concat(),c=d.length;--c>-1;)(d[c]._gc||b&&!d[c].isActive())&&d.splice(c,1);return d},E.killTweensOf=E.killDelayedCallsTo=function(a,b,c){"object"==typeof b&&(c=b,b=!1);for(var d=E.getTweensOf(a,b),e=d.length;--e>-1;)d[e]._kill(c,a)};var S=q("plugins.TweenPlugin",function(a,b){this._overwriteProps=(a||"").split(","),this._propName=this._overwriteProps[0],this._priority=b||0,this._super=S.prototype},!0);if(e=S.prototype,S.version="1.10.1",S.API=2,e._firstPT=null,e._addTween=function(a,b,c,d,e,f){var g,h;return null!=d&&(g="number"==typeof d||"="!==d.charAt(1)?Number(d)-c:parseInt(d.charAt(0)+"1",10)*Number(d.substr(2)))?(this._firstPT=h={_next:this._firstPT,t:a,p:b,s:c,c:g,f:"function"==typeof a[b],n:e||b,r:f},h._next&&(h._next._prev=h),h):void 0},e.setRatio=function(a){for(var b,c=this._firstPT,d=1e-6;c;)b=c.c*a+c.s,c.r?b=b+(b>0?.5:-.5)|0:d>b&&b>-d&&(b=0),c.f?c.t[c.p](b):c.t[c.p]=b,c=c._next},e._kill=function(a){var b,c=this._overwriteProps,d=this._firstPT;if(null!=a[this._propName])this._overwriteProps=[];else for(b=c.length;--b>-1;)null!=a[c[b]]&&c.splice(b,1);for(;d;)null!=a[d.n]&&(d._next&&(d._next._prev=d._prev),d._prev?(d._prev._next=d._next,d._prev=null):this._firstPT===d&&(this._firstPT=d._next)),d=d._next;return!1},e._roundProps=function(a,b){for(var c=this._firstPT;c;)(a[this._propName]||null!=c.n&&a[c.n.split(this._propName+"_").join("")])&&(c.r=b),c=c._next},E._onPluginEvent=function(a,b){var c,d,e,f,g,h=b._firstPT;if("_onInitAllProps"===a){for(;h;){for(g=h._next,d=e;d&&d.pr>h.pr;)d=d._next;(h._prev=d?d._prev:f)?h._prev._next=h:e=h,(h._next=d)?d._prev=h:f=h,h=g}h=b._firstPT=e}for(;h;)h.pg&&"function"==typeof h.t[a]&&h.t[a]()&&(c=!0),h=h._next;return c},S.activate=function(a){for(var b=a.length;--b>-1;)a[b].API===S.API&&(I[(new a[b])._propName]=a[b]);return!0},p.plugin=function(a){if(!(a&&a.propName&&a.init&&a.API))throw"illegal plugin definition.";var b,c=a.propName,d=a.priority||0,e=a.overwriteProps,f={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_roundProps",initAll:"_onInitAllProps"},g=q("plugins."+c.charAt(0).toUpperCase()+c.substr(1)+"Plugin",function(){S.call(this,c,d),this._overwriteProps=e||[]},a.global===!0),h=g.prototype=new S(c);h.constructor=g,g.API=a.API;for(b in f)"function"==typeof a[b]&&(h[f[b]]=a[b]);return g.version=a.version,S.activate([g]),g},c=a._gsQueue){for(d=0;d<c.length;d++)c[d]();for(e in n)n[e].func||a.console.log("GSAP encountered missing dependency: com.greensock."+e)}g=!1}}(window),function(a,b,c){function d(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent("on"+b,c)}function e(a){if("keypress"==a.type){var b=String.fromCharCode(a.which);return a.shiftKey||(b=b.toLowerCase()),b}return q[a.which]?q[a.which]:r[a.which]?r[a.which]:String.fromCharCode(a.which).toLowerCase()}function f(a){a=a||{};var b,c=!1;for(b in w)a[b]?c=!0:w[b]=0;c||(z=!1)}function g(a,b,c,d,e,f){var g,h,i=[],j=c.type;if(!u[a])return[];for("keyup"==j&&k(a)&&(b=[a]),g=0;g<u[a].length;++g)if(h=u[a][g],!(!d&&h.seq&&w[h.seq]!=h.level||j!=h.action||("keypress"!=j||c.metaKey||c.ctrlKey)&&b.sort().join(",")!==h.modifiers.sort().join(","))){var l=d&&h.seq==d&&h.level==f;(!d&&h.combo==e||l)&&u[a].splice(g,1),i.push(h)}return i}function h(a){var b=[];return a.shiftKey&&b.push("shift"),a.altKey&&b.push("alt"),a.ctrlKey&&b.push("ctrl"),a.metaKey&&b.push("meta"),b}function i(a,b,c,d){A.stopCallback(b,b.target||b.srcElement,c,d)||!1!==a(b,c)||(b.preventDefault?b.preventDefault():b.returnValue=!1,b.stopPropagation?b.stopPropagation():b.cancelBubble=!0)}function j(a){"number"!=typeof a.which&&(a.which=a.keyCode);var b=e(a);b&&("keyup"==a.type&&x===b?x=!1:A.handleKey(b,h(a),a))}function k(a){return"shift"==a||"ctrl"==a||"alt"==a||"meta"==a}function l(a,b,c,d){function g(b){return function(){z=b,++w[a],clearTimeout(p),p=setTimeout(f,1e3)}}function h(b){i(c,b,a),"keyup"!==d&&(x=e(b)),setTimeout(f,10)}for(var j=w[a]=0;j<b.length;++j){var k=j+1===b.length?h:g(d||m(b[j+1]).action);n(b[j],k,d,a,j)}}function m(a,b){var c,d,e,f=[];for(c="+"===a?["+"]:a.split("+"),e=0;e<c.length;++e)d=c[e],t[d]&&(d=t[d]),b&&"keypress"!=b&&s[d]&&(d=s[d],f.push("shift")),k(d)&&f.push(d);if(c=d,e=b,!e){if(!o){o={};for(var g in q)g>95&&112>g||q.hasOwnProperty(g)&&(o[q[g]]=g)}e=o[c]?"keydown":"keypress"}return"keypress"==e&&f.length&&(e="keydown"),{key:d,modifiers:f,action:e}}function n(a,b,c,d,e){v[a+":"+c]=b,a=a.replace(/\s+/g," ");var f=a.split(" ");1<f.length?l(a,f,b,c):(c=m(a,c),u[c.key]=u[c.key]||[],g(c.key,c.modifiers,{type:c.action},d,a,e),u[c.key][d?"unshift":"push"]({callback:b,modifiers:c.modifiers,action:c.action,seq:d,level:e,combo:a}))}var o,p,q={8:"backspace",9:"tab",13:"enter",16:"shift",17:"ctrl",18:"alt",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"ins",46:"del",91:"meta",93:"meta",224:"meta"},r={106:"*",107:"+",109:"-",110:".",111:"/",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},s={"~":"`","!":"1","@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0",_:"-","+":"=",":":";",'"':"'","<":",",">":".","?":"/","|":"\\"},t={option:"alt",command:"meta","return":"enter",escape:"esc",mod:/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"meta":"ctrl"},u={},v={},w={},x=!1,y=!1,z=!1;for(c=1;20>c;++c)q[111+c]="f"+c;for(c=0;9>=c;++c)q[c+96]=c;d(b,"keypress",j),d(b,"keydown",j),d(b,"keyup",j);var A={bind:function(a,b,c){a=a instanceof Array?a:[a];for(var d=0;d<a.length;++d)n(a[d],b,c);return this},unbind:function(a,b){return A.bind(a,function(){},b)},trigger:function(a,b){return v[a+":"+b]&&v[a+":"+b]({},a),this},reset:function(){return u={},v={},this},stopCallback:function(a,b){return-1<(" "+b.className+" ").indexOf(" mousetrap ")?!1:"INPUT"==b.tagName||"SELECT"==b.tagName||"TEXTAREA"==b.tagName||b.isContentEditable},handleKey:function(a,b,c){var d,e=g(a,b,c);b={};var h=0,j=!1;for(d=0;d<e.length;++d)e[d].seq&&(h=Math.max(h,e[d].level));for(d=0;d<e.length;++d)e[d].seq?e[d].level==h&&(j=!0,b[e[d].seq]=1,i(e[d].callback,c,e[d].combo,e[d].seq)):j||i(e[d].callback,c,e[d].combo);e="keypress"==c.type&&y,c.type!=z||k(a)||e||f(b),y=j&&"keydown"==c.type}};a.Mousetrap=A,"function"==typeof define&&define.amd&&define(A)}(window,document),!function(){var a={},b=null,c=!0,d=!1;if("undefined"!=typeof AudioContext)b=new AudioContext;else if("undefined"!=typeof webkitAudioContext)b=new webkitAudioContext;else if("undefined"!=typeof Audio){c=!1;try{new Audio}catch(e){d=!0}}else c=!1,d=!0;if(c){var f=void 0===b.createGain?b.createGainNode():b.createGain();f.gain.value=1,f.connect(b.destination)}var g=function(){this._volume=1,this._muted=!1,this.usingWebAudio=c,this._howls=[]};g.prototype={volume:function(a){var b=this;if(a=parseFloat(a),a&&a>=0&&1>=a){b._volume=a,c&&(f.gain.value=a);for(var d in b._howls)if(b._howls.hasOwnProperty(d)&&b._howls[d]._webAudio===!1)for(var e=0;e<b._howls[d]._audioNode.length;e++)b._howls[d]._audioNode[e].volume=b._howls[d]._volume*b._volume;return b}return c?f.gain.value:b._volume},mute:function(){return this._setMuted(!0),this},unmute:function(){return this._setMuted(!1),this},_setMuted:function(a){var b=this;b._muted=a,c&&(f.gain.value=a?0:b._volume);for(var d in b._howls)if(b._howls.hasOwnProperty(d)&&b._howls[d]._webAudio===!1)for(var e=0;e<b._howls[d]._audioNode.length;e++)b._howls[d]._audioNode[e].muted=a}};var h=new g,i=null;if(!d){i=new Audio;var j={mp3:!!i.canPlayType("audio/mpeg;").replace(/^no$/,""),opus:!!i.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!i.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!i.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),m4a:!!(i.canPlayType("audio/x-m4a;")||i.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!!i.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")}}var k=function(a){var b=this;b._autoplay=a.autoplay||!1,b._buffer=a.buffer||!1,b._duration=a.duration||0,b._format=a.format||null,b._loop=a.loop||!1,b._loaded=!1,b._sprite=a.sprite||{},b._src=a.src||"",b._pos3d=a.pos3d||[0,0,-.5],b._volume=a.volume||1,b._urls=a.urls||[],b._rate=a.rate||1,b._onload=[a.onload||function(){}],b._onloaderror=[a.onloaderror||function(){}],b._onend=[a.onend||function(){}],b._onpause=[a.onpause||function(){}],b._onplay=[a.onplay||function(){}],b._onendTimer=[],b._webAudio=c&&!b._buffer,b._audioNode=[],b._webAudio&&b._setupAudioNode(),h._howls.push(b),b.load()};if(k.prototype={load:function(){var b=this,c=null;if(d)return b.on("loaderror"),void 0;for(var e=0;e<b._urls.length;e++){var f,g;if(b._format)f=b._format;else{if(g=b._urls[e].toLowerCase().split("?")[0],f=g.match(/.+\.([^?]+)(\?|$)/),f=f&&f.length>=2?f:g.match(/data\:audio\/([^?]+);/),!f)return b.on("loaderror"),void 0;f=f[1]}if(j[f]){c=b._urls[e];break}}if(!c)return b.on("loaderror"),void 0;if(b._src=c,b._webAudio)l(b,c);else{var i=new Audio;b._audioNode.push(i),i.src=c,i._pos=0,i.preload="auto",i.volume=h._muted?0:b._volume*h.volume(),a[c]=b;var k=function(){b._duration=i.duration,0===Object.getOwnPropertyNames(b._sprite).length&&(b._sprite={_default:[0,1e3*b._duration]}),b._loaded||(b._loaded=!0,b.on("load")),b._autoplay&&b.play(),i.removeEventListener("canplaythrough",k,!1)};i.addEventListener("canplaythrough",k,!1),i.load()}return b},urls:function(a){var b=this;return a?(b.stop(),b._urls="string"==typeof a?[a]:a,b._loaded=!1,b.load(),b):b._urls},play:function(a,c){var d=this;return"function"==typeof a&&(c=a),a&&"function"!=typeof a||(a="_default"),d._loaded?d._sprite[a]?(d._inactiveNode(function(e){e._sprite=a;var f,g=e._pos>0?e._pos:d._sprite[a][0]/1e3,i=d._sprite[a][1]/1e3-e._pos,j=!(!d._loop&&!d._sprite[a][2]),k="string"==typeof c?c:Math.round(Date.now()*Math.random())+"";if(function(){var b={id:k,sprite:a,loop:j};f=setTimeout(function(){!d._webAudio&&j&&d.stop(b.id,b.timer).play(a,b.id),d._webAudio&&!j&&(d._nodeById(b.id).paused=!0),d._webAudio||j||d.stop(b.id,b.timer),d.on("end",k)},1e3*i),d._onendTimer.push(f),b.timer=d._onendTimer[d._onendTimer.length-1]}(),d._webAudio){var l=d._sprite[a][0]/1e3,m=d._sprite[a][1]/1e3;e.id=k,e.paused=!1,n(d,[j,l,m],k),d._playStart=b.currentTime,e.gain.value=d._volume,void 0===e.bufferSource.start?e.bufferSource.noteGrainOn(0,g,i):e.bufferSource.start(0,g,i)}else{if(4!==e.readyState)return d._clearEndTimer(f),function(){var b=d,f=a,g=c,h=e,i=function(){b.play(f,g),h.removeEventListener("canplaythrough",i,!1)};h.addEventListener("canplaythrough",i,!1)}(),d;e.id=k,e.currentTime=g,e.muted=h._muted,e.volume=d._volume*h.volume(),setTimeout(function(){e.play()},0)}return d.on("play"),"function"==typeof c&&c(k),d}),d):("function"==typeof c&&c(),d):(d.on("load",function(){d.play(a,c)}),d)},pause:function(a,b){var c=this;if(!c._loaded)return c.on("play",function(){c.pause(a)}),c;c._clearEndTimer(b||0);var d=a?c._nodeById(a):c._activeNode();if(d)if(d._pos=c.pos(null,a),c._webAudio){if(!d.bufferSource)return c;d.paused=!0,void 0===d.bufferSource.stop?d.bufferSource.noteOff(0):d.bufferSource.stop(0)}else d.pause();return c.on("pause"),c},stop:function(a,b){var c=this;if(!c._loaded)return c.on("play",function(){c.stop(a)}),c;c._clearEndTimer(b||0);var d=a?c._nodeById(a):c._activeNode();if(d)if(d._pos=0,c._webAudio){if(!d.bufferSource)return c;d.paused=!0,void 0===d.bufferSource.stop?d.bufferSource.noteOff(0):d.bufferSource.stop(0)}else d.pause(),d.currentTime=0;return c},mute:function(a){var b=this;if(!b._loaded)return b.on("play",function(){b.mute(a)}),b;var c=a?b._nodeById(a):b._activeNode();return c&&(b._webAudio?c.gain.value=0:c.volume=0),b},unmute:function(a){var b=this;if(!b._loaded)return b.on("play",function(){b.unmute(a)}),b;var c=a?b._nodeById(a):b._activeNode();return c&&(b._webAudio?c.gain.value=b._volume:c.volume=b._volume),b},volume:function(a,b){var c=this;if(a=parseFloat(a),a>=0&&1>=a){if(c._volume=a,!c._loaded)return c.on("play",function(){c.volume(a,b)}),c;var d=b?c._nodeById(b):c._activeNode();return d&&(c._webAudio?d.gain.value=a:d.volume=a*h.volume()),c}return c._volume},loop:function(a){var b=this;return"boolean"==typeof a?(b._loop=a,b):b._loop},sprite:function(a){var b=this;return"object"==typeof a?(b._sprite=a,b):b._sprite},pos:function(a,c){var d=this;if(!d._loaded)return d.on("load",function(){d.pos(a)}),"number"==typeof a?d:d._pos||0;a=parseFloat(a);var e=c?d._nodeById(c):d._activeNode();if(e)return d._webAudio?a>=0?(e._pos=a,d.pause(c).play(e._sprite,c),d):e._pos+(b.currentTime-d._playStart):a>=0?(e.currentTime=a,d):e.currentTime;if(a>=0)return d;for(var f=0;f<d._audioNode.length;f++)if(d._audioNode[f].paused&&4===d._audioNode[f].readyState)return d._webAudio?d._audioNode[f]._pos:d._audioNode[f].currentTime},pos3d:function(a,b,c,d){var e=this;if(b=void 0!==b&&b?b:0,c=void 0!==c&&c?c:-.5,!e._loaded)return e.on("play",function(){e.pos3d(a,b,c,d)}),e;if(!(a>=0||0>a))return e._pos3d;if(e._webAudio){var f=d?e._nodeById(d):e._activeNode();f&&(e._pos3d=[a,b,c],f.panner.setPosition(a,b,c))}return e},fade:function(a,b,c,d,e){var f=this,g=Math.abs(a-b),h=a>b?"down":"up",i=g/.01,j=c/i;if(!f._loaded)return f.on("load",function(){f.fade(a,b,c,d,e)}),f;f.volume(a,e);for(var k=1;i>=k;k++)!function(){var a=f._volume+("up"===h?.01:-.01)*k,c=Math.round(1e3*a)/1e3,g=b;setTimeout(function(){f.volume(c,e),c===g&&d&&d()},j*k)}()},fadeIn:function(a,b,c){return this.volume(0).play().fade(0,a,b,c)},fadeOut:function(a,b,c,d){var e=this;return e.fade(e._volume,a,b,function(){c&&c(),e.pause(d),e.on("end")},d)},_nodeById:function(a){for(var b=this,c=b._audioNode[0],d=0;d<b._audioNode.length;d++)if(b._audioNode[d].id===a){c=b._audioNode[d];break}return c},_activeNode:function(){for(var a=this,b=null,c=0;c<a._audioNode.length;c++)if(!a._audioNode[c].paused){b=a._audioNode[c];break}return a._drainPool(),b},_inactiveNode:function(a){for(var b=this,c=null,d=0;d<b._audioNode.length;d++)if(b._audioNode[d].paused&&4===b._audioNode[d].readyState){a(b._audioNode[d]),c=!0;break}if(b._drainPool(),!c){var e;b._webAudio?(e=b._setupAudioNode(),a(e)):(b.load(),e=b._audioNode[b._audioNode.length-1],e.addEventListener("loadedmetadata",function(){a(e)}))}},_drainPool:function(){var a,b=this,c=0;for(a=0;a<b._audioNode.length;a++)b._audioNode[a].paused&&c++;for(a=b._audioNode.length-1;a>=0&&!(5>=c);a--)b._audioNode[a].paused&&(b._webAudio&&b._audioNode[a].disconnect(0),c--,b._audioNode.splice(a,1))},_clearEndTimer:function(a){var b=this,c=b._onendTimer.indexOf(a);c=c>=0?c:0,b._onendTimer[c]&&(clearTimeout(b._onendTimer[c]),b._onendTimer.splice(c,1))},_setupAudioNode:function(){var a=this,c=a._audioNode,d=a._audioNode.length;return c[d]=void 0===b.createGain?b.createGainNode():b.createGain(),c[d].gain.value=a._volume,c[d].paused=!0,c[d]._pos=0,c[d].readyState=4,c[d].connect(f),c[d].panner=b.createPanner(),c[d].panner.setPosition(a._pos3d[0],a._pos3d[1],a._pos3d[2]),c[d].panner.connect(c[d]),c[d]},on:function(a,b){var c=this,d=c["_on"+a];if("function"==typeof b)d.push(b);else for(var e=0;e<d.length;e++)b?d[e].call(c,b):d[e].call(c);return c},off:function(a,b){for(var c=this,d=c["_on"+a],e=""+b,f=0;f<d.length;f++)if(e===""+d[f]){d.splice(f,1);break}return c},unload:function(){for(var b=this,c=b._audioNode,d=0;d<b._audioNode.length;d++)b.stop(c[d].id),b._webAudio?c[d].disconnect(0):c[d].src="";var e=h._howls.indexOf(b);e&&h._howls.splice(e,1),delete a[b._src],b=null}},c)var l=function(c,d){if(d in a)c._duration=a[d].duration,m(c);else{var e=new XMLHttpRequest;e.open("GET",d,!0),e.responseType="arraybuffer",e.onload=function(){b.decodeAudioData(e.response,function(b){b&&(a[d]=b,m(c,b))})},e.onerror=function(){c._webAudio&&(c._buffer=!0,c._webAudio=!1,c._audioNode=[],delete c._gainNode,c.load())};try{e.send()}catch(f){e.onerror()}}},m=function(a,b){a._duration=b?b.duration:a._duration,0===Object.getOwnPropertyNames(a._sprite).length&&(a._sprite={_default:[0,1e3*a._duration]}),a._loaded||(a._loaded=!0,a.on("load")),a._autoplay&&a.play()},n=function(c,d,e){var f=c._nodeById(e);f.bufferSource=b.createBufferSource(),f.bufferSource.buffer=a[c._src],f.bufferSource.connect(f.panner),f.bufferSource.loop=d[0],d[0]&&(f.bufferSource.loopStart=d[1],f.bufferSource.loopEnd=d[1]+d[2]),f.bufferSource.playbackRate.value=c._rate};"function"==typeof define&&define.amd&&define(function(){return{Howler:h,Howl:k}}),window.Howler=h,window.Howl=k}(),THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:.3},lumInfluence:{type:"f",value:.9}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cameraNear;","uniform float cameraFar;","uniform float fogNear;","uniform float fogFar;","uniform bool fogEnabled;","uniform bool onlyAO;","uniform vec2 size;","uniform float aoClamp;","uniform float lumInfluence;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","varying vec2 vUv;","#define DL 2.399963229728653","#define EULER 2.718281828459045","float width = size.x;","float height = size.y;","float cameraFarPlusNear = cameraFar + cameraNear;","float cameraFarMinusNear = cameraFar - cameraNear;","float cameraCoef = 2.0 * cameraNear;","const int samples = 4;","const float radius = 8.0;","const bool useNoise = true;","const float noiseAmount = 0.0007;","const float diffArea = 0.2;","const float gDisplace = 0.4;","const vec3 onlyAOColor = vec3( 0.6, 0.0, 0.6 );","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","vec2 rand( const vec2 coord ) {","vec2 noise;","if ( useNoise ) {","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );","noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","} else {","float ff = fract( 1.0 - coord.s * ( width / 2.0 ) );","float gg = fract( coord.t * ( height / 2.0 ) );","noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;","}","return ( noise * 2.0  - 1.0 ) * noiseAmount;","}","float doFog() {","float zdepth = unpackDepth( texture2D( tDepth, vUv ) );","float depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );","return smoothstep( fogNear, fogFar, depth );","}","float readDepth( const in vec2 coord ) {","return cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );","}","float compareDepths( const in float depth1, const in float depth2, inout int far ) {","float garea = 2.0;","float diff = ( depth1 - depth2 ) * 100.0;","if ( diff < gDisplace ) {","garea = diffArea;","} else {","far = 1;","}","float dd = diff - gDisplace;","float gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );","return gauss;","}","float calcAO( float depth, float dw, float dh ) {","float dd = radius - depth * radius;","vec2 vv = vec2( dw, dh );","vec2 coord1 = vUv + dd * vv;","vec2 coord2 = vUv - dd * vv;","float temp1 = 0.0;","float temp2 = 0.0;","int far = 0;","temp1 = compareDepths( depth, readDepth( coord1 ), far );","if ( far > 0 ) {","temp2 = compareDepths( readDepth( coord2 ), depth, far );","temp1 += ( 1.0 - temp1 ) * temp2;","}","return temp1;","}","void main() {","vec2 noise = rand( vUv );","float depth = readDepth( vUv );","float tt = clamp( depth, aoClamp, 1.0 );","float w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );","float h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );","float pw = 0.0;","float ph = 0.0;","float ao = 0.0;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","pw = cos( l ) * r;","ph = sin( l ) * r;","ao += calcAO( depth, pw * w, ph * h );","z = z - dz;","l = l + DL;","}","ao /= float( samples );","ao = 1.0 - ao;","if ( fogEnabled ) {","ao = mix( ao, 1.0, doFog() );","}","vec3 color = texture2D( tDiffuse, vUv ).rgb;","vec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );","float lum = dot( color.rgb, lumcoeff );","vec3 luminance = vec3( lum );","vec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","if ( onlyAO ) {","final = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );","}","gl_FragColor = vec4( final, 1.0 );","}"].join("\n")},THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;","vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;","vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );","vec3 rgbM  = rgbaM.xyz;","float opacity  = rgbaM.w;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec3 rgbA = 0.5 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );","vec3 rgbB = rgbA * 0.5 + 0.25 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );","float lumaB = dot( rgbB, luma );","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","gl_FragColor = vec4( rgbA, opacity );","} else {","gl_FragColor = vec4( rgbB, opacity );","}","}"].join("\n")},THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","gl_FragColor = sum;","}"].join("\n"),buildKernel:function(a){function b(a,b){return Math.exp(-(a*a)/(2*b*b))
}var c,d,e,f,g=25,h=2*Math.ceil(3*a)+1;for(h>g&&(h=g),f=.5*(h-1),d=new Array(h),e=0,c=0;h>c;++c)d[c]=b(c-f,a),e+=d[c];for(c=0;h>c;++c)d[c]/=e;return d}},THREE.EffectComposer=function(a,b){if(this.renderer=a,void 0===b){var c=window.innerWidth||1,d=window.innerHeight||1,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};b=new THREE.WebGLRenderTarget(c,d,e)}this.renderTarget1=b,this.renderTarget2=b.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=a},addPass:function(a){this.passes.push(a)},render:function(a){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var b,c,d=!1,e=this.passes.length;for(c=0;e>c;c++)if(b=this.passes[c],b.enabled){if(b.render(this.renderer,this.writeBuffer,this.readBuffer,a,d),b.needsSwap){if(d){var f=this.renderer.context;f.stencilFunc(f.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a),f.stencilFunc(f.EQUAL,1,4294967295)}this.swapBuffers()}b instanceof THREE.MaskPass?d=!0:b instanceof THREE.ClearMaskPass&&(d=!1)}},reset:function(a){void 0===a&&(a=this.renderTarget1.clone(),a.width=window.innerWidth,a.height=window.innerHeight),this.renderTarget1=a,this.renderTarget2=a.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(a,b){var c=this.renderTarget1.clone();c.width=a,c.height=b,this.reset(c)}},THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null),THREE.EffectComposer.scene=new THREE.Scene,THREE.EffectComposer.scene.add(THREE.EffectComposer.quad),THREE.RenderPass=function(a,b,c,d,e){this.scene=a,this.camera=b,this.overrideMaterial=c,this.clearColor=d,this.clearAlpha=void 0!==e?e:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha)),a.render(this.scene,this.camera,c,this.clear),this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}},THREE.MaskPass=function(a,b){this.scene=a,this.camera=b,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1),d.depthMask(!1);var e,f;this.inverse?(e=0,f=1):(e=1,f=0),d.enable(d.STENCIL_TEST),d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE),d.stencilFunc(d.ALWAYS,e,4294967295),d.clearStencil(f),a.render(this.scene,this.camera,c,this.clear),a.render(this.scene,this.camera,b,this.clear),d.colorMask(!0,!0,!0,!0),d.depthMask(!0),d.stencilFunc(d.EQUAL,1,4294967295),d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(a){var b=a.context;b.disable(b.STENCIL_TEST)}},THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(a.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c),THREE.EffectComposer.quad.material=this.material,this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}},require.modules={},require.aliases={},require.resolve=function(a){"/"===a.charAt(0)&&(a=a.slice(1));for(var b=[a,a+".js",a+".json",a+"/index.js",a+"/index.json"],c=0;c<b.length;c++){var a=b[c];if(require.modules.hasOwnProperty(a))return a;if(require.aliases.hasOwnProperty(a))return require.aliases[a]}},require.normalize=function(a,b){var c=[];if("."!=b.charAt(0))return b;a=a.split("/"),b=b.split("/");for(var d=0;d<b.length;++d)".."==b[d]?a.pop():"."!=b[d]&&""!=b[d]&&c.push(b[d]);return a.concat(c).join("/")},require.register=function(a,b){require.modules[a]=b},require.alias=function(a,b){if(!require.modules.hasOwnProperty(a))throw new Error('Failed to alias "'+a+'", it does not exist');require.aliases[b]=a},require.relative=function(a){function b(a,b){for(var c=a.length;c--;)if(a[c]===b)return c;return-1}function c(b){var d=c.resolve(b);return require(d,a,b)}var d=require.normalize(a,"..");return c.resolve=function(c){var e=c.charAt(0);if("/"==e)return c.slice(1);if("."==e)return require.normalize(d,c);var f=a.split("/"),g=b(f,"deps")+1;return g||(g=0),c=f.slice(0,g+1).join("/")+"/deps/"+c},c.exists=function(a){return require.modules.hasOwnProperty(c.resolve(a))},c},require.register("component-raf/index.js",function(a,b,c){function d(a){var b=(new Date).getTime(),c=Math.max(0,16-(b-e)),d=setTimeout(a,c);return e=b,d}a=c.exports=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||d;var e=(new Date).getTime(),f=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame||window.clearTimeout;a.cancel=function(a){f.call(window,a)}}),require.register("visionmedia-debug/index.js",function(a,b,c){c.exports="undefined"==typeof window?b("./lib/debug"):b("./debug")}),require.register("visionmedia-debug/debug.js",function(a,b,c){function d(a){return d.enabled(a)?function(b){b=e(b);var c=new Date,f=c-(d[a]||c);d[a]=c,b=a+" "+b+" +"+d.humanize(f),window.console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}:function(){}}function e(a){return a instanceof Error?a.stack||a.message:a}c.exports=d,d.names=[],d.skips=[],d.enable=function(a){try{localStorage.debug=a}catch(b){}for(var c=(a||"").split(/[\s,]+/),e=c.length,f=0;e>f;f++)a=c[f].replace("*",".*?"),"-"===a[0]?d.skips.push(new RegExp("^"+a.substr(1)+"$")):d.names.push(new RegExp("^"+a+"$"))},d.disable=function(){d.enable("")},d.humanize=function(a){var b=1e3,c=6e4,d=60*c;return a>=d?(a/d).toFixed(1)+"h":a>=c?(a/c).toFixed(1)+"m":a>=b?(a/b|0)+"s":a+"ms"},d.enabled=function(a){for(var b=0,c=d.skips.length;c>b;b++)if(d.skips[b].test(a))return!1;for(var b=0,c=d.names.length;c>b;b++)if(d.names[b].test(a))return!0;return!1};try{window.localStorage&&d.enable(localStorage.debug)}catch(f){}}),require.register("kewah-mixin/index.js",function(a,b,c){c.exports="function"==typeof Object.keys?function(a,b){Object.keys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))})}:function(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}}),require.register("component-event/index.js",function(a){var b=window.addEventListener?"addEventListener":"attachEvent",c=window.removeEventListener?"removeEventListener":"detachEvent",d="addEventListener"!==b?"on":"";a.bind=function(a,c,e,f){return a[b](d+c,e,f||!1),e},a.unbind=function(a,b,e,f){return a[c](d+b,e,f||!1),e}}),require.register("kewah-dom-event-map/index.js",function(a,b,c){function d(a){return a?f(a,d.prototype):void 0}var e=b("for-each"),f=b("mixin"),g=b("event");c.exports=d,d.prototype.mapListener=function(a,b,c,d){this._listeners=this._listeners||[],d=d||!1;var e={el:a,type:b,callback:c,capture:d};this._listenerExists(e)||(this._listeners.push(e),g.bind(a,b,c,d))},d.prototype.mapListenerOnce=function(a,b,c,d){function e(){c.apply(this,arguments),f.unmapListener(a,b,e,d)}var f=this;this.mapListener(a,b,e,d)},d.prototype.unmapListener=function(a,b,c,d){if(this._listeners){d=d||!1;for(var e,f,h,i,j=this._listeners,k=j.length;k--;)e=j[k],e.el===a&&(f=e.type===b,h=e.callback===c,i=e.capture===d,(!b||f&&!c||f&&h&&i)&&(g.unbind(e.el,e.type,e.callback,e.capture),j.splice(k,1)))}},d.prototype.unmapAllListeners=function(){this._listeners&&(e(this._listeners,function(a){g.unbind(a.el,a.type,a.callback,a.capture)}),this._listeners=[])},d.prototype._listenerExists=function(a){var b=!1;return e(this._listeners,function(c){return a.el===c.el&&a.type===c.type&&a.callback===c.callback&&a.capture===c.capture?(b=!0,!1):void 0}),b}}),require.register("kewah-for-each/index.js",function(a,b,c){c.exports=function(a,b,c){var d,e=a.length;if(c){for(d=0;e>d;d++)if(!1===b.call(c,a[d],d,a,e))return a}else for(d=0;e>d;d++)if(!1===b(a[d],d,a,e))return a;return a}}),require.register("component-indexof/index.js",function(a,b,c){c.exports=function(a,b){if(a.indexOf)return a.indexOf(b);for(var c=0;c<a.length;++c)if(a[c]===b)return c;return-1}}),require.register("component-emitter/index.js",function(a,b,c){function d(a){return a?e(a):void 0}function e(a){for(var b in d.prototype)a[b]=d.prototype[b];return a}var f=b("indexof");c.exports=d,d.prototype.on=d.prototype.addEventListener=function(a,b){return this._callbacks=this._callbacks||{},(this._callbacks[a]=this._callbacks[a]||[]).push(b),this},d.prototype.once=function(a,b){function c(){d.off(a,c),b.apply(this,arguments)}var d=this;return this._callbacks=this._callbacks||{},b._off=c,this.on(a,c),this},d.prototype.off=d.prototype.removeListener=d.prototype.removeAllListeners=d.prototype.removeEventListener=function(a,b){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var c=this._callbacks[a];if(!c)return this;if(1==arguments.length)return delete this._callbacks[a],this;var d=f(c,b._off||b);return~d&&c.splice(d,1),this},d.prototype.emit=function(a){this._callbacks=this._callbacks||{};var b=[].slice.call(arguments,1),c=this._callbacks[a];if(c){c=c.slice(0);for(var d=0,e=c.length;e>d;++d)c[d].apply(this,b)}return this},d.prototype.listeners=function(a){return this._callbacks=this._callbacks||{},this._callbacks[a]||[]},d.prototype.hasListeners=function(a){return!!this.listeners(a).length}}),require.register("yields-indexof/index.js",function(a,b,c){var d=[].indexOf;c.exports=function(a){if(!a.parentNode)return-1;var b=a.parentNode.children,c=b.length;if(d)return d.call(b,a);for(var e=0;c>e;++e)if(a==b[e])return e;return-1}}),require.register("snowbuilder/app/geometries/package.js",function(a,b,c){c.exports={branch_01:'{"metadata":{"formatVersion":0.5,"sourceFile":"branch_01.obj","generatedBy":"three-obj","vertices":1272,"faces":1174,"normals":4696,"colors":0,"uvs":1455,"materials":1},"scale":1,"materials":[],"vertices":[0.3638,0.1531,-0.3069,0.9694,0.4935,-1.273,0.9806,0.6549,-2.1155,0.0217,0.0239,-0.0966,0.0129,0.2014,-1.0526,-0.0959,0.0674,-0.4921,-0.4453,0.0848,-1.0714,-1.06,0.0176,-1.5706,-0.8265,-0.0636,-0.8138,-1.104,-0.1542,-0.7182,-1.5061,-0.2838,-0.5895,-1.4039,-0.3238,-0.2346,-0.8219,-0.2225,0.038,-0.8791,-0.2747,0.2358,-0.8691,-0.313,0.4533,-0.6378,-0.2683,0.5379,-0.8417,-0.4284,1.1052,-0.5171,-0.3453,1.1156,-0.3093,-0.34,1.3765,-0.0161,-0.2507,1.3104,0.1715,-0.1207,0.8805,0.3497,-0.0666,0.8412,0.623,-0.0103,0.9231,0.5627,0.0433,0.554,0.7354,0.1027,0.4784,1.0604,0.1998,0.415,1.3305,0.3068,0.2223,1.3661,0.3699,-0.0632,1.1268,0.3521,-0.3022,0.7655,0.2757,-0.3992,0.0073,1.5718,-0.0184,0.1225,1.6391,-0.3109,0.0781,1.6561,-0.5692,-0.2635,1.5034,-0.1082,-0.323,1.5159,-0.3659,-0.4347,1.4674,-0.2275,-0.5844,1.4395,-0.3631,-0.796,1.39,-0.467,-0.811,1.358,-0.2282,-0.9304,1.3143,-0.1511,-1.0684,1.2634,-0.0578,-1.0708,1.2436,0.1067,-0.9375,1.2645,0.2613,-0.9457,1.2475,0.3877,-0.9222,1.2394,0.5168,-0.8274,1.2562,0.6095,-0.8362,1.2307,0.8076,-0.6943,1.2658,0.8616,-0.578,1.2879,0.9628,-0.4305,1.3302,0.9677,-0.3015,1.3798,0.8633,-0.1836,1.4167,0.8408,-0.0493,1.4565,0.8347,0.0019,1.4875,0.696,0.095,1.5231,0.6223,0.2127,1.5664,0.5443,0.3046,1.6068,0.4261,0.3246,1.6298,0.2775,0.26,1.6274,0.1363,0.1474,1.6066,0.0322,-0.4442,2.9554,0.0343,-0.3537,2.9624,-0.2222,-0.3957,2.929,-0.4449,-0.7019,2.8621,-0.0669,-0.7593,2.8244,-0.2816,-0.8715,2.7979,-0.1656,-1.0057,2.7447,-0.2704,-1.1897,2.678,-0.3444,-1.2237,2.6852,-0.1365,-1.3346,2.6559,-0.0568,-1.4581,2.6239,0.0387,-1.471,2.6333,0.192,-1.3703,2.6789,0.3355,-1.3792,2.6868,0.4582,-1.3591,2.7043,0.5819,-1.2768,2.7392,0.6726,-1.2784,2.7543,0.8496,-1.1513,2.8006,0.9024,-1.0445,2.8433,0.9911,-0.9082,2.8884,0.9962,-0.7831,2.9216,0.9078,-0.6697,2.9565,0.8831,-0.5448,2.996,0.8679,-0.4846,3.0046,0.7417,-0.395,3.0272,0.6654,-0.2884,3.0548,0.5828,-0.2047,3.0719,0.466,-0.1818,3.0669,0.3247,-0.2312,3.0389,0.1911,-0.3241,2.9996,0.0896,-0.8716,4.2612,-0.2373,-0.7469,4.2312,-0.4897,-0.771,4.1831,-0.7191,-1.1351,4.1992,-0.3512,-1.1755,4.1494,-0.5761,-1.3026,4.1516,-0.4652,-1.4367,4.1079,-0.5858,-1.6289,4.0605,-0.6799,-1.6774,4.0936,-0.4714,-1.8019,4.088,-0.403,-1.9427,4.0827,-0.32,-1.9665,4.1084,-0.1687,-1.8646,4.153,-0.0185,-1.8843,4.1732,0.1012,-1.8732,4.1987,0.2243,-1.7917,4.2294,0.3191,-1.8115,4.2609,0.4967,-1.6795,4.2927,0.5578,-1.5737,4.3277,0.6554,-1.4291,4.3525,0.6703,-1.2898,4.3579,0.5891,-1.1686,4.3734,0.574,-1.035,4.3931,0.5711,-0.9639,4.3802,0.4492,-0.8633,4.3825,0.3824,-0.7422,4.3871,0.3114,-0.6427,4.3814,0.2038,-0.6074,4.3601,0.0661,-0.6516,4.327,-0.0696,-0.7453,4.2922,-0.1759,-0.8455,5.7855,-0.4917,-0.7293,5.7989,-0.7442,-0.7561,5.7908,-0.9724,-1.1063,5.7437,-0.6084,-1.1494,5.7332,-0.8308,-1.2742,5.7161,-0.7206,-1.4066,5.6939,-0.8379,-1.5945,5.6636,-0.9279,-1.643,5.6598,-0.7201,-1.7647,5.6425,-0.6491,-1.9012,5.6232,-0.5633,-1.9246,5.6222,-0.4107,-1.8271,5.6398,-0.2599,-1.8454,5.6391,-0.1383,-1.8333,5.6431,-0.0136,-1.7534,5.657,0.0823,-1.7694,5.6576,0.2604,-1.6401,5.6784,0.3217,-1.5352,5.6961,0.4187,-1.3932,5.7181,0.4332,-1.2566,5.7375,0.3522,-1.1371,5.7554,0.3359,-1.0057,5.7754,0.3307,-0.9352,5.784,0.2081,-0.8365,5.7979,0.1389,-0.7188,5.8146,0.065,-0.6226,5.8273,-0.0451,-0.5888,5.8301,-0.1846,-0.6318,5.8211,-0.3216,-0.7228,5.8053,-0.429,-1.3815,7.3406,-0.2909,-1.2492,7.4647,-0.5966,-1.2881,7.513,-0.8735,-1.641,7.2545,-0.3723,-1.6939,7.2984,-0.6549,-1.7992,7.2214,-0.5062,-1.9492,7.1974,-0.6643,-2.1671,7.139,-0.7931,-2.1693,7.0794,-0.5389,-2.2889,7.0151,-0.4697,-2.431,6.9381,-0.3855,-2.4278,6.9009,-0.2186,-2.2802,6.9235,-0.0581,-2.2897,6.8911,0.0655,-2.2678,6.8702,0.194,-2.1715,6.8879,0.2863,-2.1892,6.8331,0.4924,-2.0465,6.8779,0.548,-1.9326,6.8987,0.6574,-1.7866,6.956,0.6649,-1.6621,7.0319,0.5544,-1.5484,7.0819,0.5369,-1.4157,7.1345,0.5412,-1.3731,7.1847,0.3988,-1.2821,7.2368,0.3324,-1.1619,7.3012,0.2642,-1.0673,7.3653,0.152,-1.0482,7.4072,0.0043,-1.1179,7.412,-0.1386,-1.2365,7.3882,-0.243,-2.023,8.6058,0.0981,-2.0439,8.6483,-0.0473,-2.1293,8.6672,-0.1648,-2.2928,8.5808,-0.0124,-2.3903,8.5891,-0.1057,-2.4863,8.5488,-0.0483,-2.6068,8.5291,-0.0716,-2.7426,8.498,-0.0702,-2.7801,8.4499,0.0519,-2.8541,8.4076,0.1307,-2.9226,8.3624,0.2221,-2.9247,8.3246,0.3369,-2.864,8.3033,0.4446,-2.8441,8.2746,0.5468,-2.8003,8.2526,0.645,-2.721,8.2455,0.7219,-2.6654,8.2226,0.8307,-2.5544,8.2335,0.8743,-2.4458,8.242,0.9238,-2.3285,8.2675,0.9268,-2.2243,8.306,0.8805,-2.1236,8.3385,0.8506,-2.022,8.3732,0.8142,-1.966,8.4148,0.7252,-1.9015,8.4543,0.6486,-1.8398,8.496,0.5632,-1.8023,8.5376,0.461,-1.806,8.573,0.3495,-1.8535,8.5963,0.245,-1.929,8.6072,0.1588,-2.0165,9.9864,0.5468,-1.9986,10.0565,0.3534,-2.0783,10.1085,0.1986,-2.2851,10.0016,0.4709,-2.378,10.0473,0.3319,-2.472,10.0106,0.4222,-2.6075,10.0224,0.3726,-2.7743,10.0222,0.3523,-2.7922,9.965,0.5094,-2.8789,9.9318,0.5914,-2.9685,9.8933,0.6874,-2.9638,9.8485,0.813,-2.8704,9.8136,0.9221,-2.8563,9.7767,1.0268,-2.8155,9.7423,1.1278,-2.728,9.7208,1.1987,-2.6892,9.6751,1.3312,-2.5663,9.6683,1.3656,-2.4525,9.6534,1.4212,-2.3257,9.6617,1.4139,-2.2188,9.6928,1.3407,-2.1143,9.7098,1.3062,-2.0023,9.7269,1.2727,-1.9551,9.7667,1.1675,-1.8839,9.7978,1.0896,-1.8052,9.8321,1.0038,-1.7528,9.8731,0.896,-1.7537,9.9157,0.7771,-1.8127,9.9512,0.6705,-1.905,9.9756,0.5908,-2.168,11.3417,1.0768,-2.1537,11.4,0.872,-2.239,11.4453,0.7139,-2.437,11.3588,1.0204,-2.5349,11.3998,0.8779,-2.6234,11.3711,0.9797,-2.7621,11.3848,0.9334,-2.9328,11.3894,0.9196,-2.9402,11.3425,1.0847,-3.0241,11.3175,1.1734,-3.1115,11.2885,1.2767,-3.0999,11.2518,1.4052,-2.9976,11.2216,1.5101,-2.9795,11.1914,1.6158,-2.9349,11.1627,1.7163,-2.8439,11.1436,1.7821,-2.8017,11.1047,1.918,-2.6768,11.0968,1.9442,-2.5607,11.0819,1.9949,-2.4342,11.0861,1.9785,-2.3314,11.1097,1.8942,-2.2291,11.1211,1.8526,-2.1182,11.1321,1.8125,-2.0777,11.1637,1.7009,-2.0099,11.1872,1.6177,-1.9335,11.213,1.5259,-1.8844,11.245,1.4126,-1.8904,11.2797,1.2911,-1.9555,11.3097,1.1863,-2.0531,11.3312,1.1122,-2.0339,12.7353,1.3308,-2.0343,12.7613,1.1466,-2.1187,12.7895,1.0059,-2.2952,12.7703,1.2679,-2.3912,12.797,1.1463,-2.4778,12.7929,1.2374,-2.6062,12.8103,1.2044,-2.7595,12.826,1.2021,-2.7742,12.806,1.3544,-2.8505,12.8012,1.4433,-2.927,12.7944,1.546,-2.9183,12.7761,1.6702,-2.8313,12.7529,1.7733,-2.8116,12.7364,1.8772,-2.7672,12.7182,1.9751,-2.6819,12.7003,2.0413,-2.6349,12.6781,2.1658,-2.5183,12.6627,2.193,-2.408,12.6453,2.2384,-2.2891,12.6355,2.2234,-2.1905,12.6363,2.1472,-2.0928,12.6325,2.1049,-1.9896,12.6283,2.0613,-1.9471,12.639,1.9548,-1.8841,12.6445,1.8707,-1.8167,12.6508,1.778,-1.7749,12.6623,1.6665,-1.7819,12.6796,1.5483,-1.8406,12.6999,1.4456,-1.929,12.7193,1.3706,-1.8686,14.2581,1.513,-1.8565,14.3098,1.3347,-1.9298,14.3602,1.1944,-2.1196,14.309,1.4403,-2.2054,14.3555,1.3178,-2.2958,14.341,1.4021,-2.4192,14.3667,1.3638,-2.569,14.3871,1.354,-2.593,14.3462,1.5006,-2.6734,14.3311,1.5828,-2.755,14.3121,1.6783,-2.7545,14.2762,1.7986,-2.6759,14.2362,1.9022,-2.6634,14.2046,2.0034,-2.6264,14.1714,2.1001,-2.5474,14.142,2.1678,-2.5098,14.1011,2.2905,-2.3975,14.0786,2.3221,-2.2927,14.0517,2.3713,-2.1755,14.0407,2.3623,-2.0743,14.0495,2.2932,-1.9762,14.0489,2.257,-1.8724,14.0479,2.2199,-1.8242,14.0723,2.119,-1.7571,14.0878,2.0408,-1.6851,14.1051,1.9546,-1.6369,14.131,1.8489,-1.636,14.165,1.7345,-1.6869,14.2013,1.6326,-1.7685,14.2336,1.5562,-1.6843,15.6397,2.2399,-1.72,15.6897,2.1489,-1.7938,15.7323,2.0779,-1.92,15.7105,2.1389,-2.0063,15.7404,2.0942,-2.0979,15.7309,2.1264,-2.1967,15.7369,2.1296,-2.3006,15.7336,2.1515,-2.3556,15.6953,2.2337,-2.4205,15.665,2.3016,-2.4756,15.6291,2.3791,-2.4905,15.5837,2.4688,-2.4656,15.537,2.555,-2.4517,15.4927,2.6382,-2.4174,15.4492,2.7168,-2.357,15.4111,2.7811,-2.3029,15.3686,2.8549,-2.2137,15.3425,2.8916,-2.1222,15.3187,2.9239,-2.0227,15.3093,2.927,-1.9276,15.316,2.8997,-1.8364,15.3231,2.8724,-1.748,15.3357,2.8349,-1.6852,15.3657,2.7677,-1.625,15.3957,2.7009,-1.5735,15.4305,2.6262,-1.5417,15.4718,2.5419,-1.5385,15.5176,2.4532,-1.5659,15.5633,2.3692,-1.6162,15.605,2.2966,-1.6616,16.9028,2.9132,-1.7222,16.9214,2.8472,-1.7978,16.9372,2.7972,-1.8875,16.9456,2.7829,-1.9753,16.9542,2.7676,-2.0642,16.9564,2.7806,-2.1511,16.9559,2.8047,-2.2325,16.9511,2.8466,-2.298,16.9402,2.9111,-2.3532,16.9268,2.9842,-2.3934,16.9103,3.0668,-2.4129,16.891,3.1564,-2.4111,16.8702,3.2472,-2.3948,16.8491,3.3359,-2.3604,16.8282,3.4188,-2.3085,16.8086,3.4915,-2.2453,16.7905,3.5549,-2.1675,16.7759,3.5994,-2.0826,16.7644,3.6285,-1.993,16.7572,3.6372,-1.9036,16.7548,3.625,-1.8178,16.7562,3.597,-1.7385,16.7617,3.5527,-1.672,16.772,3.4905,-1.6174,16.7854,3.4176,-1.5777,16.8018,3.3354,-1.5558,16.8208,3.2467,-1.5537,16.8414,3.1556,-1.5719,16.8627,3.0668,-1.6085,16.8835,2.9847,-1.5341,18.2837,2.8879,-1.5907,18.2928,2.8215,-1.6619,18.3048,2.7697,-1.7472,18.3203,2.7504,-1.831,18.3355,2.7313,-1.9165,18.3517,2.7389,-2.0003,18.3678,2.7577,-2.0793,18.3834,2.7938,-2.1439,18.3968,2.8521,-2.1987,18.4086,2.9194,-2.2393,18.418,2.9967,-2.2604,18.4239,3.0817,-2.2612,18.4261,3.1691,-2.2479,18.4257,3.2552,-2.2172,18.4218,3.3368,-2.1693,18.4146,3.4094,-2.1104,18.405,3.4736,-2.0371,18.3925,3.5205,-1.9566,18.3782,3.553,-1.8709,18.3625,3.5662,-1.785,18.3463,3.5593,-1.702,18.3302,3.537,-1.6249,18.3149,3.4985,-1.5594,18.3014,3.4424,-1.5053,18.2897,3.3752,-1.4651,18.2804,3.2983,-1.4419,18.2741,3.2142,-1.4375,18.2712,3.1267,-1.4524,18.272,3.0404,-1.4853,18.2763,2.9596,-1.1153,19.7551,2.8896,-1.1685,19.7638,2.8243,-1.2364,19.7741,2.7729,-1.319,19.7854,2.7514,-1.4005,19.7966,2.7313,-1.4846,19.8074,2.7364,-1.5674,19.8178,2.7527,-1.6461,19.8272,2.7858,-1.7117,19.8343,2.8404,-1.7679,19.8399,2.904,-1.8106,19.8434,2.9777,-1.8346,19.8444,3.0592,-1.8389,19.8426,3.1436,-1.8292,19.8391,3.227,-1.8021,19.8334,3.3065,-1.758,19.8257,3.3779,-1.7025,19.8168,3.4411,-1.6325,19.8064,3.4883,-1.5548,19.7953,3.5215,-1.4714,19.7841,3.5364,-1.3869,19.7732,3.532,-1.3048,19.763,3.5124,-1.2278,19.7539,3.4771,-1.1614,19.7466,3.4246,-1.1057,19.7411,3.361,-1.0635,19.7376,3.2877,-1.0376,19.7364,3.207,-1.03,19.7377,3.1227,-1.0413,19.7414,3.039,-1.0703,19.7473,2.9601,-1.1523,21.2492,3.0035,-1.2016,21.2585,2.9396,-1.2652,21.2693,2.8884,-1.3435,21.2814,2.8646,-1.4211,21.2933,2.8431,-1.502,21.3049,2.8452,-1.582,21.3159,2.8586,-1.6583,21.3259,2.8882,-1.7231,21.3336,2.9383,-1.779,21.3396,2.9977,-1.8221,21.3435,3.0671,-1.8477,21.3445,3.1446,-1.8547,21.3428,3.2253,-1.848,21.3391,3.3057,-1.8244,21.3332,3.3828,-1.7844,21.325,3.4526,-1.733,21.3155,3.5148,-1.6674,21.3045,3.5622,-1.5939,21.2928,3.5964,-1.5144,21.2807,3.6132,-1.4332,21.2691,3.6117,-1.3537,21.2582,3.5954,-1.2788,21.2485,3.5638,-1.2133,21.2407,3.5156,-1.1579,21.2347,3.4562,-1.1152,21.2309,3.3871,-1.0879,21.2296,3.3105,-1.078,21.2309,3.2298,-1.0862,21.2348,3.1492,-1.1114,21.241,3.0726,-0.7226,22.65,3.0198,-0.7682,22.6633,2.9589,-0.8268,22.6795,2.9101,-0.8985,22.6983,2.8863,-0.9702,22.7169,2.8658,-1.0449,22.7357,2.8672,-1.1187,22.7539,2.8798,-1.1891,22.7707,2.9079,-1.2492,22.7844,2.9551,-1.301,22.7957,3.0115,-1.3409,22.8037,3.0775,-1.3649,22.8075,3.1511,-1.3718,22.8069,3.228,-1.3659,22.8031,3.3046,-1.3444,22.7955,3.3782,-1.3078,22.7842,3.445,-1.2604,22.7705,3.5043,-1.2001,22.7539,3.5499,-1.1324,22.7359,3.5827,-1.0591,22.717,3.5991,-0.9842,22.6982,3.5982,-0.9108,22.6802,3.5831,-0.8416,22.6637,3.5532,-0.7809,22.6498,3.5076,-0.7296,22.6386,3.4513,-0.69,22.6307,3.3856,-0.6646,22.6265,3.3127,-0.6552,22.6265,3.2359,-0.6623,22.6306,3.159,-0.6852,22.6386,3.0858,-0.4534,24.1818,3.1164,-0.4976,24.1924,3.0594,-0.5543,24.2029,3.0138,-0.6234,24.2123,2.9908,-0.6929,24.2213,2.9718,-0.7654,24.2285,2.973,-0.837,24.2344,2.9851,-0.9054,24.2383,3.0117,-0.9641,24.2395,3.0559,-1.0145,24.2388,3.1089,-1.0535,24.236,3.1709,-1.0772,24.231,3.24,-1.0846,24.224,3.3123,-1.0792,24.2157,3.3843,-1.0588,24.2062,3.4534,-1.0237,24.1959,3.5161,-0.9779,24.1854,3.5718,-0.9197,24.1749,3.6146,-0.8542,24.1651,3.6454,-0.7832,24.1563,3.6608,-0.7105,24.1491,3.6601,-0.6392,24.1435,3.6458,-0.5719,24.1398,3.6177,-0.5128,24.1384,3.5749,-0.4627,24.1391,3.522,-0.424,24.1419,3.4602,-0.3991,24.1467,3.3917,-0.3895,24.1536,3.3195,-0.3959,24.162,3.2473,-0.4176,24.1715,3.1785,-0.4476,25.7402,3.3832,-0.4876,25.7532,3.3298,-0.5392,25.7625,3.286,-0.6027,25.7653,3.2611,-0.6671,25.7666,3.2409,-0.7347,25.7624,3.2382,-0.8018,25.7551,3.2458,-0.8662,25.7441,3.2667,-0.9222,25.729,3.3035,-0.9707,25.7118,3.349,-1.0087,25.6928,3.4031,-1.0328,25.6727,3.4644,-1.0419,25.6526,3.5293,-1.0388,25.6333,3.5946,-1.0217,25.6156,3.6581,-0.9907,25.6004,3.7165,-0.9495,25.5878,3.7689,-0.8964,25.5792,3.8105,-0.8362,25.5744,3.8415,-0.7705,25.574,3.859,-0.7027,25.5781,3.8621,-0.6358,25.5859,3.8527,-0.5723,25.5972,3.8305,-0.5159,25.612,3.7948,-0.4677,25.6292,3.7494,-0.43,25.6481,3.6954,-0.4049,25.6681,3.6347,-0.394,25.6883,3.57,-0.3979,25.7076,3.5044,-0.4161,25.7252,3.4412,-0.7082,27.1504,4.0454,-0.7435,27.1591,3.9948,-0.7891,27.1614,3.9513,-0.8445,27.1542,3.9224,-0.9013,27.1447,3.8983,-0.9608,27.1282,3.8888,-1.0199,27.108,3.8887,-1.0764,27.0837,3.9005,-1.1259,27.056,3.9266,-1.1686,27.0271,3.9613,-1.2019,26.9977,4.0048,-1.2233,26.9694,4.0558,-1.2315,26.9437,4.1115,-1.2289,26.921,4.1689,-1.2139,26.9026,4.2262,-1.1867,26.8895,4.2805,-1.1503,26.8815,4.3305,-1.1038,26.8802,4.3724,-1.0508,26.8847,4.4056,-0.993,26.8954,4.4277,-0.9334,26.9118,4.4376,-0.8745,26.9325,4.4363,-0.8186,26.957,4.4235,-0.7688,26.9844,4.3982,-0.7264,27.0133,4.3635,-0.6932,27.0425,4.3201,-0.6711,27.0709,4.2697,-0.6614,27.097,4.2143,-0.6647,27.1196,4.1566,-0.6806,27.1376,4.0994,-1.4021,28.396,4.5196,-1.4305,28.3976,4.4728,-1.4679,28.3938,4.4325,-1.514,28.383,4.4045,-1.562,28.37,4.3818,-1.613,28.3523,4.3719,-1.6641,28.332,4.3712,-1.7134,28.3094,4.3813,-1.7575,28.2853,4.4044,-1.7961,28.2612,4.4356,-1.8269,28.2379,4.4751,-1.8479,28.2166,4.5215,-1.8579,28.1984,4.5724,-1.8584,28.1836,4.6252,-1.8482,28.1731,4.678,-1.8274,28.1675,4.7283,-1.7982,28.1664,4.7747,-1.7601,28.1708,4.8138,-1.7159,28.1799,4.8451,-1.6671,28.1936,4.8663,-1.616,28.2113,4.8764,-1.5651,28.2319,4.8761,-1.5161,28.2545,4.8651,-1.4718,28.2785,4.8428,-1.4335,28.3026,4.8115,-1.4028,28.3258,4.7722,-1.3813,28.3472,4.7261,-1.3702,28.3657,4.6754,-1.3702,28.3803,4.6225,-1.381,28.3906,4.5697,-1.8378,29.7679,4.8116,-1.862,29.7692,4.7729,-1.8939,29.7673,4.7398,-1.933,29.7613,4.7167,-1.9742,29.7536,4.6989,-2.018,29.743,4.6916,-2.062,29.7308,4.6923,-2.1045,29.717,4.7023,-2.1428,29.7022,4.7226,-2.1763,29.6874,4.75,-2.2032,29.6729,4.7841,-2.2218,29.6596,4.8237,-2.2311,29.6481,4.867,-2.2321,29.6386,4.9116,-2.2238,29.6317,4.956,-2.2065,29.6278,4.9981,-2.1817,29.6267,5.0365,-2.1493,29.629,5.0687,-2.1116,29.6341,5.0941,-2.0698,29.6421,5.1109,-2.0259,29.6527,5.1184,-1.982,29.6651,5.1169,-1.9398,29.6789,5.1064,-1.9013,29.6936,5.0866,-1.868,29.7084,5.0592,-1.8412,29.7228,5.0252,-1.8222,29.7362,4.9858,-1.8122,29.7478,4.9427,-1.8116,29.7573,4.8979,-1.8202,29.764,4.8536,-2.2664,31.1804,5.1453,-2.2841,31.1817,5.1177,-2.3071,31.1802,5.0942,-2.3347,31.1754,5.0769,-2.3641,31.1687,5.0641,-2.3951,31.1596,5.0584,-2.4262,31.1488,5.0586,-2.4561,31.1366,5.0655,-2.483,31.1236,5.0793,-2.5063,31.1103,5.0985,-2.5249,31.0974,5.1224,-2.5376,31.0854,5.1504,-2.5439,31.0749,5.1809,-2.5441,31.0662,5.2126,-2.5378,31.0598,5.2441,-2.5251,31.056,5.2742,-2.5071,31.0548,5.3016,-2.4839,31.0565,5.3248,-2.4569,31.0608,5.3431,-2.4272,31.0677,5.3554,-2.3962,31.0769,5.3612,-2.3652,31.0877,5.3606,-2.3354,31.0999,5.3535,-2.3084,31.1129,5.3399,-2.2852,31.1262,5.3207,-2.2666,31.1391,5.2968,-2.2537,31.1511,5.269,-2.2471,31.1617,5.2385,-2.2471,31.1703,5.2068,-2.2536,31.1766,5.1753,-2.8501,32.373,5.5796,-2.8606,32.3736,5.564,-2.8737,32.3724,5.5505,-2.889,32.3694,5.5399,-2.9056,32.3646,5.5325,-2.9229,32.3583,5.5287,-2.9402,32.3509,5.5287,-2.9567,32.3425,5.5323,-2.9716,32.3336,5.5396,-2.9843,32.3246,5.5501,-2.9943,32.3158,5.5635,-3.0011,32.3077,5.579,-3.0044,32.3005,5.5961,-3.004,32.2947,5.614,-3.0001,32.2904,5.6319,-2.9928,32.2879,5.649,-2.9823,32.2873,5.6646,-2.9691,32.2885,5.678,-2.9539,32.2915,5.6887,-2.9373,32.2963,5.696,-2.9199,32.3025,5.6998,-2.9027,32.31,5.6999,-2.8862,32.3184,5.6962,-2.8713,32.3273,5.689,-2.8586,32.3363,5.6784,-2.8486,32.3451,5.6651,-2.8418,32.3532,5.6496,-2.8385,32.3603,5.6325,-2.8388,32.3662,5.6146,-2.8428,32.3704,5.5967,-2.539,10.2986,1.1071,-2.3515,10.4061,1.1693,-2.2559,10.3523,0.9736,-2.4435,10.2448,0.9114,-2.9012,11.1531,0.6932,-2.7035,11.2331,0.7685,-2.6058,11.1747,0.5763,-2.8036,11.0947,0.501,-2.9866,12.0959,0.3293,-2.7883,12.1459,0.415,-2.6914,12.0859,0.2255,-2.8898,12.0359,0.1398,-3.0888,13.0334,-0.004,-2.89,13.0508,0.0916,-2.7972,13.0176,-0.1044,-2.996,13.0002,-0.2,-3.0056,14.0207,-0.0131,-2.8125,14.0135,0.0805,-2.7185,14.018,-0.112,-2.9116,14.0252,-0.2057,-3.0546,15.0045,0.0511,-2.8657,14.9915,0.1419,-2.7753,15.0213,-0.0444,-2.9642,15.0343,-0.1352,-3.0246,15.9697,0.2817,-2.8413,15.9585,0.3701,-2.7532,15.9945,0.1911,-2.9366,16.0058,0.1026,-3.1163,16.9557,0.4036,-2.942,16.9707,0.4925,-2.8544,16.978,0.3165,-3.0287,16.963,0.2276,-3.1957,17.935,0.2676,-3.031,17.9721,0.3495,-2.9464,17.9672,0.1829,-3.1111,17.9302,0.101,-3.4406,18.8822,0.1699,-3.2872,18.9265,0.2462,-3.2116,18.9382,0.087,-3.365,18.894,0.0107,-3.6957,19.8398,0.1572,-3.5525,19.8801,0.2282,-3.4856,19.9034,0.0798,-3.6288,19.8631,0.0088,-3.995,20.7838,0.2022,-3.8643,20.8206,0.2668,-3.8067,20.8523,0.1319,-3.9374,20.8155,0.0673,-4.3128,21.7235,0.3217,-4.1883,21.7511,0.3812,-4.1354,21.7835,0.2554,-4.2599,21.7558,0.196,-4.5528,22.7024,0.4528,-4.4249,22.7149,0.5104,-4.3665,22.7252,0.3817,-4.4945,22.7127,0.3241,-4.5486,23.7118,0.3724,-4.4207,23.7164,0.4308,-4.3625,23.7039,0.3039,-4.4903,23.6993,0.2455,-4.5518,24.7089,0.2529,-4.4241,24.7205,0.3107,-4.3657,24.6869,0.1863,-4.4935,24.6752,0.1286,-4.5224,25.4253,-0.046,-4.3944,25.4421,0.0098,-4.3368,25.391,-0.1074,-4.4647,25.3742,-0.1631,-1.9389,15.1692,2.4451,-1.9768,15.3663,2.3407,-2.1701,15.2845,2.2564,-2.1321,15.0874,2.3608,-2.428,15.4994,3.2456,-2.4653,15.6947,3.1404,-2.6627,15.6167,3.0657,-2.6254,15.4214,3.1709,-2.8343,15.8745,4.069,-2.8687,16.0646,3.9593,-3.0723,15.9954,3.9037,-3.0379,15.8053,4.0133,-3.1645,16.3254,4.9024,-3.1922,16.5039,4.78,-3.3951,16.4404,4.7331,-3.3674,16.2619,4.8555,-3.5301,16.8819,5.688,-3.5453,17.0401,5.5461,-3.7323,16.9626,5.4761,-3.7171,16.8045,5.618,-4.1501,17.458,6.2645,-4.1541,17.601,6.1173,-4.3167,17.5091,6.0324,-4.3127,17.3662,6.1796,-4.7785,18.0244,6.8227,-4.7854,18.1653,6.6856,-4.9197,18.0587,6.5843,-4.9128,17.9178,6.7214,-5.6234,18.359,7.2526,-5.6549,18.502,7.1355,-5.7483,18.3874,7.0224,-5.7168,18.2444,7.1396,-6.4633,18.4462,7.77,-6.5121,18.5812,7.6731,-6.594,18.4739,7.5647,-6.5451,18.3389,7.6616,-7.2924,18.5353,8.3162,-7.3416,18.6586,8.2313,-7.415,18.5609,8.132,-7.3658,18.4376,8.2169,-8.1198,18.5571,8.8611,-8.1614,18.6672,8.7825,-8.2437,18.5794,8.7051,-8.2021,18.4692,8.7837,-8.7858,18.8491,9.5343,-8.8223,18.957,9.4504,-8.9209,18.8762,9.3894,-8.8844,18.7684,9.4733,-9.4483,19.158,10.2136,-9.4905,19.2685,10.1356,-9.5852,19.1859,10.0707,-9.543,19.0754,10.1487,-10.1375,19.3094,10.9209,-10.1855,19.4212,10.849,-10.2747,19.3375,10.7782,-10.2266,19.2256,10.8502,-10.4256,19.3704,11.2048,-10.4731,19.4821,11.1323,-10.5614,19.3982,11.0608,-10.5139,19.2865,11.1332,-1.334,21.8039,3.0718,-1.3649,21.9453,3.2453,-1.2776,21.7918,3.3865,-1.2467,21.6504,3.213,-0.4415,22.1781,2.9283,-0.4388,22.3314,3.0963,-0.3487,22.1792,3.2349,-0.3514,22.026,3.0669,0.4328,22.3625,2.5401,0.4669,22.52,2.692,0.5668,22.372,2.8236,0.5326,22.2145,2.6717,1.3094,22.6104,2.093,1.3103,22.7566,2.2575,1.4113,22.6134,2.3859,1.4104,22.4672,2.2214,2.2076,23.0521,1.9252,2.1854,23.1827,2.0898,2.2782,23.0406,2.2155,2.3004,22.91,2.0509,3.0903,23.4185,1.7045,3.1019,23.5573,1.8554,3.1896,23.4189,1.9764,3.178,23.2801,1.8254,3.9644,23.6029,1.2969,3.9931,23.7389,1.4327,4.0868,23.6088,1.5431,4.0581,23.4728,1.4074,4.7852,23.9121,0.868,4.8256,24.044,0.9897,4.937,23.9295,1.0802,4.8967,23.7976,0.9585,5.4622,24.1741,0.201,5.5061,24.2988,0.3063,5.617,24.1964,0.3821,5.5732,24.0718,0.2768,6.2149,24.4981,-0.3931,6.244,24.6061,-0.2909,6.334,24.5104,-0.2146,6.3048,24.4024,-0.3169,7.038,24.7817,-0.8684,7.0782,24.886,-0.7798,7.1606,24.7956,-0.7087,7.1204,24.6913,-0.7972,7.7082,24.9284,-1.5641,7.7653,25.036,-1.4924,7.8597,24.9478,-1.4343,7.8027,24.8403,-1.506,8.2739,25.1221,-2.361,8.3194,25.2258,-2.2733,8.4274,25.1425,-2.2341,8.3819,25.0387,-2.3218,8.7728,25.6351,-2.9674,8.8054,25.7257,-2.864,8.9207,25.6498,-2.8336,8.8881,25.5592,-2.9369,-1.678,28.9123,4.6285,-1.8911,28.9523,4.6932,-1.877,28.7841,4.8438,-1.6639,28.744,4.7792,-1.3549,29.5443,5.3053,-1.568,29.5809,5.3664,-1.5396,29.4416,5.5456,-1.3265,29.405,5.4845,-1.1123,30.418,5.7092,-1.3295,30.4283,5.7571,-1.2913,30.3294,5.9512,-1.0741,30.319,5.9034,-1.0872,31.317,6.1611,-1.3007,31.2881,6.188,-1.2629,31.2192,6.3917,-1.0495,31.2481,6.3648,-1.2863,32.2785,6.377,-1.489,32.2306,6.3988,-1.4541,32.173,6.5981,-1.2515,32.221,6.5763,-1.4703,33.1781,6.7723,-1.6705,33.1622,6.807,-1.6307,33.0781,6.9853,-1.4304,33.094,6.9507,-1.2927,34.0422,7.2199,-1.4716,34.0771,7.2786,-1.4402,33.9652,7.4308,-1.2614,33.9303,7.3721,-0.8434,34.7246,7.7966,-1.001,34.77,7.8618,-0.9806,34.653,7.9923,-0.823,34.6076,7.9271,-0.4331,35.4431,8.3624,-0.5784,35.4798,8.4179,-0.5595,35.3749,8.5368,-0.4142,35.3383,8.4814,-0.0592,36.1536,8.955,-0.1839,36.1931,9.0103,-0.1689,36.0963,9.1124,-0.0442,36.0568,9.0571,0.4836,36.7762,9.5037,0.3651,36.8227,9.5652,0.383,36.7292,9.6702,0.5016,36.6827,9.6087,0.9871,37.4861,9.963,0.8678,37.5313,10.0241,0.9031,37.4616,10.1444,1.0223,37.4165,10.0834,1.4118,38.3588,10.1469,1.2931,38.4051,10.2082,1.3381,38.3557,10.3328,1.4568,38.3094,10.2715,1.4513,38.4354,10.1636,1.3331,38.4828,10.2252,1.3777,38.4325,10.3496,1.4959,38.385,10.2881,-2.3717,30.8144,4.9937,-2.4542,30.8357,5.2028,-2.2516,30.7835,5.2886,-2.1691,30.7622,5.0794,-2.1267,31.7619,4.9954,-2.2001,31.8154,5.2035,-1.9976,31.7675,5.2884,-1.9242,31.714,5.0804,-1.8197,32.6465,4.7217,-1.883,32.7251,4.919,-1.6784,32.6913,4.9985,-1.6151,32.6127,4.8012,-1.6079,33.5785,4.4439,-1.6712,33.6503,4.639,-1.4686,33.6264,4.7141,-1.4053,33.5545,4.5191,-1.3884,34.5232,4.1775,-1.4508,34.5907,4.3681,-1.2565,34.5544,4.4452,-1.1941,34.4869,4.2546,-1.0659,35.4359,3.972,-1.1175,35.5249,4.1507,-0.9328,35.4809,4.227,-0.8812,35.3919,4.0482,-0.7017,36.2407,3.5315,-0.7454,36.3385,3.6954,-0.5673,36.2996,3.7666,-0.5236,36.2018,3.6027,-0.3615,37.1271,3.1655,-0.4104,37.2006,3.3281,-0.2482,37.1486,3.4022,-0.1993,37.0751,3.2396,0.1152,37.9908,3.0001,0.0691,38.057,3.1516,0.2193,38.0077,3.2203,0.2654,37.9414,3.0688,0.4566,38.8686,2.6709,0.4095,38.9153,2.8132,0.5496,38.8817,2.8714,0.5967,38.835,2.7291,0.7361,39.8381,2.6187,0.6867,39.8575,2.7495,0.8143,39.8276,2.8024,0.8637,39.8082,2.6715,0.9613,40.8168,2.581,0.9091,40.8241,2.7123,1.0361,40.7917,2.7654,1.0883,40.7844,2.6341,1.199,41.7744,2.6954,1.1438,41.7702,2.8253,1.2757,41.7575,2.8807,1.3308,41.7617,2.7508,1.0993,42.7571,2.7031,1.0448,42.7469,2.8329,1.174,42.7595,2.8886,1.2286,42.7697,2.7587,1.0715,42.9905,2.7164,1.0174,42.9767,2.8461,1.1467,42.989,2.9017,1.2008,43.0028,2.7721,-3.2525,16.4177,4.9061,-3.3344,16.4861,4.8855,-3.3418,16.3818,4.8556,-3.8648,16.0753,6.2317,-3.9452,16.1447,6.2088,-3.952,16.0411,6.1765,-4.5957,15.6906,7.4761,-4.677,15.759,7.453,-4.6873,15.6527,7.4291,-5.0292,15.5768,8.8948,-5.1139,15.645,8.8847,-5.1253,15.5388,8.8614,-5.3579,15.1431,10.2856,-5.445,15.2082,10.2855,-5.454,15.1051,10.2522,-5.3701,15.1262,10.3417,-5.4572,15.1911,10.342,-5.4664,15.0878,10.3092,-3.7527,17.091,5.7789,-3.8484,17.1335,5.7485,-3.8198,17.0338,5.7147,-4.4024,16.4933,6.9941,-4.4935,16.5403,6.9553,-4.4709,16.4354,6.932,-5.244,16.2258,8.2328,-5.3056,16.2839,8.1527,-5.3061,16.1723,8.159,-6.6143,16.6009,8.7793,-6.6279,16.6471,8.6807,-6.6622,16.5445,8.6992,-7.5322,17.0737,9.0032,-7.5357,17.1146,8.9022,-7.5806,17.0175,8.9233,-6.6979,18.5248,7.7337,-6.7202,18.4304,7.7835,-6.6202,18.4732,7.7901,-7.1005,19.2775,8.979,-7.1201,19.174,9.0129,-7.0203,19.2165,9.0234,-7.4112,19.5427,10.4309,-7.4281,19.4346,10.4366,-7.3329,19.479,10.4747,-8.3069,19.6042,11.628,-8.3175,19.4957,11.6252,-8.2388,19.5412,11.6854,-8.4519,19.6127,11.7998,-8.4622,19.5042,11.7966,-8.3855,19.5498,11.8591,-7.5476,18.6089,8.3886,-7.6264,18.5394,8.3644,-7.523,18.5115,8.3486,-7.4689,18.043,9.7725,-7.5524,17.983,9.7372,-7.4503,17.9436,9.7341,-7.8695,17.4674,11.1022,-7.9458,17.4142,11.0472,-7.8469,17.3713,11.0568,-8.2884,16.6422,12.2709,-8.3618,16.5926,12.2094,-8.2692,16.5379,12.2377,-9.1483,16.4535,13.4499,-9.2217,16.404,13.3883,-9.1443,16.3462,13.4372,-9.1571,16.4517,13.4618,-9.2304,16.4021,13.4001,-9.1532,16.3443,13.4493,-9.4336,19.1227,9.9683,-9.3978,19.0781,10.0612,-9.3291,19.1333,9.9972,-9.7652,20.3875,10.7027,-9.7276,20.3359,10.7915,-9.6598,20.3949,10.73,-10.0323,21.5413,11.6215,-9.995,21.4715,11.6978,-9.9299,21.5549,11.6595,-10.765,22.1284,12.7806,-10.7203,22.0537,12.8462,-10.6753,22.1531,12.8383,-11.6718,22.4669,13.7905,-11.6268,22.3921,13.8559,-11.5889,22.4942,13.8558,-10.3587,19.3881,11.082,-10.4541,19.3992,11.0303,-10.3957,19.3079,11.018,-11.0685,18.7725,12.2622,-11.1585,18.7938,12.203,-11.1037,18.701,12.1865,-12.0313,18.0318,13.1428,-12.1211,18.0521,13.083,-12.0646,17.9603,13.0665,-12.7328,17.3866,14.2917,-12.8313,17.3973,14.2457,-12.7658,17.3132,14.2174,-13.2153,16.3839,15.2995,-13.3153,16.3916,15.2565,-13.2455,16.3165,15.2192,-13.3304,16.18,15.5178,-13.4297,16.1889,15.4736,-13.3609,16.112,15.4381,-10.4113,19.4251,11.0264,-10.4505,19.3324,11.0683,-10.3467,19.3378,11.0356,-10.0026,19.8717,12.399,-10.0434,19.7779,12.4369,-9.938,19.7844,12.4092,-9.7306,20.2544,13.8143,-9.7663,20.1645,13.8697,-9.6636,20.1694,13.8289,-9.0676,21.0359,14.8947,-9.0927,20.9584,14.9673,-8.998,20.954,14.9135,-8.9021,21.2492,15.1759,-8.9269,21.1722,15.249,-8.8317,21.1683,15.196,1.3515,22.5642,2.2052,1.3504,22.6668,2.2412,1.3147,22.5863,2.3052,2.728,22.3866,2.7538,2.7308,22.4882,2.7929,2.7018,22.4059,2.8583,4.1857,22.1841,2.9919,4.1927,22.2852,3.0315,4.1763,22.2013,3.0991,5.6766,22.0572,3.0718,5.6814,22.1586,3.1108,5.6682,22.0748,3.1789,7.1575,21.9348,3.2712,7.1597,22.0364,3.31,7.1478,21.9524,3.3782,7.7682,21.9097,3.315,7.7696,22.0114,3.3537,7.7615,21.9272,3.4222,2.5202,23.0992,1.9885,2.4798,23.1986,1.9734,2.4548,23.1426,2.0629,3.6991,23.6772,2.6927,3.6698,23.7821,2.684,3.6347,23.7213,2.7676,4.8905,23.8768,3.5805,4.8664,23.9826,3.5745,4.8117,23.9193,3.6443,5.6961,24.2358,4.8015,5.6666,24.339,4.7867,5.6049,24.2729,4.8466,6.3375,24.6041,5.9099,6.3068,24.7066,5.8929,6.2446,24.6403,5.952,5.5381,24.1489,0.2367,5.5763,24.2491,0.2557,5.558,24.1811,0.3388,6.9402,23.6366,0.1276,6.9787,23.7365,0.1475,6.9648,23.6662,0.2297,8.3303,23.1512,-0.1424,8.372,23.2502,-0.1243,8.3562,23.1815,-0.041,9.6967,22.5456,-0.2447,9.743,22.6425,-0.2265,9.7193,22.5769,-0.1428,10.3986,22.2076,-0.3008,10.4465,22.3038,-0.2826,10.4219,22.2386,-0.1989,6.2867,24.5569,-0.369,6.3641,24.5488,-0.2929,6.3231,24.459,-0.3382,7.3387,24.6107,-1.4321,7.4084,24.6036,-1.348,7.3783,24.5135,-1.4028,8.5718,24.9244,-2.2281,8.6307,24.9122,-2.1373,8.6047,24.8248,-2.197,9.8424,24.9422,-3.0095,9.9038,24.9282,-2.9205,9.8776,24.8419,-2.9817,11.0103,25.3272,-3.8458,11.0747,25.3143,-3.7589,11.0587,25.2313,-3.8274,11.7082,25.6141,-4.3025,11.7713,25.6007,-4.2146,11.7587,25.5191,-4.2853,8.124,25.0001,-1.8946,8.0841,25.0671,-1.9703,8.0292,25.0505,-1.8801,8.8361,26.1322,-1.2545,8.7805,26.182,-1.3369,8.7342,26.1689,-1.241,9.1819,27.5601,-1.0339,9.124,27.5921,-1.1203,9.0733,27.5699,-1.0268,9.16,28.9009,-0.4214,9.1022,28.9365,-0.5064,9.0518,28.8959,-0.4213,9.1464,29.1251,-0.32,9.0887,29.1594,-0.4055,9.0383,29.1181,-0.3208,-1.4518,32.3147,6.5294,-1.3648,32.3574,6.5779,-1.3536,32.3029,6.4846,-1.6451,33.5788,5.7568,-1.5587,33.6256,5.8028,-1.547,33.5671,5.7119,-1.8991,34.7535,4.8811,-1.8152,34.8112,4.9193,-1.803,34.7517,4.8291,-2.48,35.8812,4.102,-2.3995,35.9457,4.1355,-2.3888,35.8887,4.0436,-2.7355,36.3754,3.761,-2.6551,36.4398,3.7945,-2.6443,36.3829,3.7025,-1.3457,33.9553,7.2421,-1.4142,33.9781,7.3238,-1.382,33.8757,7.3071,-0.1779,34.1707,8.1594,-0.2633,34.1933,8.2269,-0.2159,34.0932,8.2258,0.5284,34.8168,9.3203,0.4299,34.8276,9.3662,0.4871,34.7366,9.3819,0.8802,35.1733,10.1176,0.7795,35.1818,10.1583,0.8366,35.0907,10.1738,0.6261,37.0405,9.8331,0.693,37.0486,9.7486,0.5885,37.0253,9.7333,0.2919,38.4997,9.7327,0.3704,38.483,9.6555,0.2612,38.4889,9.6301,0.8264,39.8747,9.4689,0.8947,39.8304,9.3978,0.8009,39.8734,9.364,1.5903,41.1502,9.3786,1.6602,41.108,9.3077,1.5682,41.1536,9.2732,1.998,42.1113,9.3018,2.07,42.0738,9.2306,1.9751,42.1128,9.1967,0.1467,38.0842,3.0432,0.2071,38.1137,3.1289,0.2347,38.0263,3.0708,0.9825,38.9328,2.1639,1.0522,38.9713,2.24,1.0796,38.884,2.1817,1.3805,39.8054,1.0462,1.4629,39.8592,1.0956,1.482,39.7657,1.043,1.4873,40.4217,-0.2964,1.5711,40.4834,-0.2642,1.5896,40.3867,-0.3097,1.4851,40.5201,-0.4956,1.5689,40.5829,-0.4655,1.5874,40.4871,-0.5131],"morphTargets":[],"morphColors":[],"normals":[0.7617,0.3511,-0.5446,0.8569,0.4393,0.2697,0.9171,0.3356,0.2152,0.8241,0.3511,-0.4445,0.8569,0.4393,0.2697,0.0442,0.8079,-0.5877,0.0482,0.5971,-0.8007,0.9171,0.3356,0.2152,0.0442,0.8079,-0.5877,0.2323,0.1168,-0.9656,0.1369,0.1289,-0.9822,0.0482,0.5971,-0.8007,0.2323,0.1168,-0.9656,0.0604,0.2728,-0.9602,0.2723,0.2679,-0.9241,0.1369,0.1289,-0.9822,0.0604,0.2728,-0.9602,-0.1957,0.191,-0.9619,-0.1456,0.1327,-0.9804,0.2723,0.2679,-0.9241,-0.1957,0.191,-0.9619,0.6419,0.4249,-0.6383,0.5247,0.3039,-0.7952,-0.1456,0.1327,-0.9804,0.6419,0.4249,-0.6383,-0.6055,0.5235,-0.5994,-0.5111,0.3126,-0.8007,0.5247,0.3039,-0.7952,-0.6055,0.5235,-0.5994,-0.9252,0.1646,-0.3419,-0.8715,0.0051,-0.4903,-0.5111,0.3126,-0.8007,-0.9252,0.1646,-0.3419,-0.4076,0.3843,-0.8283,-0.573,0.1216,-0.8105,-0.8715,0.0051,-0.4903,-0.4076,0.3843,-0.8283,-0.8855,0.3401,-0.3167,-0.8813,0.0945,-0.463,-0.573,0.1216,-0.8105,-0.8855,0.3401,-0.3167,-0.8152,0.0259,0.5787,-0.9191,-0.0689,0.3879,-0.8813,0.0945,-0.463,-0.8152,0.0259,0.5787,-0.8925,-0.1231,0.434,-0.932,-0.1787,0.3152,-0.9191,-0.0689,0.3879,-0.8925,-0.1231,0.434,-0.9939,-0.0266,-0.1072,-0.9838,-0.1751,0.0382,-0.932,-0.1787,0.3152,-0.9939,-0.0266,-0.1072,-0.8129,-0.0712,0.578,-0.865,-0.1635,0.4745,-0.9838,-0.1751,0.0382,-0.8129,-0.0712,0.578,-0.9082,-0.1054,0.405,-0.9119,-0.1932,0.362,-0.865,-0.1635,0.4745,-0.9082,-0.1054,0.405,-0.7933,0.0865,0.6027,-0.849,-0.0999,0.5189,-0.9119,-0.1932,0.362,-0.7933,0.0865,0.6027,-0.4657,0.0964,0.8797,-0.504,-0.0329,0.8631,-0.849,-0.0999,0.5189,-0.4657,0.0964,0.8797,-0.3581,0.1622,0.9195,-0.3792,0.0195,0.9251,-0.504,-0.0329,0.8631,-0.3581,0.1622,0.9195,0.4775,0.2846,0.8313,0.2768,0.1846,0.943,-0.3792,0.0195,0.9251,0.4775,0.2846,0.8313,0.5931,0.1948,0.7812,0.3934,0.1436,0.9081,0.2768,0.1846,0.943,0.5931,0.1948,0.7812,-0.046,-0.0005,0.9989,0.1111,0.0262,0.9935,0.3934,0.1436,0.9081,-0.046,-0.0005,0.9989,0.5601,0.2641,0.7852,0.5158,0.1997,0.8331,0.1111,0.0262,0.9935,0.5601,0.2641,0.7852,0.8173,0.2801,0.5036,0.7578,0.259,0.5989,0.5158,0.1997,0.8331,0.8173,0.2801,0.5036,0.2845,0.0509,0.9573,0.5412,0.1497,0.8275,0.7578,0.259,0.5989,0.2845,0.0509,0.9573,0.3766,0.1649,0.9116,0.5988,0.2148,0.7716,0.5412,0.1497,0.8275,0.3766,0.1649,0.9116,0.703,0.4737,0.5305,0.8013,0.3855,0.4575,0.5988,0.2148,0.7716,0.703,0.4737,0.5305,0.7455,0.6443,-0.1707,0.8608,0.5028,-0.079,0.8013,0.3855,0.4575,0.7455,0.6443,-0.1707,0.412,0.5161,-0.751,0.6922,0.4641,-0.5527,0.8608,0.5028,-0.079,0.412,0.5161,-0.751,-0.0101,0.2804,-0.9598,0.4207,0.3423,-0.8401,0.6922,0.4641,-0.5527,-0.0101,0.2804,-0.9598,0.7617,0.3511,-0.5446,0.8241,0.3511,-0.4445,0.4207,0.3423,-0.8401,0.8241,0.3511,-0.4445,0.9171,0.3356,0.2152,0.9458,0.3144,0.0817,0.8634,0.2441,-0.4416,0.9171,0.3356,0.2152,0.0482,0.5971,-0.8007,0.247,0.0101,-0.969,0.9458,0.3144,0.0817,0.0482,0.5971,-0.8007,0.1369,0.1289,-0.9822,0.201,-0.0257,-0.9792,0.247,0.0101,-0.969,0.1369,0.1289,-0.9822,0.2723,0.2679,-0.9241,0.2681,0.0019,-0.9634,0.201,-0.0257,-0.9792,0.2723,0.2679,-0.9241,-0.1456,0.1327,-0.9804,-0.0458,-0.1007,-0.9939,0.2681,0.0019,-0.9634,-0.1456,0.1327,-0.9804,0.5247,0.3039,-0.7952,0.4843,0.0799,-0.8713,-0.0458,-0.1007,-0.9939,0.5247,0.3039,-0.7952,-0.5111,0.3126,-0.8007,-0.4962,-0.2207,-0.8397,0.4843,0.0799,-0.8713,-0.5111,0.3126,-0.8007,-0.8715,0.0051,-0.4903,-0.7834,-0.293,-0.5482,-0.4962,-0.2207,-0.8397,-0.8715,0.0051,-0.4903,-0.573,0.1216,-0.8105,-0.5386,-0.2392,-0.8079,-0.7834,-0.293,-0.5482,-0.573,0.1216,-0.8105,-0.8813,0.0945,-0.463,-0.8436,-0.3008,-0.4447,-0.5386,-0.2392,-0.8079,-0.8813,0.0945,-0.463,-0.9191,-0.0689,0.3879,-0.9124,-0.2563,0.3193,-0.8436,-0.3008,-0.4447,-0.9191,-0.0689,0.3879,-0.932,-0.1787,0.3152,-0.9246,-0.2714,0.2675,-0.9124,-0.2563,0.3193,-0.932,-0.1787,0.3152,-0.9838,-0.1751,0.0382,-0.9508,-0.2988,0.0819,-0.9246,-0.2714,0.2675,-0.9838,-0.1751,0.0382,-0.865,-0.1635,0.4745,-0.8455,-0.2268,0.4833,-0.9508,-0.2988,0.0819,-0.865,-0.1635,0.4745,-0.9119,-0.1932,0.362,-0.8981,-0.2592,0.3553,-0.8455,-0.2268,0.4833,-0.9119,-0.1932,0.362,-0.849,-0.0999,0.5189,-0.7772,-0.1934,0.5988,-0.8981,-0.2592,0.3553,-0.849,-0.0999,0.5189,-0.504,-0.0329,0.8631,-0.5012,-0.0781,0.8618,-0.7772,-0.1934,0.5988,-0.504,-0.0329,0.8631,-0.3792,0.0195,0.9251,-0.3417,-0.0187,0.9396,-0.5012,-0.0781,0.8618,-0.3792,0.0195,0.9251,0.2768,0.1846,0.943,0.2349,0.1727,0.9566,-0.3417,-0.0187,0.9396,0.2768,0.1846,0.943,0.3934,0.1436,0.9081,0.3505,0.2035,0.9142,0.2349,0.1727,0.9566,0.3934,0.1436,0.9081,0.1111,0.0262,0.9935,0.1244,0.1316,0.9835,0.3505,0.2035,0.9142,0.1111,0.0262,0.9935,0.5158,0.1997,0.8331,0.5178,0.2482,0.8187,0.1244,0.1316,0.9835,0.5158,0.1997,0.8331,0.7578,0.259,0.5989,0.7401,0.3017,0.601,0.5178,0.2482,0.8187,0.7578,0.259,0.5989,0.5412,0.1497,0.8275,0.5684,0.2574,0.7815,0.7401,0.3017,0.601,0.5412,0.1497,0.8275,0.5988,0.2148,0.7716,0.6531,0.2792,0.704,0.5684,0.2574,0.7815,0.5988,0.2148,0.7716,0.8013,0.3855,0.4575,0.8625,0.3242,0.3887,0.6531,0.2792,0.704,0.8013,0.3855,0.4575,0.8608,0.5028,-0.079,0.9443,0.3112,-0.1068,0.8625,0.3242,0.3887,0.8608,0.5028,-0.079,0.6922,0.4641,-0.5527,0.8082,0.2285,-0.5428,0.9443,0.3112,-0.1068,0.6922,0.4641,-0.5527,0.4207,0.3423,-0.8401,0.5611,0.1208,-0.8189,0.8082,0.2285,-0.5428,0.4207,0.3423,-0.8401,0.8241,0.3511,-0.4445,0.8634,0.2441,-0.4416,0.5611,0.1208,-0.8189,0.8634,0.2441,-0.4416,0.9458,0.3144,0.0817,0.9742,0.1721,0.1462,0.948,0.0865,-0.3061,0.9458,0.3144,0.0817,0.247,0.0101,-0.969,0.2484,-0.1382,-0.9588,0.9742,0.1721,0.1462,0.247,0.0101,-0.969,0.201,-0.0257,-0.9792,0.3782,-0.1122,-0.9189,0.2484,-0.1382,-0.9588,0.201,-0.0257,-0.9792,0.2681,0.0019,-0.9634,0.2487,-0.142,-0.9581,0.3782,-0.1122,-0.9189,0.2681,0.0019,-0.9634,-0.0458,-0.1007,-0.9939,0.09,-0.1737,-0.9807,0.2487,-0.142,-0.9581,-0.0458,-0.1007,-0.9939,0.4843,0.0799,-0.8713,0.5602,-0.0772,-0.8247,0.09,-0.1737,-0.9807,0.4843,0.0799,-0.8713,-0.4962,-0.2207,-0.8397,-0.4678,-0.2319,-0.8529,0.5602,-0.0772,-0.8247,-0.4962,-0.2207,-0.8397,-0.7834,-0.293,-0.5482,-0.7718,-0.2275,-0.5938,-0.4678,-0.2319,-0.8529,-0.7834,-0.293,-0.5482,-0.5386,-0.2392,-0.8079,-0.4753,-0.236,-0.8476,-0.7718,-0.2275,-0.5938,-0.5386,-0.2392,-0.8079,-0.8436,-0.3008,-0.4447,-0.8229,-0.2238,-0.5222,-0.4753,-0.236,-0.8476,-0.8436,-0.3008,-0.4447,-0.9124,-0.2563,0.3193,-0.9705,-0.0992,0.2197,-0.8229,-0.2238,-0.5222,-0.9124,-0.2563,0.3193,-0.9246,-0.2714,0.2675,-0.9642,-0.0931,0.2485,-0.9705,-0.0992,0.2197,-0.9246,-0.2714,0.2675,-0.9508,-0.2988,0.0819,-0.9887,-0.1496,-0.0099,-0.9642,-0.0931,0.2485,-0.9508,-0.2988,0.0819,-0.8455,-0.2268,0.4833,-0.921,-0.0619,0.3847,-0.9887,-0.1496,-0.0099,-0.8455,-0.2268,0.4833,-0.8981,-0.2592,0.3553,-0.9409,-0.0764,0.3301,-0.921,-0.0619,0.3847,-0.8981,-0.2592,0.3553,-0.7772,-0.1934,0.5988,-0.885,-0.0426,0.4636,-0.9409,-0.0764,0.3301,-0.7772,-0.1934,0.5988,-0.5012,-0.0781,0.8618,-0.5547,0.0798,0.8282,-0.885,-0.0426,0.4636,-0.5012,-0.0781,0.8618,-0.3417,-0.0187,0.9396,-0.4579,0.1044,0.8828,-0.5547,0.0798,0.8282,-0.3417,-0.0187,0.9396,0.2349,0.1727,0.9566,0.1512,0.2151,0.9648,-0.4579,0.1044,0.8828,0.2349,0.1727,0.9566,0.3505,0.2035,0.9142,0.3145,0.231,0.9207,0.1512,0.2151,0.9648,0.3505,0.2035,0.9142,0.1244,0.1316,0.9835,0.0506,0.1998,0.9785,0.3145,0.231,0.9207,0.1244,0.1316,0.9835,0.5178,0.2482,0.8187,0.4468,0.2386,0.8622,0.0506,0.1998,0.9785,0.5178,0.2482,0.8187,0.7401,0.3017,0.601,0.7226,0.2394,0.6485,0.4468,0.2386,0.8622,0.7401,0.3017,0.601,0.5684,0.2574,0.7815,0.5119,0.2391,0.8251,0.7226,0.2394,0.6485,0.5684,0.2574,0.7815,0.6531,0.2792,0.704,0.6007,0.2395,0.7628,0.5119,0.2391,0.8251,0.6531,0.2792,0.704,0.8625,0.3242,0.3887,0.8614,0.2207,0.4575,0.6007,0.2395,0.7628,0.8625,0.3242,0.3887,0.9443,0.3112,-0.1068,0.988,0.1415,-0.0619,0.8614,0.2207,0.4575,0.9443,0.3112,-0.1068,0.8082,0.2285,-0.5428,0.8573,0.0359,-0.5136,0.988,0.1415,-0.0619,0.8082,0.2285,-0.5428,0.5611,0.1208,-0.8189,0.6007,-0.0572,-0.7974,0.8573,0.0359,-0.5136,0.5611,0.1208,-0.8189,0.8634,0.2441,-0.4416,0.948,0.0865,-0.3061,0.6007,-0.0572,-0.7974,0.948,0.0865,-0.3061,0.9742,0.1721,0.1462,0.9802,0.1465,0.1331,0.9469,0.1411,-0.2889,0.9742,0.1721,0.1462,0.2484,-0.1382,-0.9588,0.3688,0.0212,-0.9293,0.9802,0.1465,0.1331,0.2484,-0.1382,-0.9588,0.3782,-0.1122,-0.9189,0.204,0.0175,-0.9788,0.3688,0.0212,-0.9293,0.3782,-0.1122,-0.9189,0.2487,-0.142,-0.9581,0.3722,0.0423,-0.9272,0.204,0.0175,-0.9788,0.2487,-0.142,-0.9581,0.09,-0.1737,-0.9807,-0.075,-0.0297,-0.9967,0.3722,0.0423,-0.9272,0.09,-0.1737,-0.9807,0.5602,-0.0772,-0.8247,0.5511,0.0678,-0.8317,-0.075,-0.0297,-0.9967,0.5602,-0.0772,-0.8247,-0.4678,-0.2319,-0.8529,-0.3279,-0.0833,-0.941,0.5511,0.0678,-0.8317,-0.4678,-0.2319,-0.8529,-0.7718,-0.2275,-0.5938,-0.8212,-0.1499,-0.5506,-0.3279,-0.0833,-0.941,-0.7718,-0.2275,-0.5938,-0.4753,-0.236,-0.8476,-0.5013,-0.1037,-0.859,-0.8212,-0.1499,-0.5506,-0.4753,-0.236,-0.8476,-0.8229,-0.2238,-0.5222,-0.7855,-0.1499,-0.6004,-0.5013,-0.1037,-0.859,-0.8229,-0.2238,-0.5222,-0.9705,-0.0992,0.2197,-0.9675,-0.1637,0.1929,-0.7855,-0.1499,-0.6004,-0.9705,-0.0992,0.2197,-0.9642,-0.0931,0.2485,-0.9596,-0.1505,0.2379,-0.9675,-0.1637,0.1929,-0.9642,-0.0931,0.2485,-0.9887,-0.1496,-0.0099,-0.9868,-0.1574,-0.0373,-0.9596,-0.1505,0.2379,-0.9887,-0.1496,-0.0099,-0.921,-0.0619,0.3847,-0.9151,-0.1415,0.3777,-0.9868,-0.1574,-0.0373,-0.921,-0.0619,0.3847,-0.9409,-0.0764,0.3301,-0.9359,-0.1434,0.3218,-0.9151,-0.1415,0.3777,-0.9409,-0.0764,0.3301,-0.885,-0.0426,0.4636,-0.8669,-0.139,0.4786,-0.9359,-0.1434,0.3218,-0.885,-0.0426,0.4636,-0.5547,0.0798,0.8282,-0.5525,-0.0863,0.829,-0.8669,-0.139,0.4786,-0.5547,0.0798,0.8282,-0.4579,0.1044,0.8828,-0.385,-0.0616,0.9209,-0.5525,-0.0863,0.829,-0.4579,0.1044,0.8828,0.1512,0.2151,0.9648,0.2534,0.0403,0.9665,-0.385,-0.0616,0.9209,0.1512,0.2151,0.9648,0.3145,0.231,0.9207,0.2983,0.0546,0.9529,0.2534,0.0403,0.9665,0.3145,0.231,0.9207,0.0506,0.1998,0.9785,0.0782,0.0238,0.9967,0.2983,0.0546,0.9529,0.0506,0.1998,0.9785,0.4468,0.2386,0.8622,0.5676,0.0933,0.818,0.0782,0.0238,0.9967,0.4468,0.2386,0.8622,0.7226,0.2394,0.6485,0.705,0.1155,0.6997,0.5676,0.0933,0.818,0.7226,0.2394,0.6485,0.5119,0.2391,0.8251,0.5377,0.093,0.838,0.705,0.1155,0.6997,0.5119,0.2391,0.8251,0.6007,0.2395,0.7628,0.6522,0.1052,0.7508,0.5377,0.093,0.838,0.6007,0.2395,0.7628,0.8614,0.2207,0.4575,0.8907,0.1314,0.4352,0.6522,0.1052,0.7508,0.8614,0.2207,0.4575,0.988,0.1415,-0.0619,0.9888,0.1366,-0.0597,0.8907,0.1314,0.4352,0.988,0.1415,-0.0619,0.8573,0.0359,-0.5136,0.8617,0.1127,-0.4947,0.9888,0.1366,-0.0597,0.8573,0.0359,-0.5136,0.6007,-0.0572,-0.7974,0.6137,0.0751,-0.7859,0.8617,0.1127,-0.4947,0.6007,-0.0572,-0.7974,0.948,0.0865,-0.3061,0.9469,0.1411,-0.2889,0.6137,0.0751,-0.7859,0.9469,0.1411,-0.2889,0.9802,0.1465,0.1331,0.9002,0.3923,0.189,0.8289,0.4406,-0.3447,0.9802,0.1465,0.1331,0.3688,0.0212,-0.9293,0.2279,0.3621,-0.9039,0.9002,0.3923,0.189,0.3688,0.0212,-0.9293,0.204,0.0175,-0.9788,0.1623,0.2825,-0.9454,0.2279,0.3621,-0.9039,0.204,0.0175,-0.9788,0.3722,0.0423,-0.9272,0.2035,0.3164,-0.9266,0.1623,0.2825,-0.9454,0.3722,0.0423,-0.9272,-0.075,-0.0297,-0.9967,-0.1421,0.1795,-0.9734,0.2035,0.3164,-0.9266,-0.075,-0.0297,-0.9967,0.5511,0.0678,-0.8317,0.4956,0.4272,-0.7563,-0.1421,0.1795,-0.9734,0.5511,0.0678,-0.8317,-0.3279,-0.0833,-0.941,-0.4699,0.0636,-0.8804,0.4956,0.4272,-0.7563,-0.3279,-0.0833,-0.941,-0.8212,-0.1499,-0.5506,-0.8361,-0.2032,-0.5095,-0.4699,0.0636,-0.8804,-0.8212,-0.1499,-0.5506,-0.5013,-0.1037,-0.859,-0.5235,0.0354,-0.8513,-0.8361,-0.2032,-0.5095,-0.5013,-0.1037,-0.859,-0.7855,-0.1499,-0.6004,-0.8254,-0.159,-0.5418,-0.5235,0.0354,-0.8513,-0.7855,-0.1499,-0.6004,-0.9675,-0.1637,0.1929,-0.8664,-0.4072,0.289,-0.8254,-0.159,-0.5418,-0.9675,-0.1637,0.1929,-0.9596,-0.1505,0.2379,-0.864,-0.4117,0.2898,-0.8664,-0.4072,0.289,-0.9596,-0.1505,0.2379,-0.9868,-0.1574,-0.0373,-0.939,-0.3423,-0.0323,-0.864,-0.4117,0.2898,-0.9868,-0.1574,-0.0373,-0.9151,-0.1415,0.3777,-0.8165,-0.4042,0.4123,-0.939,-0.3423,-0.0323,-0.9151,-0.1415,0.3777,-0.9359,-0.1434,0.3218,-0.8616,-0.3909,0.3239,-0.8165,-0.4042,0.4123,-0.9359,-0.1434,0.3218,-0.8669,-0.139,0.4786,-0.7872,-0.3803,0.4855,-0.8616,-0.3909,0.3239,-0.8669,-0.139,0.4786,-0.5525,-0.0863,0.829,-0.4466,-0.3343,0.8299,-0.7872,-0.3803,0.4855,-0.5525,-0.0863,0.829,-0.385,-0.0616,0.9209,-0.3109,-0.2901,0.9051,-0.4466,-0.3343,0.8299,-0.385,-0.0616,0.9209,0.2534,0.0403,0.9665,0.3559,-0.06,0.9326,-0.3109,-0.2901,0.9051,0.2534,0.0403,0.9665,0.2983,0.0546,0.9529,0.4234,-0.0281,0.9055,0.3559,-0.06,0.9326,0.2983,0.0546,0.9529,0.0782,0.0238,0.9967,0.1185,-0.1436,0.9825,0.4234,-0.0281,0.9055,0.0782,0.0238,0.9967,0.5676,0.0933,0.818,0.5852,0.0717,0.8077,0.1185,-0.1436,0.9825,0.5676,0.0933,0.818,0.705,0.1155,0.6997,0.7532,0.1729,0.6347,0.5852,0.0717,0.8077,0.705,0.1155,0.6997,0.5377,0.093,0.838,0.5217,0.0551,0.8513,0.7532,0.1729,0.6347,0.5377,0.093,0.838,0.6522,0.1052,0.7508,0.6071,0.1184,0.7857,0.5217,0.0551,0.8513,0.6522,0.1052,0.7508,0.8907,0.1314,0.4352,0.8411,0.2898,0.4568,0.6071,0.1184,0.7857,0.8907,0.1314,0.4352,0.9888,0.1366,-0.0597,0.9008,0.4243,-0.0924,0.8411,0.2898,0.4568,0.9888,0.1366,-0.0597,0.8617,0.1127,-0.4947,0.7058,0.4302,-0.5628,0.9008,0.4243,-0.0924,0.8617,0.1127,-0.4947,0.6137,0.0751,-0.7859,0.4061,0.3517,-0.8434,0.7058,0.4302,-0.5628,0.6137,0.0751,-0.7859,0.9469,0.1411,-0.2889,0.8289,0.4406,-0.3447,0.4061,0.3517,-0.8434,0.8289,0.4406,-0.3447,0.9002,0.3923,0.189,0.9041,0.3245,-0.2779,0.83,0.3379,-0.4437,0.9002,0.3923,0.189,0.2279,0.3621,-0.9039,-0.089,0.3433,-0.935,0.9041,0.3245,-0.2779,0.2279,0.3621,-0.9039,0.1623,0.2825,-0.9454,0.0637,0.3127,-0.9477,-0.089,0.3433,-0.935,0.1623,0.2825,-0.9454,0.2035,0.3164,-0.9266,-0.0101,0.3172,-0.9483,0.0637,0.3127,-0.9477,0.2035,0.3164,-0.9266,-0.1421,0.1795,-0.9734,-0.1827,0.2733,-0.9444,-0.0101,0.3172,-0.9483,-0.1421,0.1795,-0.9734,0.4956,0.4272,-0.7563,0.0218,0.3299,-0.9438,-0.1827,0.2733,-0.9444,0.4956,0.4272,-0.7563,-0.4699,0.0636,-0.8804,-0.6711,0.1351,-0.729,0.0218,0.3299,-0.9438,-0.4699,0.0636,-0.8804,-0.8361,-0.2032,-0.5095,-0.8601,0.0097,-0.51,-0.6711,0.1351,-0.729,-0.8361,-0.2032,-0.5095,-0.5235,0.0354,-0.8513,-0.7793,0.0616,-0.6236,-0.8601,0.0097,-0.51,-0.5235,0.0354,-0.8513,-0.8254,-0.159,-0.5418,-0.9418,-0.0597,-0.3308,-0.7793,0.0616,-0.6236,-0.8254,-0.159,-0.5418,-0.8664,-0.4072,0.289,-0.9542,-0.2336,0.1871,-0.9418,-0.0597,-0.3308,-0.8664,-0.4072,0.289,-0.864,-0.4117,0.2898,-0.9183,-0.2735,0.2862,-0.9542,-0.2336,0.1871,-0.864,-0.4117,0.2898,-0.939,-0.3423,-0.0323,-0.9381,-0.2651,0.223,-0.9183,-0.2735,0.2862,-0.939,-0.3423,-0.0323,-0.8165,-0.4042,0.4123,-0.8071,-0.3201,0.4961,-0.9381,-0.2651,0.223,-0.8165,-0.4042,0.4123,-0.8616,-0.3909,0.3239,-0.7769,-0.3281,0.5374,-0.8071,-0.3201,0.4961,-0.8616,-0.3909,0.3239,-0.7872,-0.3803,0.4855,-0.6753,-0.335,0.6571,-0.7769,-0.3281,0.5374,-0.7872,-0.3803,0.4855,-0.4466,-0.3343,0.8299,-0.3422,-0.3218,0.8828,-0.6753,-0.335,0.6571,-0.4466,-0.3343,0.8299,-0.3109,-0.2901,0.9051,-0.2019,-0.3046,0.9308,-0.3422,-0.3218,0.8828,-0.3109,-0.2901,0.9051,0.3559,-0.06,0.9326,0.2241,-0.2136,0.9509,-0.2019,-0.3046,0.9308,0.3559,-0.06,0.9326,0.4234,-0.0281,0.9055,0.4041,-0.17,0.8988,0.2241,-0.2136,0.9509,0.4234,-0.0281,0.9055,0.1185,-0.1436,0.9825,0.3568,-0.1945,0.9137,0.4041,-0.17,0.8988,0.1185,-0.1436,0.9825,0.5852,0.0717,0.8077,0.6188,-0.086,0.7809,0.3568,-0.1945,0.9137,0.5852,0.0717,0.8077,0.7532,0.1729,0.6347,0.8091,0.0152,0.5874,0.6188,-0.086,0.7809,0.7532,0.1729,0.6347,0.5217,0.0551,0.8513,0.7847,-0.0063,0.6198,0.8091,0.0152,0.5874,0.5217,0.0551,0.8513,0.6071,0.1184,0.7857,0.862,0.0585,0.5035,0.7847,-0.0063,0.6198,0.6071,0.1184,0.7857,0.8411,0.2898,0.4568,0.9562,0.184,0.2276,0.862,0.0585,0.5035,0.8411,0.2898,0.4568,0.9008,0.4243,-0.0924,0.9397,0.3083,-0.1482,0.9562,0.184,0.2276,0.9008,0.4243,-0.0924,0.7058,0.4302,-0.5628,0.7982,0.374,-0.4722,0.9397,0.3083,-0.1482,0.7058,0.4302,-0.5628,0.4061,0.3517,-0.8434,0.5952,0.3892,-0.703,0.7982,0.374,-0.4722,0.4061,0.3517,-0.8434,0.8289,0.4406,-0.3447,0.83,0.3379,-0.4437,0.5952,0.3892,-0.703,0.83,0.3379,-0.4437,0.9041,0.3245,-0.2779,0.9806,0.1019,-0.1673,0.8517,0.2135,-0.4786,0.9041,0.3245,-0.2779,-0.089,0.3433,-0.935,0.1119,0.319,-0.9411,0.9806,0.1019,-0.1673,-0.089,0.3433,-0.935,0.0637,0.3127,-0.9477,-0.001,0.3406,-0.9402,0.1119,0.319,-0.9411,0.0637,0.3127,-0.9477,-0.0101,0.3172,-0.9483,0.1215,0.3449,-0.9307,-0.001,0.3406,-0.9402,-0.0101,0.3172,-0.9483,-0.1827,0.2733,-0.9444,-0.2402,0.3185,-0.917,0.1215,0.3449,-0.9307,-0.1827,0.2733,-0.9444,0.0218,0.3299,-0.9438,0.2328,0.3403,-0.911,-0.2402,0.3185,-0.917,0.0218,0.3299,-0.9438,-0.6711,0.1351,-0.729,-0.6014,0.2321,-0.7645,0.2328,0.3403,-0.911,-0.6711,0.1351,-0.729,-0.8601,0.0097,-0.51,-0.9076,0.0919,-0.4096,-0.6014,0.2321,-0.7645,-0.8601,0.0097,-0.51,-0.7793,0.0616,-0.6236,-0.7338,0.1929,-0.6514,-0.9076,0.0919,-0.4096,-0.7793,0.0616,-0.6236,-0.9418,-0.0597,-0.3308,-0.9373,0.0664,-0.342,-0.7338,0.1929,-0.6514,-0.9418,-0.0597,-0.3308,-0.9542,-0.2336,0.1871,-0.9365,-0.1688,0.3074,-0.9373,0.0664,-0.342,-0.9542,-0.2336,0.1871,-0.9183,-0.2735,0.2862,-0.9166,-0.1768,0.3587,-0.9365,-0.1688,0.3074,-0.9183,-0.2735,0.2862,-0.9381,-0.2651,0.223,-0.9692,-0.1221,0.2137,-0.9166,-0.1768,0.3587,-0.9381,-0.2651,0.223,-0.8071,-0.3201,0.4961,-0.815,-0.2317,0.5311,-0.9692,-0.1221,0.2137,-0.8071,-0.3201,0.4961,-0.7769,-0.3281,0.5374,-0.84,-0.218,0.4968,-0.815,-0.2317,0.5311,-0.7769,-0.3281,0.5374,-0.6753,-0.335,0.6571,-0.7054,-0.274,0.6537,-0.84,-0.218,0.4968,-0.6753,-0.335,0.6571,-0.3422,-0.3218,0.8828,-0.3624,-0.3395,0.868,-0.7054,-0.274,0.6537,-0.3422,-0.3218,0.8828,-0.2019,-0.3046,0.9308,-0.1866,-0.3505,0.9178,-0.3624,-0.3395,0.868,-0.2019,-0.3046,0.9308,0.2241,-0.2136,0.9509,0.357,-0.3137,0.8798,-0.1866,-0.3505,0.9178,0.2241,-0.2136,0.9509,0.4041,-0.17,0.8988,0.4691,-0.2859,0.8356,0.357,-0.3137,0.8798,0.4041,-0.17,0.8988,0.3568,-0.1945,0.9137,0.3297,-0.3076,0.8926,0.4691,-0.2859,0.8356,0.3568,-0.1945,0.9137,0.6188,-0.086,0.7809,0.6897,-0.2222,0.6891,0.3297,-0.3076,0.8926,0.6188,-0.086,0.7809,0.8091,0.0152,0.5874,0.8484,-0.1481,0.5082,0.6897,-0.2222,0.6891,0.8091,0.0152,0.5874,0.7847,-0.0063,0.6198,0.7616,-0.1886,0.62,0.8484,-0.1481,0.5082,0.7847,-0.0063,0.6198,0.862,0.0585,0.5035,0.8466,-0.1495,0.5107,0.7616,-0.1886,0.62,0.862,0.0585,0.5035,0.9562,0.184,0.2276,0.9789,-0.0391,0.2006,0.8466,-0.1495,0.5107,0.9562,0.184,0.2276,0.9397,0.3083,-0.1482,0.9691,0.108,-0.2219,0.9789,-0.0391,0.2006,0.9397,0.3083,-0.1482,0.7982,0.374,-0.4722,0.7902,0.2263,-0.5695,0.9691,0.108,-0.2219,0.7982,0.374,-0.4722,0.5952,0.3892,-0.703,0.5331,0.2997,-0.7912,0.7902,0.2263,-0.5695,0.5952,0.3892,-0.703,0.83,0.3379,-0.4437,0.8517,0.2135,-0.4786,0.5331,0.2997,-0.7912,0.8517,0.2135,-0.4786,0.9806,0.1019,-0.1673,0.981,0.0649,-0.183,0.8225,0.1589,-0.5462,0.9806,0.1019,-0.1673,0.1119,0.319,-0.9411,-0.0159,0.2794,-0.9601,0.981,0.0649,-0.183,0.1119,0.319,-0.9411,-0.001,0.3406,-0.9402,0.0386,0.2736,-0.9611,-0.0159,0.2794,-0.9601,-0.001,0.3406,-0.9402,0.1215,0.3449,-0.9307,0.0036,0.279,-0.9603,0.0386,0.2736,-0.9611,0.1215,0.3449,-0.9307,-0.2402,0.3185,-0.917,-0.2239,0.2733,-0.9355,0.0036,0.279,-0.9603,-0.2402,0.3185,-0.917,0.2328,0.3403,-0.911,0.2014,0.2801,-0.9386,-0.2239,0.2733,-0.9355,0.2328,0.3403,-0.911,-0.6014,0.2321,-0.7645,-0.7093,0.2037,-0.6748,0.2014,0.2801,-0.9386,-0.6014,0.2321,-0.7645,-0.9076,0.0919,-0.4096,-0.912,0.1213,-0.3918,-0.7093,0.2037,-0.6748,-0.9076,0.0919,-0.4096,-0.7338,0.1929,-0.6514,-0.7593,0.1921,-0.6217,-0.912,0.1213,-0.3918,-0.7338,0.1929,-0.6514,-0.9373,0.0664,-0.342,-0.9644,0.0853,-0.2502,-0.7593,0.1921,-0.6217,-0.9373,0.0664,-0.342,-0.9365,-0.1688,0.3074,-0.9088,-0.1084,0.4029,-0.9644,0.0853,-0.2502,-0.9365,-0.1688,0.3074,-0.9166,-0.1768,0.3587,-0.9023,-0.1114,0.4165,-0.9088,-0.1084,0.4029,-0.9166,-0.1768,0.3587,-0.9692,-0.1221,0.2137,-0.9585,-0.0674,0.2769,-0.9023,-0.1114,0.4165,-0.9692,-0.1221,0.2137,-0.815,-0.2317,0.5311,-0.7845,-0.1614,0.5987,-0.9585,-0.0674,0.2769,-0.815,-0.2317,0.5311,-0.84,-0.218,0.4968,-0.8255,-0.1432,0.5459,-0.7845,-0.1614,0.5987,-0.84,-0.218,0.4968,-0.7054,-0.274,0.6537,-0.6777,-0.1895,0.7105,-0.8255,-0.1432,0.5459,-0.7054,-0.274,0.6537,-0.3624,-0.3395,0.868,-0.3135,-0.251,0.9158,-0.6777,-0.1895,0.7105,-0.3624,-0.3395,0.868,-0.1866,-0.3505,0.9178,-0.1584,-0.261,0.9522,-0.3135,-0.251,0.9158,-0.1866,-0.3505,0.9178,0.357,-0.3137,0.8798,0.3862,-0.2495,0.888,-0.1584,-0.261,0.9522,0.357,-0.3137,0.8798,0.4691,-0.2859,0.8356,0.5341,-0.2302,0.8134,0.3862,-0.2495,0.888,0.4691,-0.2859,0.8356,0.3297,-0.3076,0.8926,0.3712,-0.2482,0.8948,0.5341,-0.2302,0.8134,0.3297,-0.3076,0.8926,0.6897,-0.2222,0.6891,0.69,-0.1942,0.6973,0.3712,-0.2482,0.8948,0.6897,-0.2222,0.6891,0.8484,-0.1481,0.5082,0.8831,-0.1277,0.4514,0.69,-0.1942,0.6973,0.8484,-0.1481,0.5082,0.7616,-0.1886,0.62,0.7839,-0.1646,0.5987,0.8831,-0.1277,0.4514,0.7616,-0.1886,0.62,0.8466,-0.1495,0.5107,0.8545,-0.1347,0.5017,0.7839,-0.1646,0.5987,0.8466,-0.1495,0.5107,0.9789,-0.0391,0.2006,0.9821,-0.0441,0.1829,0.8545,-0.1347,0.5017,0.9789,-0.0391,0.2006,0.9691,0.108,-0.2219,0.9605,0.0811,-0.2663,0.9821,-0.0441,0.1829,0.9691,0.108,-0.2219,0.7902,0.2263,-0.5695,0.7535,0.1817,-0.6318,0.9605,0.0811,-0.2663,0.7902,0.2263,-0.5695,0.5331,0.2997,-0.7912,0.4681,0.241,-0.8502,0.7535,0.1817,-0.6318,0.5331,0.2997,-0.7912,0.8517,0.2135,-0.4786,0.8225,0.1589,-0.5462,0.4681,0.241,-0.8502,0.8225,0.1589,-0.5462,0.981,0.0649,-0.183,0.9616,-0.0577,-0.2683,0.8184,0.003,-0.5746,0.981,0.0649,-0.183,-0.0159,0.2794,-0.9601,0.0265,0.1574,-0.9872,0.9616,-0.0577,-0.2683,-0.0159,0.2794,-0.9601,0.0386,0.2736,-0.9611,-0.0294,0.1476,-0.9886,0.0265,0.1574,-0.9872,0.0386,0.2736,-0.9611,0.0036,0.279,-0.9603,0.0506,0.1394,-0.9889,-0.0294,0.1476,-0.9886,0.0036,0.279,-0.9603,-0.2239,0.2733,-0.9355,-0.2604,0.1659,-0.9511,0.0506,0.1394,-0.9889,-0.2239,0.2733,-0.9355,0.2014,0.2801,-0.9386,0.1479,0.1235,-0.9813,-0.2604,0.1659,-0.9511,0.2014,0.2801,-0.9386,-0.7093,0.2037,-0.6748,-0.6664,0.1838,-0.7226,0.1479,0.1235,-0.9813,-0.7093,0.2037,-0.6748,-0.912,0.1213,-0.3918,-0.9105,0.1591,-0.3816,-0.6664,0.1838,-0.7226,-0.912,0.1213,-0.3918,-0.7593,0.1921,-0.6217,-0.7743,0.1718,-0.609,-0.9105,0.1591,-0.3816,-0.7593,0.1921,-0.6217,-0.9644,0.0853,-0.2502,-0.9555,0.1452,-0.2569,-0.7743,0.1718,-0.609,-0.9644,0.0853,-0.2502,-0.9088,-0.1084,0.4029,-0.9191,0.054,0.3903,-0.9555,0.1452,-0.2569,-0.9088,-0.1084,0.4029,-0.9023,-0.1114,0.4165,-0.9018,0.0413,0.4301,-0.9191,0.054,0.3903,-0.9023,-0.1114,0.4165,-0.9585,-0.0674,0.2769,-0.9481,0.0585,0.3127,-0.9018,0.0413,0.4301,-0.9585,-0.0674,0.2769,-0.7845,-0.1614,0.5987,-0.7819,0.0005,0.6234,-0.9481,0.0585,0.3127,-0.7845,-0.1614,0.5987,-0.8255,-0.1432,0.5459,-0.8078,0.0041,0.5894,-0.7819,0.0005,0.6234,-0.8255,-0.1432,0.5459,-0.6777,-0.1895,0.7105,-0.656,-0.0311,0.7541,-0.8078,0.0041,0.5894,-0.6777,-0.1895,0.7105,-0.3135,-0.251,0.9158,-0.3164,-0.0889,0.9444,-0.656,-0.0311,0.7541,-0.3135,-0.251,0.9158,-0.1584,-0.261,0.9522,-0.1422,-0.1116,0.9835,-0.3164,-0.0889,0.9444,-0.1584,-0.261,0.9522,0.3862,-0.2495,0.888,0.3715,-0.1507,0.9161,-0.1422,-0.1116,0.9835,0.3862,-0.2495,0.888,0.5341,-0.2302,0.8134,0.5009,-0.1577,0.851,0.3715,-0.1507,0.9161,0.5341,-0.2302,0.8134,0.3712,-0.2482,0.8948,0.3822,-0.1586,0.9104,0.5009,-0.1577,0.851,0.3712,-0.2482,0.8948,0.69,-0.1942,0.6973,0.7042,-0.1572,0.6923,0.3822,-0.1586,0.9104,0.69,-0.1942,0.6973,0.8831,-0.1277,0.4514,0.8692,-0.1433,0.4733,0.7042,-0.1572,0.6923,0.8831,-0.1277,0.4514,0.7839,-0.1646,0.5987,0.7992,-0.1554,0.5806,0.8692,-0.1433,0.4733,0.7839,-0.1646,0.5987,0.8545,-0.1347,0.5017,0.8749,-0.1454,0.462,0.7992,-0.1554,0.5806,0.8545,-0.1347,0.5017,0.9821,-0.0441,0.1829,0.9843,-0.1072,0.1405,0.8749,-0.1454,0.462,0.9821,-0.0441,0.1829,0.9605,0.0811,-0.2663,0.9571,-0.0408,-0.287,0.9843,-0.1072,0.1405,0.9605,0.0811,-0.2663,0.7535,0.1817,-0.6318,0.7729,0.0269,-0.6339,0.9571,-0.0408,-0.287,0.7535,0.1817,-0.6318,0.4681,0.241,-0.8502,0.518,0.081,-0.8516,0.7729,0.0269,-0.6339,0.4681,0.241,-0.8502,0.8225,0.1589,-0.5462,0.8184,0.003,-0.5746,0.518,0.081,-0.8516,0.8184,0.003,-0.5746,0.9616,-0.0577,-0.2683,0.9695,-0.012,-0.2449,0.8854,0.0484,-0.4624,0.9616,-0.0577,-0.2683,0.0265,0.1574,-0.9872,0.1009,0.3116,-0.9448,0.9695,-0.012,-0.2449,0.0265,0.1574,-0.9872,-0.0294,0.1476,-0.9886,0.036,0.2943,-0.955,0.1009,0.3116,-0.9448,-0.0294,0.1476,-0.9886,0.0506,0.1394,-0.9889,0.1093,0.2834,-0.9527,0.036,0.2943,-0.955,0.0506,0.1394,-0.9889,-0.2604,0.1659,-0.9511,-0.2166,0.3152,-0.924,0.1093,0.2834,-0.9527,-0.2604,0.1659,-0.9511,0.1479,0.1235,-0.9813,0.2116,0.2734,-0.9383,-0.2166,0.3152,-0.924,0.1479,0.1235,-0.9813,-0.6664,0.1838,-0.7226,-0.5655,0.3269,-0.7572,0.2116,0.2734,-0.9383,-0.6664,0.1838,-0.7226,-0.9105,0.1591,-0.3816,-0.8999,0.2439,-0.3615,-0.5655,0.3269,-0.7572,-0.9105,0.1591,-0.3816,-0.7743,0.1718,-0.609,-0.732,0.2972,-0.6131,-0.8999,0.2439,-0.3615,-0.7743,0.1718,-0.609,-0.9555,0.1452,-0.2569,-0.916,0.2389,-0.3221,-0.732,0.2972,-0.6131,-0.9555,0.1452,-0.2569,-0.9191,0.054,0.3903,-0.9532,0.0572,0.297,-0.916,0.2389,-0.3221,-0.9191,0.054,0.3903,-0.9018,0.0413,0.4301,-0.9133,0.0073,0.4071,-0.9532,0.0572,0.297,-0.9018,0.0413,0.4301,-0.9481,0.0585,0.3127,-0.9673,0.0596,0.2465,-0.9133,0.0073,0.4071,-0.9481,0.0585,0.3127,-0.7819,0.0005,0.6234,-0.8384,-0.0416,0.5435,-0.9673,0.0596,0.2465,-0.7819,0.0005,0.6234,-0.8078,0.0041,0.5894,-0.8253,-0.0496,0.5626,-0.8384,-0.0416,0.5435,-0.8078,0.0041,0.5894,-0.656,-0.0311,0.7541,-0.739,-0.0815,0.6687,-0.8253,-0.0496,0.5626,-0.656,-0.0311,0.7541,-0.3164,-0.0889,0.9444,-0.3748,-0.1928,0.9068,-0.739,-0.0815,0.6687,-0.3164,-0.0889,0.9444,-0.1422,-0.1116,0.9835,-0.2185,-0.2213,0.9504,-0.3748,-0.1928,0.9068,-0.1422,-0.1116,0.9835,0.3715,-0.1507,0.9161,0.3198,-0.2751,0.9066,-0.2185,-0.2213,0.9504,0.3715,-0.1507,0.9161,0.5009,-0.1577,0.851,0.4435,-0.2829,0.8504,0.3198,-0.2751,0.9066,0.5009,-0.1577,0.851,0.3822,-0.1586,0.9104,0.3266,-0.2858,0.9009,0.4435,-0.2829,0.8504,0.3822,-0.1586,0.9104,0.7042,-0.1572,0.6923,0.684,-0.2592,0.6819,0.3266,-0.2858,0.9009,0.7042,-0.1572,0.6923,0.8692,-0.1433,0.4733,0.8318,-0.2292,0.5055,0.684,-0.2592,0.6819,0.8692,-0.1433,0.4733,0.7992,-0.1554,0.5806,0.7651,-0.2473,0.5945,0.8318,-0.2292,0.5055,0.7992,-0.1554,0.5806,0.8749,-0.1454,0.462,0.8546,-0.2151,0.4727,0.7651,-0.2473,0.5945,0.8749,-0.1454,0.462,0.9843,-0.1072,0.1405,0.9788,-0.1295,0.1586,0.8546,-0.2151,0.4727,0.9843,-0.1072,0.1405,0.9571,-0.0408,-0.287,0.968,-0.006,-0.2507,0.9788,-0.1295,0.1586,0.9571,-0.0408,-0.287,0.7729,0.0269,-0.6339,0.8074,0.1047,-0.5806,0.968,-0.006,-0.2507,0.7729,0.0269,-0.6339,0.518,0.081,-0.8516,0.5702,0.1883,-0.7996,0.8074,0.1047,-0.5806,0.518,0.081,-0.8516,0.8184,0.003,-0.5746,0.8854,0.0484,-0.4624,0.5702,0.1883,-0.7996,0.8854,0.0484,-0.4624,0.9695,-0.012,-0.2449,0.8666,0.2104,-0.4525,0.837,0.2161,-0.5027,0.9695,-0.012,-0.2449,0.1009,0.3116,-0.9448,0.2154,0.4907,-0.8443,0.8666,0.2104,-0.4525,0.1009,0.3116,-0.9448,0.036,0.2943,-0.955,0.0115,0.4777,-0.8784,0.2154,0.4907,-0.8443,0.036,0.2943,-0.955,0.1093,0.2834,-0.9527,0.1276,0.461,-0.8782,0.0115,0.4777,-0.8784,0.1093,0.2834,-0.9527,-0.2166,0.3152,-0.924,-0.1825,0.4803,-0.8579,0.1276,0.461,-0.8782,-0.2166,0.3152,-0.924,0.2116,0.2734,-0.9383,-0.092,0.4876,-0.8682,-0.1825,0.4803,-0.8579,0.2116,0.2734,-0.9383,-0.5655,0.3269,-0.7572,-0.5521,0.4602,-0.6952,-0.092,0.4876,-0.8682,-0.5655,0.3269,-0.7572,-0.8999,0.2439,-0.3615,-0.8049,0.357,-0.4741,-0.5521,0.4602,-0.6952,-0.8999,0.2439,-0.3615,-0.732,0.2972,-0.6131,-0.7919,0.3614,-0.4923,-0.8049,0.357,-0.4741,-0.732,0.2972,-0.6131,-0.916,0.2389,-0.3221,-0.9266,0.2651,-0.2666,-0.7919,0.3614,-0.4923,-0.916,0.2389,-0.3221,-0.9532,0.0572,0.297,-0.9923,0.0783,0.0965,-0.9266,0.2651,-0.2666,-0.9532,0.0572,0.297,-0.9133,0.0073,0.4071,-0.9746,-0.0069,0.2237,-0.9923,0.0783,0.0965,-0.9133,0.0073,0.4071,-0.9673,0.0596,0.2465,-0.963,-0.0359,0.2671,-0.9746,-0.0069,0.2237,-0.9673,0.0596,0.2465,-0.8384,-0.0416,0.5435,-0.8613,-0.1536,0.4843,-0.963,-0.0359,0.2671,-0.8384,-0.0416,0.5435,-0.8253,-0.0496,0.5626,-0.8058,-0.1968,0.5585,-0.8613,-0.1536,0.4843,-0.8253,-0.0496,0.5626,-0.739,-0.0815,0.6687,-0.6648,-0.2674,0.6975,-0.8058,-0.1968,0.5585,-0.739,-0.0815,0.6687,-0.3748,-0.1928,0.9068,-0.4146,-0.355,0.8379,-0.6648,-0.2674,0.6975,-0.3748,-0.1928,0.9068,-0.2185,-0.2213,0.9504,-0.2302,-0.3945,0.8896,-0.4146,-0.355,0.8379,-0.2185,-0.2213,0.9504,0.3198,-0.2751,0.9066,0.1113,-0.4279,0.8969,-0.2302,-0.3945,0.8896,0.3198,-0.2751,0.9066,0.4435,-0.2829,0.8504,0.2869,-0.4329,0.8546,0.1113,-0.4279,0.8969,0.4435,-0.2829,0.8504,0.3266,-0.2858,0.9009,0.3496,-0.4311,0.8318,0.2869,-0.4329,0.8546,0.3266,-0.2858,0.9009,0.684,-0.2592,0.6819,0.5985,-0.381,0.7047,0.3496,-0.4311,0.8318,0.684,-0.2592,0.6819,0.8318,-0.2292,0.5055,0.7674,-0.3212,0.5549,0.5985,-0.381,0.7047,0.8318,-0.2292,0.5055,0.7651,-0.2473,0.5945,0.8114,-0.2987,0.5024,0.7674,-0.3212,0.5549,0.7651,-0.2473,0.5945,0.8546,-0.2151,0.4727,0.9027,-0.226,0.3663,0.8114,-0.2987,0.5024,0.8546,-0.2151,0.4727,0.9788,-0.1295,0.1586,0.9834,-0.108,0.1461,0.9027,-0.226,0.3663,0.9788,-0.1295,0.1586,0.968,-0.006,-0.2507,0.9921,0.033,-0.1208,0.9834,-0.108,0.1461,0.968,-0.006,-0.2507,0.8074,0.1047,-0.5806,0.9166,0.16,-0.3663,0.9921,0.033,-0.1208,0.8074,0.1047,-0.5806,0.5702,0.1883,-0.7996,0.7833,0.2605,-0.5644,0.9166,0.16,-0.3663,0.5702,0.1883,-0.7996,0.8854,0.0484,-0.4624,0.837,0.2161,-0.5027,0.7833,0.2605,-0.5644,0.837,0.2161,-0.5027,0.8666,0.2104,-0.4525,0.675,0.141,-0.7242,0.7834,0.1056,-0.6125,0.8666,0.2104,-0.4525,0.2154,0.4907,-0.8443,0.3916,0.2126,-0.8952,0.675,0.141,-0.7242,0.2154,0.4907,-0.8443,0.0115,0.4777,-0.8784,0.172,0.2266,-0.9587,0.3916,0.2126,-0.8952,0.0115,0.4777,-0.8784,0.1276,0.461,-0.8782,0.0282,0.2302,-0.9727,0.172,0.2266,-0.9587,0.1276,0.461,-0.8782,-0.1825,0.4803,-0.8579,-0.2043,0.2398,-0.9491,0.0282,0.2302,-0.9727,-0.1825,0.4803,-0.8579,-0.092,0.4876,-0.8682,-0.3651,0.2399,-0.8995,-0.2043,0.2398,-0.9491,-0.092,0.4876,-0.8682,-0.5521,0.4602,-0.6952,-0.5979,0.2343,-0.7666,-0.3651,0.2399,-0.8995,-0.5521,0.4602,-0.6952,-0.8049,0.357,-0.4741,-0.7618,0.2055,-0.6143,-0.5979,0.2343,-0.7666,-0.8049,0.357,-0.4741,-0.7919,0.3614,-0.4923,-0.8607,0.1776,-0.4771,-0.7618,0.2055,-0.6143,-0.7919,0.3614,-0.4923,-0.9266,0.2651,-0.2666,-0.9493,0.1417,-0.2805,-0.8607,0.1776,-0.4771,-0.9266,0.2651,-0.2666,-0.9923,0.0783,0.0965,-0.9941,0.0926,-0.0558,-0.9493,0.1417,-0.2805,-0.9923,0.0783,0.0965,-0.9746,-0.0069,0.2237,-0.9911,0.044,0.126,-0.9941,0.0926,-0.0558,-0.9746,-0.0069,0.2237,-0.963,-0.0359,0.2671,-0.9545,0.0006,0.2981,-0.9911,0.044,0.126,-0.963,-0.0359,0.2671,-0.8613,-0.1536,0.4843,-0.8712,-0.0468,0.4887,-0.9545,0.0006,0.2981,-0.8613,-0.1536,0.4843,-0.8058,-0.1968,0.5585,-0.766,-0.0879,0.6368,-0.8712,-0.0468,0.4887,-0.8058,-0.1968,0.5585,-0.6648,-0.2674,0.6975,-0.614,-0.1258,0.7792,-0.766,-0.0879,0.6368,-0.6648,-0.2674,0.6975,-0.4146,-0.355,0.8379,-0.4234,-0.1609,0.8915,-0.614,-0.1258,0.7792,-0.4146,-0.355,0.8379,-0.2302,-0.3945,0.8896,-0.2258,-0.187,0.956,-0.4234,-0.1609,0.8915,-0.2302,-0.3945,0.8896,0.1113,-0.4279,0.8969,0.0061,-0.2053,0.9787,-0.2258,-0.187,0.956,0.1113,-0.4279,0.8969,0.2869,-0.4329,0.8546,0.214,-0.2145,0.953,0.0061,-0.2053,0.9787,0.2869,-0.4329,0.8546,0.3496,-0.4311,0.8318,0.3916,-0.2143,0.8948,0.214,-0.2145,0.953,0.3496,-0.4311,0.8318,0.5985,-0.381,0.7047,0.5799,-0.2,0.7898,0.3916,-0.2143,0.8948,0.5985,-0.381,0.7047,0.7674,-0.3212,0.5549,0.7405,-0.1768,0.6484,0.5799,-0.2,0.7898,0.7674,-0.3212,0.5549,0.8114,-0.2987,0.5024,0.8494,-0.1525,0.5052,0.7405,-0.1768,0.6484,0.8114,-0.2987,0.5024,0.9027,-0.226,0.3663,0.9358,-0.116,0.3329,0.8494,-0.1525,0.5052,0.9027,-0.226,0.3663,0.9834,-0.108,0.1461,0.9883,-0.0704,0.1356,0.9358,-0.116,0.3329,0.9834,-0.108,0.1461,0.9921,0.033,-0.1208,0.9969,-0.0203,-0.0755,0.9883,-0.0704,0.1356,0.9921,0.033,-0.1208,0.9166,0.16,-0.3663,0.9584,0.0291,-0.2839,0.9969,-0.0203,-0.0755,0.9166,0.16,-0.3663,0.7833,0.2605,-0.5644,0.8756,0.0748,-0.4773,0.9584,0.0291,-0.2839,0.7833,0.2605,-0.5644,0.837,0.2161,-0.5027,0.7834,0.1056,-0.6125,0.8756,0.0748,-0.4773,0.7834,0.1056,-0.6125,0.675,0.141,-0.7242,0.6579,-0.1308,-0.7417,0.7757,-0.1498,-0.6131,0.675,0.141,-0.7242,0.3916,0.2126,-0.8952,0.3892,-0.0832,-0.9174,0.6579,-0.1308,-0.7417,0.3916,0.2126,-0.8952,0.172,0.2266,-0.9587,0.2115,-0.0522,-0.976,0.3892,-0.0832,-0.9174,0.172,0.2266,-0.9587,0.0282,0.2302,-0.9727,0.0541,-0.0237,-0.9983,0.2115,-0.0522,-0.976,0.0282,0.2302,-0.9727,-0.2043,0.2398,-0.9491,-0.1551,0.0155,-0.9878,0.0541,-0.0237,-0.9983,-0.2043,0.2398,-0.9491,-0.3651,0.2399,-0.8995,-0.3159,0.0462,-0.9477,-0.1551,0.0155,-0.9878,-0.3651,0.2399,-0.8995,-0.5979,0.2343,-0.7666,-0.5402,0.0914,-0.8366,-0.3159,0.0462,-0.9477,-0.5979,0.2343,-0.7666,-0.7618,0.2055,-0.6143,-0.7086,0.1261,-0.6943,-0.5402,0.0914,-0.8366,-0.7618,0.2055,-0.6143,-0.8607,0.1776,-0.4771,-0.8166,0.149,-0.5576,-0.7086,0.1261,-0.6943,-0.8607,0.1776,-0.4771,-0.9493,0.1417,-0.2805,-0.9158,0.1722,-0.3627,-0.8166,0.149,-0.5576,-0.9493,0.1417,-0.2805,-0.9941,0.0926,-0.0558,-0.9731,0.1885,-0.1324,-0.9158,0.1722,-0.3627,-0.9941,0.0926,-0.0558,-0.9911,0.044,0.126,-0.9787,0.1939,0.0675,-0.9731,0.1885,-0.1324,-0.9911,0.044,0.126,-0.9545,0.0006,0.2981,-0.9486,0.1923,0.2513,-0.9787,0.1939,0.0675,-0.9545,0.0006,0.2981,-0.8712,-0.0468,0.4887,-0.8724,0.1828,0.4534,-0.9486,0.1923,0.2513,-0.8712,-0.0468,0.4887,-0.766,-0.0879,0.6368,-0.7693,0.1672,0.6166,-0.8724,0.1828,0.4534,-0.766,-0.0879,0.6368,-0.614,-0.1258,0.7792,-0.6278,0.1443,0.7649,-0.7693,0.1672,0.6166,-0.614,-0.1258,0.7792,-0.4234,-0.1609,0.8915,-0.445,0.1132,0.8884,-0.6278,0.1443,0.7649,-0.4234,-0.1609,0.8915,-0.2258,-0.187,0.956,-0.2573,0.0799,0.963,-0.445,0.1132,0.8884,-0.2258,-0.187,0.956,0.0061,-0.2053,0.9787,-0.0365,0.0396,0.9985,-0.2573,0.0799,0.963,0.0061,-0.2053,0.9787,0.214,-0.2145,0.953,0.1655,0.0015,0.9862,-0.0365,0.0396,0.9985,0.214,-0.2145,0.953,0.3916,-0.2143,0.8948,0.3442,-0.0332,0.9383,0.1655,0.0015,0.9862,0.3916,-0.2143,0.8948,0.5799,-0.2,0.7898,0.5365,-0.0713,0.8409,0.3442,-0.0332,0.9383,0.5799,-0.2,0.7898,0.7405,-0.1768,0.6484,0.7004,-0.105,0.706,0.5365,-0.0713,0.8409,0.7405,-0.1768,0.6484,0.8494,-0.1525,0.5052,0.819,-0.1307,0.5586,0.7004,-0.105,0.706,0.8494,-0.1525,0.5052,0.9358,-0.116,0.3329,0.9138,-0.1526,0.3765,0.819,-0.1307,0.5586,0.9358,-0.116,0.3329,0.9883,-0.0704,0.1356,0.9717,-0.1681,0.1658,0.9138,-0.1526,0.3765,0.9883,-0.0704,0.1356,0.9969,-0.0203,-0.0755,0.9828,-0.1751,-0.059,0.9717,-0.1681,0.1658,0.9969,-0.0203,-0.0755,0.9584,0.0291,-0.2839,0.9448,-0.173,-0.2781,0.9828,-0.1751,-0.059,0.9584,0.0291,-0.2839,0.8756,0.0748,-0.4773,0.8626,-0.1623,-0.4792,0.9448,-0.173,-0.2781,0.8756,0.0748,-0.4773,0.7834,0.1056,-0.6125,0.7757,-0.1498,-0.6131,0.8626,-0.1623,-0.4792,0.7757,-0.1498,-0.6131,0.6579,-0.1308,-0.7417,0.6929,-0.0612,-0.7184,0.8042,-0.0791,-0.5891,0.6579,-0.1308,-0.7417,0.3892,-0.0832,-0.9174,0.4469,-0.0234,-0.8943,0.6929,-0.0612,-0.7184,0.3892,-0.0832,-0.9174,0.2115,-0.0522,-0.976,0.2466,0.0046,-0.9691,0.4469,-0.0234,-0.8943,0.2115,-0.0522,-0.976,0.0541,-0.0237,-0.9983,0.1079,0.0228,-0.9939,0.2466,0.0046,-0.9691,0.0541,-0.0237,-0.9983,-0.1551,0.0155,-0.9878,-0.1139,0.0519,-0.9921,0.1079,0.0228,-0.9939,-0.1551,0.0155,-0.9878,-0.3159,0.0462,-0.9477,-0.274,0.0717,-0.9591,-0.1139,0.0519,-0.9921,-0.3159,0.0462,-0.9477,-0.5402,0.0914,-0.8366,-0.4965,0.0986,-0.8624,-0.274,0.0717,-0.9591,-0.5402,0.0914,-0.8366,-0.7086,0.1261,-0.6943,-0.6803,0.1189,-0.7233,-0.4965,0.0986,-0.8624,-0.7086,0.1261,-0.6943,-0.8166,0.149,-0.5576,-0.7961,0.1302,-0.591,-0.6803,0.1189,-0.7233,-0.8166,0.149,-0.5576,-0.9158,0.1722,-0.3627,-0.9056,0.1395,-0.4005,-0.7961,0.1302,-0.591,-0.9158,0.1722,-0.3627,-0.9731,0.1885,-0.1324,-0.9751,0.1425,-0.1702,-0.9056,0.1395,-0.4005,-0.9731,0.1885,-0.1324,-0.9787,0.1939,0.0675,-0.9897,0.1386,0.0348,-0.9751,0.1425,-0.1702,-0.9787,0.1939,0.0675,-0.9486,0.1923,0.2513,-0.9656,0.1302,0.2252,-0.9897,0.1386,0.0348,-0.9486,0.1923,0.2513,-0.8724,0.1828,0.4534,-0.8934,0.1152,0.4341,-0.9656,0.1302,0.2252,-0.8724,0.1828,0.4534,-0.7693,0.1672,0.6166,-0.7924,0.0973,0.6022,-0.8934,0.1152,0.4341,-0.7693,0.1672,0.6166,-0.6278,0.1443,0.7649,-0.647,0.0743,0.7589,-0.7924,0.0973,0.6022,-0.6278,0.1443,0.7649,-0.445,0.1132,0.8884,-0.4662,0.0474,0.8834,-0.647,0.0743,0.7589,-0.445,0.1132,0.8884,-0.2573,0.0799,0.963,-0.274,0.0203,0.9615,-0.4662,0.0474,0.8834,-0.2573,0.0799,0.963,-0.0365,0.0396,0.9985,-0.0527,-0.0095,0.9986,-0.274,0.0203,0.9615,-0.0365,0.0396,0.9985,0.1655,0.0015,0.9862,0.1467,-0.0354,0.9885,-0.0527,-0.0095,0.9986,0.1655,0.0015,0.9862,0.3442,-0.0332,0.9383,0.3283,-0.0581,0.9428,0.1467,-0.0354,0.9885,0.3442,-0.0332,0.9383,0.5365,-0.0713,0.8409,0.5236,-0.0809,0.8481,0.3283,-0.0581,0.9428,0.5365,-0.0713,0.8409,0.7004,-0.105,0.706,0.6861,-0.0988,0.7208,0.5236,-0.0809,0.8481,0.7004,-0.105,0.706,0.819,-0.1307,0.5586,0.8093,-0.1111,0.5768,0.6861,-0.0988,0.7208,0.819,-0.1307,0.5586,0.9138,-0.1526,0.3765,0.9092,-0.1193,0.3989,0.8093,-0.1111,0.5768,0.9138,-0.1526,0.3765,0.9717,-0.1681,0.1658,0.9736,-0.1221,0.193,0.9092,-0.1193,0.3989,0.9717,-0.1681,0.1658,0.9828,-0.1751,-0.059,0.9926,-0.1185,-0.0277,0.9736,-0.1221,0.193,0.9828,-0.1751,-0.059,0.9448,-0.173,-0.2781,0.9634,-0.1088,-0.2451,0.9926,-0.1185,-0.0277,0.9448,-0.173,-0.2781,0.8626,-0.1623,-0.4792,0.8896,-0.0938,-0.4471,0.9634,-0.1088,-0.2451,0.8626,-0.1623,-0.4792,0.7757,-0.1498,-0.6131,0.8042,-0.0791,-0.5891,0.8896,-0.0938,-0.4471,0.8042,-0.0791,-0.5891,0.6929,-0.0612,-0.7184,0.7022,-0.065,-0.709,0.8176,-0.0866,-0.5693,0.6929,-0.0612,-0.7184,0.4469,-0.0234,-0.8943,0.4509,-0.022,-0.8923,0.7022,-0.065,-0.709,0.4469,-0.0234,-0.8943,0.2466,0.0046,-0.9691,0.278,0.0044,-0.9606,0.4509,-0.022,-0.8923,0.2466,0.0046,-0.9691,0.1079,0.0228,-0.9939,0.1111,0.0295,-0.9934,0.278,0.0044,-0.9606,0.1079,0.0228,-0.9939,-0.1139,0.0519,-0.9921,-0.0949,0.059,-0.9937,0.1111,0.0295,-0.9934,-0.1139,0.0519,-0.9921,-0.274,0.0717,-0.9591,-0.264,0.0823,-0.961,-0.0949,0.059,-0.9937,-0.274,0.0717,-0.9591,-0.4965,0.0986,-0.8624,-0.4905,0.1119,-0.8642,-0.264,0.0823,-0.961,-0.4965,0.0986,-0.8624,-0.6803,0.1189,-0.7233,-0.6633,0.1323,-0.7366,-0.4905,0.1119,-0.8642,-0.6803,0.1189,-0.7233,-0.7961,0.1302,-0.591,-0.784,0.145,-0.6036,-0.6633,0.1323,-0.7366,-0.7961,0.1302,-0.591,-0.9056,0.1395,-0.4005,-0.8959,0.1549,-0.4164,-0.784,0.145,-0.6036,-0.9056,0.1395,-0.4005,-0.9751,0.1425,-0.1702,-0.9682,0.1578,-0.1941,-0.8959,0.1549,-0.4164,-0.9751,0.1425,-0.1702,-0.9897,0.1386,0.0348,-0.9881,0.1537,0.0056,-0.9682,0.1578,-0.1941,-0.9897,0.1386,0.0348,-0.9656,0.1302,0.2252,-0.97,0.1446,0.1952,-0.9881,0.1537,0.0056,-0.9656,0.1302,0.2252,-0.8934,0.1152,0.4341,-0.9068,0.1286,0.4015,-0.97,0.1446,0.1952,-0.8934,0.1152,0.4341,-0.7924,0.0973,0.6022,-0.8125,0.1092,0.5727,-0.9068,0.1286,0.4015,-0.7924,0.0973,0.6022,-0.647,0.0743,0.7589,-0.6794,0.0849,0.7289,-0.8125,0.1092,0.5727,-0.647,0.0743,0.7589,-0.4662,0.0474,0.8834,-0.5049,0.0556,0.8614,-0.6794,0.0849,0.7289,-0.4662,0.0474,0.8834,-0.274,0.0203,0.9615,-0.3222,0.0265,0.9463,-0.5049,0.0556,0.8614,-0.274,0.0203,0.9615,-0.0527,-0.0095,0.9986,-0.1073,-0.006,0.9942,-0.3222,0.0265,0.9463,-0.0527,-0.0095,0.9986,0.1467,-0.0354,0.9885,0.0954,-0.0352,0.9948,-0.1073,-0.006,0.9942,0.1467,-0.0354,0.9885,0.3283,-0.0581,0.9428,0.2784,-0.0604,0.9586,0.0954,-0.0352,0.9948,0.3283,-0.0581,0.9428,0.5236,-0.0809,0.8481,0.4743,-0.0857,0.8762,0.2784,-0.0604,0.9586,0.5236,-0.0809,0.8481,0.6861,-0.0988,0.7208,0.6483,-0.1066,0.7539,0.4743,-0.0857,0.8762,0.6861,-0.0988,0.7208,0.8093,-0.1111,0.5768,0.7797,-0.1209,0.6143,0.6483,-0.1066,0.7539,0.8093,-0.1111,0.5768,0.9092,-0.1193,0.3989,0.8889,-0.1306,0.439,0.7797,-0.1209,0.6143,0.9092,-0.1193,0.3989,0.9736,-0.1221,0.193,0.9632,-0.1342,0.2329,0.8889,-0.1306,0.439,0.9736,-0.1221,0.193,0.9926,-0.1185,-0.0277,0.9914,-0.1306,0.0089,0.9632,-0.1342,0.2329,0.9926,-0.1185,-0.0277,0.9634,-0.1088,-0.2451,0.9694,-0.12,-0.214,0.9914,-0.1306,0.0089,0.9634,-0.1088,-0.2451,0.8896,-0.0938,-0.4471,0.9005,-0.1031,-0.4225,0.9694,-0.12,-0.214,0.8896,-0.0938,-0.4471,0.8042,-0.0791,-0.5891,0.8176,-0.0866,-0.5693,0.9005,-0.1031,-0.4225,0.8176,-0.0866,-0.5693,0.7022,-0.065,-0.709,0.7003,-0.1412,-0.6997,0.8091,-0.173,-0.5617,0.7022,-0.065,-0.709,0.4509,-0.022,-0.8923,0.4732,-0.0786,-0.8774,0.7003,-0.1412,-0.6997,0.4509,-0.022,-0.8923,0.278,0.0044,-0.9606,0.2879,-0.03,-0.9572,0.4732,-0.0786,-0.8774,0.278,0.0044,-0.9606,0.1111,0.0295,-0.9934,0.1369,0.0091,-0.9905,0.2879,-0.03,-0.9572,0.1111,0.0295,-0.9934,-0.0949,0.059,-0.9937,-0.0757,0.0627,-0.9952,0.1369,0.0091,-0.9905,-0.0949,0.059,-0.9937,-0.264,0.0823,-0.961,-0.2421,0.1038,-0.9647,-0.0757,0.0627,-0.9952,-0.264,0.0823,-0.961,-0.4905,0.1119,-0.8642,-0.4605,0.1562,-0.8738,-0.2421,0.1038,-0.9647,-0.4905,0.1119,-0.8642,-0.6633,0.1323,-0.7366,-0.6398,0.1972,-0.7428,-0.4605,0.1562,-0.8738,-0.6633,0.1323,-0.7366,-0.784,0.145,-0.6036,-0.7604,0.2235,-0.6097,-0.6398,0.1972,-0.7428,-0.784,0.145,-0.6036,-0.8959,0.1549,-0.4164,-0.8716,0.246,-0.424,-0.7604,0.2235,-0.6097,-0.8959,0.1549,-0.4164,-0.9682,0.1578,-0.1941,-0.9448,0.2576,-0.2025,-0.8716,0.246,-0.424,-0.9682,0.1578,-0.1941,-0.9881,0.1537,0.0056,-0.9665,0.2567,-0.0001,-0.9448,0.2576,-0.2025,-0.9881,0.1537,0.0056,-0.97,0.1446,0.1952,-0.95,0.2468,0.1912,-0.9665,0.2567,-0.0001,-0.97,0.1446,0.1952,-0.9068,0.1286,0.4015,-0.8892,0.2252,0.3982,-0.95,0.2468,0.1912,-0.9068,0.1286,0.4015,-0.8125,0.1092,0.5727,-0.7973,0.1968,0.5706,-0.8892,0.2252,0.3982,-0.8125,0.1092,0.5727,-0.6794,0.0849,0.7289,-0.6644,0.1587,0.7303,-0.7973,0.1968,0.5706,-0.6794,0.0849,0.7289,-0.5049,0.0556,0.8614,-0.4945,0.112,0.862,-0.6644,0.1587,0.7303,-0.5049,0.0556,0.8614,-0.3222,0.0265,0.9463,-0.3109,0.0632,0.9483,-0.4945,0.112,0.862,-0.3222,0.0265,0.9463,-0.1073,-0.006,0.9942,-0.0979,0.0081,0.9952,-0.3109,0.0632,0.9483,-0.1073,-0.006,0.9942,0.0954,-0.0352,0.9948,0.1011,-0.042,0.994,-0.0979,0.0081,0.9952,0.0954,-0.0352,0.9948,0.2784,-0.0604,0.9586,0.2846,-0.087,0.9547,0.1011,-0.042,0.994,0.2784,-0.0604,0.9586,0.4743,-0.0857,0.8762,0.4788,-0.1332,0.8678,0.2846,-0.087,0.9547,0.4743,-0.0857,0.8762,0.6483,-0.1066,0.7539,0.645,-0.1714,0.7447,0.4788,-0.1332,0.8678,0.6483,-0.1066,0.7539,0.7797,-0.1209,0.6143,0.7729,-0.1992,0.6024,0.645,-0.1714,0.7447,0.7797,-0.1209,0.6143,0.8889,-0.1306,0.439,0.8771,-0.22,0.4269,0.7729,-0.1992,0.6024,0.8889,-0.1306,0.439,0.9632,-0.1342,0.2329,0.9467,-0.2313,0.2242,0.8771,-0.22,0.4269,0.9632,-0.1342,0.2329,0.9914,-0.1306,0.0089,0.9729,-0.2313,0.0065,0.9467,-0.2313,0.2242,0.9914,-0.1306,0.0089,0.9694,-0.12,-0.214,0.9528,-0.2197,-0.2096,0.9729,-0.2313,0.0065,0.9694,-0.12,-0.214,0.9005,-0.1031,-0.4225,0.8892,-0.1977,-0.4126,0.9528,-0.2197,-0.2096,0.9005,-0.1031,-0.4225,0.8176,-0.0866,-0.5693,0.8091,-0.173,-0.5617,0.8892,-0.1977,-0.4126,0.8091,-0.173,-0.5617,0.7003,-0.1412,-0.6997,0.7163,0.0173,-0.6976,0.8297,-0.0093,-0.5581,0.7003,-0.1412,-0.6997,0.4732,-0.0786,-0.8774,0.4904,0.0587,-0.8695,0.7163,0.0173,-0.6976,0.4732,-0.0786,-0.8774,0.2879,-0.03,-0.9572,0.3002,0.0861,-0.95,0.4904,0.0587,-0.8695,0.2879,-0.03,-0.9572,0.1369,0.0091,-0.9905,0.1423,0.1056,-0.9842,0.3002,0.0861,-0.95,0.1369,0.0091,-0.9905,-0.0757,0.0627,-0.9952,-0.075,0.128,-0.9889,0.1423,0.1056,-0.9842,-0.0757,0.0627,-0.9952,-0.2421,0.1038,-0.9647,-0.248,0.1423,-0.9582,-0.075,0.128,-0.9889,-0.2421,0.1038,-0.9647,-0.4605,0.1562,-0.8738,-0.4684,0.1553,-0.8698,-0.248,0.1423,-0.9582,-0.4605,0.1562,-0.8738,-0.6398,0.1972,-0.7428,-0.6522,0.1599,-0.7409,-0.4684,0.1553,-0.8698,-0.6398,0.1972,-0.7428,-0.7604,0.2235,-0.6097,-0.7782,0.1583,-0.6078,-0.6522,0.1599,-0.7409,-0.7604,0.2235,-0.6097,-0.8716,0.246,-0.424,-0.8929,0.1504,-0.4245,-0.7782,0.1583,-0.6078,-0.8716,0.246,-0.424,-0.9448,0.2576,-0.2025,-0.9691,0.1347,-0.2065,-0.8929,0.1504,-0.4245,-0.9448,0.2576,-0.2025,-0.9665,0.2567,-0.0001,-0.9933,0.1152,-0.0041,-0.9691,0.1347,-0.2065,-0.9665,0.2567,-0.0001,-0.95,0.2468,0.1912,-0.9777,0.093,0.1884,-0.9933,0.1152,-0.0041,-0.95,0.2468,0.1912,-0.8892,0.2252,0.3982,-0.9165,0.0648,0.3948,-0.9777,0.093,0.1884,-0.8892,0.2252,0.3982,-0.7973,0.1968,0.5706,-0.822,0.0366,0.5684,-0.9165,0.0648,0.3948,-0.7973,0.1968,0.5706,-0.6644,0.1587,0.7303,-0.6855,0.006,0.7281,-0.822,0.0366,0.5684,-0.6644,0.1587,0.7303,-0.4945,0.112,0.862,-0.5115,-0.0256,0.8589,-0.6855,0.006,0.7281,-0.4945,0.112,0.862,-0.3109,0.0632,0.9483,-0.3225,-0.0538,0.945,-0.5115,-0.0256,0.8589,-0.3109,0.0632,0.9483,-0.0979,0.0081,0.9952,-0.1049,-0.0807,0.9912,-0.3225,-0.0538,0.945,-0.0979,0.0081,0.9952,0.1011,-0.042,0.994,0.0994,-0.1013,0.9899,-0.1049,-0.0807,0.9912,0.1011,-0.042,0.994,0.2846,-0.087,0.9547,0.2891,-0.1162,0.9502,0.0994,-0.1013,0.9899,0.2846,-0.087,0.9547,0.4788,-0.1332,0.8678,0.4877,-0.1269,0.8637,0.2891,-0.1162,0.9502,0.4788,-0.1332,0.8678,0.645,-0.1714,0.7447,0.6576,-0.131,0.7419,0.4877,-0.1269,0.8637,0.645,-0.1714,0.7447,0.7729,-0.1992,0.6024,0.7899,-0.1292,0.5995,0.6576,-0.131,0.7419,0.7729,-0.1992,0.6024,0.8771,-0.22,0.4269,0.8971,-0.1212,0.425,0.7899,-0.1292,0.5995,0.8771,-0.22,0.4269,0.9467,-0.2313,0.2242,0.9687,-0.1068,0.2241,0.8971,-0.1212,0.425,0.9467,-0.2313,0.2242,0.9729,-0.2313,0.0065,0.9962,-0.0865,0.0088,0.9687,-0.1068,0.2241,0.9729,-0.2313,0.0065,0.9528,-0.2197,-0.2096,0.9768,-0.0617,-0.2052,0.9962,-0.0865,0.0088,0.9528,-0.2197,-0.2096,0.8892,-0.1977,-0.4126,0.9128,-0.0338,-0.407,0.9768,-0.0617,-0.2052,0.8892,-0.1977,-0.4126,0.8091,-0.173,-0.5617,0.8297,-0.0093,-0.5581,0.9128,-0.0338,-0.407,0.8297,-0.0093,-0.5581,0.7163,0.0173,-0.6976,0.73,0.2602,-0.632,0.8433,0.2253,-0.4879,0.7163,0.0173,-0.6976,0.4904,0.0587,-0.8695,0.5121,0.2966,-0.8061,0.73,0.2602,-0.632,0.4904,0.0587,-0.8695,0.3002,0.0861,-0.95,0.3256,0.3088,-0.8937,0.5121,0.2966,-0.8061,0.3002,0.0861,-0.95,0.1423,0.1056,-0.9842,0.1615,0.3095,-0.9371,0.3256,0.3088,-0.8937,0.1423,0.1056,-0.9842,-0.075,0.128,-0.9889,-0.0556,0.2985,-0.9528,0.1615,0.3095,-0.9371,-0.075,0.128,-0.9889,-0.248,0.1423,-0.9582,-0.2328,0.2793,-0.9316,-0.0556,0.2985,-0.9528,-0.248,0.1423,-0.9582,-0.4684,0.1553,-0.8698,-0.451,0.242,-0.8591,-0.2328,0.2793,-0.9316,-0.4684,0.1553,-0.8698,-0.6522,0.1599,-0.7409,-0.6368,0.1948,-0.746,-0.451,0.242,-0.8591,-0.6522,0.1599,-0.7409,-0.7782,0.1583,-0.6078,-0.7665,0.1491,-0.6248,-0.6368,0.1948,-0.746,-0.7782,0.1583,-0.6078,-0.8929,0.1504,-0.4245,-0.8842,0.0909,-0.4581,-0.7665,0.1491,-0.6248,-0.8929,0.1504,-0.4245,-0.9691,0.1347,-0.2065,-0.9659,0.0252,-0.2577,-0.8842,0.0909,-0.4581,-0.9691,0.1347,-0.2065,-0.9933,0.1152,-0.0041,-0.9973,-0.0349,-0.0648,-0.9659,0.0252,-0.2577,-0.9933,0.1152,-0.0041,-0.9777,0.093,0.1884,-0.9886,-0.0898,0.1208,-0.9973,-0.0349,-0.0648,-0.9777,0.093,0.1884,-0.9165,0.0648,0.3948,-0.9354,-0.146,0.3222,-0.9886,-0.0898,0.1208,-0.9165,0.0648,0.3948,-0.822,0.0366,0.5684,-0.8457,-0.192,0.4979,-0.9354,-0.146,0.3222,-0.822,0.0366,0.5684,-0.6855,0.006,0.7281,-0.7146,-0.2307,0.6604,-0.8457,-0.192,0.4979,-0.6855,0.006,0.7281,-0.5115,-0.0256,0.8589,-0.5425,-0.2595,0.7989,-0.7146,-0.2307,0.6604,-0.5115,-0.0256,0.8589,-0.3225,-0.0538,0.945,-0.3532,-0.2742,0.8945,-0.5425,-0.2595,0.7989,-0.3225,-0.0538,0.945,-0.1049,-0.0807,0.9912,-0.1344,-0.2753,0.9519,-0.3532,-0.2742,0.8945,-0.1049,-0.0807,0.9912,0.0994,-0.1013,0.9899,0.0739,-0.2633,0.9619,-0.1344,-0.2753,0.9519,0.0994,-0.1013,0.9899,0.2891,-0.1162,0.9502,0.2684,-0.2404,0.9328,0.0739,-0.2633,0.9619,0.2891,-0.1162,0.9502,0.4877,-0.1269,0.8637,0.4698,-0.2036,0.859,0.2684,-0.2404,0.9328,0.4877,-0.1269,0.8637,0.6576,-0.131,0.7419,0.6421,-0.1585,0.75,0.4698,-0.2036,0.859,0.6576,-0.131,0.7419,0.7899,-0.1292,0.5995,0.778,-0.1094,0.6186,0.6421,-0.1585,0.75,0.7899,-0.1292,0.5995,0.8971,-0.1212,0.425,0.8883,-0.0529,0.4563,0.778,-0.1094,0.6186,0.8971,-0.1212,0.425,0.9687,-0.1068,0.2241,0.9633,0.0088,0.2684,0.8883,-0.0529,0.4563,0.9687,-0.1068,0.2241,0.9962,-0.0865,0.0088,0.9953,0.0718,0.0651,0.9633,0.0088,0.2684,0.9962,-0.0865,0.0088,0.9768,-0.0617,-0.2052,0.9814,0.1318,-0.1396,0.9953,0.0718,0.0651,0.9768,-0.0617,-0.2052,0.9128,-0.0338,-0.407,0.9233,0.186,-0.3361,0.9814,0.1318,-0.1396,0.9128,-0.0338,-0.407,0.8297,-0.0093,-0.5581,0.8433,0.2253,-0.4879,0.9233,0.186,-0.3361,0.8433,0.2253,-0.4879,0.73,0.2602,-0.632,0.6976,0.4811,-0.531,0.8034,0.456,-0.3829,0.73,0.2602,-0.632,0.5121,0.2966,-0.8061,0.5045,0.4895,-0.7112,0.6976,0.4811,-0.531,0.5121,0.2966,-0.8061,0.3256,0.3088,-0.8937,0.3221,0.4717,-0.8208,0.5045,0.4895,-0.7112,0.3256,0.3088,-0.8937,0.1615,0.3095,-0.9371,0.1694,0.4438,-0.88,0.3221,0.4717,-0.8208,0.1615,0.3095,-0.9371,-0.0556,0.2985,-0.9528,-0.0375,0.3895,-0.9202,0.1694,0.4438,-0.88,-0.0556,0.2985,-0.9528,-0.2328,0.2793,-0.9316,-0.21,0.3306,-0.9201,-0.0375,0.3895,-0.9202,-0.2328,0.2793,-0.9316,-0.451,0.242,-0.8591,-0.4193,0.2408,-0.8753,-0.21,0.3306,-0.9201,-0.451,0.242,-0.8591,-0.6368,0.1948,-0.746,-0.6002,0.1424,-0.7871,-0.4193,0.2408,-0.8753,-0.6368,0.1948,-0.746,-0.7665,0.1491,-0.6248,-0.7316,0.0532,-0.6796,-0.6002,0.1424,-0.7871,-0.7665,0.1491,-0.6248,-0.8842,0.0909,-0.4581,-0.8489,-0.05,-0.5261,-0.7316,0.0532,-0.6796,-0.8842,0.0909,-0.4581,-0.9659,0.0252,-0.2577,-0.9287,-0.1553,-0.3366,-0.8489,-0.05,-0.5261,-0.9659,0.0252,-0.2577,-0.9973,-0.0349,-0.0648,-0.9585,-0.2427,-0.1497,-0.9287,-0.1553,-0.3366,-0.9973,-0.0349,-0.0648,-0.9886,-0.0898,0.1208,-0.9481,-0.3159,0.037,-0.9585,-0.2427,-0.1497,-0.9886,-0.0898,0.1208,-0.9354,-0.146,0.3222,-0.8941,-0.3798,0.2375,-0.9481,-0.3159,0.037,-0.9354,-0.146,0.3222,-0.8457,-0.192,0.4979,-0.8067,-0.4223,0.4134,-0.8941,-0.3798,0.2375,-0.8457,-0.192,0.4979,-0.7146,-0.2307,0.6604,-0.6795,-0.4476,0.5813,-0.8067,-0.4223,0.4134,-0.7146,-0.2307,0.6604,-0.5425,-0.2595,0.7989,-0.5205,-0.452,0.7244,-0.6795,-0.4476,0.5813,-0.5425,-0.2595,0.7989,-0.3532,-0.2742,0.8945,-0.3439,-0.4357,0.8318,-0.5205,-0.452,0.7244,-0.3532,-0.2742,0.8945,-0.1344,-0.2753,0.9519,-0.1432,-0.3978,0.9062,-0.3439,-0.4357,0.8318,-0.1344,-0.2753,0.9519,0.0739,-0.2633,0.9619,0.0499,-0.3447,0.9374,-0.1432,-0.3978,0.9062,0.0739,-0.2633,0.9619,0.2684,-0.2404,0.9328,0.2341,-0.2792,0.9313,0.0499,-0.3447,0.9374,0.2684,-0.2404,0.9328,0.4698,-0.2036,0.859,0.4247,-0.1947,0.8841,0.2341,-0.2792,0.9313,0.4698,-0.2036,0.859,0.6421,-0.1585,0.75,0.5916,-0.1029,0.7996,0.4247,-0.1947,0.8841,0.6421,-0.1585,0.75,0.778,-0.1094,0.6186,0.7261,-0.0109,0.6875,0.5916,-0.1029,0.7996,0.778,-0.1094,0.6186,0.8883,-0.0529,0.4563,0.8358,0.0866,0.5421,0.7261,-0.0109,0.6875,0.8883,-0.0529,0.4563,0.9633,0.0088,0.2684,0.9115,0.1842,0.3678,0.8358,0.0866,0.5421,0.9633,0.0088,0.2684,0.9953,0.0718,0.0651,0.9454,0.2756,0.174,0.9115,0.1842,0.3678,0.9953,0.0718,0.0651,0.9814,0.1318,-0.1396,0.9348,0.3543,-0.0262,0.9454,0.2756,0.174,0.9814,0.1318,-0.1396,0.9233,0.186,-0.3361,0.8815,0.4166,-0.222,0.9348,0.3543,-0.0262,0.9233,0.186,-0.3361,0.8433,0.2253,-0.4879,0.8034,0.456,-0.3829,0.8815,0.4166,-0.222,0.8034,0.456,-0.3829,0.6976,0.4811,-0.531,0.7027,0.4616,-0.5414,0.8056,0.4569,-0.3772,0.6976,0.4811,-0.531,0.5045,0.4895,-0.7112,0.518,0.4409,-0.733,0.7027,0.4616,-0.5414,0.5045,0.4895,-0.7112,0.3221,0.4717,-0.8208,0.3502,0.4038,-0.8452,0.518,0.4409,-0.733,0.3221,0.4717,-0.8208,0.1694,0.4438,-0.88,0.184,0.357,-0.9158,0.3502,0.4038,-0.8452,0.1694,0.4438,-0.88,-0.0375,0.3895,-0.9202,-0.0134,0.2891,-0.9572,0.184,0.357,-0.9158,-0.0375,0.3895,-0.9202,-0.21,0.3306,-0.9201,-0.1901,0.2184,-0.9572,-0.0134,0.2891,-0.9572,-0.21,0.3306,-0.9201,-0.4193,0.2408,-0.8753,-0.3955,0.123,-0.9102,-0.1901,0.2184,-0.9572,-0.4193,0.2408,-0.8753,-0.6002,0.1424,-0.7871,-0.5671,0.0297,-0.8231,-0.3955,0.123,-0.9102,-0.6002,0.1424,-0.7871,-0.7316,0.0532,-0.6796,-0.6999,-0.0544,-0.7122,-0.5671,0.0297,-0.8231,-0.7316,0.0532,-0.6796,-0.8489,-0.05,-0.5261,-0.8171,-0.1442,-0.5582,-0.6999,-0.0544,-0.7122,-0.8489,-0.05,-0.5261,-0.9287,-0.1553,-0.3366,-0.8997,-0.2294,-0.3713,-0.8171,-0.1442,-0.5582,-0.9287,-0.1553,-0.3366,-0.9585,-0.2427,-0.1497,-0.9371,-0.2966,-0.184,-0.8997,-0.2294,-0.3713,-0.9585,-0.2427,-0.1497,-0.9481,-0.3159,0.037,-0.9369,-0.3496,0.007,-0.9371,-0.2966,-0.184,-0.9481,-0.3159,0.037,-0.8941,-0.3798,0.2375,-0.8962,-0.3901,0.2114,-0.9369,-0.3496,0.007,-0.8941,-0.3798,0.2375,-0.8067,-0.4223,0.4134,-0.8209,-0.4112,0.3964,-0.8962,-0.3901,0.2114,-0.8067,-0.4223,0.4134,-0.6795,-0.4476,0.5813,-0.7077,-0.4144,0.5722,-0.8209,-0.4112,0.3964,-0.6795,-0.4476,0.5813,-0.5205,-0.452,0.7244,-0.5594,-0.3978,0.7272,-0.7077,-0.4144,0.5722,-0.5205,-0.452,0.7244,-0.3439,-0.4357,0.8318,-0.3924,-0.3634,0.845,-0.5594,-0.3978,0.7272,-0.3439,-0.4357,0.8318,-0.1432,-0.3978,0.9062,-0.1997,-0.3095,0.9297,-0.3924,-0.3634,0.845,-0.1432,-0.3978,0.9062,0.0499,-0.3447,0.9374,-0.008,-0.2437,0.9698,-0.1997,-0.3095,0.9297,0.0499,-0.3447,0.9374,0.2341,-0.2792,0.9313,0.1754,-0.17,0.9697,-0.008,-0.2437,0.9698,0.2341,-0.2792,0.9313,0.4247,-0.1947,0.8841,0.3636,-0.0827,0.9279,0.1754,-0.17,0.9697,0.4247,-0.1947,0.8841,0.5916,-0.1029,0.7996,0.534,0.0086,0.8455,0.3636,-0.0827,0.9279,0.5916,-0.1029,0.7996,0.7261,-0.0109,0.6875,0.6728,0.0955,0.7336,0.534,0.0086,0.8455,0.7261,-0.0109,0.6875,0.8358,0.0866,0.5421,0.7885,0.1826,0.5873,0.6728,0.0955,0.7336,0.8358,0.0866,0.5421,0.9115,0.1842,0.3678,0.8724,0.2655,0.4105,0.7885,0.1826,0.5873,0.9115,0.1842,0.3678,0.9454,0.2756,0.174,0.9168,0.3385,0.2118,0.8724,0.2655,0.4105,0.9454,0.2756,0.174,0.9348,0.3543,-0.0262,0.918,0.3966,0.0037,0.9168,0.3385,0.2118,0.9348,0.3543,-0.0262,0.8815,0.4166,-0.222,0.8763,0.4371,-0.2029,0.918,0.3966,0.0037,0.8815,0.4166,-0.222,0.8034,0.456,-0.3829,0.8056,0.4569,-0.3772,0.8763,0.4371,-0.2029,0.8056,0.4569,-0.3772,0.7027,0.4616,-0.5414,0.7339,0.3585,-0.5769,0.8395,0.3534,-0.4128,0.7027,0.4616,-0.5414,0.518,0.4409,-0.733,0.5569,0.3467,-0.7548,0.7339,0.3585,-0.5769,0.518,0.4409,-0.733,0.3502,0.4038,-0.8452,0.3851,0.3215,-0.8651,0.5569,0.3467,-0.7548,0.3502,0.4038,-0.8452,0.184,0.357,-0.9158,0.2131,0.2884,-0.9335,0.3851,0.3215,-0.8651,0.184,0.357,-0.9158,-0.0134,0.2891,-0.9572,0.0096,0.2399,-0.9707,0.2131,0.2884,-0.9335,-0.0134,0.2891,-0.9572,-0.1901,0.2184,-0.9572,-0.1764,0.1879,-0.9662,0.0096,0.2399,-0.9707,-0.1901,0.2184,-0.9572,-0.3955,0.123,-0.9102,-0.3854,0.12,-0.9149,-0.1764,0.1879,-0.9662,-0.3955,0.123,-0.9102,-0.5671,0.0297,-0.8231,-0.5671,0.0506,-0.8221,-0.3854,0.12,-0.9149,-0.5671,0.0297,-0.8231,-0.6999,-0.0544,-0.7122,-0.7101,-0.0132,-0.704,-0.5671,0.0506,-0.8221,-0.6999,-0.0544,-0.7122,-0.8171,-0.1442,-0.5582,-0.8347,-0.0803,-0.5449,-0.7101,-0.0132,-0.704,-0.8171,-0.1442,-0.5582,-0.8997,-0.2294,-0.3713,-0.9239,-0.1443,-0.3544,-0.8347,-0.0803,-0.5449,-0.8997,-0.2294,-0.3713,-0.9371,-0.2966,-0.184,-0.9673,-0.1965,-0.1605,-0.9239,-0.1443,-0.3544,-0.9371,-0.2966,-0.184,-0.9369,-0.3496,0.007,-0.9706,-0.238,0.0356,-0.9673,-0.1965,-0.1605,-0.9369,-0.3496,0.007,-0.8962,-0.3901,0.2114,-0.9321,-0.2699,0.2414,-0.9706,-0.238,0.0356,-0.8962,-0.3901,0.2114,-0.8209,-0.4112,0.3964,-0.8564,-0.2877,0.4288,-0.9321,-0.2699,0.2414,-0.8209,-0.4112,0.3964,-0.7077,-0.4144,0.5722,-0.7419,-0.2921,0.6035,-0.8564,-0.2877,0.4288,-0.7077,-0.4144,0.5722,-0.5594,-0.3978,0.7272,-0.5916,-0.2821,0.7553,-0.7419,-0.2921,0.6035,-0.5594,-0.3978,0.7272,-0.3924,-0.3634,0.845,-0.4196,-0.2584,0.8701,-0.5916,-0.2821,0.7553,-0.3924,-0.3634,0.845,-0.1997,-0.3095,0.9297,-0.2222,-0.2205,0.9498,-0.4196,-0.2584,0.8701,-0.1997,-0.3095,0.9297,-0.008,-0.2437,0.9698,-0.0231,-0.173,0.9847,-0.2222,-0.2205,0.9498,-0.008,-0.2437,0.9698,0.1754,-0.17,0.9697,0.1706,-0.1183,0.9782,-0.0231,-0.173,0.9847,0.1754,-0.17,0.9697,0.3636,-0.0827,0.9279,0.3674,-0.0537,0.9285,0.1706,-0.1183,0.9782,0.3636,-0.0827,0.9279,0.534,0.0086,0.8455,0.5451,0.0138,0.8382,0.3674,-0.0537,0.9285,0.534,0.0086,0.8455,0.6728,0.0955,0.7336,0.6926,0.0795,0.717,0.5451,0.0138,0.8382,0.6728,0.0955,0.7336,0.7885,0.1826,0.5873,0.8142,0.1451,0.5622,0.6926,0.0795,0.717,0.7885,0.1826,0.5873,0.8724,0.2655,0.4105,0.9018,0.2071,0.3793,0.8142,0.1451,0.5622,0.8724,0.2655,0.4105,0.9168,0.3385,0.2118,0.9487,0.2618,0.1775,0.9018,0.2071,0.3793,0.9168,0.3385,0.2118,0.918,0.3966,0.0037,0.9516,0.3056,-0.0312,0.9487,0.2618,0.1775,0.918,0.3966,0.0037,0.8763,0.4371,-0.2029,0.9113,0.3368,-0.2366,0.9516,0.3056,-0.0312,0.8763,0.4371,-0.2029,0.8056,0.4569,-0.3772,0.8395,0.3534,-0.4128,0.9113,0.3368,-0.2366,0.8395,0.3534,-0.4128,0.7339,0.3585,-0.5769,0.7014,0.4424,-0.5589,0.8106,0.4346,-0.3925,0.7339,0.3585,-0.5769,0.5569,0.3467,-0.7548,0.5355,0.4308,-0.7264,0.7014,0.4424,-0.5589,0.5569,0.3467,-0.7548,0.3851,0.3215,-0.8651,0.3639,0.4022,-0.8401,0.5355,0.4308,-0.7264,0.3851,0.3215,-0.8651,0.2131,0.2884,-0.9335,0.19,0.362,-0.9126,0.3639,0.4022,-0.8401,0.2131,0.2884,-0.9335,0.0096,0.2399,-0.9707,-0.0094,0.3041,-0.9526,0.19,0.362,-0.9126,0.0096,0.2399,-0.9707,-0.1764,0.1879,-0.9662,-0.1956,0.2397,-0.9509,-0.0094,0.3041,-0.9526,-0.1764,0.1879,-0.9662,-0.3854,0.12,-0.9149,-0.3935,0.1594,-0.9054,-0.1956,0.2397,-0.9509,-0.3854,0.12,-0.9149,-0.5671,0.0506,-0.8221,-0.5695,0.0751,-0.8186,-0.3935,0.1594,-0.9054,-0.5671,0.0506,-0.8221,-0.7101,-0.0132,-0.704,-0.711,-0.005,-0.7032,-0.5695,0.0751,-0.8186,-0.7101,-0.0132,-0.704,-0.8347,-0.0803,-0.5449,-0.8305,-0.0876,-0.5501,-0.711,-0.005,-0.7032,-0.8347,-0.0803,-0.5449,-0.9239,-0.1443,-0.3544,-0.9151,-0.1666,-0.3671,-0.8305,-0.0876,-0.5501,-0.9239,-0.1443,-0.3544,-0.9673,-0.1965,-0.1605,-0.9566,-0.2333,-0.1749,-0.9151,-0.1666,-0.3671,-0.9673,-0.1965,-0.1605,-0.9706,-0.238,0.0356,-0.9576,-0.2871,0.022,-0.9566,-0.2333,-0.1749,-0.9706,-0.238,0.0356,-0.9321,-0.2699,0.2414,-0.9169,-0.3286,0.2264,-0.9576,-0.2871,0.022,-0.9321,-0.2699,0.2414,-0.8564,-0.2877,0.4288,-0.8381,-0.3529,0.416,-0.9169,-0.3286,0.2264,-0.8564,-0.2877,0.4288,-0.7419,-0.2921,0.6035,-0.7214,-0.3602,0.5915,-0.8381,-0.3529,0.416,-0.7419,-0.2921,0.6035,-0.5916,-0.2821,0.7553,-0.5707,-0.3494,0.7431,-0.7214,-0.3602,0.5915,-0.5916,-0.2821,0.7553,-0.4196,-0.2584,0.8701,-0.3979,-0.3214,0.8593,-0.5707,-0.3494,0.7431,-0.4196,-0.2584,0.8701,-0.2222,-0.2205,0.9498,-0.2036,-0.2761,0.9393,-0.3979,-0.3214,0.8593,-0.2222,-0.2205,0.9498,-0.0231,-0.173,0.9847,-0.0067,-0.2183,0.9759,-0.2036,-0.2761,0.9393,-0.0231,-0.173,0.9847,0.1706,-0.1183,0.9782,0.1857,-0.1507,0.971,-0.0067,-0.2183,0.9759,0.1706,-0.1183,0.9782,0.3674,-0.0537,0.9285,0.3764,-0.0721,0.9237,0.1857,-0.1507,0.971,0.3674,-0.0537,0.9285,0.5451,0.0138,0.8382,0.5474,0.0103,0.8368,0.3764,-0.0721,0.9237,0.5451,0.0138,0.8382,0.6926,0.0795,0.717,0.6904,0.092,0.7176,0.5474,0.0103,0.8368,0.6926,0.0795,0.717,0.8142,0.1451,0.5622,0.8059,0.1729,0.5663,0.6904,0.092,0.7176,0.8142,0.1451,0.5622,0.9018,0.2071,0.3793,0.8871,0.2492,0.3885,0.8059,0.1729,0.5663,0.9018,0.2071,0.3793,0.9487,0.2618,0.1775,0.9288,0.3168,0.1925,0.8871,0.2492,0.3885,0.9487,0.2618,0.1775,0.9516,0.3056,-0.0312,0.9283,0.3717,-0.011,0.9288,0.3168,0.1925,0.9516,0.3056,-0.0312,0.9113,0.3368,-0.2366,0.8861,0.4118,-0.2127,0.9283,0.3717,-0.011,0.9113,0.3368,-0.2366,0.8395,0.3534,-0.4128,0.8106,0.4346,-0.3925,0.8861,0.4118,-0.2127,0.8106,0.4346,-0.3925,0.7014,0.4424,-0.5589,0.6571,0.5214,-0.5445,0.7733,0.5139,-0.3714,0.7014,0.4424,-0.5589,0.5355,0.4308,-0.7264,0.5111,0.5081,-0.6933,0.6571,0.5214,-0.5445,0.5355,0.4308,-0.7264,0.3639,0.4022,-0.8401,0.3419,0.4739,-0.8115,0.5111,0.5081,-0.6933,0.3639,0.4022,-0.8401,0.19,0.362,-0.9126,0.1577,0.421,-0.8932,0.3419,0.4739,-0.8115,0.19,0.362,-0.9126,-0.0094,0.3041,-0.9526,-0.0349,0.3517,-0.9354,0.1577,0.421,-0.8932,-0.0094,0.3041,-0.9526,-0.1956,0.2397,-0.9509,-0.2265,0.269,-0.9361,-0.0349,0.3517,-0.9354,-0.1956,0.2397,-0.9509,-0.3935,0.1594,-0.9054,-0.4092,0.1765,-0.8952,-0.2265,0.269,-0.9361,-0.3935,0.1594,-0.9054,-0.5695,0.0751,-0.8186,-0.5748,0.0779,-0.8146,-0.4092,0.1765,-0.8952,-0.5695,0.0751,-0.8186,-0.711,-0.005,-0.7032,-0.7159,-0.0223,-0.6979,-0.5748,0.0779,-0.8146,-0.711,-0.005,-0.7032,-0.8305,-0.0876,-0.5501,-0.8266,-0.1195,-0.5499,-0.7159,-0.0223,-0.6979,-0.8305,-0.0876,-0.5501,-0.9151,-0.1666,-0.3671,-0.902,-0.2097,-0.3773,-0.8266,-0.1195,-0.5499,-0.9151,-0.1666,-0.3671,-0.9566,-0.2333,-0.1749,-0.9388,-0.289,-0.1876,-0.902,-0.2097,-0.3773,-0.9566,-0.2333,-0.1749,-0.9576,-0.2871,0.022,-0.9353,-0.3538,0.0108,-0.9388,-0.289,-0.1876,-0.9576,-0.2871,0.022,-0.9169,-0.3286,0.2264,-0.8918,-0.4011,0.2095,-0.9353,-0.3538,0.0108,-0.9169,-0.3286,0.2264,-0.8381,-0.3529,0.416,-0.8101,-0.4291,0.3996,-0.8918,-0.4011,0.2095,-0.8381,-0.3529,0.416,-0.7214,-0.3602,0.5915,-0.6938,-0.4364,0.5729,-0.8101,-0.4291,0.3996,-0.7214,-0.3602,0.5915,-0.5707,-0.3494,0.7431,-0.548,-0.4228,0.7218,-0.6938,-0.4364,0.5729,-0.5707,-0.3494,0.7431,-0.3979,-0.3214,0.8593,-0.3791,-0.3889,0.8397,-0.548,-0.4228,0.7218,-0.3979,-0.3214,0.8593,-0.2036,-0.2761,0.9393,-0.1943,-0.3361,0.9216,-0.3791,-0.3889,0.8397,-0.2036,-0.2761,0.9393,-0.0067,-0.2183,0.9759,-0.0018,-0.2669,0.9637,-0.1943,-0.3361,0.9216,-0.0067,-0.2183,0.9759,0.1857,-0.1507,0.971,0.1898,-0.1842,0.9644,-0.0018,-0.2669,0.9637,0.1857,-0.1507,0.971,0.3764,-0.0721,0.9237,0.3724,-0.0914,0.9236,0.1898,-0.1842,0.9644,0.3764,-0.0721,0.9237,0.5474,0.0103,0.8368,0.5379,0.0072,0.8429,0.3724,-0.0914,0.9236,0.5474,0.0103,0.8368,0.6904,0.092,0.7176,0.6791,0.1072,0.7262,0.5379,0.0072,0.8429,0.6904,0.092,0.7176,0.8059,0.1729,0.5663,0.7898,0.2045,0.5783,0.6791,0.1072,0.7262,0.8059,0.1729,0.5663,0.8871,0.2492,0.3885,0.8651,0.2948,0.4057,0.7898,0.2045,0.5783,0.8871,0.2492,0.3885,0.9288,0.3168,0.1925,0.9019,0.3741,0.216,0.8651,0.2948,0.4057,0.9288,0.3168,0.1925,0.9283,0.3717,-0.011,0.8985,0.4387,0.0175,0.9019,0.3741,0.216,0.9283,0.3717,-0.011,0.8861,0.4118,-0.2127,0.855,0.486,-0.1813,0.8985,0.4387,0.0175,0.8861,0.4118,-0.2127,0.8106,0.4346,-0.3925,0.7733,0.5139,-0.3714,0.855,0.486,-0.1813,-0.8886,-0.1708,0.4257,0.2878,0.5138,0.8082,0.2549,0.4379,0.8622,-0.9349,-0.0833,0.3449,0.2878,0.5138,0.8082,0.8899,0.1747,-0.4214,0.9113,0.0531,-0.4084,0.2549,0.4379,0.8622,0.8899,0.1747,-0.4214,-0.2841,-0.5121,-0.8106,-0.3551,-0.4431,-0.8232,0.9113,0.0531,-0.4084,-0.2841,-0.5121,-0.8106,-0.8886,-0.1708,0.4257,-0.9349,-0.0833,0.3449,-0.3551,-0.4431,-0.8232,-0.9349,-0.0833,0.3449,0.2549,0.4379,0.8622,0.3272,0.359,0.8741,-0.9436,0.0281,0.33,0.2549,0.4379,0.8622,0.9113,0.0531,-0.4084,0.9404,-0.0277,-0.3389,0.3272,0.359,0.8741,0.9113,0.0531,-0.4084,-0.3551,-0.4431,-0.8232,-0.3165,-0.3555,-0.8794,0.9404,-0.0277,-0.3389,-0.3551,-0.4431,-0.8232,-0.9349,-0.0833,0.3449,-0.9436,0.0281,0.33,-0.3165,-0.3555,-0.8794,-0.9436,0.0281,0.33,0.3272,0.359,0.8741,0.3172,0.1718,0.9327,-0.9668,0.0354,0.2533,0.3272,0.359,0.8741,0.9404,-0.0277,-0.3389,0.911,-0.0589,-0.4081,0.3172,0.1718,0.9327,0.9404,-0.0277,-0.3389,-0.3165,-0.3555,-0.8794,-0.3456,-0.1641,-0.9239,0.911,-0.0589,-0.4081,-0.3165,-0.3555,-0.8794,-0.9436,0.0281,0.33,-0.9668,0.0354,0.2533,-0.3456,-0.1641,-0.9239,-0.9668,0.0354,0.2533,0.3172,0.1718,0.9327,0.3582,-0.0285,0.9332,-0.9472,0.0073,0.3204,0.3172,0.1718,0.9327,0.911,-0.0589,-0.4081,0.9434,-0.0007,-0.3316,0.3582,-0.0285,0.9332,0.911,-0.0589,-0.4081,-0.3456,-0.1641,-0.9239,-0.2938,0.0353,-0.9552,0.9434,-0.0007,-0.3316,-0.3456,-0.1641,-0.9239,-0.9668,0.0354,0.2533,-0.9472,0.0073,0.3204,-0.2938,0.0353,-0.9552,-0.9472,0.0073,0.3204,0.3582,-0.0285,0.9332,0.3252,-0.1337,0.9361,-0.9569,-0.0529,0.2855,0.3582,-0.0285,0.9332,0.9434,-0.0007,-0.3316,0.9293,0.0716,-0.3624,0.3252,-0.1337,0.9361,0.9434,-0.0007,-0.3316,-0.2938,0.0353,-0.9552,-0.3334,0.1414,-0.9321,0.9293,0.0716,-0.3624,-0.2938,0.0353,-0.9552,-0.9472,0.0073,0.3204,-0.9569,-0.0529,0.2855,-0.3334,0.1414,-0.9321,-0.9569,-0.0529,0.2855,0.3252,-0.1337,0.9361,0.3442,-0.1523,0.9265,-0.9326,-0.0923,0.3489,0.3252,-0.1337,0.9361,0.9293,0.0716,-0.3624,0.9537,0.0915,-0.2865,0.3442,-0.1523,0.9265,0.9293,0.0716,-0.3624,-0.3334,0.1414,-0.9321,-0.3105,0.1646,-0.9362,0.9537,0.0915,-0.2865,-0.3334,0.1414,-0.9321,-0.9569,-0.0529,0.2855,-0.9326,-0.0923,0.3489,-0.3105,0.1646,-0.9362,-0.9326,-0.0923,0.3489,0.3442,-0.1523,0.9265,0.2929,0.0374,0.9554,-0.9286,-0.0777,0.363,0.3442,-0.1523,0.9265,0.9537,0.0915,-0.2865,0.9612,0.0936,-0.2594,0.2929,0.0374,0.9554,0.9537,0.0915,-0.2865,-0.3105,0.1646,-0.9362,-0.3331,-0.0305,-0.9424,0.9612,0.0936,-0.2594,-0.3105,0.1646,-0.9362,-0.9326,-0.0923,0.3489,-0.9286,-0.0777,0.363,-0.3331,-0.0305,-0.9424,-0.9286,-0.0777,0.363,0.2929,0.0374,0.9554,0.3351,0.176,0.9256,-0.9382,-0.1187,0.3251,0.2929,0.0374,0.9554,0.9612,0.0936,-0.2594,0.9386,0.133,-0.3184,0.3351,0.176,0.9256,0.9612,0.0936,-0.2594,-0.3331,-0.0305,-0.9424,-0.2637,-0.1526,-0.9525,0.9386,0.133,-0.3184,-0.3331,-0.0305,-0.9424,-0.9286,-0.0777,0.363,-0.9382,-0.1187,0.3251,-0.2637,-0.1526,-0.9525,-0.9382,-0.1187,0.3251,0.3351,0.176,0.9256,0.3141,0.1457,0.9381,-0.9222,-0.2238,0.3153,0.3351,0.176,0.9256,0.9386,0.133,-0.3184,0.9072,0.2339,-0.3497,0.3141,0.1457,0.9381,0.9386,0.133,-0.3184,-0.2637,-0.1526,-0.9525,-0.303,-0.1263,-0.9446,0.9072,0.2339,-0.3497,-0.2637,-0.1526,-0.9525,-0.9382,-0.1187,0.3251,-0.9222,-0.2238,0.3153,-0.303,-0.1263,-0.9446,-0.9222,-0.2238,0.3153,0.3141,0.1457,0.9381,0.3351,0.0921,0.9377,-0.9064,-0.2698,0.3251,0.3141,0.1457,0.9381,0.9072,0.2339,-0.3497,0.8953,0.2861,-0.3414,0.3351,0.0921,0.9377,0.9072,0.2339,-0.3497,-0.303,-0.1263,-0.9446,-0.3143,-0.0657,-0.9471,0.8953,0.2861,-0.3414,-0.303,-0.1263,-0.9446,-0.9222,-0.2238,0.3153,-0.9064,-0.2698,0.3251,-0.3143,-0.0657,-0.9471,-0.9064,-0.2698,0.3251,0.3351,0.0921,0.9377,0.3462,0.0412,0.9373,-0.8923,-0.3201,0.3184,0.3351,0.0921,0.9377,0.8953,0.2861,-0.3414,0.8771,0.3352,-0.344,0.3462,0.0412,0.9373,0.8953,0.2861,-0.3414,-0.3143,-0.0657,-0.9471,-0.3359,-0.0189,-0.9417,0.8771,0.3352,-0.344,-0.3143,-0.0657,-0.9471,-0.9064,-0.2698,0.3251,-0.8923,-0.3201,0.3184,-0.3359,-0.0189,-0.9417,-0.8923,-0.3201,0.3184,0.3462,0.0412,0.9373,0.3391,-0.0206,0.9405,-0.8948,-0.3034,0.3275,0.3462,0.0412,0.9373,0.8771,0.3352,-0.344,0.8868,0.3104,-0.3425,0.3391,-0.0206,0.9405,0.8771,0.3352,-0.344,-0.3359,-0.0189,-0.9417,-0.3746,0.0155,-0.927,0.8868,0.3104,-0.3425,-0.3359,-0.0189,-0.9417,-0.8923,-0.3201,0.3184,-0.8948,-0.3034,0.3275,-0.3746,0.0155,-0.927,-0.8948,-0.3034,0.3275,0.3391,-0.0206,0.9405,0.2909,0.0096,0.9567,-0.9205,-0.1179,0.3725,0.3391,-0.0206,0.9405,0.8868,0.3104,-0.3425,0.9379,0.1199,-0.3255,0.2909,0.0096,0.9567,0.8868,0.3104,-0.3425,-0.3746,0.0155,-0.927,-0.4159,-0.0266,-0.909,0.9379,0.1199,-0.3255,-0.3746,0.0155,-0.927,-0.8948,-0.3034,0.3275,-0.9205,-0.1179,0.3725,-0.4159,-0.0266,-0.909,-0.9205,-0.1179,0.3725,0.2909,0.0096,0.9567,0.3474,0.0927,0.9331,-0.934,0.0359,0.3554,0.2909,0.0096,0.9567,0.9379,0.1199,-0.3255,0.9403,-0.0341,-0.3387,0.3474,0.0927,0.9331,0.9379,0.1199,-0.3255,-0.4159,-0.0266,-0.909,-0.3503,-0.0928,-0.932,0.9403,-0.0341,-0.3387,-0.4159,-0.0266,-0.909,-0.9205,-0.1179,0.3725,-0.934,0.0359,0.3554,-0.3503,-0.0928,-0.932,-0.934,0.0359,0.3554,0.3474,0.0927,0.9331,0.3231,0.2347,0.9168,-0.9172,0.1173,0.3808,0.3474,0.0927,0.9331,0.9403,-0.0341,-0.3387,0.9552,-0.0909,-0.2817,0.3231,0.2347,0.9168,0.9403,-0.0341,-0.3387,-0.3503,-0.0928,-0.932,-0.3804,-0.2293,-0.8959,0.9552,-0.0909,-0.2817,-0.3503,-0.0928,-0.932,-0.934,0.0359,0.3554,-0.9172,0.1173,0.3808,-0.3804,-0.2293,-0.8959,-0.9172,0.1173,0.3808,0.3231,0.2347,0.9168,0.3509,0.3482,0.8693,-0.9359,0.1678,0.3098,0.3231,0.2347,0.9168,0.9552,-0.0909,-0.2817,0.9338,-0.1697,-0.3149,0.3509,0.3482,0.8693,0.9552,-0.0909,-0.2817,-0.3804,-0.2293,-0.8959,-0.3552,-0.3474,-0.8678,0.9338,-0.1697,-0.3149,-0.3804,-0.2293,-0.8959,-0.9172,0.1173,0.3808,-0.9359,0.1678,0.3098,-0.3552,-0.3474,-0.8678,0.7226,-0.3599,0.5902,0.4849,0.8724,-0.0618,0.492,0.8646,-0.1021,0.7281,-0.3838,0.568,0.4849,0.8724,-0.0618,-0.7236,0.361,-0.5883,-0.7471,0.3544,-0.5623,0.492,0.8646,-0.1021,-0.7236,0.361,-0.5883,-0.4864,-0.8714,0.0634,-0.5129,-0.8538,0.0896,-0.7471,0.3544,-0.5623,-0.4864,-0.8714,0.0634,0.7226,-0.3599,0.5902,0.7281,-0.3838,0.568,-0.5129,-0.8538,0.0896,0.7281,-0.3838,0.568,0.492,0.8646,-0.1021,0.5312,0.8292,-0.1739,0.7445,-0.4033,0.532,0.492,0.8646,-0.1021,-0.7471,0.3544,-0.5623,-0.7711,0.3672,-0.5202,0.5312,0.8292,-0.1739,-0.7471,0.3544,-0.5623,-0.5129,-0.8538,0.0896,-0.5448,-0.8212,0.1695,-0.7711,0.3672,-0.5202,-0.5129,-0.8538,0.0896,0.7281,-0.3838,0.568,0.7445,-0.4033,0.532,-0.5448,-0.8212,0.1695,0.7445,-0.4033,0.532,0.5312,0.8292,-0.1739,0.5834,0.7789,-0.2301,0.7384,-0.3835,0.5547,0.5312,0.8292,-0.1739,-0.7711,0.3672,-0.5202,-0.7595,0.3604,-0.5416,0.5834,0.7789,-0.2301,-0.7711,0.3672,-0.5202,-0.5448,-0.8212,0.1695,-0.5554,-0.7908,0.2572,-0.7595,0.3604,-0.5416,-0.5448,-0.8212,0.1695,0.7445,-0.4033,0.532,0.7384,-0.3835,0.5547,-0.5554,-0.7908,0.2572,0.7384,-0.3835,0.5547,0.5834,0.7789,-0.2301,0.6115,0.7681,-0.1902,0.6713,-0.2528,0.6968,0.5834,0.7789,-0.2301,-0.7595,0.3604,-0.5416,-0.6556,0.2864,-0.6987,0.6115,0.7681,-0.1902,-0.7595,0.3604,-0.5416,-0.5554,-0.7908,0.2572,-0.5235,-0.7998,0.2936,-0.6556,0.2864,-0.6987,-0.5554,-0.7908,0.2572,0.7384,-0.3835,0.5547,0.6713,-0.2528,0.6968,-0.5235,-0.7998,0.2936,0.6713,-0.2528,0.6968,0.6115,0.7681,-0.1902,0.5455,0.8118,-0.2085,0.5721,-0.1718,0.802,0.6115,0.7681,-0.1902,-0.6556,0.2864,-0.6987,-0.5766,0.1805,-0.7968,0.5455,0.8118,-0.2085,-0.6556,0.2864,-0.6987,-0.5235,-0.7998,0.2936,-0.5477,-0.8072,0.2203,-0.5766,0.1805,-0.7968,-0.5235,-0.7998,0.2936,0.6713,-0.2528,0.6968,0.5721,-0.1718,0.802,-0.5477,-0.8072,0.2203,0.5721,-0.1718,0.802,0.5455,0.8118,-0.2085,0.4645,0.8803,-0.0964,0.5242,-0.0722,0.8485,0.5455,0.8118,-0.2085,-0.5766,0.1805,-0.7968,-0.4772,0.1915,-0.8577,0.4645,0.8803,-0.0964,-0.5766,0.1805,-0.7968,-0.5477,-0.8072,0.2203,-0.4325,-0.8843,0.1759,-0.4772,0.1915,-0.8577,-0.5477,-0.8072,0.2203,0.5721,-0.1718,0.802,0.5242,-0.0722,0.8485,-0.4325,-0.8843,0.1759,0.5242,-0.0722,0.8485,0.4645,0.8803,-0.0964,0.2181,0.9755,-0.0279,0.4806,-0.0479,0.8756,0.4645,0.8803,-0.0964,-0.4772,0.1915,-0.8577,-0.4692,0.1564,-0.8691,0.2181,0.9755,-0.0279,-0.4772,0.1915,-0.8577,-0.4325,-0.8843,0.1759,-0.255,-0.9669,-0.0064,-0.4692,0.1564,-0.8691,-0.4325,-0.8843,0.1759,0.5242,-0.0722,0.8485,0.4806,-0.0479,0.8756,-0.255,-0.9669,-0.0064,0.4806,-0.0479,0.8756,0.2181,0.9755,-0.0279,0.1224,0.9914,0.0466,0.5254,-0.1128,0.8433,0.2181,0.9755,-0.0279,-0.4692,0.1564,-0.8691,-0.5424,0.1124,-0.8325,0.1224,0.9914,0.0466,-0.4692,0.1564,-0.8691,-0.255,-0.9669,-0.0064,-0.1468,-0.988,-0.0478,-0.5424,0.1124,-0.8325,-0.255,-0.9669,-0.0064,0.4806,-0.0479,0.8756,0.5254,-0.1128,0.8433,-0.1468,-0.988,-0.0478,0.5254,-0.1128,0.8433,0.1224,0.9914,0.0466,0.0983,0.9927,0.0697,0.5426,-0.0985,0.8342,0.1224,0.9914,0.0466,-0.5424,0.1124,-0.8325,-0.5583,0.13,-0.8194,0.0983,0.9927,0.0697,-0.5424,0.1124,-0.8325,-0.1468,-0.988,-0.0478,-0.1193,-0.9911,-0.0598,-0.5583,0.13,-0.8194,-0.1468,-0.988,-0.0478,0.5254,-0.1128,0.8433,0.5426,-0.0985,0.8342,-0.1193,-0.9911,-0.0598,0.5426,-0.0985,0.8342,0.0983,0.9927,0.0697,0.1683,0.985,-0.0369,0.5977,-0.1851,0.7801,0.0983,0.9927,0.0697,-0.5583,0.13,-0.8194,-0.6329,0.0547,-0.7723,0.1683,0.985,-0.0369,-0.5583,0.13,-0.8194,-0.1193,-0.9911,-0.0598,-0.2215,-0.9751,-0.0124,-0.6329,0.0547,-0.7723,-0.1193,-0.9911,-0.0598,0.5426,-0.0985,0.8342,0.5977,-0.1851,0.7801,-0.2215,-0.9751,-0.0124,0.5977,-0.1851,0.7801,0.1683,0.985,-0.0369,0.3101,0.9438,-0.1146,0.675,-0.1388,0.7247,0.1683,0.985,-0.0369,-0.6329,0.0547,-0.7723,-0.6772,0.1318,-0.7239,0.3101,0.9438,-0.1146,-0.6329,0.0547,-0.7723,-0.2215,-0.9751,-0.0124,-0.3115,-0.9435,0.1131,-0.6772,0.1318,-0.7239,-0.2215,-0.9751,-0.0124,0.5977,-0.1851,0.7801,0.675,-0.1388,0.7247,-0.3115,-0.9435,0.1131,0.675,-0.1388,0.7247,0.3101,0.9438,-0.1146,0.2588,0.9636,-0.0677,0.6947,-0.1041,0.7117,0.3101,0.9438,-0.1146,-0.6772,0.1318,-0.7239,-0.6758,0.1736,-0.7164,0.2588,0.9636,-0.0677,-0.6772,0.1318,-0.7239,-0.3115,-0.9435,0.1131,-0.2661,-0.9621,0.06,-0.6758,0.1736,-0.7164,-0.3115,-0.9435,0.1131,0.675,-0.1388,0.7247,0.6947,-0.1041,0.7117,-0.2661,-0.9621,0.06,0.6947,-0.1041,0.7117,0.2588,0.9636,-0.0677,0.2086,0.978,-0.0024,0.6871,-0.1391,0.7131,0.2588,0.9636,-0.0677,-0.6758,0.1736,-0.7164,-0.6866,0.1414,-0.7131,0.2086,0.978,-0.0024,-0.6758,0.1736,-0.7164,-0.2661,-0.9621,0.06,-0.2025,-0.9792,0.0087,-0.6866,0.1414,-0.7131,-0.2661,-0.9621,0.06,0.6947,-0.1041,0.7117,0.6871,-0.1391,0.7131,-0.2025,-0.9792,0.0087,0.6871,-0.1391,0.7131,0.2086,0.978,-0.0024,0.2039,0.979,-0.0036,0.6799,-0.1389,0.72,0.2086,0.978,-0.0024,-0.6866,0.1414,-0.7131,-0.68,0.1386,-0.72,0.2039,0.979,-0.0036,-0.6866,0.1414,-0.7131,-0.2025,-0.9792,0.0087,-0.2036,-0.9791,0.0039,-0.68,0.1386,-0.72,-0.2025,-0.9792,0.0087,0.6871,-0.1391,0.7131,0.6799,-0.1389,0.72,-0.2036,-0.9791,0.0039,-0.1735,0.0387,-0.9841,-0.3681,0.9243,0.1009,-0.2593,0.9563,0.1354,-0.3028,0.0502,-0.9517,-0.3681,0.9243,0.1009,0.1769,-0.0372,0.9835,0.28,0.0382,0.9592,-0.2593,0.9563,0.1354,0.1769,-0.0372,0.9835,0.3714,-0.9228,-0.1022,0.2936,-0.9555,-0.0299,0.28,0.0382,0.9592,0.3714,-0.9228,-0.1022,-0.1735,0.0387,-0.9841,-0.3028,0.0502,-0.9517,0.2936,-0.9555,-0.0299,-0.3028,0.0502,-0.9517,-0.2593,0.9563,0.1354,-0.2025,0.9764,0.075,-0.4213,-0.0437,-0.9059,-0.2593,0.9563,0.1354,0.28,0.0382,0.9592,0.4307,0.0187,0.9023,-0.2025,0.9764,0.075,0.28,0.0382,0.9592,0.2936,-0.9555,-0.0299,0.2161,-0.9748,-0.0559,0.4307,0.0187,0.9023,0.2936,-0.9555,-0.0299,-0.3028,0.0502,-0.9517,-0.4213,-0.0437,-0.9059,0.2161,-0.9748,-0.0559,-0.4213,-0.0437,-0.9059,-0.2025,0.9764,0.075,-0.3432,0.938,0.0489,-0.3126,-0.0412,-0.949,-0.2025,0.9764,0.075,0.4307,0.0187,0.9023,0.3497,-0.0421,0.9359,-0.3432,0.938,0.0489,0.4307,0.0187,0.9023,0.2161,-0.9748,-0.0559,0.3113,-0.9359,-0.1649,0.3497,-0.0421,0.9359,0.2161,-0.9748,-0.0559,-0.4213,-0.0437,-0.9059,-0.3126,-0.0412,-0.949,0.3113,-0.9359,-0.1649,-0.3126,-0.0412,-0.949,-0.3432,0.938,0.0489,-0.378,0.9151,0.1405,-0.2371,0.0558,-0.9699,-0.3432,0.938,0.0489,0.3497,-0.0421,0.9359,0.2339,-0.0228,0.972,-0.378,0.9151,0.1405,0.3497,-0.0421,0.9359,0.3113,-0.9359,-0.1649,0.3925,-0.912,-0.1192,0.2339,-0.0228,0.972,0.3113,-0.9359,-0.1649,-0.3126,-0.0412,-0.949,-0.2371,0.0558,-0.9699,0.3925,-0.912,-0.1192,-0.2371,0.0558,-0.9699,-0.378,0.9151,0.1405,-0.2463,0.9599,0.1343,-0.35,0.0494,-0.9355,-0.378,0.9151,0.1405,0.2339,-0.0228,0.972,0.3373,0.038,0.9406,-0.2463,0.9599,0.1343,0.2339,-0.0228,0.972,0.3925,-0.912,-0.1192,0.2848,-0.9567,-0.0606,0.3373,0.038,0.9406,0.3925,-0.912,-0.1192,-0.2371,0.0558,-0.9699,-0.35,0.0494,-0.9355,0.2848,-0.9567,-0.0606,-0.35,0.0494,-0.9355,-0.2463,0.9599,0.1343,-0.2241,0.9696,0.0984,-0.4301,-0.0495,-0.9014,-0.2463,0.9599,0.1343,0.3373,0.038,0.9406,0.4576,-0.0047,0.8891,-0.2241,0.9696,0.0984,0.3373,0.038,0.9406,0.2848,-0.9567,-0.0606,0.2459,-0.9653,-0.088,0.4576,-0.0047,0.8891,0.2848,-0.9567,-0.0606,-0.35,0.0494,-0.9355,-0.4301,-0.0495,-0.9014,0.2459,-0.9653,-0.088,-0.4301,-0.0495,-0.9014,-0.2241,0.9696,0.0984,-0.2317,0.9584,0.1667,-0.5753,-0.0546,-0.8161,-0.2241,0.9696,0.0984,0.4576,-0.0047,0.8891,0.5843,0.0742,0.8081,-0.2317,0.9584,0.1667,0.4576,-0.0047,0.8891,0.2459,-0.9653,-0.088,0.3189,-0.945,-0.0721,0.5843,0.0742,0.8081,0.2459,-0.9653,-0.088,-0.4301,-0.0495,-0.9014,-0.5753,-0.0546,-0.8161,0.3189,-0.945,-0.0721,-0.5753,-0.0546,-0.8161,-0.2317,0.9584,0.1667,-0.2891,0.9523,0.0976,-0.6359,-0.0994,-0.7654,-0.2317,0.9584,0.1667,0.5843,0.0742,0.8081,0.6575,0.0858,0.7486,-0.2891,0.9523,0.0976,0.5843,0.0742,0.8081,0.3189,-0.945,-0.0721,0.2736,-0.9503,-0.1483,0.6575,0.0858,0.7486,0.3189,-0.945,-0.0721,-0.5753,-0.0546,-0.8161,-0.6359,-0.0994,-0.7654,0.2736,-0.9503,-0.1483,-0.6359,-0.0994,-0.7654,-0.2891,0.9523,0.0976,-0.2924,0.952,0.0909,-0.5481,-0.0456,-0.8352,-0.2891,0.9523,0.0976,0.6575,0.0858,0.7486,0.5584,0.0712,0.8265,-0.2924,0.952,0.0909,0.6575,0.0858,0.7486,0.2736,-0.9503,-0.1483,0.2736,-0.9493,-0.1545,0.5584,0.0712,0.8265,0.2736,-0.9503,-0.1483,-0.6359,-0.0994,-0.7654,-0.5481,-0.0456,-0.8352,0.2736,-0.9493,-0.1545,-0.5481,-0.0456,-0.8352,-0.2924,0.952,0.0909,-0.1746,0.9762,0.1285,-0.6112,-0.0349,-0.7907,-0.2924,0.952,0.0909,0.5584,0.0712,0.8265,0.6049,0.0901,0.7912,-0.1746,0.9762,0.1285,0.5584,0.0712,0.8265,0.2736,-0.9493,-0.1545,0.2544,-0.9665,-0.0353,0.6049,0.0901,0.7912,0.2736,-0.9493,-0.1545,-0.5481,-0.0456,-0.8352,-0.6112,-0.0349,-0.7907,0.2544,-0.9665,-0.0353,-0.6112,-0.0349,-0.7907,-0.1746,0.9762,0.1285,-0.1618,0.9827,0.09,-0.7524,-0.1119,-0.6491,-0.1746,0.9762,0.1285,0.6049,0.0901,0.7912,0.7572,0.0853,0.6476,-0.1618,0.9827,0.09,0.6049,0.0901,0.7912,0.2544,-0.9665,-0.0353,0.2096,-0.9766,-0.0482,0.7572,0.0853,0.6476,0.2544,-0.9665,-0.0353,-0.6112,-0.0349,-0.7907,-0.7524,-0.1119,-0.6491,0.2096,-0.9766,-0.0482,-0.7524,-0.1119,-0.6491,-0.1618,0.9827,0.09,-0.3315,0.9178,0.2184,-0.7402,-0.1709,-0.6504,-0.1618,0.9827,0.09,0.7572,0.0853,0.6476,0.7915,0.0177,0.6109,-0.3315,0.9178,0.2184,0.7572,0.0853,0.6476,0.2096,-0.9766,-0.0482,0.2949,-0.9225,-0.2489,0.7915,0.0177,0.6109,0.2096,-0.9766,-0.0482,-0.7524,-0.1119,-0.6491,-0.7402,-0.1709,-0.6504,0.2949,-0.9225,-0.2489,-0.7402,-0.1709,-0.6504,-0.3315,0.9178,0.2184,-0.4133,0.834,0.3656,-0.7389,-0.0731,-0.6698,-0.3315,0.9178,0.2184,0.7915,0.0177,0.6109,0.739,0.073,0.6698,-0.4133,0.834,0.3656,0.7915,0.0177,0.6109,0.2949,-0.9225,-0.2489,0.4139,-0.8339,-0.3651,0.739,0.073,0.6698,0.2949,-0.9225,-0.2489,-0.7402,-0.1709,-0.6504,-0.7389,-0.0731,-0.6698,0.4139,-0.8339,-0.3651,0.6223,0.4015,-0.6719,-0.7096,0.6517,-0.2678,-0.7898,0.5262,-0.3151,0.6375,0.2772,-0.7189,-0.7096,0.6517,-0.2678,-0.6215,-0.4,0.6736,-0.5359,-0.3476,0.7694,-0.7898,0.5262,-0.3151,-0.6215,-0.4,0.6736,0.7104,-0.6501,0.2695,0.728,-0.5583,0.398,-0.5359,-0.3476,0.7694,0.7104,-0.6501,0.2695,0.6223,0.4015,-0.6719,0.6375,0.2772,-0.7189,0.728,-0.5583,0.398,0.6375,0.2772,-0.7189,-0.7898,0.5262,-0.3151,-0.7901,0.3619,-0.4948,0.5962,0.2736,-0.7547,-0.7898,0.5262,-0.3151,-0.5359,-0.3476,0.7694,-0.5357,-0.2939,0.7916,-0.7901,0.3619,-0.4948,-0.5359,-0.3476,0.7694,0.728,-0.5583,0.398,0.8301,-0.337,0.4442,-0.5357,-0.2939,0.7916,0.728,-0.5583,0.398,0.6375,0.2772,-0.7189,0.5962,0.2736,-0.7547,0.8301,-0.337,0.4442,0.5962,0.2736,-0.7547,-0.7901,0.3619,-0.4948,-0.8229,0.1269,-0.5539,0.6346,0.3132,-0.7066,-0.7901,0.3619,-0.4948,-0.5357,-0.2939,0.7916,-0.5184,-0.3235,0.7916,-0.8229,0.1269,-0.5539,-0.5357,-0.2939,0.7916,0.8301,-0.337,0.4442,0.8039,-0.1287,0.5806,-0.5184,-0.3235,0.7916,0.8301,-0.337,0.4442,0.5962,0.2736,-0.7547,0.6346,0.3132,-0.7066,0.8039,-0.1287,0.5806,0.6346,0.3132,-0.7066,-0.8229,0.1269,-0.5539,-0.7847,0.0476,-0.618,0.5449,0.3608,-0.7569,-0.8229,0.1269,-0.5539,-0.5184,-0.3235,0.7916,-0.5908,-0.3486,0.7276,-0.7847,0.0476,-0.618,-0.5184,-0.3235,0.7916,0.8039,-0.1287,0.5806,0.8195,-0.0139,0.5728,-0.5908,-0.3486,0.7276,0.8039,-0.1287,0.5806,0.6346,0.3132,-0.7066,0.5449,0.3608,-0.7569,0.8195,-0.0139,0.5728,0.5449,0.3608,-0.7569,-0.7847,0.0476,-0.618,-0.8468,0.2337,-0.4777,0.4903,0.377,-0.7858,-0.7847,0.0476,-0.618,-0.5908,-0.3486,0.7276,-0.6158,-0.3288,0.716,-0.8468,0.2337,-0.4777,-0.5908,-0.3486,0.7276,0.8195,-0.0139,0.5728,0.8077,-0.2458,0.536,-0.6158,-0.3288,0.716,0.8195,-0.0139,0.5728,0.5449,0.3608,-0.7569,0.4903,0.377,-0.7858,0.8077,-0.2458,0.536,0.4903,0.377,-0.7858,-0.8468,0.2337,-0.4777,-0.7674,0.5442,-0.3389,0.4896,0.3344,-0.8053,-0.8468,0.2337,-0.4777,-0.6158,-0.3288,0.716,-0.6054,-0.2364,0.76,-0.7674,0.5442,-0.3389,-0.6158,-0.3288,0.716,0.8077,-0.2458,0.536,0.7734,-0.5304,0.347,-0.6054,-0.2364,0.76,0.8077,-0.2458,0.536,0.4903,0.377,-0.7858,0.4896,0.3344,-0.8053,0.7734,-0.5304,0.347,0.4896,0.3344,-0.8053,-0.7674,0.5442,-0.3389,-0.708,0.6583,-0.2557,0.5632,0.2865,-0.775,-0.7674,0.5442,-0.3389,-0.6054,-0.2364,0.76,-0.5366,-0.2874,0.7934,-0.708,0.6583,-0.2557,-0.6054,-0.2364,0.76,0.7734,-0.5304,0.347,0.7174,-0.6432,0.2676,-0.5366,-0.2874,0.7934,0.7734,-0.5304,0.347,0.4896,0.3344,-0.8053,0.5632,0.2865,-0.775,0.7174,-0.6432,0.2676,0.5632,0.2865,-0.775,-0.708,0.6583,-0.2557,-0.7163,0.6386,-0.2814,0.5662,0.3089,-0.7642,-0.708,0.6583,-0.2557,-0.5366,-0.2874,0.7934,-0.5517,-0.2947,0.7802,-0.7163,0.6386,-0.2814,-0.5366,-0.2874,0.7934,0.7174,-0.6432,0.2676,0.7369,-0.6148,0.2809,-0.5517,-0.2947,0.7802,0.7174,-0.6432,0.2676,0.5632,0.2865,-0.775,0.5662,0.3089,-0.7642,0.7369,-0.6148,0.2809,0.5662,0.3089,-0.7642,-0.7163,0.6386,-0.2814,-0.7025,0.6781,-0.2161,0.5222,0.3182,-0.7912,-0.7163,0.6386,-0.2814,-0.5517,-0.2947,0.7802,-0.5689,-0.2581,0.7809,-0.7025,0.6781,-0.2161,-0.5517,-0.2947,0.7802,0.7369,-0.6148,0.2809,0.6863,-0.681,0.2553,-0.5689,-0.2581,0.7809,0.7369,-0.6148,0.2809,0.5662,0.3089,-0.7642,0.5222,0.3182,-0.7912,0.6863,-0.681,0.2553,0.5222,0.3182,-0.7912,-0.7025,0.6781,-0.2161,-0.6908,0.6945,-0.2011,0.52,0.2166,-0.8262,-0.7025,0.6781,-0.2161,-0.5689,-0.2581,0.7809,-0.4868,-0.2505,0.8368,-0.6908,0.6945,-0.2011,-0.5689,-0.2581,0.7809,0.6863,-0.681,0.2553,0.6737,-0.7025,0.2296,-0.4868,-0.2505,0.8368,0.6863,-0.681,0.2553,0.5222,0.3182,-0.7912,0.52,0.2166,-0.8262,0.6737,-0.7025,0.2296,0.52,0.2166,-0.8262,-0.6908,0.6945,-0.2011,-0.7933,0.5613,-0.2356,0.4665,0.0844,-0.8805,-0.6908,0.6945,-0.2011,-0.4868,-0.2505,0.8368,-0.3844,-0.1455,0.9116,-0.7933,0.5613,-0.2356,-0.4868,-0.2505,0.8368,0.6737,-0.7025,0.2296,0.7483,-0.5743,0.332,-0.3844,-0.1455,0.9116,0.6737,-0.7025,0.2296,0.52,0.2166,-0.8262,0.4665,0.0844,-0.8805,0.7483,-0.5743,0.332,0.4665,0.0844,-0.8805,-0.7933,0.5613,-0.2356,-0.8192,0.4785,-0.3161,0.3639,0.0178,-0.9313,-0.7933,0.5613,-0.2356,-0.3844,-0.1455,0.9116,-0.3726,-0.0127,0.9279,-0.8192,0.4785,-0.3161,-0.3844,-0.1455,0.9116,0.7483,-0.5743,0.332,0.8188,-0.4786,0.3171,-0.3726,-0.0127,0.9279,0.7483,-0.5743,0.332,0.4665,0.0844,-0.8805,0.3639,0.0178,-0.9313,0.8188,-0.4786,0.3171,0.3639,0.0178,-0.9313,-0.8192,0.4785,-0.3161,-0.8138,0.4889,-0.3143,0.3677,0.0142,-0.9298,-0.8192,0.4785,-0.3161,-0.3726,-0.0127,0.9279,-0.3677,-0.0142,0.9298,-0.8138,0.4889,-0.3143,-0.3726,-0.0127,0.9279,0.8188,-0.4786,0.3171,0.8138,-0.4888,0.3143,-0.3677,-0.0142,0.9298,0.8188,-0.4786,0.3171,0.3639,0.0178,-0.9313,0.3677,0.0142,-0.9298,0.8138,-0.4888,0.3143,-0.3743,0.0987,-0.9221,-0.8927,0.2315,0.3866,-0.8461,0.32,0.4263,-0.4452,0.0011,-0.8954,-0.8927,0.2315,0.3866,0.3747,-0.0963,0.9221,0.3741,0.0283,0.927,-0.8461,0.32,0.4263,0.3747,-0.0963,0.9221,0.893,-0.2291,-0.3874,0.8895,-0.3157,-0.3305,0.3741,0.0283,0.927,0.893,-0.2291,-0.3874,-0.3743,0.0987,-0.9221,-0.4452,0.0011,-0.8954,0.8895,-0.3157,-0.3305,-0.4452,0.0011,-0.8954,-0.8461,0.32,0.4263,-0.849,0.3626,0.3844,-0.4289,-0.1479,-0.8912,-0.8461,0.32,0.4263,0.3741,0.0283,0.927,0.4681,0.1367,0.8731,-0.849,0.3626,0.3844,0.3741,0.0283,0.927,0.8895,-0.3157,-0.3305,0.8587,-0.3553,-0.3694,0.4681,0.1367,0.8731,0.8895,-0.3157,-0.3305,-0.4452,0.0011,-0.8954,-0.4289,-0.1479,-0.8912,0.8587,-0.3553,-0.3694,-0.4289,-0.1479,-0.8912,-0.849,0.3626,0.3844,-0.8666,0.315,0.3869,-0.451,-0.1515,-0.8795,-0.849,0.3626,0.3844,0.4681,0.1367,0.8731,0.4532,0.1578,0.8773,-0.8666,0.315,0.3869,0.4681,0.1367,0.8731,0.8587,-0.3553,-0.3694,0.8652,-0.3095,-0.3945,0.4532,0.1578,0.8773,0.8587,-0.3553,-0.3694,-0.4289,-0.1479,-0.8912,-0.451,-0.1515,-0.8795,0.8652,-0.3095,-0.3945,-0.451,-0.1515,-0.8795,-0.8666,0.315,0.3869,-0.8649,0.3492,0.3606,-0.4513,-0.0934,-0.8875,-0.8666,0.315,0.3869,0.4532,0.1578,0.8773,0.4242,0.1141,0.8984,-0.8649,0.3492,0.3606,0.4532,0.1578,0.8773,0.8652,-0.3095,-0.3945,0.8486,-0.3448,-0.4012,0.4242,0.1141,0.8984,0.8652,-0.3095,-0.3945,-0.451,-0.1515,-0.8795,-0.4513,-0.0934,-0.8875,0.8486,-0.3448,-0.4012,-0.4513,-0.0934,-0.8875,-0.8649,0.3492,0.3606,-0.794,0.4693,0.3863,-0.4907,-0.1279,-0.8619,-0.8649,0.3492,0.3606,0.4242,0.1141,0.8984,0.4328,0.1726,0.8848,-0.794,0.4693,0.3863,0.4242,0.1141,0.8984,0.8486,-0.3448,-0.4012,0.8404,-0.4454,-0.3086,0.4328,0.1726,0.8848,0.8486,-0.3448,-0.4012,-0.4513,-0.0934,-0.8875,-0.4907,-0.1279,-0.8619,0.8404,-0.4454,-0.3086,-0.4907,-0.1279,-0.8619,-0.794,0.4693,0.3863,-0.8071,0.497,0.3188,-0.4674,-0.2151,-0.8575,-0.794,0.4693,0.3863,0.4328,0.1726,0.8848,0.5028,0.2079,0.839,-0.8071,0.497,0.3188,0.4328,0.1726,0.8848,0.8404,-0.4454,-0.3086,0.7972,-0.4918,-0.3501,0.5028,0.2079,0.839,0.8404,-0.4454,-0.3086,-0.4907,-0.1279,-0.8619,-0.4674,-0.2151,-0.8575,0.7972,-0.4918,-0.3501,-0.4674,-0.2151,-0.8575,-0.8071,0.497,0.3188,-0.8253,0.4835,0.2918,-0.434,-0.0692,-0.8983,-0.8071,0.497,0.3188,0.5028,0.2079,0.839,0.4216,0.0962,0.9017,-0.8253,0.4835,0.2918,0.5028,0.2079,0.839,0.7972,-0.4918,-0.3501,0.7875,-0.4766,-0.3907,0.4216,0.0962,0.9017,0.7972,-0.4918,-0.3501,-0.4674,-0.2151,-0.8575,-0.434,-0.0692,-0.8983,0.7875,-0.4766,-0.3907,-0.434,-0.0692,-0.8983,-0.8253,0.4835,0.2918,-0.7836,0.4892,0.383,-0.4079,-0.0666,-0.9106,-0.8253,0.4835,0.2918,0.4216,0.0962,0.9017,0.4385,0.0717,0.8959,-0.7836,0.4892,0.383,0.4216,0.0962,0.9017,0.7875,-0.4766,-0.3907,0.8312,-0.4651,-0.3046,0.4385,0.0717,0.8959,0.7875,-0.4766,-0.3907,-0.434,-0.0692,-0.8983,-0.4079,-0.0666,-0.9106,0.8312,-0.4651,-0.3046,-0.4079,-0.0666,-0.9106,-0.7836,0.4892,0.383,-0.87,0.3714,0.3244,-0.387,-0.0613,-0.92,-0.7836,0.4892,0.383,0.4385,0.0717,0.8959,0.4668,0.05,0.883,-0.87,0.3714,0.3244,0.4385,0.0717,0.8959,0.8312,-0.4651,-0.3046,0.8329,-0.3572,-0.4226,0.4668,0.05,0.883,0.8312,-0.4651,-0.3046,-0.4079,-0.0666,-0.9106,-0.387,-0.0613,-0.92,0.8329,-0.3572,-0.4226,-0.387,-0.0613,-0.92,-0.87,0.3714,0.3244,-0.8853,0.2525,0.3905,-0.3781,0.0553,-0.9241,-0.87,0.3714,0.3244,0.4668,0.05,0.883,0.4029,-0.0519,0.9138,-0.8853,0.2525,0.3905,0.4668,0.05,0.883,0.8329,-0.3572,-0.4226,0.8875,-0.2428,-0.3917,0.4029,-0.0519,0.9138,0.8329,-0.3572,-0.4226,-0.387,-0.0613,-0.92,-0.3781,0.0553,-0.9241,0.8875,-0.2428,-0.3917,-0.3781,0.0553,-0.9241,-0.8853,0.2525,0.3905,-0.9103,0.2032,0.3606,-0.3643,0.1241,-0.923,-0.8853,0.2525,0.3905,0.4029,-0.0519,0.9138,0.3823,-0.1281,0.9151,-0.9103,0.2032,0.3606,0.4029,-0.0519,0.9138,0.8875,-0.2428,-0.3917,0.8857,-0.1948,-0.4214,0.3823,-0.1281,0.9151,0.8875,-0.2428,-0.3917,-0.3781,0.0553,-0.9241,-0.3643,0.1241,-0.923,0.8857,-0.1948,-0.4214,-0.3643,0.1241,-0.923,-0.9103,0.2032,0.3606,-0.9025,0.0368,0.4291,-0.3103,0.0814,-0.9472,-0.9103,0.2032,0.3606,0.3823,-0.1281,0.9151,0.4258,-0.0865,0.9007,-0.9025,0.0368,0.4291,0.3823,-0.1281,0.9151,0.8857,-0.1948,-0.4214,0.9417,-0.0456,-0.3334,0.4258,-0.0865,0.9007,0.8857,-0.1948,-0.4214,-0.3643,0.1241,-0.923,-0.3103,0.0814,-0.9472,0.9417,-0.0456,-0.3334,-0.3103,0.0814,-0.9472,-0.9025,0.0368,0.4291,-0.9244,-0.1138,0.364,-0.3663,-0.0102,-0.9304,-0.9025,0.0368,0.4291,0.4258,-0.0865,0.9007,0.3807,0.0119,0.9246,-0.9244,-0.1138,0.364,0.4258,-0.0865,0.9007,0.9417,-0.0456,-0.3334,0.9179,0.1136,-0.3802,0.3807,0.0119,0.9246,0.9417,-0.0456,-0.3334,-0.3103,0.0814,-0.9472,-0.3663,-0.0102,-0.9304,0.9179,0.1136,-0.3802,-0.3663,-0.0102,-0.9304,-0.9244,-0.1138,0.364,-0.919,-0.1309,0.3719,-0.3756,0.0083,-0.9268,-0.9244,-0.1138,0.364,0.3807,0.0119,0.9246,0.3757,-0.0083,0.9267,-0.919,-0.1309,0.3719,0.3807,0.0119,0.9246,0.9179,0.1136,-0.3802,0.9194,0.1308,-0.371,0.3757,-0.0083,0.9267,0.9179,0.1136,-0.3802,-0.3663,-0.0102,-0.9304,-0.3756,0.0083,-0.9268,0.9194,0.1308,-0.371,0.9107,-0.1706,0.3762,-0.3968,0.9164,0.0529,-0.3714,0.9259,0.0687,0.8917,-0.1746,0.4175,-0.3968,0.9164,0.0529,-0.5141,-0.7425,-0.4294,-0.4869,-0.7403,-0.4636,-0.3714,0.9259,0.0687,-0.5141,-0.7425,-0.4294,0.9107,-0.1706,0.3762,0.8917,-0.1746,0.4175,-0.4869,-0.7403,-0.4636,0.8917,-0.1746,0.4175,-0.3714,0.9259,0.0687,-0.4453,0.895,-0.0281,0.9077,-0.2267,0.3531,-0.3714,0.9259,0.0687,-0.4869,-0.7403,-0.4636,-0.5443,-0.7488,-0.3784,-0.4453,0.895,-0.0281,-0.4869,-0.7403,-0.4636,0.8917,-0.1746,0.4175,0.9077,-0.2267,0.3531,-0.5443,-0.7488,-0.3784,0.9077,-0.2267,0.3531,-0.4453,0.895,-0.0281,-0.3834,0.9205,0.075,0.9648,-0.1013,0.2427,-0.4453,0.895,-0.0281,-0.5443,-0.7488,-0.3784,-0.6125,-0.7283,-0.3073,-0.3834,0.9205,0.075,-0.5443,-0.7488,-0.3784,0.9077,-0.2267,0.3531,0.9648,-0.1013,0.2427,-0.6125,-0.7283,-0.3073,0.9648,-0.1013,0.2427,-0.3834,0.9205,0.075,-0.4195,0.89,0.1785,0.9736,-0.1457,0.1759,-0.3834,0.9205,0.075,-0.6125,-0.7283,-0.3073,-0.5606,-0.7473,-0.3567,-0.4195,0.89,0.1785,-0.6125,-0.7283,-0.3073,0.9648,-0.1013,0.2427,0.9736,-0.1457,0.1759,-0.5606,-0.7473,-0.3567,0.9736,-0.1457,0.1759,-0.4195,0.89,0.1785,-0.4152,0.8917,0.18,0.9753,-0.143,0.1684,-0.4195,0.89,0.1785,-0.5606,-0.7473,-0.3567,-0.5587,-0.7523,-0.3492,-0.4152,0.8917,0.18,-0.5606,-0.7473,-0.3567,0.9736,-0.1457,0.1759,0.9753,-0.143,0.1684,-0.5587,-0.7523,-0.3492,0.8628,0.0782,0.4995,-0.6584,0.7525,0.0176,-0.6057,0.7906,-0.0897,0.8553,-0.0017,0.5181,-0.6584,0.7525,0.0176,-0.2049,-0.8304,-0.5181,-0.2021,-0.8782,-0.4334,-0.6057,0.7906,-0.0897,-0.2049,-0.8304,-0.5181,0.8628,0.0782,0.4995,0.8553,-0.0017,0.5181,-0.2021,-0.8782,-0.4334,0.8553,-0.0017,0.5181,-0.6057,0.7906,-0.0897,-0.2413,0.9038,-0.3535,0.6215,-0.1017,0.7768,-0.6057,0.7906,-0.0897,-0.2021,-0.8782,-0.4334,-0.2307,-0.946,-0.2275,-0.2413,0.9038,-0.3535,-0.2021,-0.8782,-0.4334,0.8553,-0.0017,0.5181,0.6215,-0.1017,0.7768,-0.2307,-0.946,-0.2275,0.6215,-0.1017,0.7768,-0.2413,0.9038,-0.3535,0.1066,0.7799,-0.6168,0.3072,0.0012,0.9516,-0.2413,0.9038,-0.3535,-0.2307,-0.946,-0.2275,-0.4275,-0.8607,-0.2766,0.1066,0.7799,-0.6168,-0.2307,-0.946,-0.2275,0.6215,-0.1017,0.7768,0.3072,0.0012,0.9516,-0.4275,-0.8607,-0.2766,0.3072,0.0012,0.9516,0.1066,0.7799,-0.6168,0.219,0.7313,-0.646,0.2752,0.0805,0.958,0.1066,0.7799,-0.6168,-0.4275,-0.8607,-0.2766,-0.4941,-0.8117,-0.3115,0.219,0.7313,-0.646,-0.4275,-0.8607,-0.2766,0.3072,0.0012,0.9516,0.2752,0.0805,0.958,-0.4941,-0.8117,-0.3115,-0.2936,0.7722,-0.5635,-0.6474,-0.7274,0.2275,-0.6908,-0.7179,0.0868,-0.3048,0.8615,-0.406,-0.6474,-0.7274,0.2275,0.9421,-0.0467,0.3319,0.9661,-0.0048,0.2581,-0.6908,-0.7179,0.0868,0.9421,-0.0467,0.3319,-0.2936,0.7722,-0.5635,-0.3048,0.8615,-0.406,0.9661,-0.0048,0.2581,-0.3048,0.8615,-0.406,-0.6908,-0.7179,0.0868,-0.5193,-0.8442,-0.1326,-0.2177,0.952,-0.2153,-0.6908,-0.7179,0.0868,0.9661,-0.0048,0.2581,0.9044,-0.0623,0.4222,-0.5193,-0.8442,-0.1326,0.9661,-0.0048,0.2581,-0.3048,0.8615,-0.406,-0.2177,0.952,-0.2153,0.9044,-0.0623,0.4222,-0.2177,0.952,-0.2153,-0.5193,-0.8442,-0.1326,-0.4644,-0.8227,-0.3278,-0.2934,0.9142,-0.2795,-0.5193,-0.8442,-0.1326,0.9044,-0.0623,0.4222,0.7772,-0.0904,0.6227,-0.4644,-0.8227,-0.3278,0.9044,-0.0623,0.4222,-0.2177,0.952,-0.2153,-0.2934,0.9142,-0.2795,0.7772,-0.0904,0.6227,-0.2934,0.9142,-0.2795,-0.4644,-0.8227,-0.3278,-0.4606,-0.8163,-0.3485,-0.2975,0.9076,-0.2963,-0.4644,-0.8227,-0.3278,0.7772,-0.0904,0.6227,0.7585,-0.0921,0.6451,-0.4606,-0.8163,-0.3485,0.7772,-0.0904,0.6227,-0.2934,0.9142,-0.2795,-0.2975,0.9076,-0.2963,0.7585,-0.0921,0.6451,0.2856,0.894,0.3451,-0.9747,-0.2198,-0.0408,-0.9785,-0.1241,-0.1649,0.4147,0.8195,0.3955,-0.9747,-0.2198,-0.0408,0.6807,-0.6629,-0.3117,0.687,-0.6964,-0.2076,-0.9785,-0.1241,-0.1649,0.6807,-0.6629,-0.3117,0.2856,0.894,0.3451,0.4147,0.8195,0.3955,0.687,-0.6964,-0.2076,0.4147,0.8195,0.3955,-0.9785,-0.1241,-0.1649,-0.9484,-0.0118,-0.3169,0.2759,0.7969,0.5374,-0.9785,-0.1241,-0.1649,0.687,-0.6964,-0.2076,0.6799,-0.7115,-0.1778,-0.9484,-0.0118,-0.3169,0.687,-0.6964,-0.2076,0.4147,0.8195,0.3955,0.2759,0.7969,0.5374,0.6799,-0.7115,-0.1778,0.2759,0.7969,0.5374,-0.9484,-0.0118,-0.3169,-0.8508,-0.1114,-0.5136,0.4073,0.738,0.538,-0.9484,-0.0118,-0.3169,0.6799,-0.7115,-0.1778,0.5789,-0.8147,-0.0332,-0.8508,-0.1114,-0.5136,0.6799,-0.7115,-0.1778,0.2759,0.7969,0.5374,0.4073,0.738,0.538,0.5789,-0.8147,-0.0332,0.4073,0.738,0.538,-0.8508,-0.1114,-0.5136,-0.8093,0.0412,-0.586,0.3697,0.8374,0.4026,-0.8508,-0.1114,-0.5136,0.5789,-0.8147,-0.0332,0.4403,-0.8787,0.1841,-0.8093,0.0412,-0.586,0.5789,-0.8147,-0.0332,0.4073,0.738,0.538,0.3697,0.8374,0.4026,0.4403,-0.8787,0.1841,0.3697,0.8374,0.4026,-0.8093,0.0412,-0.586,-0.808,0.0375,-0.5879,0.3733,0.8353,0.4037,-0.8093,0.0412,-0.586,0.4403,-0.8787,0.1841,0.4389,-0.879,0.1864,-0.808,0.0375,-0.5879,0.4403,-0.8787,0.1841,0.3697,0.8374,0.4026,0.3733,0.8353,0.4037,0.4389,-0.879,0.1864,-0.7433,0.1793,-0.6445,-0.1747,-0.5284,0.8308,-0.1795,-0.5869,0.7896,-0.7408,0.2431,-0.6263,-0.1747,-0.5284,0.8308,0.9186,0.3487,-0.1858,0.9033,0.3707,-0.2162,-0.1795,-0.5869,0.7896,0.9186,0.3487,-0.1858,-0.7433,0.1793,-0.6445,-0.7408,0.2431,-0.6263,0.9033,0.3707,-0.2162,-0.7408,0.2431,-0.6263,-0.1795,-0.5869,0.7896,-0.0537,-0.7774,0.6267,-0.6508,0.3997,-0.6455,-0.1795,-0.5869,0.7896,0.9033,0.3707,-0.2162,0.846,0.532,-0.0349,-0.0537,-0.7774,0.6267,0.9033,0.3707,-0.2162,-0.7408,0.2431,-0.6263,-0.6508,0.3997,-0.6455,0.846,0.532,-0.0349,-0.6508,0.3997,-0.6455,-0.0537,-0.7774,0.6267,0.0449,-0.9071,0.4185,-0.6854,0.3166,-0.6557,-0.0537,-0.7774,0.6267,0.846,0.532,-0.0349,0.7091,0.6551,0.2607,0.0449,-0.9071,0.4185,0.846,0.532,-0.0349,-0.6508,0.3997,-0.6455,-0.6854,0.3166,-0.6557,0.7091,0.6551,0.2607,-0.6854,0.3166,-0.6557,0.0449,-0.9071,0.4185,0.0368,-0.9371,0.3471,-0.6767,0.2516,-0.6919,0.0449,-0.9071,0.4185,0.7091,0.6551,0.2607,0.6406,0.6859,0.3453,0.0368,-0.9371,0.3471,0.7091,0.6551,0.2607,-0.6854,0.3166,-0.6557,-0.6767,0.2516,-0.6919,0.6406,0.6859,0.3453,0.7026,0.3672,0.6095,-0.8122,0.5436,-0.2118,-0.7412,0.6486,-0.1728,0.6534,0.2658,0.7088,-0.8122,0.5436,-0.2118,0.1142,-0.9066,-0.4063,0.1579,-0.8804,-0.4472,-0.7412,0.6486,-0.1728,0.1142,-0.9066,-0.4063,0.7026,0.3672,0.6095,0.6534,0.2658,0.7088,0.1579,-0.8804,-0.4472,0.6534,0.2658,0.7088,-0.7412,0.6486,-0.1728,-0.7881,0.5551,-0.2661,0.6451,0.2716,0.7142,-0.7412,0.6486,-0.1728,0.1579,-0.8804,-0.4472,0.0743,-0.8508,-0.5202,-0.7881,0.5551,-0.2661,0.1579,-0.8804,-0.4472,0.6534,0.2658,0.7088,0.6451,0.2716,0.7142,0.0743,-0.8508,-0.5202,0.6451,0.2716,0.7142,-0.7881,0.5551,-0.2661,-0.8482,0.5258,-0.0647,0.6479,0.3911,0.6537,-0.7881,0.5551,-0.2661,0.0743,-0.8508,-0.5202,0.1367,-0.8216,-0.5534,-0.8482,0.5258,-0.0647,0.0743,-0.8508,-0.5202,0.6451,0.2716,0.7142,0.6479,0.3911,0.6537,0.1367,-0.8216,-0.5534,0.6479,0.3911,0.6537,-0.8482,0.5258,-0.0647,-0.8997,0.4353,-0.0331,0.6979,0.3069,0.6471,-0.8482,0.5258,-0.0647,0.1367,-0.8216,-0.5534,0.2174,-0.755,-0.6186,-0.8997,0.4353,-0.0331,0.1367,-0.8216,-0.5534,0.6479,0.3911,0.6537,0.6979,0.3069,0.6471,0.2174,-0.755,-0.6186,0.6979,0.3069,0.6471,-0.8997,0.4353,-0.0331,-0.89,0.4536,-0.0457,0.6876,0.3132,0.6551,-0.8997,0.4353,-0.0331,0.2174,-0.755,-0.6186,0.2028,-0.7667,-0.6091,-0.89,0.4536,-0.0457,0.2174,-0.755,-0.6186,0.6979,0.3069,0.6471,0.6876,0.3132,0.6551,0.2028,-0.7667,-0.6091,-0.1349,0.9533,-0.2704,-0.7578,-0.5199,0.3943,-0.7704,-0.5343,0.348,-0.0995,0.9603,-0.2605,-0.7578,-0.5199,0.3943,0.8925,-0.4333,-0.125,0.9071,-0.4092,-0.099,-0.7704,-0.5343,0.348,0.8925,-0.4333,-0.125,-0.1349,0.9533,-0.2704,-0.0995,0.9603,-0.2605,0.9071,-0.4092,-0.099,-0.0995,0.9603,-0.2605,-0.7704,-0.5343,0.348,-0.706,-0.5026,0.4989,-0.2647,0.9079,-0.3251,-0.7704,-0.5343,0.348,0.9071,-0.4092,-0.099,0.851,-0.5194,-0.0778,-0.706,-0.5026,0.4989,0.9071,-0.4092,-0.099,-0.0995,0.9603,-0.2605,-0.2647,0.9079,-0.3251,0.851,-0.5194,-0.0778,-0.2647,0.9079,-0.3251,-0.706,-0.5026,0.4989,-0.6297,-0.3932,0.67,-0.2309,0.843,-0.4858,-0.706,-0.5026,0.4989,0.851,-0.5194,-0.0778,0.8694,-0.4593,-0.1824,-0.6297,-0.3932,0.67,0.851,-0.5194,-0.0778,-0.2647,0.9079,-0.3251,-0.2309,0.843,-0.4858,0.8694,-0.4593,-0.1824,-0.2309,0.843,-0.4858,-0.6297,-0.3932,0.67,-0.6353,-0.3875,0.668,-0.2406,0.8362,-0.4928,-0.6297,-0.3932,0.67,0.8694,-0.4593,-0.1824,0.8761,-0.4494,-0.1748,-0.6353,-0.3875,0.668,0.8694,-0.4593,-0.1824,-0.2309,0.843,-0.4858,-0.2406,0.8362,-0.4928,0.8761,-0.4494,-0.1748,0.2033,-0.6616,-0.7217,0.1861,0.9713,-0.1485,0.1542,0.9846,-0.0817,0.1138,-0.6681,-0.7353,0.1861,0.9713,-0.1485,-0.3858,-0.3091,0.8693,-0.2933,-0.3124,0.9036,0.1542,0.9846,-0.0817,-0.3858,-0.3091,0.8693,0.2033,-0.6616,-0.7217,0.1138,-0.6681,-0.7353,-0.2933,-0.3124,0.9036,0.1138,-0.6681,-0.7353,0.1542,0.9846,-0.0817,0.1228,0.9851,-0.1201,0.0091,-0.6507,-0.7593,0.1542,0.9846,-0.0817,-0.2933,-0.3124,0.9036,-0.1394,-0.3557,0.9242,0.1228,0.9851,-0.1201,-0.2933,-0.3124,0.9036,0.1138,-0.6681,-0.7353,0.0091,-0.6507,-0.7593,-0.1394,-0.3557,0.9242,0.0091,-0.6507,-0.7593,0.1228,0.9851,-0.1201,0.0989,0.9794,-0.1759,0.0216,-0.6217,-0.7829,0.1228,0.9851,-0.1201,-0.1394,-0.3557,0.9242,-0.1169,-0.3593,0.9259,0.0989,0.9794,-0.1759,-0.1394,-0.3557,0.9242,0.0091,-0.6507,-0.7593,0.0216,-0.6217,-0.7829,-0.1169,-0.3593,0.9259,0.0216,-0.6217,-0.7829,0.0989,0.9794,-0.1759,0.0754,0.9872,-0.1407,0.0383,-0.6479,-0.7607,0.0989,0.9794,-0.1759,-0.1169,-0.3593,0.9259,-0.1175,-0.356,0.9271,0.0754,0.9872,-0.1407,-0.1169,-0.3593,0.9259,0.0216,-0.6217,-0.7829,0.0383,-0.6479,-0.7607,-0.1175,-0.356,0.9271,0.0383,-0.6479,-0.7607,0.0754,0.9872,-0.1407,0.0517,0.9863,-0.1566,0.0295,-0.6334,-0.7733,0.0754,0.9872,-0.1407,-0.1175,-0.356,0.9271,-0.0814,-0.3539,0.9317,0.0517,0.9863,-0.1566,-0.1175,-0.356,0.9271,0.0383,-0.6479,-0.7607,0.0295,-0.6334,-0.7733,-0.0814,-0.3539,0.9317,0.5646,-0.7602,-0.3216,-0.076,0.8291,-0.5539,0.0327,0.8769,-0.4796,0.5197,-0.7519,-0.4056,-0.076,0.8291,-0.5539,-0.4878,-0.0659,0.8705,-0.5534,-0.0167,0.8327,0.0327,0.8769,-0.4796,-0.4878,-0.0659,0.8705,0.5646,-0.7602,-0.3216,0.5197,-0.7519,-0.4056,-0.5534,-0.0167,0.8327,0.5197,-0.7519,-0.4056,0.0327,0.8769,-0.4796,0.2355,0.8608,-0.4512,0.5656,-0.7533,-0.3356,0.0327,0.8769,-0.4796,-0.5534,-0.0167,0.8327,-0.6956,-0.1586,0.7007,0.2355,0.8608,-0.4512,-0.5534,-0.0167,0.8327,0.5197,-0.7519,-0.4056,0.5656,-0.7533,-0.3356,-0.6956,-0.1586,0.7007,0.5656,-0.7533,-0.3356,0.2355,0.8608,-0.4512,0.1908,0.8969,-0.399,0.6456,-0.7455,-0.1657,0.2355,0.8608,-0.4512,-0.6956,-0.1586,0.7007,-0.8138,-0.1683,0.5562,0.1908,0.8969,-0.399,-0.6956,-0.1586,0.7007,0.5656,-0.7533,-0.3356,0.6456,-0.7455,-0.1657,-0.8138,-0.1683,0.5562,0.6456,-0.7455,-0.1657,0.1908,0.8969,-0.399,0.1697,0.9016,-0.3978,0.6565,-0.7425,-0.1332,0.1908,0.8969,-0.399,-0.8138,-0.1683,0.5562,-0.8289,-0.1648,0.5345,0.1697,0.9016,-0.3978,-0.8138,-0.1683,0.5562,0.6456,-0.7455,-0.1657,0.6565,-0.7425,-0.1332,-0.8289,-0.1648,0.5345,-0.306,-0.7024,-0.6427,0.3,0.891,-0.3408,0.283,0.9097,-0.3038,-0.337,-0.7034,-0.6258,0.3,0.891,-0.3408,0.0075,-0.1893,0.9819,0.0556,-0.2133,0.9754,0.283,0.9097,-0.3038,0.0075,-0.1893,0.9819,-0.306,-0.7024,-0.6427,-0.337,-0.7034,-0.6258,0.0556,-0.2133,0.9754,-0.337,-0.7034,-0.6258,0.283,0.9097,-0.3038,0.3002,0.8817,-0.364,-0.3508,-0.6618,-0.6626,0.283,0.9097,-0.3038,0.0556,-0.2133,0.9754,0.0594,-0.1863,0.9807,0.3002,0.8817,-0.364,0.0556,-0.2133,0.9754,-0.337,-0.7034,-0.6258,-0.3508,-0.6618,-0.6626,0.0594,-0.1863,0.9807,-0.3508,-0.6618,-0.6626,0.3002,0.8817,-0.364,0.3721,0.8626,-0.3428,-0.3626,-0.6769,-0.6406,0.3002,0.8817,-0.364,0.0594,-0.1863,0.9807,-0.0043,-0.1734,0.9848,0.3721,0.8626,-0.3428,0.0594,-0.1863,0.9807,-0.3508,-0.6618,-0.6626,-0.3626,-0.6769,-0.6406,-0.0043,-0.1734,0.9848,-0.3626,-0.6769,-0.6406,0.3721,0.8626,-0.3428,0.3844,0.8557,-0.3465,-0.3755,-0.6746,-0.6356,0.3721,0.8626,-0.3428,-0.0043,-0.1734,0.9848,-0.0084,-0.1805,0.9835,0.3844,0.8557,-0.3465,-0.0043,-0.1734,0.9848,-0.3626,-0.6769,-0.6406,-0.3755,-0.6746,-0.6356,-0.0084,-0.1805,0.9835,-0.6027,0.5617,-0.5668,0.6278,0.4355,0.6451,0.5328,0.4192,0.7351,-0.5944,0.4942,-0.6344,0.6278,0.4355,0.6451,-0.0265,-0.9967,-0.0761,0.0191,-0.9848,-0.1727,0.5328,0.4192,0.7351,-0.0265,-0.9967,-0.0761,-0.6027,0.5617,-0.5668,-0.5944,0.4942,-0.6344,0.0191,-0.9848,-0.1727,-0.5944,0.4942,-0.6344,0.5328,0.4192,0.7351,0.4352,0.4447,0.7829,-0.4752,0.6202,-0.6241,0.5328,0.4192,0.7351,0.0191,-0.9848,-0.1727,0.0272,-0.9865,-0.1618,0.4352,0.4447,0.7829,0.0191,-0.9848,-0.1727,-0.5944,0.4942,-0.6344,-0.4752,0.6202,-0.6241,0.0272,-0.9865,-0.1618,-0.4752,0.6202,-0.6241,0.4352,0.4447,0.7829,0.4867,0.3181,0.8136,-0.5203,0.562,-0.643,0.4352,0.4447,0.7829,0.0272,-0.9865,-0.1618,0.0584,-0.986,-0.1564,0.4867,0.3181,0.8136,0.0272,-0.9865,-0.1618,-0.4752,0.6202,-0.6241,-0.5203,0.562,-0.643,0.0584,-0.986,-0.1564,-0.5203,0.562,-0.643,0.4867,0.3181,0.8136,0.4325,0.3606,0.8264,-0.5995,0.5591,-0.5727,0.4867,0.3181,0.8136,0.0584,-0.986,-0.1564,0.1655,-0.9481,-0.2715,0.4325,0.3606,0.8264,0.0584,-0.986,-0.1564,-0.5203,0.562,-0.643,-0.5995,0.5591,-0.5727,0.1655,-0.9481,-0.2715,-0.5995,0.5591,-0.5727,0.4325,0.3606,0.8264,0.4017,0.3619,0.8413,-0.6003,0.5741,-0.5568,0.4325,0.3606,0.8264,0.1655,-0.9481,-0.2715,0.1998,-0.9378,-0.2839,0.4017,0.3619,0.8413,0.1655,-0.9481,-0.2715,-0.5995,0.5591,-0.5727,-0.6003,0.5741,-0.5568,0.1998,-0.9378,-0.2839,0.712,-0.6245,0.3211,0.0857,0.4549,-0.8864,0.0358,0.303,-0.9523,0.7986,-0.4619,0.3857,0.0857,0.4549,-0.8864,-0.8024,0.1868,0.5668,-0.7332,0.071,0.6763,0.0358,0.303,-0.9523,-0.8024,0.1868,0.5668,0.712,-0.6245,0.3211,0.7986,-0.4619,0.3857,-0.7332,0.071,0.6763,0.7986,-0.4619,0.3857,0.0358,0.303,-0.9523,0.0271,0.2852,-0.9581,0.9189,-0.2071,0.3357,0.0358,0.303,-0.9523,-0.7332,0.071,0.6763,-0.8586,-0.0518,0.51,0.0271,0.2852,-0.9581,-0.7332,0.071,0.6763,0.7986,-0.4619,0.3857,0.9189,-0.2071,0.3357,-0.8586,-0.0518,0.51,0.9189,-0.2071,0.3357,0.0271,0.2852,-0.9581,-0.0237,0.4129,-0.9105,0.8817,-0.1665,0.4414,0.0271,0.2852,-0.9581,-0.8586,-0.0518,0.51,-0.8485,-0.2457,0.4687,-0.0237,0.4129,-0.9105,-0.8586,-0.0518,0.51,0.9189,-0.2071,0.3357,0.8817,-0.1665,0.4414,-0.8485,-0.2457,0.4687,0.8817,-0.1665,0.4414,-0.0237,0.4129,-0.9105,-0.0313,0.4104,-0.9114,0.8786,-0.1514,0.4529,-0.0237,0.4129,-0.9105,-0.8485,-0.2457,0.4687,-0.8492,-0.2596,0.4598,-0.0313,0.4104,-0.9114,-0.8485,-0.2457,0.4687,0.8817,-0.1665,0.4414,0.8786,-0.1514,0.4529,-0.8492,-0.2596,0.4598,-0.9866,-0.1621,-0.0184,0.4005,0.5217,0.7533,0.3973,0.5627,0.725,-0.985,-0.172,0.0129,0.4005,0.5217,0.7533,0.5829,-0.3569,-0.73,0.6043,-0.3673,-0.7071,0.3973,0.5627,0.725,0.5829,-0.3569,-0.73,-0.9866,-0.1621,-0.0184,-0.985,-0.172,0.0129,0.6043,-0.3673,-0.7071,-0.985,-0.172,0.0129,0.3973,0.5627,0.725,0.4326,0.6241,0.6507,-0.9509,-0.3046,0.0556,0.3973,0.5627,0.725,0.6043,-0.3673,-0.7071,0.6054,-0.3075,-0.7341,0.4326,0.6241,0.6507,0.6043,-0.3673,-0.7071,-0.985,-0.172,0.0129,-0.9509,-0.3046,0.0556,0.6054,-0.3075,-0.7341,-0.9509,-0.3046,0.0556,0.4326,0.6241,0.6507,0.37,0.6496,0.6642,-0.9149,-0.3818,0.1309,0.4326,0.6241,0.6507,0.6054,-0.3075,-0.7341,0.5447,-0.2677,-0.7948,0.37,0.6496,0.6642,0.6054,-0.3075,-0.7341,-0.9509,-0.3046,0.0556,-0.9149,-0.3818,0.1309,0.5447,-0.2677,-0.7948,-0.9149,-0.3818,0.1309,0.37,0.6496,0.6642,0.3719,0.6498,0.663,-0.9143,-0.3841,0.1284,0.37,0.6496,0.6642,0.5447,-0.2677,-0.7948,0.5436,-0.2678,-0.7955,0.3719,0.6498,0.663,0.5447,-0.2677,-0.7948,-0.9149,-0.3818,0.1309,-0.9143,-0.3841,0.1284,0.5436,-0.2678,-0.7955,0.5527,0.3003,-0.7774,-0.5354,0.665,0.5206,-0.685,0.6361,0.3551,0.6838,0.2046,-0.7004,-0.5354,0.665,0.5206,-0.0228,-0.9668,0.2546,0.1207,-0.9504,0.2868,-0.685,0.6361,0.3551,-0.0228,-0.9668,0.2546,0.5527,0.3003,-0.7774,0.6838,0.2046,-0.7004,0.1207,-0.9504,0.2868,0.6838,0.2046,-0.7004,-0.685,0.6361,0.3551,-0.8128,0.5652,0.1413,0.7373,0.3669,-0.5672,-0.685,0.6361,0.3551,0.1207,-0.9504,0.2868,0.1147,-0.9113,0.3954,-0.8128,0.5652,0.1413,0.1207,-0.9504,0.2868,0.6838,0.2046,-0.7004,0.7373,0.3669,-0.5672,0.1147,-0.9113,0.3954,0.7373,0.3669,-0.5672,-0.8128,0.5652,0.1413,-0.8379,0.5294,0.1331,0.764,0.3921,-0.5125,-0.8128,0.5652,0.1413,0.1147,-0.9113,0.3954,0.0728,-0.922,0.3802,-0.8379,0.5294,0.1331,0.1147,-0.9113,0.3954,0.7373,0.3669,-0.5672,0.764,0.3921,-0.5125,0.0728,-0.922,0.3802,-0.1476,0.029,0.9886,0.9126,0.1758,-0.369,0.9528,-0.1004,-0.2865,-0.3697,0.1454,0.9177,0.9126,0.1758,-0.369,-0.7532,-0.2175,-0.6207,-0.8031,-0.0164,-0.5956,0.9528,-0.1004,-0.2865,-0.7532,-0.2175,-0.6207,-0.1476,0.029,0.9886,-0.3697,0.1454,0.9177,-0.8031,-0.0164,-0.5956,-0.3697,0.1454,0.9177,0.9528,-0.1004,-0.2865,0.8579,-0.4525,-0.2433,-0.2786,0.2595,0.9247,0.9528,-0.1004,-0.2865,-0.8031,-0.0164,-0.5956,-0.6457,0.2199,-0.7313,0.8579,-0.4525,-0.2433,-0.8031,-0.0164,-0.5956,-0.3697,0.1454,0.9177,-0.2786,0.2595,0.9247,-0.6457,0.2199,-0.7313,-0.2786,0.2595,0.9247,0.8579,-0.4525,-0.2433,0.8701,-0.4569,-0.185,-0.2253,0.1874,0.9561,0.8579,-0.4525,-0.2433,-0.6457,0.2199,-0.7313,-0.5944,0.2448,-0.766,0.8701,-0.4569,-0.185,-0.6457,0.2199,-0.7313,-0.2786,0.2595,0.9247,-0.2253,0.1874,0.9561,-0.5944,0.2448,-0.766,-0.2253,0.1874,0.9561,0.8701,-0.4569,-0.185,0.896,-0.3962,-0.2008,-0.2702,0.19,0.9439,0.8701,-0.4569,-0.185,-0.5944,0.2448,-0.766,-0.6373,0.2112,-0.7411,0.896,-0.3962,-0.2008,-0.5944,0.2448,-0.766,-0.2253,0.1874,0.9561,-0.2702,0.19,0.9439,-0.6373,0.2112,-0.7411,-0.7852,0.1516,-0.6004,0.173,0.6216,0.764,0.2862,0.6336,0.7187,-0.8692,0.0557,-0.4914,0.173,0.6216,0.764,0.6133,-0.7728,-0.1631,0.7016,-0.6931,-0.1654,0.2862,0.6336,0.7187,0.6133,-0.7728,-0.1631,-0.7852,0.1516,-0.6004,-0.8692,0.0557,-0.4914,0.7016,-0.6931,-0.1654,-0.8692,0.0557,-0.4914,0.2862,0.6336,0.7187,0.3558,0.7647,0.5372,-0.9766,-0.0248,-0.2136,0.2862,0.6336,0.7187,0.7016,-0.6931,-0.1654,0.7009,-0.6658,-0.2558,0.3558,0.7647,0.5372,0.7016,-0.6931,-0.1654,-0.8692,0.0557,-0.4914,-0.9766,-0.0248,-0.2136,0.7009,-0.6658,-0.2558,-0.9766,-0.0248,-0.2136,0.3558,0.7647,0.5372,0.368,0.8344,0.4103,-0.9827,-0.1515,-0.1061,0.3558,0.7647,0.5372,0.7009,-0.6658,-0.2558,0.6502,-0.6944,-0.3083,0.368,0.8344,0.4103,0.7009,-0.6658,-0.2558,-0.9766,-0.0248,-0.2136,-0.9827,-0.1515,-0.1061,0.6502,-0.6944,-0.3083,-0.9827,-0.1515,-0.1061,0.368,0.8344,0.4103,0.3462,0.8426,0.4124,-0.9852,-0.1579,-0.0672,0.368,0.8344,0.4103,0.6502,-0.6944,-0.3083,0.6415,-0.685,-0.3454,0.3462,0.8426,0.4124,0.6502,-0.6944,-0.3083,-0.9827,-0.1515,-0.1061,-0.9852,-0.1579,-0.0672,0.6415,-0.685,-0.3454],"colors":[0],"uvsfaces":[43,0,1,31,30,0,0,1,32,31,0,1,2,3,43,1,2,32,31,0,1,2,33,32,4,5,6,7,43,2,3,33,32,0,2,3,34,33,8,9,10,11,43,3,4,34,33,0,3,4,35,34,12,13,14,15,43,4,5,35,34,0,4,5,36,35,16,17,18,19,43,5,6,36,35,0,5,6,37,36,20,21,22,23,43,6,7,37,36,0,6,7,38,37,24,25,26,27,43,7,8,38,37,0,7,8,39,38,28,29,30,31,43,8,9,39,38,0,8,9,40,39,32,33,34,35,43,9,10,40,39,0,9,10,41,40,36,37,38,39,43,10,11,41,40,0,10,11,42,41,40,41,42,43,43,11,12,42,41,0,11,12,43,42,44,45,46,47,43,12,13,43,42,0,12,13,44,43,48,49,50,51,43,13,14,44,43,0,13,14,45,44,52,53,54,55,43,14,15,45,44,0,14,15,46,45,56,57,58,59,43,15,16,46,45,0,15,16,47,46,60,61,62,63,43,16,17,47,46,0,16,17,48,47,64,65,66,67,43,17,18,48,47,0,17,18,49,48,68,69,70,71,43,18,19,49,48,0,18,19,50,49,72,73,74,75,43,19,20,50,49,0,19,20,51,50,76,77,78,79,43,20,21,51,50,0,20,21,52,51,80,81,82,83,43,21,22,52,51,0,21,22,53,52,84,85,86,87,43,22,23,53,52,0,22,23,54,53,88,89,90,91,43,23,24,54,53,0,23,24,55,54,92,93,94,95,43,24,25,55,54,0,24,25,56,55,96,97,98,99,43,25,26,56,55,0,25,26,57,56,100,101,102,103,43,26,27,57,56,0,26,27,58,57,104,105,106,107,43,27,28,58,57,0,27,28,59,58,108,109,110,111,43,28,29,59,58,0,28,29,60,59,112,113,114,115,43,29,0,30,59,0,29,30,61,60,116,117,118,119,43,30,31,61,60,0,31,32,63,62,120,121,122,123,43,31,32,62,61,0,32,33,64,63,124,125,126,127,43,32,33,63,62,0,33,34,65,64,128,129,130,131,43,33,34,64,63,0,34,35,66,65,132,133,134,135,43,34,35,65,64,0,35,36,67,66,136,137,138,139,43,35,36,66,65,0,36,37,68,67,140,141,142,143,43,36,37,67,66,0,37,38,69,68,144,145,146,147,43,37,38,68,67,0,38,39,70,69,148,149,150,151,43,38,39,69,68,0,39,40,71,70,152,153,154,155,43,39,40,70,69,0,40,41,72,71,156,157,158,159,43,40,41,71,70,0,41,42,73,72,160,161,162,163,43,41,42,72,71,0,42,43,74,73,164,165,166,167,43,42,43,73,72,0,43,44,75,74,168,169,170,171,43,43,44,74,73,0,44,45,76,75,172,173,174,175,43,44,45,75,74,0,45,46,77,76,176,177,178,179,43,45,46,76,75,0,46,47,78,77,180,181,182,183,43,46,47,77,76,0,47,48,79,78,184,185,186,187,43,47,48,78,77,0,48,49,80,79,188,189,190,191,43,48,49,79,78,0,49,50,81,80,192,193,194,195,43,49,50,80,79,0,50,51,82,81,196,197,198,199,43,50,51,81,80,0,51,52,83,82,200,201,202,203,43,51,52,82,81,0,52,53,84,83,204,205,206,207,43,52,53,83,82,0,53,54,85,84,208,209,210,211,43,53,54,84,83,0,54,55,86,85,212,213,214,215,43,54,55,85,84,0,55,56,87,86,216,217,218,219,43,55,56,86,85,0,56,57,88,87,220,221,222,223,43,56,57,87,86,0,57,58,89,88,224,225,226,227,43,57,58,88,87,0,58,59,90,89,228,229,230,231,43,58,59,89,88,0,59,60,91,90,232,233,234,235,43,59,30,60,89,0,60,61,92,91,236,237,238,239,43,60,61,91,90,0,62,63,94,93,240,241,242,243,43,61,62,92,91,0,63,64,95,94,244,245,246,247,43,62,63,93,92,0,64,65,96,95,248,249,250,251,43,63,64,94,93,0,65,66,97,96,252,253,254,255,43,64,65,95,94,0,66,67,98,97,256,257,258,259,43,65,66,96,95,0,67,68,99,98,260,261,262,263,43,66,67,97,96,0,68,69,100,99,264,265,266,267,43,67,68,98,97,0,69,70,101,100,268,269,270,271,43,68,69,99,98,0,70,71,102,101,272,273,274,275,43,69,70,100,99,0,71,72,103,102,276,277,278,279,43,70,71,101,100,0,72,73,104,103,280,281,282,283,43,71,72,102,101,0,73,74,105,104,284,285,286,287,43,72,73,103,102,0,74,75,106,105,288,289,290,291,43,73,74,104,103,0,75,76,107,106,292,293,294,295,43,74,75,105,104,0,76,77,108,107,296,297,298,299,43,75,76,106,105,0,77,78,109,108,300,301,302,303,43,76,77,107,106,0,78,79,110,109,304,305,306,307,43,77,78,108,107,0,79,80,111,110,308,309,310,311,43,78,79,109,108,0,80,81,112,111,312,313,314,315,43,79,80,110,109,0,81,82,113,112,316,317,318,319,43,80,81,111,110,0,82,83,114,113,320,321,322,323,43,81,82,112,111,0,83,84,115,114,324,325,326,327,43,82,83,113,112,0,84,85,116,115,328,329,330,331,43,83,84,114,113,0,85,86,117,116,332,333,334,335,43,84,85,115,114,0,86,87,118,117,336,337,338,339,43,85,86,116,115,0,87,88,119,118,340,341,342,343,43,86,87,117,116,0,88,89,120,119,344,345,346,347,43,87,88,118,117,0,89,90,121,120,348,349,350,351,43,88,89,119,118,0,90,91,122,121,352,353,354,355,43,89,60,90,119,0,91,92,123,122,356,357,358,359,43,90,91,121,120,0,93,94,125,124,360,361,362,363,43,91,92,122,121,0,94,95,126,125,364,365,366,367,43,92,93,123,122,0,95,96,127,126,368,369,370,371,43,93,94,124,123,0,96,97,128,127,372,373,374,375,43,94,95,125,124,0,97,98,129,128,376,377,378,379,43,95,96,126,125,0,98,99,130,129,380,381,382,383,43,96,97,127,126,0,99,100,131,130,384,385,386,387,43,97,98,128,127,0,100,101,132,131,388,389,390,391,43,98,99,129,128,0,101,102,133,132,392,393,394,395,43,99,100,130,129,0,102,103,134,133,396,397,398,399,43,100,101,131,130,0,103,104,135,134,400,401,402,403,43,101,102,132,131,0,104,105,136,135,404,405,406,407,43,102,103,133,132,0,105,106,137,136,408,409,410,411,43,103,104,134,133,0,106,107,138,137,412,413,414,415,43,104,105,135,134,0,107,108,139,138,416,417,418,419,43,105,106,136,135,0,108,109,140,139,420,421,422,423,43,106,107,137,136,0,109,110,141,140,424,425,426,427,43,107,108,138,137,0,110,111,142,141,428,429,430,431,43,108,109,139,138,0,111,112,143,142,432,433,434,435,43,109,110,140,139,0,112,113,144,143,436,437,438,439,43,110,111,141,140,0,113,114,145,144,440,441,442,443,43,111,112,142,141,0,114,115,146,145,444,445,446,447,43,112,113,143,142,0,115,116,147,146,448,449,450,451,43,113,114,144,143,0,116,117,148,147,452,453,454,455,43,114,115,145,144,0,117,118,149,148,456,457,458,459,43,115,116,146,145,0,118,119,150,149,460,461,462,463,43,116,117,147,146,0,119,120,151,150,464,465,466,467,43,117,118,148,147,0,120,121,152,151,468,469,470,471,43,118,119,149,148,0,121,122,153,152,472,473,474,475,43,119,90,120,149,0,122,123,154,153,476,477,478,479,43,120,121,151,150,0,124,125,156,155,480,481,482,483,43,121,122,152,151,0,125,126,157,156,484,485,486,487,43,122,123,153,152,0,126,127,158,157,488,489,490,491,43,123,124,154,153,0,127,128,159,158,492,493,494,495,43,124,125,155,154,0,128,129,160,159,496,497,498,499,43,125,126,156,155,0,129,130,161,160,500,501,502,503,43,126,127,157,156,0,130,131,162,161,504,505,506,507,43,127,128,158,157,0,131,132,163,162,508,509,510,511,43,128,129,159,158,0,132,133,164,163,512,513,514,515,43,129,130,160,159,0,133,134,165,164,516,517,518,519,43,130,131,161,160,0,134,135,166,165,520,521,522,523,43,131,132,162,161,0,135,136,167,166,524,525,526,527,43,132,133,163,162,0,136,137,168,167,528,529,530,531,43,133,134,164,163,0,137,138,169,168,532,533,534,535,43,134,135,165,164,0,138,139,170,169,536,537,538,539,43,135,136,166,165,0,139,140,171,170,540,541,542,543,43,136,137,167,166,0,140,141,172,171,544,545,546,547,43,137,138,168,167,0,141,142,173,172,548,549,550,551,43,138,139,169,168,0,142,143,174,173,552,553,554,555,43,139,140,170,169,0,143,144,175,174,556,557,558,559,43,140,141,171,170,0,144,145,176,175,560,561,562,563,43,141,142,172,171,0,145,146,177,176,564,565,566,567,43,142,143,173,172,0,146,147,178,177,568,569,570,571,43,143,144,174,173,0,147,148,179,178,572,573,574,575,43,144,145,175,174,0,148,149,180,179,576,577,578,579,43,145,146,176,175,0,149,150,181,180,580,581,582,583,43,146,147,177,176,0,150,151,182,181,584,585,586,587,43,147,148,178,177,0,151,152,183,182,588,589,590,591,43,148,149,179,178,0,152,153,184,183,592,593,594,595,43,149,120,150,179,0,153,154,185,184,596,597,598,599,43,150,151,181,180,0,155,156,187,186,600,601,602,603,43,151,152,182,181,0,156,157,188,187,604,605,606,607,43,152,153,183,182,0,157,158,189,188,608,609,610,611,43,153,154,184,183,0,158,159,190,189,612,613,614,615,43,154,155,185,184,0,159,160,191,190,616,617,618,619,43,155,156,186,185,0,160,161,192,191,620,621,622,623,43,156,157,187,186,0,161,162,193,192,624,625,626,627,43,157,158,188,187,0,162,163,194,193,628,629,630,631,43,158,159,189,188,0,163,164,195,194,632,633,634,635,43,159,160,190,189,0,164,165,196,195,636,637,638,639,43,160,161,191,190,0,165,166,197,196,640,641,642,643,43,161,162,192,191,0,166,167,198,197,644,645,646,647,43,162,163,193,192,0,167,168,199,198,648,649,650,651,43,163,164,194,193,0,168,169,200,199,652,653,654,655,43,164,165,195,194,0,169,170,201,200,656,657,658,659,43,165,166,196,195,0,170,171,202,201,660,661,662,663,43,166,167,197,196,0,171,172,203,202,664,665,666,667,43,167,168,198,197,0,172,173,204,203,668,669,670,671,43,168,169,199,198,0,173,174,205,204,672,673,674,675,43,169,170,200,199,0,174,175,206,205,676,677,678,679,43,170,171,201,200,0,175,176,207,206,680,681,682,683,43,171,172,202,201,0,176,177,208,207,684,685,686,687,43,172,173,203,202,0,177,178,209,208,688,689,690,691,43,173,174,204,203,0,178,179,210,209,692,693,694,695,43,174,175,205,204,0,179,180,211,210,696,697,698,699,43,175,176,206,205,0,180,181,212,211,700,701,702,703,43,176,177,207,206,0,181,182,213,212,704,705,706,707,43,177,178,208,207,0,182,183,214,213,708,709,710,711,43,178,179,209,208,0,183,184,215,214,712,713,714,715,43,179,150,180,209,0,184,185,216,215,716,717,718,719,43,180,181,211,210,0,186,187,218,217,720,721,722,723,43,181,182,212,211,0,187,188,219,218,724,725,726,727,43,182,183,213,212,0,188,189,220,219,728,729,730,731,43,183,184,214,213,0,189,190,221,220,732,733,734,735,43,184,185,215,214,0,190,191,222,221,736,737,738,739,43,185,186,216,215,0,191,192,223,222,740,741,742,743,43,186,187,217,216,0,192,193,224,223,744,745,746,747,43,187,188,218,217,0,193,194,225,224,748,749,750,751,43,188,189,219,218,0,194,195,226,225,752,753,754,755,43,189,190,220,219,0,195,196,227,226,756,757,758,759,43,190,191,221,220,0,196,197,228,227,760,761,762,763,43,191,192,222,221,0,197,198,229,228,764,765,766,767,43,192,193,223,222,0,198,199,230,229,768,769,770,771,43,193,194,224,223,0,199,200,231,230,772,773,774,775,43,194,195,225,224,0,200,201,232,231,776,777,778,779,43,195,196,226,225,0,201,202,233,232,780,781,782,783,43,196,197,227,226,0,202,203,234,233,784,785,786,787,43,197,198,228,227,0,203,204,235,234,788,789,790,791,43,198,199,229,228,0,204,205,236,235,792,793,794,795,43,199,200,230,229,0,205,206,237,236,796,797,798,799,43,200,201,231,230,0,206,207,238,237,800,801,802,803,43,201,202,232,231,0,207,208,239,238,804,805,806,807,43,202,203,233,232,0,208,209,240,239,808,809,810,811,43,203,204,234,233,0,209,210,241,240,812,813,814,815,43,204,205,235,234,0,210,211,242,241,816,817,818,819,43,205,206,236,235,0,211,212,243,242,820,821,822,823,43,206,207,237,236,0,212,213,244,243,824,825,826,827,43,207,208,238,237,0,213,214,245,244,828,829,830,831,43,208,209,239,238,0,214,215,246,245,832,833,834,835,43,209,180,210,239,0,215,216,247,246,836,837,838,839,43,210,211,241,240,0,217,218,249,248,840,841,842,843,43,211,212,242,241,0,218,219,250,249,844,845,846,847,43,212,213,243,242,0,219,220,251,250,848,849,850,851,43,213,214,244,243,0,220,221,252,251,852,853,854,855,43,214,215,245,244,0,221,222,253,252,856,857,858,859,43,215,216,246,245,0,222,223,254,253,860,861,862,863,43,216,217,247,246,0,223,224,255,254,864,865,866,867,43,217,218,248,247,0,224,225,256,255,868,869,870,871,43,218,219,249,248,0,225,226,257,256,872,873,874,875,43,219,220,250,249,0,226,227,258,257,876,877,878,879,43,220,221,251,250,0,227,228,259,258,880,881,882,883,43,221,222,252,251,0,228,229,260,259,884,885,886,887,43,222,223,253,252,0,229,230,261,260,888,889,890,891,43,223,224,254,253,0,230,231,262,261,892,893,894,895,43,224,225,255,254,0,231,232,263,262,896,897,898,899,43,225,226,256,255,0,232,233,264,263,900,901,902,903,43,226,227,257,256,0,233,234,265,264,904,905,906,907,43,227,228,258,257,0,234,235,266,265,908,909,910,911,43,228,229,259,258,0,235,236,267,266,912,913,914,915,43,229,230,260,259,0,236,237,268,267,916,917,918,919,43,230,231,261,260,0,237,238,269,268,920,921,922,923,43,231,232,262,261,0,238,239,270,269,924,925,926,927,43,232,233,263,262,0,239,240,271,270,928,929,930,931,43,233,234,264,263,0,240,241,272,271,932,933,934,935,43,234,235,265,264,0,241,242,273,272,936,937,938,939,43,235,236,266,265,0,242,243,274,273,940,941,942,943,43,236,237,267,266,0,243,244,275,274,944,945,946,947,43,237,238,268,267,0,244,245,276,275,948,949,950,951,43,238,239,269,268,0,245,246,277,276,952,953,954,955,43,239,210,240,269,0,246,247,278,277,956,957,958,959,43,240,241,271,270,0,248,249,280,279,960,961,962,963,43,241,242,272,271,0,249,250,281,280,964,965,966,967,43,242,243,273,272,0,250,251,282,281,968,969,970,971,43,243,244,274,273,0,251,252,283,282,972,973,974,975,43,244,245,275,274,0,252,253,284,283,976,977,978,979,43,245,246,276,275,0,253,254,285,284,980,981,982,983,43,246,247,277,276,0,254,255,286,285,984,985,986,987,43,247,248,278,277,0,255,256,287,286,988,989,990,991,43,248,249,279,278,0,256,257,288,287,992,993,994,995,43,249,250,280,279,0,257,258,289,288,996,997,998,999,43,250,251,281,280,0,258,259,290,289,1000,1001,1002,1003,43,251,252,282,281,0,259,260,291,290,1004,1005,1006,1007,43,252,253,283,282,0,260,261,292,291,1008,1009,1010,1011,43,253,254,284,283,0,261,262,293,292,1012,1013,1014,1015,43,254,255,285,284,0,262,263,294,293,1016,1017,1018,1019,43,255,256,286,285,0,263,264,295,294,1020,1021,1022,1023,43,256,257,287,286,0,264,265,296,295,1024,1025,1026,1027,43,257,258,288,287,0,265,266,297,296,1028,1029,1030,1031,43,258,259,289,288,0,266,267,298,297,1032,1033,1034,1035,43,259,260,290,289,0,267,268,299,298,1036,1037,1038,1039,43,260,261,291,290,0,268,269,300,299,1040,1041,1042,1043,43,261,262,292,291,0,269,270,301,300,1044,1045,1046,1047,43,262,263,293,292,0,270,271,302,301,1048,1049,1050,1051,43,263,264,294,293,0,271,272,303,302,1052,1053,1054,1055,43,264,265,295,294,0,272,273,304,303,1056,1057,1058,1059,43,265,266,296,295,0,273,274,305,304,1060,1061,1062,1063,43,266,267,297,296,0,274,275,306,305,1064,1065,1066,1067,43,267,268,298,297,0,275,276,307,306,1068,1069,1070,1071,43,268,269,299,298,0,276,277,308,307,1072,1073,1074,1075,43,269,240,270,299,0,277,278,309,308,1076,1077,1078,1079,43,270,271,301,300,0,279,280,311,310,1080,1081,1082,1083,43,271,272,302,301,0,280,281,312,311,1084,1085,1086,1087,43,272,273,303,302,0,281,282,313,312,1088,1089,1090,1091,43,273,274,304,303,0,282,283,314,313,1092,1093,1094,1095,43,274,275,305,304,0,283,284,315,314,1096,1097,1098,1099,43,275,276,306,305,0,284,285,316,315,1100,1101,1102,1103,43,276,277,307,306,0,285,286,317,316,1104,1105,1106,1107,43,277,278,308,307,0,286,287,318,317,1108,1109,1110,1111,43,278,279,309,308,0,287,288,319,318,1112,1113,1114,1115,43,279,280,310,309,0,288,289,320,319,1116,1117,1118,1119,43,280,281,311,310,0,289,290,321,320,1120,1121,1122,1123,43,281,282,312,311,0,290,291,322,321,1124,1125,1126,1127,43,282,283,313,312,0,291,292,323,322,1128,1129,1130,1131,43,283,284,314,313,0,292,293,324,323,1132,1133,1134,1135,43,284,285,315,314,0,293,294,325,324,1136,1137,1138,1139,43,285,286,316,315,0,294,295,326,325,1140,1141,1142,1143,43,286,287,317,316,0,295,296,327,326,1144,1145,1146,1147,43,287,288,318,317,0,296,297,328,327,1148,1149,1150,1151,43,288,289,319,318,0,297,298,329,328,1152,1153,1154,1155,43,289,290,320,319,0,298,299,330,329,1156,1157,1158,1159,43,290,291,321,320,0,299,300,331,330,1160,1161,1162,1163,43,291,292,322,321,0,300,301,332,331,1164,1165,1166,1167,43,292,293,323,322,0,301,302,333,332,1168,1169,1170,1171,43,293,294,324,323,0,302,303,334,333,1172,1173,1174,1175,43,294,295,325,324,0,303,304,335,334,1176,1177,1178,1179,43,295,296,326,325,0,304,305,336,335,1180,1181,1182,1183,43,296,297,327,326,0,305,306,337,336,1184,1185,1186,1187,43,297,298,328,327,0,306,307,338,337,1188,1189,1190,1191,43,298,299,329,328,0,307,308,339,338,1192,1193,1194,1195,43,299,270,300,329,0,308,309,340,339,1196,1197,1198,1199,43,300,301,331,330,0,310,311,342,341,1200,1201,1202,1203,43,301,302,332,331,0,311,312,343,342,1204,1205,1206,1207,43,302,303,333,332,0,312,313,344,343,1208,1209,1210,1211,43,303,304,334,333,0,313,314,345,344,1212,1213,1214,1215,43,304,305,335,334,0,314,315,346,345,1216,1217,1218,1219,43,305,306,336,335,0,315,316,347,346,1220,1221,1222,1223,43,306,307,337,336,0,316,317,348,347,1224,1225,1226,1227,43,307,308,338,337,0,317,318,349,348,1228,1229,1230,1231,43,308,309,339,338,0,318,319,350,349,1232,1233,1234,1235,43,309,310,340,339,0,319,320,351,350,1236,1237,1238,1239,43,310,311,341,340,0,320,321,352,351,1240,1241,1242,1243,43,311,312,342,341,0,321,322,353,352,1244,1245,1246,1247,43,312,313,343,342,0,322,323,354,353,1248,1249,1250,1251,43,313,314,344,343,0,323,324,355,354,1252,1253,1254,1255,43,314,315,345,344,0,324,325,356,355,1256,1257,1258,1259,43,315,316,346,345,0,325,326,357,356,1260,1261,1262,1263,43,316,317,347,346,0,326,327,358,357,1264,1265,1266,1267,43,317,318,348,347,0,327,328,359,358,1268,1269,1270,1271,43,318,319,349,348,0,328,329,360,359,1272,1273,1274,1275,43,319,320,350,349,0,329,330,361,360,1276,1277,1278,1279,43,320,321,351,350,0,330,331,362,361,1280,1281,1282,1283,43,321,322,352,351,0,331,332,363,362,1284,1285,1286,1287,43,322,323,353,352,0,332,333,364,363,1288,1289,1290,1291,43,323,324,354,353,0,333,334,365,364,1292,1293,1294,1295,43,324,325,355,354,0,334,335,366,365,1296,1297,1298,1299,43,325,326,356,355,0,335,336,367,366,1300,1301,1302,1303,43,326,327,357,356,0,336,337,368,367,1304,1305,1306,1307,43,327,328,358,357,0,337,338,369,368,1308,1309,1310,1311,43,328,329,359,358,0,338,339,370,369,1312,1313,1314,1315,43,329,300,330,359,0,339,340,371,370,1316,1317,1318,1319,43,330,331,361,360,0,341,342,373,372,1320,1321,1322,1323,43,331,332,362,361,0,342,343,374,373,1324,1325,1326,1327,43,332,333,363,362,0,343,344,375,374,1328,1329,1330,1331,43,333,334,364,363,0,344,345,376,375,1332,1333,1334,1335,43,334,335,365,364,0,345,346,377,376,1336,1337,1338,1339,43,335,336,366,365,0,346,347,378,377,1340,1341,1342,1343,43,336,337,367,366,0,347,348,379,378,1344,1345,1346,1347,43,337,338,368,367,0,348,349,380,379,1348,1349,1350,1351,43,338,339,369,368,0,349,350,381,380,1352,1353,1354,1355,43,339,340,370,369,0,350,351,382,381,1356,1357,1358,1359,43,340,341,371,370,0,351,352,383,382,1360,1361,1362,1363,43,341,342,372,371,0,352,353,384,383,1364,1365,1366,1367,43,342,343,373,372,0,353,354,385,384,1368,1369,1370,1371,43,343,344,374,373,0,354,355,386,385,1372,1373,1374,1375,43,344,345,375,374,0,355,356,387,386,1376,1377,1378,1379,43,345,346,376,375,0,356,357,388,387,1380,1381,1382,1383,43,346,347,377,376,0,357,358,389,388,1384,1385,1386,1387,43,347,348,378,377,0,358,359,390,389,1388,1389,1390,1391,43,348,349,379,378,0,359,360,391,390,1392,1393,1394,1395,43,349,350,380,379,0,360,361,392,391,1396,1397,1398,1399,43,350,351,381,380,0,361,362,393,392,1400,1401,1402,1403,43,351,352,382,381,0,362,363,394,393,1404,1405,1406,1407,43,352,353,383,382,0,363,364,395,394,1408,1409,1410,1411,43,353,354,384,383,0,364,365,396,395,1412,1413,1414,1415,43,354,355,385,384,0,365,366,397,396,1416,1417,1418,1419,43,355,356,386,385,0,366,367,398,397,1420,1421,1422,1423,43,356,357,387,386,0,367,368,399,398,1424,1425,1426,1427,43,357,358,388,387,0,368,369,400,399,1428,1429,1430,1431,43,358,359,389,388,0,369,370,401,400,1432,1433,1434,1435,43,359,330,360,389,0,370,371,402,401,1436,1437,1438,1439,43,360,361,391,390,0,372,373,404,403,1440,1441,1442,1443,43,361,362,392,391,0,373,374,405,404,1444,1445,1446,1447,43,362,363,393,392,0,374,375,406,405,1448,1449,1450,1451,43,363,364,394,393,0,375,376,407,406,1452,1453,1454,1455,43,364,365,395,394,0,376,377,408,407,1456,1457,1458,1459,43,365,366,396,395,0,377,378,409,408,1460,1461,1462,1463,43,366,367,397,396,0,378,379,410,409,1464,1465,1466,1467,43,367,368,398,397,0,379,380,411,410,1468,1469,1470,1471,43,368,369,399,398,0,380,381,412,411,1472,1473,1474,1475,43,369,370,400,399,0,381,382,413,412,1476,1477,1478,1479,43,370,371,401,400,0,382,383,414,413,1480,1481,1482,1483,43,371,372,402,401,0,383,384,415,414,1484,1485,1486,1487,43,372,373,403,402,0,384,385,416,415,1488,1489,1490,1491,43,373,374,404,403,0,385,386,417,416,1492,1493,1494,1495,43,374,375,405,404,0,386,387,418,417,1496,1497,1498,1499,43,375,376,406,405,0,387,388,419,418,1500,1501,1502,1503,43,376,377,407,406,0,388,389,420,419,1504,1505,1506,1507,43,377,378,408,407,0,389,390,421,420,1508,1509,1510,1511,43,378,379,409,408,0,390,391,422,421,1512,1513,1514,1515,43,379,380,410,409,0,391,392,423,422,1516,1517,1518,1519,43,380,381,411,410,0,392,393,424,423,1520,1521,1522,1523,43,381,382,412,411,0,393,394,425,424,1524,1525,1526,1527,43,382,383,413,412,0,394,395,426,425,1528,1529,1530,1531,43,383,384,414,413,0,395,396,427,426,1532,1533,1534,1535,43,384,385,415,414,0,396,397,428,427,1536,1537,1538,1539,43,385,386,416,415,0,397,398,429,428,1540,1541,1542,1543,43,386,387,417,416,0,398,399,430,429,1544,1545,1546,1547,43,387,388,418,417,0,399,400,431,430,1548,1549,1550,1551,43,388,389,419,418,0,400,401,432,431,1552,1553,1554,1555,43,389,360,390,419,0,401,402,433,432,1556,1557,1558,1559,43,390,391,421,420,0,403,404,435,434,1560,1561,1562,1563,43,391,392,422,421,0,404,405,436,435,1564,1565,1566,1567,43,392,393,423,422,0,405,406,437,436,1568,1569,1570,1571,43,393,394,424,423,0,406,407,438,437,1572,1573,1574,1575,43,394,395,425,424,0,407,408,439,438,1576,1577,1578,1579,43,395,396,426,425,0,408,409,440,439,1580,1581,1582,1583,43,396,397,427,426,0,409,410,441,440,1584,1585,1586,1587,43,397,398,428,427,0,410,411,442,441,1588,1589,1590,1591,43,398,399,429,428,0,411,412,443,442,1592,1593,1594,1595,43,399,400,430,429,0,412,413,444,443,1596,1597,1598,1599,43,400,401,431,430,0,413,414,445,444,1600,1601,1602,1603,43,401,402,432,431,0,414,415,446,445,1604,1605,1606,1607,43,402,403,433,432,0,415,416,447,446,1608,1609,1610,1611,43,403,404,434,433,0,416,417,448,447,1612,1613,1614,1615,43,404,405,435,434,0,417,418,449,448,1616,1617,1618,1619,43,405,406,436,435,0,418,419,450,449,1620,1621,1622,1623,43,406,407,437,436,0,419,420,451,450,1624,1625,1626,1627,43,407,408,438,437,0,420,421,452,451,1628,1629,1630,1631,43,408,409,439,438,0,421,422,453,452,1632,1633,1634,1635,43,409,410,440,439,0,422,423,454,453,1636,1637,1638,1639,43,410,411,441,440,0,423,424,455,454,1640,1641,1642,1643,43,411,412,442,441,0,424,425,456,455,1644,1645,1646,1647,43,412,413,443,442,0,425,426,457,456,1648,1649,1650,1651,43,413,414,444,443,0,426,427,458,457,1652,1653,1654,1655,43,414,415,445,444,0,427,428,459,458,1656,1657,1658,1659,43,415,416,446,445,0,428,429,460,459,1660,1661,1662,1663,43,416,417,447,446,0,429,430,461,460,1664,1665,1666,1667,43,417,418,448,447,0,430,431,462,461,1668,1669,1670,1671,43,418,419,449,448,0,431,432,463,462,1672,1673,1674,1675,43,419,390,420,449,0,432,433,464,463,1676,1677,1678,1679,43,420,421,451,450,0,434,435,466,465,1680,1681,1682,1683,43,421,422,452,451,0,435,436,467,466,1684,1685,1686,1687,43,422,423,453,452,0,436,437,468,467,1688,1689,1690,1691,43,423,424,454,453,0,437,438,469,468,1692,1693,1694,1695,43,424,425,455,454,0,438,439,470,469,1696,1697,1698,1699,43,425,426,456,455,0,439,440,471,470,1700,1701,1702,1703,43,426,427,457,456,0,440,441,472,471,1704,1705,1706,1707,43,427,428,458,457,0,441,442,473,472,1708,1709,1710,1711,43,428,429,459,458,0,442,443,474,473,1712,1713,1714,1715,43,429,430,460,459,0,443,444,475,474,1716,1717,1718,1719,43,430,431,461,460,0,444,445,476,475,1720,1721,1722,1723,43,431,432,462,461,0,445,446,477,476,1724,1725,1726,1727,43,432,433,463,462,0,446,447,478,477,1728,1729,1730,1731,43,433,434,464,463,0,447,448,479,478,1732,1733,1734,1735,43,434,435,465,464,0,448,449,480,479,1736,1737,1738,1739,43,435,436,466,465,0,449,450,481,480,1740,1741,1742,1743,43,436,437,467,466,0,450,451,482,481,1744,1745,1746,1747,43,437,438,468,467,0,451,452,483,482,1748,1749,1750,1751,43,438,439,469,468,0,452,453,484,483,1752,1753,1754,1755,43,439,440,470,469,0,453,454,485,484,1756,1757,1758,1759,43,440,441,471,470,0,454,455,486,485,1760,1761,1762,1763,43,441,442,472,471,0,455,456,487,486,1764,1765,1766,1767,43,442,443,473,472,0,456,457,488,487,1768,1769,1770,1771,43,443,444,474,473,0,457,458,489,488,1772,1773,1774,1775,43,444,445,475,474,0,458,459,490,489,1776,1777,1778,1779,43,445,446,476,475,0,459,460,491,490,1780,1781,1782,1783,43,446,447,477,476,0,460,461,492,491,1784,1785,1786,1787,43,447,448,478,477,0,461,462,493,492,1788,1789,1790,1791,43,448,449,479,478,0,462,463,494,493,1792,1793,1794,1795,43,449,420,450,479,0,463,464,495,494,1796,1797,1798,1799,43,450,451,481,480,0,465,466,497,496,1800,1801,1802,1803,43,451,452,482,481,0,466,467,498,497,1804,1805,1806,1807,43,452,453,483,482,0,467,468,499,498,1808,1809,1810,1811,43,453,454,484,483,0,468,469,500,499,1812,1813,1814,1815,43,454,455,485,484,0,469,470,501,500,1816,1817,1818,1819,43,455,456,486,485,0,470,471,502,501,1820,1821,1822,1823,43,456,457,487,486,0,471,472,503,502,1824,1825,1826,1827,43,457,458,488,487,0,472,473,504,503,1828,1829,1830,1831,43,458,459,489,488,0,473,474,505,504,1832,1833,1834,1835,43,459,460,490,489,0,474,475,506,505,1836,1837,1838,1839,43,460,461,491,490,0,475,476,507,506,1840,1841,1842,1843,43,461,462,492,491,0,476,477,508,507,1844,1845,1846,1847,43,462,463,493,492,0,477,478,509,508,1848,1849,1850,1851,43,463,464,494,493,0,478,479,510,509,1852,1853,1854,1855,43,464,465,495,494,0,479,480,511,510,1856,1857,1858,1859,43,465,466,496,495,0,480,481,512,511,1860,1861,1862,1863,43,466,467,497,496,0,481,482,513,512,1864,1865,1866,1867,43,467,468,498,497,0,482,483,514,513,1868,1869,1870,1871,43,468,469,499,498,0,483,484,515,514,1872,1873,1874,1875,43,469,470,500,499,0,484,485,516,515,1876,1877,1878,1879,43,470,471,501,500,0,485,486,517,516,1880,1881,1882,1883,43,471,472,502,501,0,486,487,518,517,1884,1885,1886,1887,43,472,473,503,502,0,487,488,519,518,1888,1889,1890,1891,43,473,474,504,503,0,488,489,520,519,1892,1893,1894,1895,43,474,475,505,504,0,489,490,521,520,1896,1897,1898,1899,43,475,476,506,505,0,490,491,522,521,1900,1901,1902,1903,43,476,477,507,506,0,491,492,523,522,1904,1905,1906,1907,43,477,478,508,507,0,492,493,524,523,1908,1909,1910,1911,43,478,479,509,508,0,493,494,525,524,1912,1913,1914,1915,43,479,450,480,509,0,494,495,526,525,1916,1917,1918,1919,43,480,481,511,510,0,496,497,528,527,1920,1921,1922,1923,43,481,482,512,511,0,497,498,529,528,1924,1925,1926,1927,43,482,483,513,512,0,498,499,530,529,1928,1929,1930,1931,43,483,484,514,513,0,499,500,531,530,1932,1933,1934,1935,43,484,485,515,514,0,500,501,532,531,1936,1937,1938,1939,43,485,486,516,515,0,501,502,533,532,1940,1941,1942,1943,43,486,487,517,516,0,502,503,534,533,1944,1945,1946,1947,43,487,488,518,517,0,503,504,535,534,1948,1949,1950,1951,43,488,489,519,518,0,504,505,536,535,1952,1953,1954,1955,43,489,490,520,519,0,505,506,537,536,1956,1957,1958,1959,43,490,491,521,520,0,506,507,538,537,1960,1961,1962,1963,43,491,492,522,521,0,507,508,539,538,1964,1965,1966,1967,43,492,493,523,522,0,508,509,540,539,1968,1969,1970,1971,43,493,494,524,523,0,509,510,541,540,1972,1973,1974,1975,43,494,495,525,524,0,510,511,542,541,1976,1977,1978,1979,43,495,496,526,525,0,511,512,543,542,1980,1981,1982,1983,43,496,497,527,526,0,512,513,544,543,1984,1985,1986,1987,43,497,498,528,527,0,513,514,545,544,1988,1989,1990,1991,43,498,499,529,528,0,514,515,546,545,1992,1993,1994,1995,43,499,500,530,529,0,515,516,547,546,1996,1997,1998,1999,43,500,501,531,530,0,516,517,548,547,2000,2001,2002,2003,43,501,502,532,531,0,517,518,549,548,2004,2005,2006,2007,43,502,503,533,532,0,518,519,550,549,2008,2009,2010,2011,43,503,504,534,533,0,519,520,551,550,2012,2013,2014,2015,43,504,505,535,534,0,520,521,552,551,2016,2017,2018,2019,43,505,506,536,535,0,521,522,553,552,2020,2021,2022,2023,43,506,507,537,536,0,522,523,554,553,2024,2025,2026,2027,43,507,508,538,537,0,523,524,555,554,2028,2029,2030,2031,43,508,509,539,538,0,524,525,556,555,2032,2033,2034,2035,43,509,480,510,539,0,525,526,557,556,2036,2037,2038,2039,43,510,511,541,540,0,527,528,559,558,2040,2041,2042,2043,43,511,512,542,541,0,528,529,560,559,2044,2045,2046,2047,43,512,513,543,542,0,529,530,561,560,2048,2049,2050,2051,43,513,514,544,543,0,530,531,562,561,2052,2053,2054,2055,43,514,515,545,544,0,531,532,563,562,2056,2057,2058,2059,43,515,516,546,545,0,532,533,564,563,2060,2061,2062,2063,43,516,517,547,546,0,533,534,565,564,2064,2065,2066,2067,43,517,518,548,547,0,534,535,566,565,2068,2069,2070,2071,43,518,519,549,548,0,535,536,567,566,2072,2073,2074,2075,43,519,520,550,549,0,536,537,568,567,2076,2077,2078,2079,43,520,521,551,550,0,537,538,569,568,2080,2081,2082,2083,43,521,522,552,551,0,538,539,570,569,2084,2085,2086,2087,43,522,523,553,552,0,539,540,571,570,2088,2089,2090,2091,43,523,524,554,553,0,540,541,572,571,2092,2093,2094,2095,43,524,525,555,554,0,541,542,573,572,2096,2097,2098,2099,43,525,526,556,555,0,542,543,574,573,2100,2101,2102,2103,43,526,527,557,556,0,543,544,575,574,2104,2105,2106,2107,43,527,528,558,557,0,544,545,576,575,2108,2109,2110,2111,43,528,529,559,558,0,545,546,577,576,2112,2113,2114,2115,43,529,530,560,559,0,546,547,578,577,2116,2117,2118,2119,43,530,531,561,560,0,547,548,579,578,2120,2121,2122,2123,43,531,532,562,561,0,548,549,580,579,2124,2125,2126,2127,43,532,533,563,562,0,549,550,581,580,2128,2129,2130,2131,43,533,534,564,563,0,550,551,582,581,2132,2133,2134,2135,43,534,535,565,564,0,551,552,583,582,2136,2137,2138,2139,43,535,536,566,565,0,552,553,584,583,2140,2141,2142,2143,43,536,537,567,566,0,553,554,585,584,2144,2145,2146,2147,43,537,538,568,567,0,554,555,586,585,2148,2149,2150,2151,43,538,539,569,568,0,555,556,587,586,2152,2153,2154,2155,43,539,510,540,569,0,556,557,588,587,2156,2157,2158,2159,43,540,541,571,570,0,558,559,590,589,2160,2161,2162,2163,43,541,542,572,571,0,559,560,591,590,2164,2165,2166,2167,43,542,543,573,572,0,560,561,592,591,2168,2169,2170,2171,43,543,544,574,573,0,561,562,593,592,2172,2173,2174,2175,43,544,545,575,574,0,562,563,594,593,2176,2177,2178,2179,43,545,546,576,575,0,563,564,595,594,2180,2181,2182,2183,43,546,547,577,576,0,564,565,596,595,2184,2185,2186,2187,43,547,548,578,577,0,565,566,597,596,2188,2189,2190,2191,43,548,549,579,578,0,566,567,598,597,2192,2193,2194,2195,43,549,550,580,579,0,567,568,599,598,2196,2197,2198,2199,43,550,551,581,580,0,568,569,600,599,2200,2201,2202,2203,43,551,552,582,581,0,569,570,601,600,2204,2205,2206,2207,43,552,553,583,582,0,570,571,602,601,2208,2209,2210,2211,43,553,554,584,583,0,571,572,603,602,2212,2213,2214,2215,43,554,555,585,584,0,572,573,604,603,2216,2217,2218,2219,43,555,556,586,585,0,573,574,605,604,2220,2221,2222,2223,43,556,557,587,586,0,574,575,606,605,2224,2225,2226,2227,43,557,558,588,587,0,575,576,607,606,2228,2229,2230,2231,43,558,559,589,588,0,576,577,608,607,2232,2233,2234,2235,43,559,560,590,589,0,577,578,609,608,2236,2237,2238,2239,43,560,561,591,590,0,578,579,610,609,2240,2241,2242,2243,43,561,562,592,591,0,579,580,611,610,2244,2245,2246,2247,43,562,563,593,592,0,580,581,612,611,2248,2249,2250,2251,43,563,564,594,593,0,581,582,613,612,2252,2253,2254,2255,43,564,565,595,594,0,582,583,614,613,2256,2257,2258,2259,43,565,566,596,595,0,583,584,615,614,2260,2261,2262,2263,43,566,567,597,596,0,584,585,616,615,2264,2265,2266,2267,43,567,568,598,597,0,585,586,617,616,2268,2269,2270,2271,43,568,569,599,598,0,586,587,618,617,2272,2273,2274,2275,43,569,540,570,599,0,587,588,619,618,2276,2277,2278,2279,43,570,571,601,600,0,589,590,621,620,2280,2281,2282,2283,43,571,572,602,601,0,590,591,622,621,2284,2285,2286,2287,43,572,573,603,602,0,591,592,623,622,2288,2289,2290,2291,43,573,574,604,603,0,592,593,624,623,2292,2293,2294,2295,43,574,575,605,604,0,593,594,625,624,2296,2297,2298,2299,43,575,576,606,605,0,594,595,626,625,2300,2301,2302,2303,43,576,577,607,606,0,595,596,627,626,2304,2305,2306,2307,43,577,578,608,607,0,596,597,628,627,2308,2309,2310,2311,43,578,579,609,608,0,597,598,629,628,2312,2313,2314,2315,43,579,580,610,609,0,598,599,630,629,2316,2317,2318,2319,43,580,581,611,610,0,599,600,631,630,2320,2321,2322,2323,43,581,582,612,611,0,600,601,632,631,2324,2325,2326,2327,43,582,583,613,612,0,601,602,633,632,2328,2329,2330,2331,43,583,584,614,613,0,602,603,634,633,2332,2333,2334,2335,43,584,585,615,614,0,603,604,635,634,2336,2337,2338,2339,43,585,586,616,615,0,604,605,636,635,2340,2341,2342,2343,43,586,587,617,616,0,605,606,637,636,2344,2345,2346,2347,43,587,588,618,617,0,606,607,638,637,2348,2349,2350,2351,43,588,589,619,618,0,607,608,639,638,2352,2353,2354,2355,43,589,590,620,619,0,608,609,640,639,2356,2357,2358,2359,43,590,591,621,620,0,609,610,641,640,2360,2361,2362,2363,43,591,592,622,621,0,610,611,642,641,2364,2365,2366,2367,43,592,593,623,622,0,611,612,643,642,2368,2369,2370,2371,43,593,594,624,623,0,612,613,644,643,2372,2373,2374,2375,43,594,595,625,624,0,613,614,645,644,2376,2377,2378,2379,43,595,596,626,625,0,614,615,646,645,2380,2381,2382,2383,43,596,597,627,626,0,615,616,647,646,2384,2385,2386,2387,43,597,598,628,627,0,616,617,648,647,2388,2389,2390,2391,43,598,599,629,628,0,617,618,649,648,2392,2393,2394,2395,43,599,570,600,629,0,618,619,650,649,2396,2397,2398,2399,43,600,601,631,630,0,620,621,652,651,2400,2401,2402,2403,43,601,602,632,631,0,621,622,653,652,2404,2405,2406,2407,43,602,603,633,632,0,622,623,654,653,2408,2409,2410,2411,43,603,604,634,633,0,623,624,655,654,2412,2413,2414,2415,43,604,605,635,634,0,624,625,656,655,2416,2417,2418,2419,43,605,606,636,635,0,625,626,657,656,2420,2421,2422,2423,43,606,607,637,636,0,626,627,658,657,2424,2425,2426,2427,43,607,608,638,637,0,627,628,659,658,2428,2429,2430,2431,43,608,609,639,638,0,628,629,660,659,2432,2433,2434,2435,43,609,610,640,639,0,629,630,661,660,2436,2437,2438,2439,43,610,611,641,640,0,630,631,662,661,2440,2441,2442,2443,43,611,612,642,641,0,631,632,663,662,2444,2445,2446,2447,43,612,613,643,642,0,632,633,664,663,2448,2449,2450,2451,43,613,614,644,643,0,633,634,665,664,2452,2453,2454,2455,43,614,615,645,644,0,634,635,666,665,2456,2457,2458,2459,43,615,616,646,645,0,635,636,667,666,2460,2461,2462,2463,43,616,617,647,646,0,636,637,668,667,2464,2465,2466,2467,43,617,618,648,647,0,637,638,669,668,2468,2469,2470,2471,43,618,619,649,648,0,638,639,670,669,2472,2473,2474,2475,43,619,620,650,649,0,639,640,671,670,2476,2477,2478,2479,43,620,621,651,650,0,640,641,672,671,2480,2481,2482,2483,43,621,622,652,651,0,641,642,673,672,2484,2485,2486,2487,43,622,623,653,652,0,642,643,674,673,2488,2489,2490,2491,43,623,624,654,653,0,643,644,675,674,2492,2493,2494,2495,43,624,625,655,654,0,644,645,676,675,2496,2497,2498,2499,43,625,626,656,655,0,645,646,677,676,2500,2501,2502,2503,43,626,627,657,656,0,646,647,678,677,2504,2505,2506,2507,43,627,628,658,657,0,647,648,679,678,2508,2509,2510,2511,43,628,629,659,658,0,648,649,680,679,2512,2513,2514,2515,43,629,600,630,659,0,649,650,681,680,2516,2517,2518,2519,43,630,631,661,660,0,651,652,683,682,2520,2521,2522,2523,43,631,632,662,661,0,652,653,684,683,2524,2525,2526,2527,43,632,633,663,662,0,653,654,685,684,2528,2529,2530,2531,43,633,634,664,663,0,654,655,686,685,2532,2533,2534,2535,43,634,635,665,664,0,655,656,687,686,2536,2537,2538,2539,43,635,636,666,665,0,656,657,688,687,2540,2541,2542,2543,43,636,637,667,666,0,657,658,689,688,2544,2545,2546,2547,43,637,638,668,667,0,658,659,690,689,2548,2549,2550,2551,43,638,639,669,668,0,659,660,691,690,2552,2553,2554,2555,43,639,640,670,669,0,660,661,692,691,2556,2557,2558,2559,43,640,641,671,670,0,661,662,693,692,2560,2561,2562,2563,43,641,642,672,671,0,662,663,694,693,2564,2565,2566,2567,43,642,643,673,672,0,663,664,695,694,2568,2569,2570,2571,43,643,644,674,673,0,664,665,696,695,2572,2573,2574,2575,43,644,645,675,674,0,665,666,697,696,2576,2577,2578,2579,43,645,646,676,675,0,666,667,698,697,2580,2581,2582,2583,43,646,647,677,676,0,667,668,699,698,2584,2585,2586,2587,43,647,648,678,677,0,668,669,700,699,2588,2589,2590,2591,43,648,649,679,678,0,669,670,701,700,2592,2593,2594,2595,43,649,650,680,679,0,670,671,702,701,2596,2597,2598,2599,43,650,651,681,680,0,671,672,703,702,2600,2601,2602,2603,43,651,652,682,681,0,672,673,704,703,2604,2605,2606,2607,43,652,653,683,682,0,673,674,705,704,2608,2609,2610,2611,43,653,654,684,683,0,674,675,706,705,2612,2613,2614,2615,43,654,655,685,684,0,675,676,707,706,2616,2617,2618,2619,43,655,656,686,685,0,676,677,708,707,2620,2621,2622,2623,43,656,657,687,686,0,677,678,709,708,2624,2625,2626,2627,43,657,658,688,687,0,678,679,710,709,2628,2629,2630,2631,43,658,659,689,688,0,679,680,711,710,2632,2633,2634,2635,43,659,630,660,689,0,680,681,712,711,2636,2637,2638,2639,43,660,661,691,690,0,682,683,714,713,2640,2641,2642,2643,43,661,662,692,691,0,683,684,715,714,2644,2645,2646,2647,43,662,663,693,692,0,684,685,716,715,2648,2649,2650,2651,43,663,664,694,693,0,685,686,717,716,2652,2653,2654,2655,43,664,665,695,694,0,686,687,718,717,2656,2657,2658,2659,43,665,666,696,695,0,687,688,719,718,2660,2661,2662,2663,43,666,667,697,696,0,688,689,720,719,2664,2665,2666,2667,43,667,668,698,697,0,689,690,721,720,2668,2669,2670,2671,43,668,669,699,698,0,690,691,722,721,2672,2673,2674,2675,43,669,670,700,699,0,691,692,723,722,2676,2677,2678,2679,43,670,671,701,700,0,692,693,724,723,2680,2681,2682,2683,43,671,672,702,701,0,693,694,725,724,2684,2685,2686,2687,43,672,673,703,702,0,694,695,726,725,2688,2689,2690,2691,43,673,674,704,703,0,695,696,727,726,2692,2693,2694,2695,43,674,675,705,704,0,696,697,728,727,2696,2697,2698,2699,43,675,676,706,705,0,697,698,729,728,2700,2701,2702,2703,43,676,677,707,706,0,698,699,730,729,2704,2705,2706,2707,43,677,678,708,707,0,699,700,731,730,2708,2709,2710,2711,43,678,679,709,708,0,700,701,732,731,2712,2713,2714,2715,43,679,680,710,709,0,701,702,733,732,2716,2717,2718,2719,43,680,681,711,710,0,702,703,734,733,2720,2721,2722,2723,43,681,682,712,711,0,703,704,735,734,2724,2725,2726,2727,43,682,683,713,712,0,704,705,736,735,2728,2729,2730,2731,43,683,684,714,713,0,705,706,737,736,2732,2733,2734,2735,43,684,685,715,714,0,706,707,738,737,2736,2737,2738,2739,43,685,686,716,715,0,707,708,739,738,2740,2741,2742,2743,43,686,687,717,716,0,708,709,740,739,2744,2745,2746,2747,43,687,688,718,717,0,709,710,741,740,2748,2749,2750,2751,43,688,689,719,718,0,710,711,742,741,2752,2753,2754,2755,43,689,660,690,719,0,711,712,743,742,2756,2757,2758,2759,43,720,721,725,724,0,744,745,750,749,2760,2761,2762,2763,43,721,722,726,725,0,745,746,751,750,2764,2765,2766,2767,43,722,723,727,726,0,746,747,752,751,2768,2769,2770,2771,43,723,720,724,727,0,747,748,753,752,2772,2773,2774,2775,43,724,725,729,728,0,749,750,755,754,2776,2777,2778,2779,43,725,726,730,729,0,750,751,756,755,2780,2781,2782,2783,43,726,727,731,730,0,751,752,757,756,2784,2785,2786,2787,43,727,724,728,731,0,752,753,758,757,2788,2789,2790,2791,43,728,729,733,732,0,754,755,760,759,2792,2793,2794,2795,43,729,730,734,733,0,755,756,761,760,2796,2797,2798,2799,43,730,731,735,734,0,756,757,762,761,2800,2801,2802,2803,43,731,728,732,735,0,757,758,763,762,2804,2805,2806,2807,43,732,733,737,736,0,759,760,765,764,2808,2809,2810,2811,43,733,734,738,737,0,760,761,766,765,2812,2813,2814,2815,43,734,735,739,738,0,761,762,767,766,2816,2817,2818,2819,43,735,732,736,739,0,762,763,768,767,2820,2821,2822,2823,43,736,737,741,740,0,764,765,770,769,2824,2825,2826,2827,43,737,738,742,741,0,765,766,771,770,2828,2829,2830,2831,43,738,739,743,742,0,766,767,772,771,2832,2833,2834,2835,43,739,736,740,743,0,767,768,773,772,2836,2837,2838,2839,43,740,741,745,744,0,769,770,775,774,2840,2841,2842,2843,43,741,742,746,745,0,770,771,776,775,2844,2845,2846,2847,43,742,743,747,746,0,771,772,777,776,2848,2849,2850,2851,43,743,740,744,747,0,772,773,778,777,2852,2853,2854,2855,43,744,745,749,748,0,774,775,780,779,2856,2857,2858,2859,43,745,746,750,749,0,775,776,781,780,2860,2861,2862,2863,43,746,747,751,750,0,776,777,782,781,2864,2865,2866,2867,43,747,744,748,751,0,777,778,783,782,2868,2869,2870,2871,43,748,749,753,752,0,779,780,785,784,2872,2873,2874,2875,43,749,750,754,753,0,780,781,786,785,2876,2877,2878,2879,43,750,751,755,754,0,781,782,787,786,2880,2881,2882,2883,43,751,748,752,755,0,782,783,788,787,2884,2885,2886,2887,43,752,753,757,756,0,784,785,790,789,2888,2889,2890,2891,43,753,754,758,757,0,785,786,791,790,2892,2893,2894,2895,43,754,755,759,758,0,786,787,792,791,2896,2897,2898,2899,43,755,752,756,759,0,787,788,793,792,2900,2901,2902,2903,43,756,757,761,760,0,789,790,795,794,2904,2905,2906,2907,43,757,758,762,761,0,790,791,796,795,2908,2909,2910,2911,43,758,759,763,762,0,791,792,797,796,2912,2913,2914,2915,43,759,756,760,763,0,792,793,798,797,2916,2917,2918,2919,43,760,761,765,764,0,794,795,800,799,2920,2921,2922,2923,43,761,762,766,765,0,795,796,801,800,2924,2925,2926,2927,43,762,763,767,766,0,796,797,802,801,2928,2929,2930,2931,43,763,760,764,767,0,797,798,803,802,2932,2933,2934,2935,43,764,765,769,768,0,799,800,805,804,2936,2937,2938,2939,43,765,766,770,769,0,800,801,806,805,2940,2941,2942,2943,43,766,767,771,770,0,801,802,807,806,2944,2945,2946,2947,43,767,764,768,771,0,802,803,808,807,2948,2949,2950,2951,43,768,769,773,772,0,804,805,810,809,2952,2953,2954,2955,43,769,770,774,773,0,805,806,811,810,2956,2957,2958,2959,43,770,771,775,774,0,806,807,812,811,2960,2961,2962,2963,43,771,768,772,775,0,807,808,813,812,2964,2965,2966,2967,43,772,773,777,776,0,809,810,815,814,2968,2969,2970,2971,43,773,774,778,777,0,810,811,816,815,2972,2973,2974,2975,43,774,775,779,778,0,811,812,817,816,2976,2977,2978,2979,43,775,772,776,779,0,812,813,818,817,2980,2981,2982,2983,43,776,777,781,780,0,814,815,820,819,2984,2985,2986,2987,43,777,778,782,781,0,815,816,821,820,2988,2989,2990,2991,43,778,779,783,782,0,816,817,822,821,2992,2993,2994,2995,43,779,776,780,783,0,817,818,823,822,2996,2997,2998,2999,43,780,781,785,784,0,819,820,825,824,3000,3001,3002,3003,43,781,782,786,785,0,820,821,826,825,3004,3005,3006,3007,43,782,783,787,786,0,821,822,827,826,3008,3009,3010,3011,43,783,780,784,787,0,822,823,828,827,3012,3013,3014,3015,43,788,789,793,792,0,829,830,835,834,3016,3017,3018,3019,43,789,790,794,793,0,830,831,836,835,3020,3021,3022,3023,43,790,791,795,794,0,831,832,837,836,3024,3025,3026,3027,43,791,788,792,795,0,832,833,838,837,3028,3029,3030,3031,43,792,793,797,796,0,834,835,840,839,3032,3033,3034,3035,43,793,794,798,797,0,835,836,841,840,3036,3037,3038,3039,43,794,795,799,798,0,836,837,842,841,3040,3041,3042,3043,43,795,792,796,799,0,837,838,843,842,3044,3045,3046,3047,43,796,797,801,800,0,839,840,845,844,3048,3049,3050,3051,43,797,798,802,801,0,840,841,846,845,3052,3053,3054,3055,43,798,799,803,802,0,841,842,847,846,3056,3057,3058,3059,43,799,796,800,803,0,842,843,848,847,3060,3061,3062,3063,43,800,801,805,804,0,844,845,850,849,3064,3065,3066,3067,43,801,802,806,805,0,845,846,851,850,3068,3069,3070,3071,43,802,803,807,806,0,846,847,852,851,3072,3073,3074,3075,43,803,800,804,807,0,847,848,853,852,3076,3077,3078,3079,43,804,805,809,808,0,849,850,855,854,3080,3081,3082,3083,43,805,806,810,809,0,850,851,856,855,3084,3085,3086,3087,43,806,807,811,810,0,851,852,857,856,3088,3089,3090,3091,43,807,804,808,811,0,852,853,858,857,3092,3093,3094,3095,43,808,809,813,812,0,854,855,860,859,3096,3097,3098,3099,43,809,810,814,813,0,855,856,861,860,3100,3101,3102,3103,43,810,811,815,814,0,856,857,862,861,3104,3105,3106,3107,43,811,808,812,815,0,857,858,863,862,3108,3109,3110,3111,43,812,813,817,816,0,859,860,865,864,3112,3113,3114,3115,43,813,814,818,817,0,860,861,866,865,3116,3117,3118,3119,43,814,815,819,818,0,861,862,867,866,3120,3121,3122,3123,43,815,812,816,819,0,862,863,868,867,3124,3125,3126,3127,43,816,817,821,820,0,864,865,870,869,3128,3129,3130,3131,43,817,818,822,821,0,865,866,871,870,3132,3133,3134,3135,43,818,819,823,822,0,866,867,872,871,3136,3137,3138,3139,43,819,816,820,823,0,867,868,873,872,3140,3141,3142,3143,43,820,821,825,824,0,869,870,875,874,3144,3145,3146,3147,43,821,822,826,825,0,870,871,876,875,3148,3149,3150,3151,43,822,823,827,826,0,871,872,877,876,3152,3153,3154,3155,43,823,820,824,827,0,872,873,878,877,3156,3157,3158,3159,43,824,825,829,828,0,874,875,880,879,3160,3161,3162,3163,43,825,826,830,829,0,875,876,881,880,3164,3165,3166,3167,43,826,827,831,830,0,876,877,882,881,3168,3169,3170,3171,43,827,824,828,831,0,877,878,883,882,3172,3173,3174,3175,43,828,829,833,832,0,879,880,885,884,3176,3177,3178,3179,43,829,830,834,833,0,880,881,886,885,3180,3181,3182,3183,43,830,831,835,834,0,881,882,887,886,3184,3185,3186,3187,43,831,828,832,835,0,882,883,888,887,3188,3189,3190,3191,43,832,833,837,836,0,884,885,890,889,3192,3193,3194,3195,43,833,834,838,837,0,885,886,891,890,3196,3197,3198,3199,43,834,835,839,838,0,886,887,892,891,3200,3201,3202,3203,43,835,832,836,839,0,887,888,893,892,3204,3205,3206,3207,43,836,837,841,840,0,889,890,895,894,3208,3209,3210,3211,43,837,838,842,841,0,890,891,896,895,3212,3213,3214,3215,43,838,839,843,842,0,891,892,897,896,3216,3217,3218,3219,43,839,836,840,843,0,892,893,898,897,3220,3221,3222,3223,43,840,841,845,844,0,894,895,900,899,3224,3225,3226,3227,43,841,842,846,845,0,895,896,901,900,3228,3229,3230,3231,43,842,843,847,846,0,896,897,902,901,3232,3233,3234,3235,43,843,840,844,847,0,897,898,903,902,3236,3237,3238,3239,43,848,849,853,852,0,904,905,910,909,3240,3241,3242,3243,43,849,850,854,853,0,905,906,911,910,3244,3245,3246,3247,43,850,851,855,854,0,906,907,912,911,3248,3249,3250,3251,43,851,848,852,855,0,907,908,913,912,3252,3253,3254,3255,43,852,853,857,856,0,909,910,915,914,3256,3257,3258,3259,43,853,854,858,857,0,910,911,916,915,3260,3261,3262,3263,43,854,855,859,858,0,911,912,917,916,3264,3265,3266,3267,43,855,852,856,859,0,912,913,918,917,3268,3269,3270,3271,43,856,857,861,860,0,914,915,920,919,3272,3273,3274,3275,43,857,858,862,861,0,915,916,921,920,3276,3277,3278,3279,43,858,859,863,862,0,916,917,922,921,3280,3281,3282,3283,43,859,856,860,863,0,917,918,923,922,3284,3285,3286,3287,43,860,861,865,864,0,919,920,925,924,3288,3289,3290,3291,43,861,862,866,865,0,920,921,926,925,3292,3293,3294,3295,43,862,863,867,866,0,921,922,927,926,3296,3297,3298,3299,43,863,860,864,867,0,922,923,928,927,3300,3301,3302,3303,43,864,865,869,868,0,924,925,930,929,3304,3305,3306,3307,43,865,866,870,869,0,925,926,931,930,3308,3309,3310,3311,43,866,867,871,870,0,926,927,932,931,3312,3313,3314,3315,43,867,864,868,871,0,927,928,933,932,3316,3317,3318,3319,43,868,869,873,872,0,929,930,935,934,3320,3321,3322,3323,43,869,870,874,873,0,930,931,936,935,3324,3325,3326,3327,43,870,871,875,874,0,931,932,937,936,3328,3329,3330,3331,43,871,868,872,875,0,932,933,938,937,3332,3333,3334,3335,43,872,873,877,876,0,934,935,940,939,3336,3337,3338,3339,43,873,874,878,877,0,935,936,941,940,3340,3341,3342,3343,43,874,875,879,878,0,936,937,942,941,3344,3345,3346,3347,43,875,872,876,879,0,937,938,943,942,3348,3349,3350,3351,43,876,877,881,880,0,939,940,945,944,3352,3353,3354,3355,43,877,878,882,881,0,940,941,946,945,3356,3357,3358,3359,43,878,879,883,882,0,941,942,947,946,3360,3361,3362,3363,43,879,876,880,883,0,942,943,948,947,3364,3365,3366,3367,43,880,881,885,884,0,944,945,950,949,3368,3369,3370,3371,43,881,882,886,885,0,945,946,951,950,3372,3373,3374,3375,43,882,883,887,886,0,946,947,952,951,3376,3377,3378,3379,43,883,880,884,887,0,947,948,953,952,3380,3381,3382,3383,43,884,885,889,888,0,949,950,955,954,3384,3385,3386,3387,43,885,886,890,889,0,950,951,956,955,3388,3389,3390,3391,43,886,887,891,890,0,951,952,957,956,3392,3393,3394,3395,43,887,884,888,891,0,952,953,958,957,3396,3397,3398,3399,43,888,889,893,892,0,954,955,960,959,3400,3401,3402,3403,43,889,890,894,893,0,955,956,961,960,3404,3405,3406,3407,43,890,891,895,894,0,956,957,962,961,3408,3409,3410,3411,43,891,888,892,895,0,957,958,963,962,3412,3413,3414,3415,43,892,893,897,896,0,959,960,965,964,3416,3417,3418,3419,43,893,894,898,897,0,960,961,966,965,3420,3421,3422,3423,43,894,895,899,898,0,961,962,967,966,3424,3425,3426,3427,43,895,892,896,899,0,962,963,968,967,3428,3429,3430,3431,43,896,897,901,900,0,964,965,970,969,3432,3433,3434,3435,43,897,898,902,901,0,965,966,971,970,3436,3437,3438,3439,43,898,899,903,902,0,966,967,972,971,3440,3441,3442,3443,43,899,896,900,903,0,967,968,973,972,3444,3445,3446,3447,43,904,905,909,908,0,974,975,980,979,3448,3449,3450,3451,43,905,906,910,909,0,975,976,981,980,3452,3453,3454,3455,43,906,907,911,910,0,976,977,982,981,3456,3457,3458,3459,43,907,904,908,911,0,977,978,983,982,3460,3461,3462,3463,43,908,909,913,912,0,979,980,985,984,3464,3465,3466,3467,43,909,910,914,913,0,980,981,986,985,3468,3469,3470,3471,43,910,911,915,914,0,981,982,987,986,3472,3473,3474,3475,43,911,908,912,915,0,982,983,988,987,3476,3477,3478,3479,43,912,913,917,916,0,984,985,990,989,3480,3481,3482,3483,43,913,914,918,917,0,985,986,991,990,3484,3485,3486,3487,43,914,915,919,918,0,986,987,992,991,3488,3489,3490,3491,43,915,912,916,919,0,987,988,993,992,3492,3493,3494,3495,43,916,917,921,920,0,989,990,995,994,3496,3497,3498,3499,43,917,918,922,921,0,990,991,996,995,3500,3501,3502,3503,43,918,919,923,922,0,991,992,997,996,3504,3505,3506,3507,43,919,916,920,923,0,992,993,998,997,3508,3509,3510,3511,43,920,921,925,924,0,994,995,1000,999,3512,3513,3514,3515,43,921,922,926,925,0,995,996,1001,1000,3516,3517,3518,3519,43,922,923,927,926,0,996,997,1002,1001,3520,3521,3522,3523,43,923,920,924,927,0,997,998,1003,1002,3524,3525,3526,3527,43,924,925,929,928,0,999,1000,1005,1004,3528,3529,3530,3531,43,925,926,930,929,0,1000,1001,1006,1005,3532,3533,3534,3535,43,926,927,931,930,0,1001,1002,1007,1006,3536,3537,3538,3539,43,927,924,928,931,0,1002,1003,1008,1007,3540,3541,3542,3543,43,928,929,933,932,0,1004,1005,1010,1009,3544,3545,3546,3547,43,929,930,934,933,0,1005,1006,1011,1010,3548,3549,3550,3551,43,930,931,935,934,0,1006,1007,1012,1011,3552,3553,3554,3555,43,931,928,932,935,0,1007,1008,1013,1012,3556,3557,3558,3559,43,932,933,937,936,0,1009,1010,1015,1014,3560,3561,3562,3563,43,933,934,938,937,0,1010,1011,1016,1015,3564,3565,3566,3567,43,934,935,939,938,0,1011,1012,1017,1016,3568,3569,3570,3571,43,935,932,936,939,0,1012,1013,1018,1017,3572,3573,3574,3575,43,936,937,941,940,0,1014,1015,1020,1019,3576,3577,3578,3579,43,937,938,942,941,0,1015,1016,1021,1020,3580,3581,3582,3583,43,938,939,943,942,0,1016,1017,1022,1021,3584,3585,3586,3587,43,939,936,940,943,0,1017,1018,1023,1022,3588,3589,3590,3591,43,940,941,945,944,0,1019,1020,1025,1024,3592,3593,3594,3595,43,941,942,946,945,0,1020,1021,1026,1025,3596,3597,3598,3599,43,942,943,947,946,0,1021,1022,1027,1026,3600,3601,3602,3603,43,943,940,944,947,0,1022,1023,1028,1027,3604,3605,3606,3607,43,944,945,949,948,0,1024,1025,1030,1029,3608,3609,3610,3611,43,945,946,950,949,0,1025,1026,1031,1030,3612,3613,3614,3615,43,946,947,951,950,0,1026,1027,1032,1031,3616,3617,3618,3619,43,947,944,948,951,0,1027,1028,1033,1032,3620,3621,3622,3623,43,948,949,953,952,0,1029,1030,1035,1034,3624,3625,3626,3627,43,949,950,954,953,0,1030,1031,1036,1035,3628,3629,3630,3631,43,950,951,955,954,0,1031,1032,1037,1036,3632,3633,3634,3635,43,951,948,952,955,0,1032,1033,1038,1037,3636,3637,3638,3639,43,952,953,957,956,0,1034,1035,1040,1039,3640,3641,3642,3643,43,953,954,958,957,0,1035,1036,1041,1040,3644,3645,3646,3647,43,954,955,959,958,0,1036,1037,1042,1041,3648,3649,3650,3651,43,955,952,956,959,0,1037,1038,1043,1042,3652,3653,3654,3655,43,960,961,965,964,0,1044,1045,1050,1049,3656,3657,3658,3659,43,961,962,966,965,0,1045,1046,1051,1050,3660,3661,3662,3663,43,962,963,967,966,0,1046,1047,1052,1051,3664,3665,3666,3667,43,963,960,964,967,0,1047,1048,1053,1052,3668,3669,3670,3671,43,964,965,969,968,0,1049,1050,1055,1054,3672,3673,3674,3675,43,965,966,970,969,0,1050,1051,1056,1055,3676,3677,3678,3679,43,966,967,971,970,0,1051,1052,1057,1056,3680,3681,3682,3683,43,967,964,968,971,0,1052,1053,1058,1057,3684,3685,3686,3687,43,968,969,973,972,0,1054,1055,1060,1059,3688,3689,3690,3691,43,969,970,974,973,0,1055,1056,1061,1060,3692,3693,3694,3695,43,970,971,975,974,0,1056,1057,1062,1061,3696,3697,3698,3699,43,971,968,972,975,0,1057,1058,1063,1062,3700,3701,3702,3703,43,972,973,977,976,0,1059,1060,1065,1064,3704,3705,3706,3707,43,973,974,978,977,0,1060,1061,1066,1065,3708,3709,3710,3711,43,974,975,979,978,0,1061,1062,1067,1066,3712,3713,3714,3715,43,975,972,976,979,0,1062,1063,1068,1067,3716,3717,3718,3719,43,976,977,981,980,0,1064,1065,1070,1069,3720,3721,3722,3723,43,977,978,982,981,0,1065,1066,1071,1070,3724,3725,3726,3727,43,978,979,983,982,0,1066,1067,1072,1071,3728,3729,3730,3731,43,979,976,980,983,0,1067,1068,1073,1072,3732,3733,3734,3735,43,980,981,985,984,0,1069,1070,1075,1074,3736,3737,3738,3739,43,981,982,986,985,0,1070,1071,1076,1075,3740,3741,3742,3743,43,982,983,987,986,0,1071,1072,1077,1076,3744,3745,3746,3747,43,983,980,984,987,0,1072,1073,1078,1077,3748,3749,3750,3751,43,984,985,989,988,0,1074,1075,1080,1079,3752,3753,3754,3755,43,985,986,990,989,0,1075,1076,1081,1080,3756,3757,3758,3759,43,986,987,991,990,0,1076,1077,1082,1081,3760,3761,3762,3763,43,987,984,988,991,0,1077,1078,1083,1082,3764,3765,3766,3767,43,988,989,993,992,0,1079,1080,1085,1084,3768,3769,3770,3771,43,989,990,994,993,0,1080,1081,1086,1085,3772,3773,3774,3775,43,990,991,995,994,0,1081,1082,1087,1086,3776,3777,3778,3779,43,991,988,992,995,0,1082,1083,1088,1087,3780,3781,3782,3783,43,992,993,997,996,0,1084,1085,1090,1089,3784,3785,3786,3787,43,993,994,998,997,0,1085,1086,1091,1090,3788,3789,3790,3791,43,994,995,999,998,0,1086,1087,1092,1091,3792,3793,3794,3795,43,995,992,996,999,0,1087,1088,1093,1092,3796,3797,3798,3799,43,996,997,1001,1000,0,1089,1090,1095,1094,3800,3801,3802,3803,43,997,998,1002,1001,0,1090,1091,1096,1095,3804,3805,3806,3807,43,998,999,1003,1002,0,1091,1092,1097,1096,3808,3809,3810,3811,43,999,996,1000,1003,0,1092,1093,1098,1097,3812,3813,3814,3815,43,1000,1001,1005,1004,0,1094,1095,1100,1099,3816,3817,3818,3819,43,1001,1002,1006,1005,0,1095,1096,1101,1100,3820,3821,3822,3823,43,1002,1003,1007,1006,0,1096,1097,1102,1101,3824,3825,3826,3827,43,1003,1000,1004,1007,0,1097,1098,1103,1102,3828,3829,3830,3831,43,1004,1005,1009,1008,0,1099,1100,1105,1104,3832,3833,3834,3835,43,1005,1006,1010,1009,0,1100,1101,1106,1105,3836,3837,3838,3839,43,1006,1007,1011,1010,0,1101,1102,1107,1106,3840,3841,3842,3843,43,1007,1004,1008,1011,0,1102,1103,1108,1107,3844,3845,3846,3847,43,1008,1009,1013,1012,0,1104,1105,1110,1109,3848,3849,3850,3851,43,1009,1010,1014,1013,0,1105,1106,1111,1110,3852,3853,3854,3855,43,1010,1011,1015,1014,0,1106,1107,1112,1111,3856,3857,3858,3859,43,1011,1008,1012,1015,0,1107,1108,1113,1112,3860,3861,3862,3863,43,1012,1013,1017,1016,0,1109,1110,1115,1114,3864,3865,3866,3867,43,1013,1014,1018,1017,0,1110,1111,1116,1115,3868,3869,3870,3871,43,1014,1015,1019,1018,0,1111,1112,1117,1116,3872,3873,3874,3875,43,1015,1012,1016,1019,0,1112,1113,1118,1117,3876,3877,3878,3879,43,1020,1021,1024,1023,0,1119,1120,1124,1123,3880,3881,3882,3883,43,1021,1022,1025,1024,0,1120,1121,1125,1124,3884,3885,3886,3887,43,1022,1020,1023,1025,0,1121,1122,1126,1125,3888,3889,3890,3891,43,1023,1024,1027,1026,0,1123,1124,1128,1127,3892,3893,3894,3895,43,1024,1025,1028,1027,0,1124,1125,1129,1128,3896,3897,3898,3899,43,1025,1023,1026,1028,0,1125,1126,1130,1129,3900,3901,3902,3903,43,1026,1027,1030,1029,0,1127,1128,1132,1131,3904,3905,3906,3907,43,1027,1028,1031,1030,0,1128,1129,1133,1132,3908,3909,3910,3911,43,1028,1026,1029,1031,0,1129,1130,1134,1133,3912,3913,3914,3915,43,1029,1030,1033,1032,0,1131,1132,1136,1135,3916,3917,3918,3919,43,1030,1031,1034,1033,0,1132,1133,1137,1136,3920,3921,3922,3923,43,1031,1029,1032,1034,0,1133,1134,1138,1137,3924,3925,3926,3927,43,1032,1033,1036,1035,0,1135,1136,1140,1139,3928,3929,3930,3931,43,1033,1034,1037,1036,0,1136,1137,1141,1140,3932,3933,3934,3935,43,1034,1032,1035,1037,0,1137,1138,1142,1141,3936,3937,3938,3939,43,1038,1039,1042,1041,0,1143,1144,1148,1147,3940,3941,3942,3943,43,1039,1040,1043,1042,0,1144,1145,1149,1148,3944,3945,3946,3947,43,1040,1038,1041,1043,0,1145,1146,1150,1149,3948,3949,3950,3951,43,1041,1042,1045,1044,0,1147,1148,1152,1151,3952,3953,3954,3955,43,1042,1043,1046,1045,0,1148,1149,1153,1152,3956,3957,3958,3959,43,1043,1041,1044,1046,0,1149,1150,1154,1153,3960,3961,3962,3963,43,1044,1045,1048,1047,0,1151,1152,1156,1155,3964,3965,3966,3967,43,1045,1046,1049,1048,0,1152,1153,1157,1156,3968,3969,3970,3971,43,1046,1044,1047,1049,0,1153,1154,1158,1157,3972,3973,3974,3975,43,1047,1048,1051,1050,0,1155,1156,1160,1159,3976,3977,3978,3979,43,1048,1049,1052,1051,0,1156,1157,1161,1160,3980,3981,3982,3983,43,1049,1047,1050,1052,0,1157,1158,1162,1161,3984,3985,3986,3987,43,1053,1054,1057,1056,0,1163,1164,1168,1167,3988,3989,3990,3991,43,1054,1055,1058,1057,0,1164,1165,1169,1168,3992,3993,3994,3995,43,1055,1053,1056,1058,0,1165,1166,1170,1169,3996,3997,3998,3999,43,1056,1057,1060,1059,0,1167,1168,1172,1171,4000,4001,4002,4003,43,1057,1058,1061,1060,0,1168,1169,1173,1172,4004,4005,4006,4007,43,1058,1056,1059,1061,0,1169,1170,1174,1173,4008,4009,4010,4011,43,1059,1060,1063,1062,0,1171,1172,1176,1175,4012,4013,4014,4015,43,1060,1061,1064,1063,0,1172,1173,1177,1176,4016,4017,4018,4019,43,1061,1059,1062,1064,0,1173,1174,1178,1177,4020,4021,4022,4023,43,1062,1063,1066,1065,0,1175,1176,1180,1179,4024,4025,4026,4027,43,1063,1064,1067,1066,0,1176,1177,1181,1180,4028,4029,4030,4031,43,1064,1062,1065,1067,0,1177,1178,1182,1181,4032,4033,4034,4035,43,1068,1069,1072,1071,0,1183,1184,1188,1187,4036,4037,4038,4039,43,1069,1070,1073,1072,0,1184,1185,1189,1188,4040,4041,4042,4043,43,1070,1068,1071,1073,0,1185,1186,1190,1189,4044,4045,4046,4047,43,1071,1072,1075,1074,0,1187,1188,1192,1191,4048,4049,4050,4051,43,1072,1073,1076,1075,0,1188,1189,1193,1192,4052,4053,4054,4055,43,1073,1071,1074,1076,0,1189,1190,1194,1193,4056,4057,4058,4059,43,1074,1075,1078,1077,0,1191,1192,1196,1195,4060,4061,4062,4063,43,1075,1076,1079,1078,0,1192,1193,1197,1196,4064,4065,4066,4067,43,1076,1074,1077,1079,0,1193,1194,1198,1197,4068,4069,4070,4071,43,1077,1078,1081,1080,0,1195,1196,1200,1199,4072,4073,4074,4075,43,1078,1079,1082,1081,0,1196,1197,1201,1200,4076,4077,4078,4079,43,1079,1077,1080,1082,0,1197,1198,1202,1201,4080,4081,4082,4083,43,1080,1081,1084,1083,0,1199,1200,1204,1203,4084,4085,4086,4087,43,1081,1082,1085,1084,0,1200,1201,1205,1204,4088,4089,4090,4091,43,1082,1080,1083,1085,0,1201,1202,1206,1205,4092,4093,4094,4095,43,1086,1087,1090,1089,0,1207,1208,1212,1211,4096,4097,4098,4099,43,1087,1088,1091,1090,0,1208,1209,1213,1212,4100,4101,4102,4103,43,1088,1086,1089,1091,0,1209,1210,1214,1213,4104,4105,4106,4107,43,1089,1090,1093,1092,0,1211,1212,1216,1215,4108,4109,4110,4111,43,1090,1091,1094,1093,0,1212,1213,1217,1216,4112,4113,4114,4115,43,1091,1089,1092,1094,0,1213,1214,1218,1217,4116,4117,4118,4119,43,1092,1093,1096,1095,0,1215,1216,1220,1219,4120,4121,4122,4123,43,1093,1094,1097,1096,0,1216,1217,1221,1220,4124,4125,4126,4127,43,1094,1092,1095,1097,0,1217,1218,1222,1221,4128,4129,4130,4131,43,1095,1096,1099,1098,0,1219,1220,1224,1223,4132,4133,4134,4135,43,1096,1097,1100,1099,0,1220,1221,1225,1224,4136,4137,4138,4139,43,1097,1095,1098,1100,0,1221,1222,1226,1225,4140,4141,4142,4143,43,1101,1102,1105,1104,0,1227,1228,1232,1231,4144,4145,4146,4147,43,1102,1103,1106,1105,0,1228,1229,1233,1232,4148,4149,4150,4151,43,1103,1101,1104,1106,0,1229,1230,1234,1233,4152,4153,4154,4155,43,1104,1105,1108,1107,0,1231,1232,1236,1235,4156,4157,4158,4159,43,1105,1106,1109,1108,0,1232,1233,1237,1236,4160,4161,4162,4163,43,1106,1104,1107,1109,0,1233,1234,1238,1237,4164,4165,4166,4167,43,1107,1108,1111,1110,0,1235,1236,1240,1239,4168,4169,4170,4171,43,1108,1109,1112,1111,0,1236,1237,1241,1240,4172,4173,4174,4175,43,1109,1107,1110,1112,0,1237,1238,1242,1241,4176,4177,4178,4179,43,1110,1111,1114,1113,0,1239,1240,1244,1243,4180,4181,4182,4183,43,1111,1112,1115,1114,0,1240,1241,1245,1244,4184,4185,4186,4187,43,1112,1110,1113,1115,0,1241,1242,1246,1245,4188,4189,4190,4191,43,1113,1114,1117,1116,0,1243,1244,1248,1247,4192,4193,4194,4195,43,1114,1115,1118,1117,0,1244,1245,1249,1248,4196,4197,4198,4199,43,1115,1113,1116,1118,0,1245,1246,1250,1249,4200,4201,4202,4203,43,1119,1120,1123,1122,0,1251,1252,1256,1255,4204,4205,4206,4207,43,1120,1121,1124,1123,0,1252,1253,1257,1256,4208,4209,4210,4211,43,1121,1119,1122,1124,0,1253,1254,1258,1257,4212,4213,4214,4215,43,1122,1123,1126,1125,0,1255,1256,1260,1259,4216,4217,4218,4219,43,1123,1124,1127,1126,0,1256,1257,1261,1260,4220,4221,4222,4223,43,1124,1122,1125,1127,0,1257,1258,1262,1261,4224,4225,4226,4227,43,1125,1126,1129,1128,0,1259,1260,1264,1263,4228,4229,4230,4231,43,1126,1127,1130,1129,0,1260,1261,1265,1264,4232,4233,4234,4235,43,1127,1125,1128,1130,0,1261,1262,1266,1265,4236,4237,4238,4239,43,1128,1129,1132,1131,0,1263,1264,1268,1267,4240,4241,4242,4243,43,1129,1130,1133,1132,0,1264,1265,1269,1268,4244,4245,4246,4247,43,1130,1128,1131,1133,0,1265,1266,1270,1269,4248,4249,4250,4251,43,1134,1135,1138,1137,0,1271,1272,1276,1275,4252,4253,4254,4255,43,1135,1136,1139,1138,0,1272,1273,1277,1276,4256,4257,4258,4259,43,1136,1134,1137,1139,0,1273,1274,1278,1277,4260,4261,4262,4263,43,1137,1138,1141,1140,0,1275,1276,1280,1279,4264,4265,4266,4267,43,1138,1139,1142,1141,0,1276,1277,1281,1280,4268,4269,4270,4271,43,1139,1137,1140,1142,0,1277,1278,1282,1281,4272,4273,4274,4275,43,1140,1141,1144,1143,0,1279,1280,1284,1283,4276,4277,4278,4279,43,1141,1142,1145,1144,0,1280,1281,1285,1284,4280,4281,4282,4283,43,1142,1140,1143,1145,0,1281,1282,1286,1285,4284,4285,4286,4287,43,1143,1144,1147,1146,0,1283,1284,1288,1287,4288,4289,4290,4291,43,1144,1145,1148,1147,0,1284,1285,1289,1288,4292,4293,4294,4295,43,1145,1143,1146,1148,0,1285,1286,1290,1289,4296,4297,4298,4299,43,1146,1147,1150,1149,0,1287,1288,1292,1291,4300,4301,4302,4303,43,1147,1148,1151,1150,0,1288,1289,1293,1292,4304,4305,4306,4307,43,1148,1146,1149,1151,0,1289,1290,1294,1293,4308,4309,4310,4311,43,1152,1153,1156,1155,0,1295,1296,1300,1299,4312,4313,4314,4315,43,1153,1154,1157,1156,0,1296,1297,1301,1300,4316,4317,4318,4319,43,1154,1152,1155,1157,0,1297,1298,1302,1301,4320,4321,4322,4323,43,1155,1156,1159,1158,0,1299,1300,1304,1303,4324,4325,4326,4327,43,1156,1157,1160,1159,0,1300,1301,1305,1304,4328,4329,4330,4331,43,1157,1155,1158,1160,0,1301,1302,1306,1305,4332,4333,4334,4335,43,1158,1159,1162,1161,0,1303,1304,1308,1307,4336,4337,4338,4339,43,1159,1160,1163,1162,0,1304,1305,1309,1308,4340,4341,4342,4343,43,1160,1158,1161,1163,0,1305,1306,1310,1309,4344,4345,4346,4347,43,1161,1162,1165,1164,0,1307,1308,1312,1311,4348,4349,4350,4351,43,1162,1163,1166,1165,0,1308,1309,1313,1312,4352,4353,4354,4355,43,1163,1161,1164,1166,0,1309,1310,1314,1313,4356,4357,4358,4359,43,1167,1168,1171,1170,0,1315,1316,1320,1319,4360,4361,4362,4363,43,1168,1169,1172,1171,0,1316,1317,1321,1320,4364,4365,4366,4367,43,1169,1167,1170,1172,0,1317,1318,1322,1321,4368,4369,4370,4371,43,1170,1171,1174,1173,0,1319,1320,1324,1323,4372,4373,4374,4375,43,1171,1172,1175,1174,0,1320,1321,1325,1324,4376,4377,4378,4379,43,1172,1170,1173,1175,0,1321,1322,1326,1325,4380,4381,4382,4383,43,1173,1174,1177,1176,0,1323,1324,1328,1327,4384,4385,4386,4387,43,1174,1175,1178,1177,0,1324,1325,1329,1328,4388,4389,4390,4391,43,1175,1173,1176,1178,0,1325,1326,1330,1329,4392,4393,4394,4395,43,1176,1177,1180,1179,0,1327,1328,1332,1331,4396,4397,4398,4399,43,1177,1178,1181,1180,0,1328,1329,1333,1332,4400,4401,4402,4403,43,1178,1176,1179,1181,0,1329,1330,1334,1333,4404,4405,4406,4407,43,1182,1183,1186,1185,0,1335,1336,1340,1339,4408,4409,4410,4411,43,1183,1184,1187,1186,0,1336,1337,1341,1340,4412,4413,4414,4415,43,1184,1182,1185,1187,0,1337,1338,1342,1341,4416,4417,4418,4419,43,1185,1186,1189,1188,0,1339,1340,1344,1343,4420,4421,4422,4423,43,1186,1187,1190,1189,0,1340,1341,1345,1344,4424,4425,4426,4427,43,1187,1185,1188,1190,0,1341,1342,1346,1345,4428,4429,4430,4431,43,1188,1189,1192,1191,0,1343,1344,1348,1347,4432,4433,4434,4435,43,1189,1190,1193,1192,0,1344,1345,1349,1348,4436,4437,4438,4439,43,1190,1188,1191,1193,0,1345,1346,1350,1349,4440,4441,4442,4443,43,1191,1192,1195,1194,0,1347,1348,1352,1351,4444,4445,4446,4447,43,1192,1193,1196,1195,0,1348,1349,1353,1352,4448,4449,4450,4451,43,1193,1191,1194,1196,0,1349,1350,1354,1353,4452,4453,4454,4455,43,1194,1195,1198,1197,0,1351,1352,1356,1355,4456,4457,4458,4459,43,1195,1196,1199,1198,0,1352,1353,1357,1356,4460,4461,4462,4463,43,1196,1194,1197,1199,0,1353,1354,1358,1357,4464,4465,4466,4467,43,1200,1201,1204,1203,0,1359,1360,1364,1363,4468,4469,4470,4471,43,1201,1202,1205,1204,0,1360,1361,1365,1364,4472,4473,4474,4475,43,1202,1200,1203,1205,0,1361,1362,1366,1365,4476,4477,4478,4479,43,1203,1204,1207,1206,0,1363,1364,1368,1367,4480,4481,4482,4483,43,1204,1205,1208,1207,0,1364,1365,1369,1368,4484,4485,4486,4487,43,1205,1203,1206,1208,0,1365,1366,1370,1369,4488,4489,4490,4491,43,1206,1207,1210,1209,0,1367,1368,1372,1371,4492,4493,4494,4495,43,1207,1208,1211,1210,0,1368,1369,1373,1372,4496,4497,4498,4499,43,1208,1206,1209,1211,0,1369,1370,1374,1373,4500,4501,4502,4503,43,1209,1210,1213,1212,0,1371,1372,1376,1375,4504,4505,4506,4507,43,1210,1211,1214,1213,0,1372,1373,1377,1376,4508,4509,4510,4511,43,1211,1209,1212,1214,0,1373,1374,1378,1377,4512,4513,4514,4515,43,1215,1216,1219,1218,0,1379,1380,1384,1383,4516,4517,4518,4519,43,1216,1217,1220,1219,0,1380,1381,1385,1384,4520,4521,4522,4523,43,1217,1215,1218,1220,0,1381,1382,1386,1385,4524,4525,4526,4527,43,1218,1219,1222,1221,0,1383,1384,1388,1387,4528,4529,4530,4531,43,1219,1220,1223,1222,0,1384,1385,1389,1388,4532,4533,4534,4535,43,1220,1218,1221,1223,0,1385,1386,1390,1389,4536,4537,4538,4539,43,1221,1222,1225,1224,0,1387,1388,1392,1391,4540,4541,4542,4543,43,1222,1223,1226,1225,0,1388,1389,1393,1392,4544,4545,4546,4547,43,1223,1221,1224,1226,0,1389,1390,1394,1393,4548,4549,4550,4551,43,1224,1225,1228,1227,0,1391,1392,1396,1395,4552,4553,4554,4555,43,1225,1226,1229,1228,0,1392,1393,1397,1396,4556,4557,4558,4559,43,1226,1224,1227,1229,0,1393,1394,1398,1397,4560,4561,4562,4563,43,1230,1231,1234,1233,0,1399,1400,1404,1403,4564,4565,4566,4567,43,1231,1232,1235,1234,0,1400,1401,1405,1404,4568,4569,4570,4571,43,1232,1230,1233,1235,0,1401,1402,1406,1405,4572,4573,4574,4575,43,1233,1234,1237,1236,0,1403,1404,1408,1407,4576,4577,4578,4579,43,1234,1235,1238,1237,0,1404,1405,1409,1408,4580,4581,4582,4583,43,1235,1233,1236,1238,0,1405,1406,1410,1409,4584,4585,4586,4587,43,1236,1237,1240,1239,0,1407,1408,1412,1411,4588,4589,4590,4591,43,1237,1238,1241,1240,0,1408,1409,1413,1412,4592,4593,4594,4595,43,1238,1236,1239,1241,0,1409,1410,1414,1413,4596,4597,4598,4599,43,1242,1243,1246,1245,0,1415,1416,1420,1419,4600,4601,4602,4603,43,1243,1244,1247,1246,0,1416,1417,1421,1420,4604,4605,4606,4607,43,1244,1242,1245,1247,0,1417,1418,1422,1421,4608,4609,4610,4611,43,1245,1246,1249,1248,0,1419,1420,1424,1423,4612,4613,4614,4615,43,1246,1247,1250,1249,0,1420,1421,1425,1424,4616,4617,4618,4619,43,1247,1245,1248,1250,0,1421,1422,1426,1425,4620,4621,4622,4623,43,1248,1249,1252,1251,0,1423,1424,1428,1427,4624,4625,4626,4627,43,1249,1250,1253,1252,0,1424,1425,1429,1428,4628,4629,4630,4631,43,1250,1248,1251,1253,0,1425,1426,1430,1429,4632,4633,4634,4635,43,1251,1252,1255,1254,0,1427,1428,1432,1431,4636,4637,4638,4639,43,1252,1253,1256,1255,0,1428,1429,1433,1432,4640,4641,4642,4643,43,1253,1251,1254,1256,0,1429,1430,1434,1433,4644,4645,4646,4647,43,1257,1258,1261,1260,0,1435,1436,1440,1439,4648,4649,4650,4651,43,1258,1259,1262,1261,0,1436,1437,1441,1440,4652,4653,4654,4655,43,1259,1257,1260,1262,0,1437,1438,1442,1441,4656,4657,4658,4659,43,1260,1261,1264,1263,0,1439,1440,1444,1443,4660,4661,4662,4663,43,1261,1262,1265,1264,0,1440,1441,1445,1444,4664,4665,4666,4667,43,1262,1260,1263,1265,0,1441,1442,1446,1445,4668,4669,4670,4671,43,1263,1264,1267,1266,0,1443,1444,1448,1447,4672,4673,4674,4675,43,1264,1265,1268,1267,0,1444,1445,1449,1448,4676,4677,4678,4679,43,1265,1263,1266,1268,0,1445,1446,1450,1449,4680,4681,4682,4683,43,1266,1267,1270,1269,0,1447,1448,1452,1451,4684,4685,4686,4687,43,1267,1268,1271,1270,0,1448,1449,1453,1452,4688,4689,4690,4691,43,1268,1266,1269,1271,0,1449,1450,1454,1453,4692,4693,4694,4695]}',branch_02:'{"metadata":{"formatVersion":0.5,"sourceFile":"branch_02.obj","generatedBy":"three-obj","vertices":1376,"faces":1262,"normals":5048,"colors":0,"uvs":1590,"materials":1},"scale":1,"materials":[],"vertices":[-0.4972,0.0154,-0.0505,-1.6639,0.0472,0.1811,-2.2999,0.0591,0.7567,-0.088,0.002,0.0512,-0.7937,0.0148,0.72,-0.2958,0.0038,0.4103,-0.4695,0.0011,1.0644,-0.3877,-0.0109,1.8548,0.0038,-0.0142,1.1616,0.2798,-0.024,1.296,0.6725,-0.0381,1.4975,0.8615,-0.0398,1.1778,0.635,-0.0257,0.568,0.8246,-0.0302,0.4724,0.9792,-0.0328,0.3144,0.8715,-0.0269,0.0884,1.4447,-0.041,-0.1572,1.2129,-0.0312,-0.3991,1.2539,-0.0284,-0.7301,0.9882,-0.0185,-0.8964,0.5294,-0.0068,-0.7342,0.3686,-0.0008,-0.8357,0.2279,0.0064,-1.0901,-0.0026,0.0096,-0.7908,-0.1864,0.016,-0.8633,-0.4735,0.0268,-1.0543,-0.8164,0.0377,-1.1161,-1.0555,0.0427,-0.9441,-1.0569,0.0387,-0.6054,-0.8625,0.0289,-0.2769,-0.4515,1.5351,-0.0218,-0.7389,1.5564,0.1202,-0.8762,1.567,0.3431,-0.2957,1.5245,0.2262,-0.4206,1.5343,0.4587,-0.239,1.521,0.4297,-0.2104,1.5195,0.6311,-0.1111,1.513,0.8501,0.0605,1.5,0.6814,0.2073,1.4894,0.7034,0.3797,1.477,0.7256,0.4917,1.4685,0.6042,0.4888,1.4681,0.3997,0.5798,1.4613,0.3105,0.6475,1.456,0.1981,0.6339,1.4566,0.0655,0.7734,1.4461,-0.0768,0.6964,1.4513,-0.212,0.6714,1.4526,-0.3653,0.557,1.4606,-0.4674,0.3844,1.4731,-0.4754,0.2754,1.4809,-0.5373,0.1643,1.4887,-0.6223,0.0307,1.4986,-0.5528,-0.0928,1.5075,-0.5598,-0.2389,1.518,-0.5799,-0.3912,1.5292,-0.5528,-0.5065,1.5378,-0.455,-0.5494,1.5414,-0.3062,-0.5293,1.5404,-0.1531,-0.2845,2.9618,-0.0399,-0.5171,2.9743,0.0982,-0.6195,3.003,0.2995,-0.1341,3.0101,0.2129,-0.2189,3.0402,0.4184,-0.0549,3.0451,0.4041,-0.0088,3.0755,0.5762,0.0976,3.1102,0.758,0.2537,3.0942,0.6195,0.3943,3.1026,0.6327,0.555,3.1112,0.6419,0.66,3.0977,0.5315,0.6652,3.0683,0.3521,0.7482,3.0573,0.2628,0.8077,3.0418,0.1532,0.7956,3.0205,0.0272,0.906,3.0029,-0.1092,0.8335,2.9788,-0.236,0.8,2.9541,-0.3771,0.6907,2.9334,-0.4732,0.533,2.9238,-0.4891,0.4243,2.9096,-0.5466,0.3118,2.8926,-0.6192,0.1844,2.8964,-0.5619,0.0635,2.8909,-0.5631,-0.0754,2.8835,-0.571,-0.2163,2.8829,-0.5369,-0.3222,2.8937,-0.4427,-0.3638,2.9145,-0.3055,-0.3496,2.9385,-0.164,-0.5737,4.3361,-0.5194,-0.8351,4.3649,-0.4052,-0.9688,4.4288,-0.2194,-0.45,4.4367,-0.2775,-0.5685,4.5039,-0.0853,-0.3991,4.5111,-0.0925,-0.3777,4.578,0.0776,-0.2949,4.6543,0.2627,-0.1204,4.6154,0.1356,0.0189,4.6325,0.1587,0.1802,4.6504,0.1807,0.2981,4.6191,0.0818,0.3205,4.5536,-0.0912,0.4144,4.5292,-0.1688,0.4875,4.4954,-0.2674,0.4886,4.4494,-0.3867,0.6212,4.4104,-0.5077,0.5618,4.359,-0.6319,0.5465,4.3056,-0.7679,0.4471,4.2622,-0.8652,0.2882,4.2444,-0.8875,0.1867,4.2149,-0.9484,0.0839,4.179,-1.0259,-0.0503,4.19,-0.9771,-0.1704,4.1791,-0.9872,-0.3088,4.1636,-1.0064,-0.4551,4.1631,-0.9853,-0.5728,4.1878,-0.9035,-0.6291,4.2339,-0.7758,-0.6286,4.2861,-0.6405,-0.4298,5.7127,-1.141,-0.6778,5.7481,-1.0308,-0.8038,5.8125,-0.8509,-0.3104,5.8067,-0.897,-0.4203,5.8736,-0.7113,-0.2566,5.8766,-0.7136,-0.2327,5.9388,-0.5487,-0.15,6.0077,-0.3695,0.0195,5.9672,-0.4885,0.1559,5.9791,-0.465,0.3128,5.9909,-0.4433,0.4284,5.9581,-0.5383,0.4527,5.896,-0.7059,0.5444,5.8697,-0.7821,0.6154,5.8351,-0.879,0.6175,5.7911,-0.9968,0.7433,5.7499,-1.1148,0.6863,5.7025,-1.2381,0.6701,5.652,-1.3719,0.5735,5.6134,-1.4693,0.4198,5.6002,-1.495,0.32,5.5748,-1.5565,0.2185,5.5438,-1.6331,0.0871,5.5574,-1.5885,-0.031,5.5507,-1.5993,-0.1664,5.5405,-1.6181,-0.3088,5.5447,-1.5978,-0.4236,5.5717,-1.5185,-0.4796,5.617,-1.3939,-0.4809,5.6666,-1.2611,-0.6227,7.0908,-1.544,-0.955,7.1053,-1.4181,-1.1298,7.1802,-1.2049,-0.4772,7.2091,-1.3271,-0.6452,7.2908,-1.1012,-0.4513,7.2995,-1.1372,-0.4499,7.3921,-0.9356,-0.3726,7.5049,-0.7114,-0.1825,7.4506,-0.8838,-0.0364,7.4822,-0.8563,0.1388,7.5194,-0.825,0.2599,7.4821,-0.9408,0.2615,7.3898,-1.1425,0.3607,7.3669,-1.2208,0.4385,7.3306,-1.322,0.4304,7.2732,-1.4449,0.5976,7.2356,-1.5744,0.5255,7.1681,-1.7013,0.5164,7.1002,-1.847,0.4061,7.0418,-1.9431,0.2253,7.0173,-1.9452,0.1223,6.9769,-2.0041,0.0204,6.9243,-2.0899,-0.1189,6.9386,-2.0192,-0.2402,6.9175,-2.0308,-0.3861,6.8854,-2.0594,-0.5442,6.8728,-2.042,-0.6689,6.8973,-1.9532,-0.7193,6.9553,-1.8123,-0.7026,7.024,-1.6671,-0.7608,8.3855,-2.4166,-0.8795,8.4297,-2.333,-0.9366,8.4899,-2.2143,-0.7068,8.5107,-2.1618,-0.7347,8.5691,-2.0453,-0.6279,8.5894,-1.9994,-0.5795,8.6384,-1.8983,-0.5001,8.6867,-1.7974,-0.368,8.6697,-1.8255,-0.254,8.6765,-1.8066,-0.1319,8.678,-1.798,-0.0265,8.6499,-1.8497,0.0369,8.6012,-1.945,0.1182,8.5683,-2.0077,0.1822,8.5277,-2.0865,0.2067,8.4798,-2.1819,0.2731,8.4324,-2.2745,0.2492,8.3814,-2.3783,0.2317,8.3299,-2.4829,0.1673,8.2869,-2.5726,0.0659,8.261,-2.6296,-0.0191,8.2322,-2.6914,-0.1105,8.2049,-2.7508,-0.2233,8.207,-2.7517,-0.3299,8.2031,-2.7645,-0.4429,8.2025,-2.7709,-0.5571,8.2148,-2.7513,-0.6561,8.2442,-2.6966,-0.7238,8.2876,-2.6124,-0.7591,8.3364,-2.5155,-0.5479,9.7869,-2.9289,-0.7388,9.8032,-2.8398,-0.8432,9.8361,-2.6898,-0.4805,9.8514,-2.6648,-0.5634,9.8855,-2.5124,-0.4302,9.8959,-2.4831,-0.4073,9.9297,-2.3432,-0.3407,9.9671,-2.1931,-0.1844,9.9544,-2.2633,-0.0631,9.9642,-2.2352,0.0728,9.9732,-2.2121,0.1878,9.9592,-2.2838,0.2416,9.9281,-2.4207,0.3322,9.9142,-2.4888,0.4057,9.8952,-2.5771,0.4269,9.8693,-2.6882,0.5313,9.8474,-2.7918,0.5001,9.8179,-2.9126,0.4937,9.7881,-3.0374,0.4216,9.7621,-3.139,0.2979,9.7472,-3.1884,0.2119,9.7287,-3.2568,0.123,9.7086,-3.332,0.0003,9.7096,-3.3144,-0.109,9.7026,-3.3317,-0.2298,9.6949,-3.3511,-0.3576,9.695,-3.3368,-0.4684,9.7075,-3.272,-0.5376,9.7311,-3.1654,-0.5644,9.7588,-3.0455,-0.8038,11.1804,-3.0996,-0.995,11.1554,-3.0133,-1.102,11.1586,-2.863,-0.7416,11.2371,-2.8377,-0.829,11.2449,-2.684,-0.6995,11.2763,-2.6557,-0.6826,11.3038,-2.5128,-0.6228,11.342,-2.3579,-0.47,11.3614,-2.4305,-0.3541,11.3903,-2.4003,-0.2234,11.4217,-2.3741,-0.1117,11.4326,-2.446,-0.0595,11.42,-2.5854,0.0288,11.427,-2.6521,0.1012,11.4273,-2.7394,0.1225,11.4131,-2.8504,0.2277,11.4176,-2.9527,0.1989,11.3913,-3.0741,0.1957,11.3696,-3.1997,0.1276,11.3384,-3.302,0.0078,11.3055,-3.3511,-0.0732,11.2772,-3.4202,-0.1566,11.2471,-3.4974,-0.2749,11.2257,-3.4791,-0.3791,11.2011,-3.4981,-0.4947,11.1736,-3.5202,-0.6182,11.1501,-3.5083,-0.726,11.1386,-3.4445,-0.7937,11.1426,-3.3374,-0.8199,11.1574,-3.2168,-1.1139,12.6171,-3.4168,-1.2784,12.5999,-3.3313,-1.3688,12.6068,-3.1915,-1.0607,12.6729,-3.1568,-1.1293,12.6843,-3.0155,-1.0117,12.7132,-2.9811,-0.9876,12.7405,-2.8522,-0.9256,12.7765,-2.7154,-0.7835,12.7941,-2.773,-0.6723,12.8204,-2.7466,-0.5486,12.8481,-2.7264,-0.4415,12.8576,-2.7916,-0.3859,12.8466,-2.9163,-0.3014,12.8516,-2.9817,-0.2326,12.8502,-3.0663,-0.2092,12.8362,-3.1723,-0.1176,12.8367,-3.2715,-0.1422,12.8117,-3.3871,-0.1477,12.7899,-3.5058,-0.2109,12.7604,-3.604,-0.3202,12.73,-3.6559,-0.3987,12.703,-3.7227,-0.4807,12.6745,-3.7939,-0.5936,12.6546,-3.7821,-0.6949,12.6319,-3.799,-0.8058,12.6073,-3.8158,-0.9228,12.587,-3.8012,-1.0254,12.5777,-3.7404,-1.0924,12.582,-3.6409,-1.1223,12.596,-3.528,-1.3661,14.1421,-3.5985,-1.525,14.1288,-3.5106,-1.6076,14.1245,-3.3699,-1.3001,14.156,-3.3398,-1.3608,14.1539,-3.1981,-1.2421,14.1666,-3.1655,-1.2114,14.1733,-3.0376,-1.1426,14.1839,-2.9025,-1.0043,14.1961,-2.9619,-0.8923,14.2079,-2.9374,-0.7682,14.2208,-2.9193,-0.665,14.2292,-2.9858,-0.6159,14.2306,-3.1108,-0.5352,14.2367,-3.1775,-0.4711,14.2407,-3.2629,-0.4532,14.2395,-3.3689,-0.3673,14.2452,-3.4692,-0.3976,14.239,-3.5842,-0.4092,14.2345,-3.7023,-0.4771,14.225,-3.7992,-0.5883,14.2125,-3.8493,-0.6699,14.2026,-3.9147,-0.7552,14.1921,-3.9843,-0.8668,14.1814,-3.9709,-0.9685,14.1708,-3.9861,-1.0797,14.1593,-4.001,-1.1954,14.1483,-3.9846,-1.2943,14.1402,-3.9223,-1.356,14.1368,-3.8221,-1.38,14.1376,-3.7092,-1.3969,15.6083,-3.5127,-1.4629,15.5914,-3.4275,-1.4914,15.5808,-3.3218,-1.3734,15.6004,-3.2479,-1.3705,15.5961,-3.147,-1.2946,15.6081,-3.0862,-1.2409,15.6147,-3.0032,-1.1675,15.6254,-2.9272,-1.0627,15.6459,-2.9272,-0.966,15.6641,-2.9115,-0.8654,15.6838,-2.9102,-0.7735,15.7036,-2.9502,-0.7045,15.7206,-3.0221,-0.6332,15.7374,-3.0837,-0.5766,15.7521,-3.1602,-0.5464,15.7623,-3.2505,-0.505,15.7747,-3.3413,-0.5152,15.7774,-3.4403,-0.5314,15.7789,-3.5386,-0.5786,15.7739,-3.6267,-0.6518,15.7627,-3.6933,-0.7236,15.7516,-3.7561,-0.8037,15.7385,-3.8102,-0.8987,15.7206,-3.8253,-0.9921,15.703,-3.8376,-1.0883,15.6841,-3.8376,-1.1837,15.6644,-3.8149,-1.2687,15.6454,-3.765,-1.334,15.6291,-3.6917,-1.3774,15.6165,-3.6052,-1.8899,16.9934,-3.5015,-1.9205,16.9904,-3.4161,-1.9307,16.9923,-3.3252,-1.9039,17.0025,-3.2385,-1.8788,17.0123,-3.1532,-1.8288,17.0273,-3.0803,-1.7701,17.0439,-3.0145,-1.6985,17.0628,-2.962,-1.6142,17.0835,-2.9345,-1.5271,17.1043,-2.9201,-1.4382,17.1246,-2.9237,-1.3523,17.1432,-2.949,-1.2747,17.159,-2.9938,-1.2053,17.1723,-3.0505,-1.1486,17.182,-3.1205,-1.1086,17.1875,-3.2013,-1.0814,17.1897,-3.2876,-1.0769,17.1865,-3.378,-1.0888,17.1795,-3.4673,-1.1203,17.1683,-3.5512,-1.1699,17.1535,-3.6248,-1.2315,17.1363,-3.6878,-1.3043,17.1172,-3.7372,-1.387,17.0968,-3.7669,-1.4737,17.0762,-3.7807,-1.562,17.056,-3.7769,-1.6481,17.0372,-3.7542,-1.7277,17.0208,-3.7127,-1.7965,17.0077,-3.6543,-1.8513,16.9985,-3.5827,-2.0389,18.6103,-3.6713,-2.0671,18.6146,-3.5886,-2.0749,18.6171,-3.5003,-2.0467,18.6159,-3.4154,-2.0193,18.6147,-3.3321,-1.9676,18.6109,-3.2603,-1.907,18.606,-3.1956,-1.8339,18.5997,-3.1436,-1.7489,18.5918,-3.1153,-1.6613,18.5833,-3.1001,-1.5724,18.5744,-3.1023,-1.487,18.5654,-3.1256,-1.4103,18.5569,-3.1679,-1.3421,18.5491,-3.222,-1.2871,18.5423,-3.2893,-1.2489,18.537,-3.3673,-1.2239,18.5329,-3.451,-1.2215,18.531,-3.5389,-1.2356,18.5308,-3.6259,-1.2692,18.5326,-3.708,-1.3205,18.5363,-3.7805,-1.3837,18.5415,-3.8428,-1.4579,18.548,-3.8919,-1.5414,18.5558,-3.9221,-1.6286,18.5642,-3.9368,-1.7169,18.5731,-3.9344,-1.8026,18.582,-3.9135,-1.8813,18.5907,-3.8742,-1.9488,18.5985,-3.8185,-2.0021,18.6051,-3.7497,-1.5698,20.0776,-3.5694,-1.6046,20.0696,-3.492,-1.6206,20.0581,-3.4085,-1.6032,20.0425,-3.3265,-1.585,20.0271,-3.2461,-1.5431,20.0102,-3.1754,-1.4916,19.9931,-3.1112,-1.427,19.9761,-3.0586,-1.3489,19.961,-3.0275,-1.2668,19.9473,-3.009,-1.1818,19.936,-3.0071,-1.098,19.9281,-3.0251,-1.0204,19.924,-3.0615,-0.9499,19.9227,-3.1098,-0.8907,19.925,-3.1712,-0.8462,19.931,-3.2435,-0.8142,19.9396,-3.3219,-0.803,19.9517,-3.4052,-0.8077,19.9658,-3.4885,-0.8315,19.9818,-3.5681,-0.8729,19.9988,-3.6395,-0.927,20.0159,-3.7016,-0.9929,20.0326,-3.7516,-1.0695,20.0478,-3.7843,-1.1512,20.0613,-3.8024,-1.2358,20.0725,-3.8041,-1.3196,20.0808,-3.7882,-1.3987,20.0856,-3.7546,-1.4687,20.0866,-3.7049,-1.5266,20.0839,-3.6421,-1.6298,21.5352,-3.1786,-1.6574,21.5299,-3.1013,-1.6665,21.521,-3.0197,-1.6447,21.5076,-2.9421,-1.6212,21.4941,-2.8663,-1.576,21.4785,-2.8014,-1.5218,21.4623,-2.7438,-1.4558,21.4457,-2.6986,-1.3786,21.43,-2.6747,-1.2984,21.4155,-2.6634,-1.2166,21.4027,-2.6684,-1.1374,21.3928,-2.6922,-1.0654,21.3862,-2.7332,-1.0011,21.3823,-2.7852,-0.9485,21.3818,-2.849,-0.911,21.385,-2.9221,-0.886,21.3908,-3.0001,-0.8811,21.4003,-3.0811,-0.8916,21.4121,-3.1609,-0.9201,21.4263,-3.2355,-0.9649,21.4419,-3.301,-1.0213,21.4582,-3.3565,-1.0882,21.4746,-3.3994,-1.1642,21.4903,-3.4249,-1.244,21.5048,-3.4358,-1.3254,21.5174,-3.4307,-1.4048,21.5276,-3.4087,-1.4783,21.5348,-3.3701,-1.5421,21.5384,-3.3168,-1.5934,21.5386,-3.2519,-1.083,22.9509,-3.1474,-1.099,22.9609,-3.0725,-1.0979,22.9663,-2.9946,-1.07,22.9639,-2.9218,-1.0397,22.9606,-2.851,-0.9913,22.9515,-2.7915,-0.9351,22.9397,-2.7396,-0.8697,22.9243,-2.7002,-0.7967,22.9054,-2.681,-0.7222,22.8852,-2.6743,-0.6482,22.8639,-2.6832,-0.5786,22.8426,-2.7097,-0.5173,22.8225,-2.752,-0.4645,22.804,-2.8046,-0.4237,22.788,-2.8678,-0.3976,22.7755,-2.9391,-0.3838,22.7661,-3.0144,-0.3884,22.7618,-3.0916,-0.4071,22.7615,-3.1669,-0.4414,22.7659,-3.2364,-0.4896,22.775,-3.2965,-0.5474,22.7874,-3.3464,-0.6133,22.803,-3.3838,-0.6855,22.8216,-3.4044,-0.7597,22.8417,-3.4108,-0.8333,22.8629,-3.4018,-0.9033,22.8842,-3.3769,-0.966,22.9046,-3.3367,-1.0183,22.923,-3.2829,-1.0578,22.9387,-3.2188,-0.8061,24.3488,-3.3554,-0.8208,24.3654,-3.286,-0.8189,24.3802,-3.2141,-0.7923,24.3907,-3.1466,-0.7621,24.4003,-3.0813,-0.7151,24.4055,-3.0263,-0.6603,24.408,-2.9786,-0.5967,24.4069,-2.9425,-0.526,24.4009,-2.9247,-0.454,24.3924,-2.9188,-0.3824,24.3808,-2.9273,-0.3153,24.3665,-2.9519,-0.2562,24.3502,-2.9911,-0.2055,24.333,-3.0399,-0.1665,24.3154,-3.0985,-0.1417,24.2982,-3.1645,-0.129,24.2818,-3.2343,-0.1339,24.2675,-3.3056,-0.1525,24.2555,-3.3752,-0.1862,24.2466,-3.4394,-0.233,24.2413,-3.4949,-0.2892,24.2393,-3.5409,-0.3533,24.2409,-3.5753,-0.4232,24.2464,-3.5943,-0.495,24.2551,-3.5999,-0.5662,24.2666,-3.5913,-0.6336,24.2807,-3.568,-0.694,24.2968,-3.5306,-0.7442,24.3141,-3.4809,-0.7821,24.3317,-3.4215,-0.6618,25.7451,-3.7116,-0.6706,25.7699,-3.6489,-0.664,25.795,-3.5853,-0.6353,25.8176,-3.5273,-0.6026,25.8393,-3.4718,-0.5551,25.8568,-3.4264,-0.5005,25.8713,-3.3885,-0.4385,25.8813,-3.3616,-0.3713,25.8849,-3.3509,-0.3034,25.8842,-3.3512,-0.237,25.8784,-3.3643,-0.1757,25.8672,-3.3912,-0.1228,25.8513,-3.4302,-0.0785,25.8322,-3.4774,-0.0458,25.8102,-3.5324,-0.0268,25.7861,-3.5928,-0.0196,25.7612,-3.6556,-0.0288,25.7364,-3.7185,-0.0508,25.7128,-3.7788,-0.0864,25.6917,-3.8331,-0.1338,25.674,-3.8789,-0.1895,25.6601,-3.9155,-0.2518,25.6506,-3.941,-0.3185,25.6466,-3.9526,-0.3861,25.6474,-3.9522,-0.4522,25.6532,-3.9391,-0.5138,25.664,-3.9132,-0.5679,25.6794,-3.8754,-0.6118,25.6988,-3.8275,-0.6435,25.721,-3.772,-0.7355,27.034,-4.388,-0.7426,27.0496,-4.327,-0.7359,27.0671,-4.2663,-0.7103,27.0859,-4.2121,-0.68,27.1044,-4.161,-0.6369,27.1222,-4.1204,-0.5872,27.1387,-4.0878,-0.531,27.1532,-4.0663,-0.4703,27.1642,-4.0605,-0.4091,27.1723,-4.0655,-0.3493,27.1768,-4.0827,-0.2943,27.1771,-4.1128,-0.2467,27.1732,-4.1539,-0.2072,27.1661,-4.2025,-0.1781,27.1556,-4.2577,-0.1614,27.1419,-4.3172,-0.1557,27.1262,-4.3783,-0.1644,27.1085,-4.4383,-0.1848,27.09,-4.4948,-0.2173,27.0713,-4.5447,-0.2604,27.0535,-4.5857,-0.3109,27.0372,-4.6171,-0.3673,27.0229,-4.6374,-0.4276,27.0118,-4.6441,-0.4886,27.0038,-4.6389,-0.5481,26.9993,-4.6217,-0.6034,26.9987,-4.5924,-0.6519,27.0022,-4.5523,-0.6911,27.0095,-4.5032,-0.7194,27.0203,-4.4476,-1.0202,28.4762,-4.4541,-1.0274,28.4833,-4.4001,-1.0229,28.4936,-4.346,-1.0028,28.5073,-4.2965,-0.9778,28.522,-4.25,-0.9418,28.5382,-4.2121,-0.8998,28.5549,-4.1812,-0.852,28.5715,-4.1601,-0.8,28.5871,-4.1522,-0.7474,28.6013,-4.1542,-0.6957,28.6133,-4.1672,-0.6476,28.6224,-4.1916,-0.6057,28.6282,-4.2261,-0.5706,28.6309,-4.2677,-0.5444,28.6301,-4.3156,-0.5285,28.6258,-4.3678,-0.5223,28.6185,-4.4219,-0.5283,28.6079,-4.4755,-0.5445,28.5949,-4.5265,-0.5712,28.5799,-4.5722,-0.6071,28.5637,-4.6105,-0.6498,28.547,-4.6404,-0.6978,28.5304,-4.6607,-0.7494,28.5148,-4.6692,-0.8019,28.5007,-4.6671,-0.8534,28.4887,-4.6541,-0.9017,28.4794,-4.6303,-0.9442,28.4734,-4.5966,-0.9791,28.4708,-4.5546,-1.0048,28.4718,-4.5063,-1.4235,29.8275,-4.8377,-1.4282,29.8398,-4.7943,-1.4236,29.856,-4.7519,-1.4076,29.8757,-4.7141,-1.3868,29.8965,-4.6796,-1.3578,29.9186,-4.6526,-1.3238,29.9407,-4.632,-1.2853,29.9621,-4.6196,-1.2439,29.9812,-4.6178,-1.202,29.998,-4.624,-1.1611,30.0114,-4.639,-1.1231,30.0206,-4.6625,-1.0901,30.0251,-4.6934,-1.0627,30.0254,-4.7295,-1.0425,30.0211,-4.7698,-1.0305,30.0122,-4.8126,-1.0265,29.9996,-4.856,-1.0319,29.9832,-4.898,-1.0455,29.9641,-4.937,-1.0674,29.943,-4.9709,-1.0964,29.9209,-4.9981,-1.1308,29.8988,-5.0181,-1.1693,29.8776,-5.0299,-1.2105,29.8584,-5.0322,-1.2523,29.8417,-5.0258,-1.2932,29.8283,-5.0109,-1.3312,29.819,-4.9877,-1.3647,29.8141,-4.9573,-1.3919,29.814,-4.9209,-1.4118,29.8185,-4.8805,-2.0868,31.0977,-5.3004,-2.0933,31.1081,-5.2706,-2.0932,31.1209,-5.2408,-2.085,31.1355,-5.2132,-2.0723,31.1507,-5.1879,-2.0533,31.1663,-5.1669,-2.0299,31.1815,-5.1504,-2.0028,31.1957,-5.1393,-1.9727,31.208,-5.135,-1.9416,31.2182,-5.1365,-1.9106,31.2258,-5.1441,-1.881,31.2303,-5.1578,-1.8544,31.2314,-5.1769,-1.8316,31.2295,-5.2002,-1.8136,31.2244,-5.2269,-1.8015,31.2163,-5.2558,-1.7953,31.2057,-5.2857,-1.7959,31.1929,-5.3153,-1.8028,31.1785,-5.3434,-1.8161,31.1632,-5.3685,-1.8351,31.1476,-5.3895,-1.8586,31.1324,-5.4058,-1.8859,31.1183,-5.4166,-1.9158,31.106,-5.4211,-1.9468,31.0958,-5.4196,-1.9778,31.0882,-5.412,-2.0074,31.0836,-5.3984,-2.0342,31.0823,-5.3795,-2.057,31.0843,-5.3562,-2.0748,31.0895,-5.3294,-2.1912,32.3216,-5.8686,-2.1949,32.3292,-5.8517,-2.1947,32.3374,-5.8348,-2.1906,32.3458,-5.8185,-2.1828,32.3541,-5.8035,-2.1716,32.3618,-5.7905,-2.1576,32.3688,-5.78,-2.1413,32.3746,-5.7726,-2.1235,32.379,-5.7685,-2.1049,32.3818,-5.7679,-2.0863,32.3829,-5.7709,-2.0687,32.3823,-5.7773,-2.0526,32.3799,-5.7868,-2.0389,32.3759,-5.799,-2.0281,32.3704,-5.8134,-2.0207,32.3637,-5.8294,-2.017,32.3561,-5.8462,-2.0172,32.3479,-5.8631,-2.0213,32.3395,-5.8794,-2.0291,32.3312,-5.8944,-2.0403,32.3235,-5.9074,-2.0543,32.3165,-5.9179,-2.0706,32.3107,-5.9253,-2.0884,32.3063,-5.9294,-2.107,32.3035,-5.93,-2.1256,32.3024,-5.927,-2.1432,32.3031,-5.9207,-2.1593,32.3054,-5.9111,-2.173,32.3095,-5.8989,-2.1838,32.3149,-5.8845,-0.0254,10.3461,-2.8584,-0.1991,10.3956,-2.9943,-0.3302,10.2511,-2.8798,-0.1564,10.2015,-2.744,-0.2936,11.068,-2.2529,-0.4655,11.1137,-2.391,-0.6074,11.0011,-2.2505,-0.4356,10.9555,-2.1124,-0.3686,11.9887,-1.8907,-0.5366,12.0063,-2.0387,-0.6807,11.9343,-1.8841,-0.5128,11.9166,-1.7361,-0.6123,12.9403,-1.6738,-0.7671,12.9153,-1.8298,-0.9169,12.8732,-1.6708,-0.7621,12.8981,-1.5148,-0.7982,13.9224,-1.7781,-0.9466,13.8767,-1.9292,-1.0954,13.8439,-1.7736,-0.947,13.8896,-1.6225,-1.1275,14.8652,-1.7564,-1.2845,14.8536,-1.9031,-1.4185,14.7885,-1.7512,-1.2614,14.8,-1.6045,-1.2886,15.776,-1.4095,-1.4517,15.8219,-1.5305,-1.5754,15.7205,-1.3967,-1.4123,15.6747,-1.2758,-1.4114,16.5202,-0.7537,-1.5718,16.5803,-0.8571,-1.6889,16.4653,-0.7424,-1.5286,16.4052,-0.6391,-1.5476,17.2977,-0.1363,-1.7007,17.3495,-0.2405,-1.8136,17.2397,-0.1298,-1.6604,17.1879,-0.0256,-1.7307,18.0674,0.4691,-1.8791,18.1265,0.3777,-1.9851,18.0158,0.4788,-1.8366,17.9567,0.5702,-1.804,18.7391,1.1909,-1.9449,18.804,1.1147,-2.0451,18.7035,1.2143,-1.9042,18.6387,1.2905,-1.826,19.4867,1.8255,-1.9571,19.5452,1.7536,-2.0503,19.4801,1.8703,-1.9192,19.4216,1.9422,-1.664,20.3692,2.2298,-1.7806,20.4354,2.1703,-1.8633,20.3871,2.2814,-1.7466,20.3209,2.3409,-1.4295,21.1175,2.8422,-1.5394,21.1912,2.7927,-1.6206,21.1402,2.8967,-1.5107,21.0665,2.9463,-1.159,21.8985,3.3768,-1.2631,21.9893,3.3393,-1.3421,21.9437,3.4473,-1.238,21.8529,3.4848,-0.6525,22.4818,3.9877,-0.7448,22.5862,3.9645,-0.8214,22.5432,4.0754,-0.729,22.4389,4.0986,-0.1045,23.096,4.5676,-0.206,23.19,4.5344,-0.2824,23.1476,4.6457,-0.1808,23.0536,4.6788,0.1536,23.653,4.9787,0.0461,23.7342,4.9361,-0.0314,23.6894,5.0456,0.0761,23.6081,5.0882,-1.6575,18.9988,-3.572,-1.5628,19.0744,-3.3825,-1.3945,18.9288,-3.4059,-1.4892,18.8532,-3.5954,-1.1477,19.6813,-4.1096,-1.071,19.735,-3.905,-0.9063,19.5881,-3.9252,-0.983,19.5345,-4.1297,-0.5123,20.4071,-4.3888,-0.4565,20.4375,-4.1806,-0.295,20.2945,-4.2008,-0.3508,20.2642,-4.409,0.0773,21.1527,-4.6659,0.1117,21.158,-4.4562,0.2855,21.0425,-4.4836,0.251,21.0372,-4.6934,0.5256,22.0243,-4.6111,0.5487,22.0093,-4.4132,0.731,21.9329,-4.4376,0.7078,21.9478,-4.6356,0.8372,22.9511,-4.6256,0.8573,22.9326,-4.4413,1.0351,22.8855,-4.4644,1.015,22.9041,-4.6488,1.0428,23.9026,-4.4812,1.0614,23.8873,-4.3146,1.2237,23.8531,-4.3345,1.2051,23.8684,-4.5011,1.2657,24.8648,-4.4955,1.2857,24.8706,-4.3529,1.4209,24.8234,-4.3694,1.4009,24.8176,-4.512,1.6684,25.7492,-4.6495,1.6952,25.7706,-4.5128,1.8244,25.7183,-4.5279,1.7975,25.6969,-4.6646,1.9289,26.6514,-4.923,1.9581,26.6807,-4.7886,2.0909,26.6408,-4.8075,2.0617,26.6115,-4.9418,2.0697,27.2935,-5.0939,2.0987,27.3215,-4.9593,2.2325,27.2859,-4.9793,2.2034,27.2579,-5.1139,-1.1243,21.9379,-2.8916,-0.9684,22.021,-3.0316,-1.0658,21.9149,-3.2049,-1.2217,21.8318,-3.0648,-1.6908,22.7239,-3.0511,-1.5443,22.8166,-3.1922,-1.6485,22.7219,-3.3655,-1.795,22.6293,-3.2244,-2.2789,23.5097,-3.0516,-2.1419,23.608,-3.1894,-2.2537,23.5289,-3.3586,-2.3907,23.4306,-3.2208,-2.8378,24.3305,-3.0433,-2.7042,24.4226,-3.1761,-2.8159,24.3523,-3.3388,-2.9495,24.2602,-3.206,-3.3773,25.1602,-3.0144,-3.2625,25.2654,-3.1394,-3.3618,25.1891,-3.2939,-3.4766,25.0838,-3.169,-4.1068,25.8155,-2.968,-4.007,25.9182,-3.0837,-4.1125,25.8591,-3.2253,-4.2123,25.7565,-3.1096,-4.5802,26.6448,-2.7506,-4.4885,26.7314,-2.8555,-4.6,26.7084,-2.9736,-4.6917,26.6219,-2.8687,-5.0305,27.4638,-2.4364,-4.9594,27.5524,-2.5207,-5.0549,27.5323,-2.6225,-5.126,27.4437,-2.5381,-5.6369,28.1516,-2.0635,-5.5731,28.2486,-2.1435,-5.6678,28.2274,-2.2457,-5.7315,28.1304,-2.1657,-6.1883,28.8656,-1.6447,-6.1228,28.9603,-1.7261,-6.2198,28.9421,-1.8265,-6.2853,28.8474,-1.7452,-6.3956,29.1417,-1.4969,-6.329,29.2349,-1.579,-6.4254,29.2159,-1.6799,-6.492,29.1227,-1.5978,-0.3438,24.5981,-3.2155,-0.3852,24.6573,-3.4287,-0.563,24.5189,-3.4325,-0.5215,24.4597,-3.2193,-0.9217,25.3249,-2.9012,-0.9603,25.3801,-3.1151,-1.1622,25.2736,-3.1051,-1.1235,25.2185,-2.8911,-1.1907,26.244,-2.6392,-1.2207,26.2709,-2.8594,-1.4321,26.2045,-2.8387,-1.4022,26.1777,-2.6185,-1.4925,27.2033,-2.5967,-1.5085,27.1871,-2.8162,-1.7264,27.1504,-2.7948,-1.7104,27.1667,-2.5753,-1.5417,28.1943,-2.7598,-1.5565,28.1568,-2.9724,-1.7714,28.1293,-2.9527,-1.7566,28.1668,-2.7401,-1.7825,29.1504,-2.9236,-1.8057,29.1468,-3.1375,-2.0081,29.0863,-3.112,-1.9849,29.0899,-2.898,-2.1096,30.064,-2.7353,-2.1527,30.1174,-2.9322,-2.3368,30.0203,-2.9147,-2.2937,29.9668,-2.7178,-2.6137,30.8076,-2.2958,-2.6659,30.8749,-2.4779,-2.8334,30.7636,-2.4709,-2.7812,30.6963,-2.2889,-3.1029,31.5853,-1.8942,-3.1493,31.644,-2.0732,-3.3113,31.5373,-2.0663,-3.2649,31.4785,-1.8873,-3.6205,32.3571,-1.5337,-3.6717,32.423,-1.7004,-3.8227,32.3146,-1.6964,-3.7715,32.2487,-1.5296,-4.1346,33.0267,-1.018,-4.1902,33.0982,-1.1692,-4.3364,32.9992,-1.1622,-4.2809,32.9276,-1.011,-4.5521,33.7705,-0.5336,-4.6036,33.8356,-0.6764,-4.7563,33.7715,-0.6504,-4.7048,33.7065,-0.5076,-4.678,34.6445,-0.0988,-4.7272,34.7177,-0.2238,-4.8694,34.6699,-0.1942,-4.8202,34.5967,-0.0692,-4.8949,35.383,0.5327,-4.9432,35.4599,0.4252,-5.0734,35.4114,0.449,-5.0251,35.3345,0.5565,-5.0297,36.1532,1.1316,-5.0811,36.2467,1.0371,-5.2121,36.2034,1.0654,-5.1606,36.1099,1.1599,-5.0425,36.7201,1.9375,-5.0944,36.8266,1.8616,-5.2253,36.7857,1.8937,-5.1734,36.6792,1.9697,-5.0041,37.3195,2.7507,-5.0565,37.4123,2.656,-5.1876,37.3715,2.6874,-5.1352,37.2786,2.7821,-5.1443,38.114,3.3616,-5.1939,38.1907,3.2545,-5.3243,38.1457,3.2827,-5.2747,38.069,3.3897,-5.1964,38.4032,3.6023,-5.2463,38.4819,3.4968,-5.3766,38.4362,3.5245,-5.3267,38.3575,3.6299,-0.4601,26.7388,-4.3365,-0.5095,26.9091,-4.203,-0.3887,26.815,-4.0394,-0.3393,26.6447,-4.1729,0.3577,27.2115,-4.6412,0.3278,27.3924,-4.5163,0.4248,27.2853,-4.3444,0.4547,27.1044,-4.4693,1.3073,27.3956,-4.8718,1.2928,27.5771,-4.7523,1.3658,27.4665,-4.5769,1.3804,27.285,-4.6964,2.2438,27.6571,-5.0927,2.2153,27.8313,-4.9723,2.2882,27.7238,-4.8004,2.3168,27.5496,-4.9207,3.1721,27.9634,-5.2534,3.1519,28.1355,-5.1374,3.2151,28.0278,-4.9686,3.2353,27.8557,-5.0846,4.1218,28.1183,-5.4471,4.1118,28.2858,-5.3367,4.18,28.1825,-5.1755,4.19,28.015,-5.286,5.0193,28.3787,-5.7105,5.0033,28.5362,-5.6017,5.1108,28.4492,-5.4617,5.1268,28.2917,-5.5705,5.7442,28.8087,-6.1993,5.7388,28.9635,-6.1035,5.8526,28.8889,-5.9801,5.858,28.7341,-6.0759,6.5789,29.0362,-6.6756,6.5834,29.1823,-6.5919,6.6844,29.1113,-6.4747,6.6799,28.9651,-6.5584,7.3524,29.3362,-7.1895,7.3725,29.4743,-7.1239,7.4707,29.4118,-7.0231,7.4506,29.2737,-7.0887,8.0776,29.3827,-7.8419,8.1104,29.5091,-7.7952,8.2039,29.4521,-7.7078,8.1712,29.3256,-7.7545,8.7772,29.472,-8.5545,8.7919,29.5963,-8.4902,8.8861,29.5404,-8.4029,8.8715,29.416,-8.4672,9.5497,29.8405,-9.0764,9.5498,29.9578,-9.0023,9.6398,29.9001,-8.9119,9.6396,29.7827,-8.986,10.3244,30.132,-9.6133,10.3318,30.2522,-9.5442,10.4202,30.1936,-9.4527,10.4128,30.0735,-9.5218,10.5049,30.1875,-9.7444,10.5156,30.3086,-9.6777,10.6037,30.2499,-9.5861,10.593,30.1287,-9.6527,-1.0704,28.9757,-4.6134,-1.0208,29.1908,-4.5667,-0.8108,29.13,-4.5123,-0.8605,28.9148,-4.559,-0.7832,29.1106,-5.5575,-0.7336,29.324,-5.5124,-0.5254,29.2637,-5.459,-0.575,29.0504,-5.5042,-0.5016,29.238,-6.5054,-0.4517,29.4479,-6.467,-0.2494,29.3883,-6.4087,-0.2993,29.1784,-6.4471,-0.1745,29.3068,-7.4345,-0.127,29.5093,-7.3902,0.0772,29.4519,-7.3585,0.0297,29.2495,-7.4029,-0.1084,29.5582,-8.3871,-0.0636,29.7485,-8.332,0.1335,29.7016,-8.3319,0.0888,29.5113,-8.387,-0.0337,29.8294,-9.3443,0.0086,30.0111,-9.3019,0.1933,29.9643,-9.2909,0.1511,29.7827,-9.3334,0.1278,29.9603,-10.3234,0.1674,30.1282,-10.2918,0.3347,30.0836,-10.2666,0.2952,29.9158,-10.2981,0.3592,30.1115,-11.2912,0.3936,30.2603,-11.2645,0.5377,30.2188,-11.2235,0.5032,30.07,-11.2502,0.753,30.1639,-12.228,0.7795,30.2991,-12.1949,0.8994,30.261,-12.1294,0.8729,30.1258,-12.1625,1.3815,30.3294,-13.0096,1.3908,30.4599,-12.9552,1.5036,30.42,-12.8809,1.4944,30.2894,-12.9353,1.9486,30.7009,-13.7464,1.9495,30.826,-13.6812,2.0657,30.7883,-13.6113,2.0648,30.6632,-13.6766,2.1112,30.8097,-13.9576,2.1118,30.9346,-13.892,2.2282,30.8969,-13.8222,2.2275,30.7721,-13.8878,-0.94,13.5577,-1.7095,-0.843,13.6062,-1.7171,-0.883,13.5511,-1.8018,-1.6077,14.8036,-2.2119,-1.5054,14.8421,-2.2151,-1.5503,14.797,-2.3039,-1.9774,16.224,-2.5492,-1.8711,16.2472,-2.5509,-1.9183,16.2033,-2.639,-2.2273,17.5254,-3.2462,-2.121,17.5485,-3.2494,-2.1685,17.5003,-3.3345,-2.5766,18.8028,-3.6944,-2.4713,18.8296,-3.6989,-2.5201,18.7862,-3.7857,-0.8505,13.5969,-1.6996,-0.8955,13.5992,-1.7988,-0.9201,13.5189,-1.73,-1.9925,14.4048,-1.1593,-2.0225,14.4005,-1.2653,-2.0609,14.3272,-1.1933,-3.147,15.364,-1.1169,-3.1684,15.3522,-1.2232,-3.2048,15.2776,-1.1511,-4.4879,15.9466,-0.8244,-4.5286,15.9402,-0.9262,-4.5331,15.8537,-0.8587,-5.5868,16.2281,-0.223,-5.6396,16.2248,-0.3182,-5.6301,16.1347,-0.2583,-1.6499,17.3342,-0.1454,-1.7398,17.3182,-0.0857,-1.6708,17.2358,-0.1035,-0.8907,17.7015,1.0945,-0.9843,17.6842,1.1482,-0.9117,17.6034,1.1373,-0.3367,18.1692,2.4038,-0.4313,18.1508,2.4549,-0.3555,18.0727,2.4511,0.2881,18.7223,3.6378,0.1965,18.7065,3.695,0.2761,18.6318,3.6985,0.8734,19.5686,4.7231,0.7859,19.5584,4.7879,0.8598,19.4753,4.7803,1.7383,19.846,5.7806,1.6552,19.8372,5.8507,1.7145,19.7495,5.8253,-1.9198,18.0491,0.4959,-1.8367,18.0754,0.5613,-1.8253,18.0829,0.4532,-2.3985,19.4528,0.5382,-2.3255,19.4976,0.6089,-2.3091,19.5082,0.5017,-3.4385,20.5088,0.5018,-3.379,20.5672,0.572,-3.3684,20.5837,0.4646,-4.5398,21.5133,0.6411,-4.4738,21.5673,0.7093,-4.4781,21.5952,0.6034,-5.6108,22.425,1.0901,-5.5404,22.4751,1.1564,-5.5533,22.5104,1.0542,-1.9643,19.5431,1.8184,-1.9402,19.5569,1.9236,-1.8835,19.4859,1.8636,-0.9942,20.6242,1.4509,-0.9725,20.6313,1.5575,-0.9083,20.5711,1.492,-0.2518,21.9165,1.3082,-0.2387,21.907,1.4165,-0.1544,21.8828,1.3464,-0.0895,23.3857,1.5785,-0.0777,23.3542,1.6826,0.0094,23.3619,1.6175,0.0495,24.3196,1.9468,0.0598,24.2783,2.047,0.1476,24.2905,1.9837,-1.3653,21.4383,3.0478,-1.4375,21.4967,3.1032,-1.4474,21.3894,3.0997,-0.538,21.316,4.2741,-0.6099,21.3744,4.3298,-0.6213,21.2674,4.3244,0.2616,21.1301,5.5135,0.1789,21.1914,5.5524,0.1846,21.0805,5.5737,0.9337,21.8329,6.6381,0.8402,21.8832,6.6589,0.8632,21.7907,6.7094,1.54,22.6384,7.7165,1.4454,22.687,7.7359,1.4803,22.6095,7.806,2.2393,23.797,8.1925,2.1453,23.8466,8.2121,2.1913,23.7876,8.2896,-0.117,23.2684,4.7924,-0.064,23.3456,4.7365,-0.1482,23.2934,4.6911,-1.0572,24.3062,5.3383,-1.0074,24.388,5.2857,-1.0759,24.3193,5.2302,-2.3792,25.0304,5.398,-2.3213,25.1077,5.3451,-2.3809,25.0342,5.2891,-3.277,25.9888,5.4338,-3.2084,26.0548,5.3804,-3.278,25.9918,5.3248,1.1763,24.2815,-4.4598,1.2319,24.3447,-4.3929,1.2598,24.2415,-4.4023,2.0901,24.6296,-5.5419,2.1502,24.6908,-5.477,2.1893,24.5925,-5.5054,2.4399,25.4347,-6.704,2.5023,25.5025,-6.6481,2.545,25.4116,-6.6871,2.7979,26.0159,-8.003,2.8625,26.0873,-7.955,2.9017,25.9906,-7.9808,3.1647,26.3759,-9.0564,3.2296,26.4477,-9.0095,3.267,26.3493,-9.0302,1.5724,25.3475,-4.5817,1.5635,25.4293,-4.5126,1.6107,25.3374,-4.4808,2.8871,25.8575,-5.0214,2.8715,25.9345,-4.9474,2.9318,25.8468,-4.923,3.9826,26.7198,-5.5084,3.9512,26.7825,-5.4257,4.0438,26.7202,-5.4176,4.4542,28.0136,-6.0678,4.4147,28.0475,-5.9718,4.5177,28.0148,-5.979,4.7702,29.2214,-6.1212,4.7259,29.237,-6.0244,4.8304,29.2103,-6.0317,-2.4472,23.8008,-3.139,-2.4596,23.8602,-3.2291,-2.4759,23.753,-3.2326,-3.8867,24.0099,-2.7977,-3.8974,24.0694,-2.8881,-3.9103,23.9617,-2.8927,-5.3515,24.1269,-2.5667,-5.365,24.1857,-2.6571,-5.385,24.0785,-2.6596,-6.6799,24.5179,-2.0387,-6.7067,24.5815,-2.1233,-6.726,24.4742,-2.1272,-8.0086,24.5684,-1.3816,-8.048,24.6302,-1.4618,-8.0657,24.5226,-1.4635,-9.1638,24.9078,-0.5054,-9.2015,24.9691,-0.587,-9.2289,24.8643,-0.5814,-9.3715,24.9716,-0.3741,-9.4056,25.0318,-0.4579,-9.4337,24.9272,-0.4519,-4.6673,26.8759,-2.8463,-4.738,26.8581,-2.7658,-4.6447,26.8035,-2.7686,-4.0215,27.9391,-2.0285,-4.0918,27.9221,-1.9475,-3.9982,27.868,-1.9499,-3.3803,29.0326,-1.2469,-3.4507,29.016,-1.1659,-3.3569,28.9622,-1.1676,-2.7423,30.1215,-0.4391,-2.8138,30.0981,-0.3606,-2.7249,30.0362,-0.3716,-1.9294,30.7906,0.6307,-2.0094,30.7586,0.6976,-1.9204,30.6972,0.6852,-1.4442,31.5428,1.8266,-1.5282,31.5047,1.8839,-1.4355,31.4491,1.8808,-1.3908,31.623,1.9644,-1.4752,31.5842,2.0206,-1.3826,31.5285,2.0172,-6.0934,28.685,-1.8019,-6.0593,28.7818,-1.8373,-6.0323,28.6919,-1.8921,-7.3276,28.8173,-2.6269,-7.2868,28.9131,-2.6583,-7.273,28.8243,-2.7214,-8.613,29.2934,-3.2108,-8.5627,29.3857,-3.2381,-8.569,29.3042,-3.3101,-9.4353,29.692,-3.4891,-9.3823,29.7829,-3.5156,-9.3952,29.7046,-3.5898,-2.7902,30.9021,-2.3918,-2.8345,30.8946,-2.2927,-2.7326,30.8597,-2.31,-2.2727,32.2561,-2.0557,-2.3146,32.254,-1.9552,-2.2122,32.2208,-1.9724,-1.822,33.6656,-1.9261,-1.8595,33.6779,-1.8244,-1.7597,33.6364,-1.8421,-1.1303,34.9825,-1.9584,-1.1611,35.0065,-1.8568,-1.0673,34.9538,-1.8747,-0.7504,35.6554,-2.0352,-0.779,35.6833,-1.9341,-0.6863,35.6286,-1.9518,-4.5756,33.739,-0.5939,-4.6569,33.7793,-0.6536,-4.6697,33.6856,-0.6003,-5.0797,34.4851,0.5903,-5.1633,34.5286,0.5359,-5.1786,34.4389,0.5956,-5.2322,35.408,1.7346,-5.3168,35.4621,1.6922,-5.3349,35.3836,1.7656,-4.8998,36.4543,2.73,-4.9813,36.5187,2.6978,-4.9972,36.4462,2.777,-4.6818,36.9122,3.2018,-4.7616,36.9801,3.1731,-4.7779,36.9067,3.2514,3.4423,27.9787,-5.1866,3.4637,28.0834,-5.1848,3.3968,28.0415,-5.1128,4.6031,27.7231,-4.2717,4.6109,27.8307,-4.2779,4.5596,27.7834,-4.1946,5.988,27.8741,-3.7022,5.9659,27.9784,-3.7203,5.9491,27.9344,-3.6227,7.365,28.4366,-3.4941,7.3249,28.5336,-3.5147,7.3276,28.4973,-3.4141,8.0706,28.765,-3.4252,8.0279,28.8607,-3.446,8.0336,28.8258,-3.3452,6.7473,29.0524,-6.6317,6.7439,29.1407,-6.6923,6.6929,29.1393,-6.5984,7.9773,29.5293,-5.9748,7.9675,29.6169,-6.0359,7.9381,29.6213,-5.9302,9.4418,29.7896,-5.9443,9.4001,29.8699,-6.0076,9.4068,29.8831,-5.901,10.6307,30.6003,-6.2969,10.5806,30.6726,-6.3601,10.5954,30.6953,-6.2566,11.8686,30.9169,-6.5617,11.8334,30.9932,-6.6281,11.8486,31.0162,-6.5248,10.4911,30.2641,-9.6359,10.5697,30.1914,-9.6181,10.4693,30.1598,-9.6451,10.8527,30.3133,-11.0514,10.9343,30.2413,-11.0439,10.8357,30.2094,-11.0769,11.2195,30.8135,-12.3654,11.3065,30.7486,-12.3753,11.2118,30.7213,-12.4217,11.5438,31.5485,-13.2498,11.6332,31.489,-13.2662,11.5408,31.4668,-13.3189,0.095,29.9908,-9.6646,0.1893,29.9458,-9.6949,0.1171,29.8877,-9.6383,-0.5376,29.5199,-10.9538,-0.4282,29.4884,-10.9572,-0.5056,29.4218,-10.9161,-0.3044,28.8488,-12.2704,-0.1965,28.8238,-12.2634,-0.27,28.7471,-12.2407,-0.5293,28.6966,-13.7203,-0.4262,28.6684,-13.7425,-0.4998,28.5918,-13.7198,-0.7154,28.6718,-14.3265,-0.6148,28.6434,-14.3569,-0.6875,28.5669,-14.3312,1.2471,30.3771,-12.7698,1.3521,30.3491,-12.7689,1.2769,30.2789,-12.7353,1.1182,29.8474,-14.1622,1.2229,29.8183,-14.1636,1.1487,29.7529,-14.1179,0.8391,29.0241,-15.3687,0.9412,28.9873,-15.3805,0.8685,28.9275,-15.327,0.3604,28.5312,-16.6623,0.4481,28.4789,-16.7112,0.3751,28.4208,-16.6563,-0.6613,28.6959,-17.7087,-0.597,28.6474,-17.7816,-0.6668,28.5887,-17.7233,-1.0154,28.7718,-18.0594,-0.9524,28.7236,-18.1336,-1.0225,28.665,-18.0756,2.1693,30.9042,-13.853,2.2214,30.8381,-13.9224,2.1183,30.8176,-13.8943,1.6954,31.729,-14.9996,1.7474,31.6619,-15.0681,1.6409,31.6478,-15.0477,1.5018,32.6919,-16.1195,1.5539,32.6193,-16.1824,1.4443,32.6217,-16.1797,1.6857,33.6605,-17.2435,1.7375,33.5794,-17.2953,1.6303,33.5937,-17.3088,1.9965,34.4103,-18.2985,2.0465,34.325,-18.3445,1.9408,34.3429,-18.3629],"morphTargets":[],"morphColors":[],"normals":[-0.9833,0.094,-0.1559,-0.4971,0.2989,-0.8146,-0.6135,0.1598,-0.7734,-0.954,0.117,-0.2761,-0.4971,0.2989,-0.8146,-0.6648,0.6635,0.3434,-0.6832,0.4247,0.594,-0.6135,0.1598,-0.7734,-0.6648,0.6635,0.3434,-0.8506,-0.0761,0.5203,-0.7806,0.0017,0.625,-0.6832,0.4247,0.594,-0.8506,-0.0761,0.5203,-0.7881,0.1127,0.6051,-0.8354,0.1195,0.5365,-0.7806,0.0017,0.625,-0.7881,0.1127,0.6051,-0.574,0.0734,0.8156,-0.5595,0.0935,0.8235,-0.8354,0.1195,0.5365,-0.574,0.0734,0.8156,-0.9819,0.1871,-0.0278,-0.9593,0.1412,0.2447,-0.5595,0.0935,0.8235,-0.9819,0.1871,-0.0278,-0.1667,0.5279,0.8328,-0.204,0.3229,0.9242,-0.9593,0.1412,0.2447,-0.1667,0.5279,0.8328,0.3508,0.2871,0.8913,0.3323,0.1537,0.9306,-0.204,0.3229,0.9242,0.3508,0.2871,0.8913,-0.403,0.3349,0.8517,-0.1299,0.198,0.9716,0.3323,0.1537,0.9306,-0.403,0.3349,0.8517,0.27,0.4687,0.8411,0.3125,0.2493,0.9166,-0.1299,0.198,0.9716,0.27,0.4687,0.8411,0.9432,0.2809,0.1772,0.9362,0.1419,0.3216,0.3125,0.2493,0.9166,0.9432,0.2809,0.1772,0.9355,0.1438,0.3229,0.9318,0.0446,0.3603,0.9362,0.1419,0.3216,0.9355,0.1438,0.3229,0.5935,0.1925,0.7815,0.7782,0.0563,0.6255,0.9318,0.0446,0.3603,0.5935,0.1925,0.7815,0.9598,0.212,0.1842,0.9723,0.065,0.2246,0.7782,0.0563,0.6255,0.9598,0.212,0.1842,0.9182,0.1865,0.3494,0.9501,0.0458,0.3084,0.9723,0.065,0.2246,0.9182,0.1865,0.3494,0.9116,0.3839,0.1466,0.9724,0.1361,0.1893,0.9501,0.0458,0.3084,0.9116,0.3839,0.1466,0.8839,0.3598,-0.2987,0.9323,0.1385,-0.3342,0.9724,0.1361,0.1893,0.8839,0.3598,-0.2987,0.8262,0.4106,-0.3856,0.8706,0.1761,-0.4594,0.9323,0.1385,-0.3342,0.8262,0.4106,-0.3856,0.1874,0.3065,-0.9332,0.3538,0.1728,-0.9192,0.8706,0.1761,-0.4594,0.1874,0.3065,-0.9332,0.0829,0.1811,-0.98,0.2756,0.0986,-0.9562,0.3538,0.1728,-0.9192,0.0829,0.1811,-0.98,0.7168,0.1984,-0.6685,0.5542,0.0681,-0.8296,0.2756,0.0986,-0.9562,0.7168,0.1984,-0.6685,0.1112,0.272,-0.9559,0.088,0.1377,-0.9866,0.5542,0.0681,-0.8296,0.1112,0.272,-0.9559,-0.2847,0.1716,-0.9431,-0.2074,0.1092,-0.9721,0.088,0.1377,-0.9866,-0.2847,0.1716,-0.9431,0.4563,0.1703,-0.8734,0.1077,0.0819,-0.9908,-0.2074,0.1092,-0.9721,0.4563,0.1703,-0.8734,0.3354,0.2541,-0.9072,0.0066,0.137,-0.9905,0.1077,0.0819,-0.9908,0.3354,0.2541,-0.9072,-0.2234,0.4021,-0.8879,-0.3899,0.2357,-0.8902,0.0066,0.137,-0.9905,-0.2234,0.4021,-0.8879,-0.79,0.4222,-0.4446,-0.8041,0.2855,-0.5214,-0.3899,0.2357,-0.8902,-0.79,0.4222,-0.4446,-0.9424,0.26,0.2103,-0.9685,0.2429,-0.055,-0.8041,0.2855,-0.5214,-0.9424,0.26,0.2103,-0.7377,0.0878,0.6694,-0.924,0.165,0.345,-0.9685,0.2429,-0.055,-0.7377,0.0878,0.6694,-0.9833,0.094,-0.1559,-0.954,0.117,-0.2761,-0.924,0.165,0.345,-0.954,0.117,-0.2761,-0.6135,0.1598,-0.7734,-0.7256,-0.1514,-0.6713,-0.9472,-0.0963,-0.3059,-0.6135,0.1598,-0.7734,-0.6832,0.4247,0.594,-0.7114,0.0992,0.6958,-0.7256,-0.1514,-0.6713,-0.6832,0.4247,0.594,-0.7806,0.0017,0.625,-0.848,0.0414,0.5284,-0.7114,0.0992,0.6958,-0.7806,0.0017,0.625,-0.8354,0.1195,0.5365,-0.7277,0.082,0.681,-0.848,0.0414,0.5284,-0.8354,0.1195,0.5365,-0.5595,0.0935,0.8235,-0.651,0.0934,0.7533,-0.7277,0.082,0.681,-0.5595,0.0935,0.8235,-0.9593,0.1412,0.2447,-0.9186,0.017,0.3948,-0.651,0.0934,0.7533,-0.9593,0.1412,0.2447,-0.204,0.3229,0.9242,-0.0711,0.1718,0.9826,-0.9186,0.017,0.3948,-0.204,0.3229,0.9242,0.3323,0.1537,0.9306,0.2743,0.1795,0.9448,-0.0711,0.1718,0.9826,0.3323,0.1537,0.9306,-0.1299,0.198,0.9716,-0.0832,0.1615,0.9834,0.2743,0.1795,0.9448,-0.1299,0.198,0.9716,0.3125,0.2493,0.9166,0.3892,0.1763,0.9041,-0.0832,0.1615,0.9834,0.3125,0.2493,0.9166,0.9362,0.1419,0.3216,0.9179,0.1184,0.3788,0.3892,0.1763,0.9041,0.9362,0.1419,0.3216,0.9318,0.0446,0.3603,0.9297,0.1091,0.3519,0.9179,0.1184,0.3788,0.9318,0.0446,0.3603,0.7782,0.0563,0.6255,0.8117,0.1324,0.5688,0.9297,0.1091,0.3519,0.7782,0.0563,0.6255,0.9723,0.065,0.2246,0.9753,0.0829,0.2046,0.8117,0.1324,0.5688,0.9723,0.065,0.2246,0.9501,0.0458,0.3084,0.9619,0.087,0.2592,0.9753,0.0829,0.2046,0.9501,0.0458,0.3084,0.9724,0.1361,0.1893,0.9914,0.0649,0.1138,0.9619,0.087,0.2592,0.9724,0.1361,0.1893,0.9323,0.1385,-0.3342,0.9253,-0.0111,-0.3791,0.9914,0.0649,0.1138,0.9323,0.1385,-0.3342,0.8706,0.1761,-0.4594,0.8771,-0.0317,-0.4792,0.9253,-0.0111,-0.3791,0.8706,0.1761,-0.4594,0.3538,0.1728,-0.9192,0.4396,-0.112,-0.8912,0.8771,-0.0317,-0.4792,0.3538,0.1728,-0.9192,0.2756,0.0986,-0.9562,0.2774,-0.1329,-0.9515,0.4396,-0.112,-0.8912,0.2756,0.0986,-0.9562,0.5542,0.0681,-0.8296,0.5106,-0.1145,-0.8521,0.2774,-0.1329,-0.9515,0.5542,0.0681,-0.8296,0.088,0.1377,-0.9866,0.1309,-0.1488,-0.9802,0.5106,-0.1145,-0.8521,0.088,0.1377,-0.9866,-0.2074,0.1092,-0.9721,-0.2144,-0.1599,-0.9636,0.1309,-0.1488,-0.9802,-0.2074,0.1092,-0.9721,0.1077,0.0819,-0.9908,0.0412,-0.1602,-0.9862,-0.2144,-0.1599,-0.9636,0.1077,0.0819,-0.9908,0.0066,0.137,-0.9905,-0.0689,-0.1648,-0.9839,0.0412,-0.1602,-0.9862,0.0066,0.137,-0.9905,-0.3899,0.2357,-0.8902,-0.4528,-0.1575,-0.8776,-0.0689,-0.1648,-0.9839,-0.3899,0.2357,-0.8902,-0.8041,0.2855,-0.5214,-0.8487,-0.1083,-0.5176,-0.4528,-0.1575,-0.8776,-0.8041,0.2855,-0.5214,-0.9685,0.2429,-0.055,-0.9966,-0.0402,-0.0716,-0.8487,-0.1083,-0.5176,-0.9685,0.2429,-0.055,-0.924,0.165,0.345,-0.9512,0.0217,0.3078,-0.9966,-0.0402,-0.0716,-0.924,0.165,0.345,-0.954,0.117,-0.2761,-0.9472,-0.0963,-0.3059,-0.9512,0.0217,0.3078,-0.9472,-0.0963,-0.3059,-0.7256,-0.1514,-0.6713,-0.6608,-0.3119,-0.6827,-0.9114,-0.1929,-0.3635,-0.7256,-0.1514,-0.6713,-0.7114,0.0992,0.6958,-0.8716,0.1414,0.4694,-0.6608,-0.3119,-0.6827,-0.7114,0.0992,0.6958,-0.848,0.0414,0.5284,-0.8241,0.1763,0.5383,-0.8716,0.1414,0.4694,-0.848,0.0414,0.5284,-0.7277,0.082,0.681,-0.8688,0.1374,0.4757,-0.8241,0.1763,0.5383,-0.7277,0.082,0.681,-0.651,0.0934,0.7533,-0.623,0.2546,0.7396,-0.8688,0.1374,0.4757,-0.651,0.0934,0.7533,-0.9186,0.017,0.3948,-0.9652,0.0369,0.2591,-0.623,0.2546,0.7396,-0.9186,0.017,0.3948,-0.0711,0.1718,0.9826,-0.3245,0.3271,0.8875,-0.9652,0.0369,0.2591,-0.0711,0.1718,0.9826,0.2743,0.1795,0.9448,0.2683,0.3688,0.8899,-0.3245,0.3271,0.8875,0.2743,0.1795,0.9448,-0.0832,0.1615,0.9834,-0.1797,0.3441,0.9216,0.2683,0.3688,0.8899,-0.0832,0.1615,0.9834,0.3892,0.1763,0.9041,0.2293,0.3634,0.903,-0.1797,0.3441,0.9216,0.3892,0.1763,0.9041,0.9179,0.1184,0.3788,0.8673,0.2315,0.4407,0.2293,0.3634,0.903,0.9179,0.1184,0.3788,0.9297,0.1091,0.3519,0.8946,0.2125,0.3932,0.8673,0.2315,0.4407,0.9297,0.1091,0.3519,0.8117,0.1324,0.5688,0.7329,0.2831,0.6187,0.8946,0.2125,0.3932,0.8117,0.1324,0.5688,0.9753,0.0829,0.2046,0.9439,0.1689,0.2838,0.7329,0.2831,0.6187,0.9753,0.0829,0.2046,0.9619,0.087,0.2592,0.928,0.1812,0.3257,0.9439,0.1689,0.2838,0.9619,0.087,0.2592,0.9914,0.0649,0.1138,0.9716,0.1322,0.1963,0.928,0.1812,0.3257,0.9914,0.0649,0.1138,0.9253,-0.0111,-0.3791,0.9635,-0.0422,-0.2643,0.9716,0.1322,0.1963,0.9253,-0.0111,-0.3791,0.8771,-0.0317,-0.4792,0.9084,-0.1007,-0.4058,0.9635,-0.0422,-0.2643,0.8771,-0.0317,-0.4792,0.4396,-0.112,-0.8912,0.4568,-0.2879,-0.8417,0.9084,-0.1007,-0.4058,0.4396,-0.112,-0.8912,0.2774,-0.1329,-0.9515,0.379,-0.3075,-0.8728,0.4568,-0.2879,-0.8417,0.2774,-0.1329,-0.9515,0.5106,-0.1145,-0.8521,0.5962,-0.258,-0.7603,0.379,-0.3075,-0.8728,0.5106,-0.1145,-0.8521,0.1309,-0.1488,-0.9802,0.1285,-0.345,-0.9298,0.5962,-0.258,-0.7603,0.1309,-0.1488,-0.9802,-0.2144,-0.1599,-0.9636,-0.1021,-0.3589,-0.9278,0.1285,-0.345,-0.9298,-0.2144,-0.1599,-0.9636,0.0412,-0.1602,-0.9862,0.1395,-0.3506,-0.9261,-0.1021,-0.3589,-0.9278,0.0412,-0.1602,-0.9862,-0.0689,-0.1648,-0.9839,0.0037,-0.3623,-0.9321,0.1395,-0.3506,-0.9261,-0.0689,-0.1648,-0.9839,-0.4528,-0.1575,-0.8776,-0.3911,-0.351,-0.8508,0.0037,-0.3623,-0.9321,-0.4528,-0.1575,-0.8776,-0.8487,-0.1083,-0.5176,-0.7961,-0.2531,-0.5498,-0.3911,-0.351,-0.8508,-0.8487,-0.1083,-0.5176,-0.9966,-0.0402,-0.0716,-0.9817,-0.1085,-0.1565,-0.7961,-0.2531,-0.5498,-0.9966,-0.0402,-0.0716,-0.9512,0.0217,0.3078,-0.9786,0.032,0.2032,-0.9817,-0.1085,-0.1565,-0.9512,0.0217,0.3078,-0.9472,-0.0963,-0.3059,-0.9114,-0.1929,-0.3635,-0.9786,0.032,0.2032,-0.9114,-0.1929,-0.3635,-0.6608,-0.3119,-0.6827,-0.6291,-0.2975,-0.7181,-0.9434,-0.1363,-0.3022,-0.6608,-0.3119,-0.6827,-0.8716,0.1414,0.4694,-0.8494,0.1383,0.5093,-0.6291,-0.2975,-0.7181,-0.8716,0.1414,0.4694,-0.8241,0.1763,0.5383,-0.8403,0.1752,0.513,-0.8494,0.1383,0.5093,-0.8241,0.1763,0.5383,-0.8688,0.1374,0.4757,-0.8602,0.16,0.4842,-0.8403,0.1752,0.513,-0.8688,0.1374,0.4757,-0.623,0.2546,0.7396,-0.6685,0.2451,0.7022,-0.8602,0.16,0.4842,-0.623,0.2546,0.7396,-0.9652,0.0369,0.2591,-0.965,0.0635,0.2546,-0.6685,0.2451,0.7022,-0.9652,0.0369,0.2591,-0.3245,0.3271,0.8875,-0.2092,0.3187,0.9245,-0.965,0.0635,0.2546,-0.3245,0.3271,0.8875,0.2683,0.3688,0.8899,0.1906,0.3363,0.9223,-0.2092,0.3187,0.9245,0.2683,0.3688,0.8899,-0.1797,0.3441,0.9216,-0.1714,0.328,0.929,0.1906,0.3363,0.9223,-0.1797,0.3441,0.9216,0.2293,0.3634,0.903,0.3102,0.3218,0.8945,-0.1714,0.328,0.929,0.2293,0.3634,0.903,0.8673,0.2315,0.4407,0.8939,0.1652,0.4168,0.3102,0.3218,0.8945,0.8673,0.2315,0.4407,0.8946,0.2125,0.3932,0.8684,0.1862,0.4596,0.8939,0.1652,0.4168,0.8946,0.2125,0.3932,0.7329,0.2831,0.6187,0.7529,0.2398,0.6129,0.8684,0.1862,0.4596,0.7329,0.2831,0.6187,0.9439,0.1689,0.2838,0.9576,0.1145,0.2643,0.7529,0.2398,0.6129,0.9439,0.1689,0.2838,0.928,0.1812,0.3257,0.9089,0.1573,0.3861,0.9576,0.1145,0.2643,0.928,0.1812,0.3257,0.9716,0.1322,0.1963,0.9867,0.0642,0.1491,0.9089,0.1573,0.3861,0.9716,0.1322,0.1963,0.9635,-0.0422,-0.2643,0.9673,-0.0826,-0.2399,0.9867,0.0642,0.1491,0.9635,-0.0422,-0.2643,0.9084,-0.1007,-0.4058,0.9085,-0.1424,-0.3929,0.9673,-0.0826,-0.2399,0.9084,-0.1007,-0.4058,0.4568,-0.2879,-0.8417,0.4925,-0.3055,-0.8149,0.9085,-0.1424,-0.3929,0.4568,-0.2879,-0.8417,0.379,-0.3075,-0.8728,0.3669,-0.3241,-0.872,0.4925,-0.3055,-0.8149,0.379,-0.3075,-0.8728,0.5962,-0.258,-0.7603,0.5928,-0.2765,-0.7564,0.3669,-0.3241,-0.872,0.5962,-0.258,-0.7603,0.1285,-0.345,-0.9298,0.199,-0.3463,-0.9168,0.5928,-0.2765,-0.7564,0.1285,-0.345,-0.9298,-0.1021,-0.3589,-0.9278,-0.1341,-0.354,-0.9256,0.199,-0.3463,-0.9168,-0.1021,-0.3589,-0.9278,0.1395,-0.3506,-0.9261,0.1297,-0.3508,-0.9274,-0.1341,-0.354,-0.9256,0.1395,-0.3506,-0.9261,0.0037,-0.3623,-0.9321,0.0195,-0.3604,-0.9326,0.1297,-0.3508,-0.9274,0.0037,-0.3623,-0.9321,-0.3911,-0.351,-0.8508,-0.3565,-0.3498,-0.8664,0.0195,-0.3604,-0.9326,-0.3911,-0.351,-0.8508,-0.7961,-0.2531,-0.5498,-0.7706,-0.2547,-0.5842,-0.3565,-0.3498,-0.8664,-0.7961,-0.2531,-0.5498,-0.9817,-0.1085,-0.1565,-0.977,-0.1044,-0.1861,-0.7706,-0.2547,-0.5842,-0.9817,-0.1085,-0.1565,-0.9786,0.032,0.2032,-0.9831,0.0405,0.1784,-0.977,-0.1044,-0.1861,-0.9786,0.032,0.2032,-0.9114,-0.1929,-0.3635,-0.9434,-0.1363,-0.3022,-0.9831,0.0405,0.1784,-0.9434,-0.1363,-0.3022,-0.6291,-0.2975,-0.7181,-0.6172,-0.368,-0.6954,-0.9071,-0.26,-0.331,-0.6291,-0.2975,-0.7181,-0.8494,0.1383,0.5093,-0.8419,0.1679,0.5129,-0.6172,-0.368,-0.6954,-0.8494,0.1383,0.5093,-0.8403,0.1752,0.513,-0.8823,0.0955,0.4609,-0.8419,0.1679,0.5129,-0.8403,0.1752,0.513,-0.8602,0.16,0.4842,-0.8101,0.1609,0.5639,-0.8823,0.0955,0.4609,-0.8602,0.16,0.4842,-0.6685,0.2451,0.7022,-0.6806,0.2398,0.6923,-0.8101,0.1609,0.5639,-0.6685,0.2451,0.7022,-0.965,0.0635,0.2546,-0.9796,-0.0138,0.2006,-0.6806,0.2398,0.6923,-0.965,0.0635,0.2546,-0.2092,0.3187,0.9245,-0.2462,0.4118,0.8774,-0.9796,-0.0138,0.2006,-0.2092,0.3187,0.9245,0.1906,0.3363,0.9223,0.2571,0.4571,0.8515,-0.2462,0.4118,0.8774,0.1906,0.3363,0.9223,-0.1714,0.328,0.929,-0.2452,0.4078,0.8795,0.2571,0.4571,0.8515,-0.1714,0.328,0.929,0.3102,0.3218,0.8945,0.2496,0.4666,0.8485,-0.2452,0.4078,0.8795,0.3102,0.3218,0.8945,0.8939,0.1652,0.4168,0.8923,0.3046,0.3332,0.2496,0.4666,0.8485,0.8939,0.1652,0.4168,0.8684,0.1862,0.4596,0.9063,0.2825,0.3143,0.8923,0.3046,0.3332,0.8684,0.1862,0.4596,0.7529,0.2398,0.6129,0.7119,0.385,0.5874,0.9063,0.2825,0.3143,0.7529,0.2398,0.6129,0.9576,0.1145,0.2643,0.9413,0.2509,0.2256,0.7119,0.385,0.5874,0.9576,0.1145,0.2643,0.9089,0.1573,0.3861,0.9179,0.2755,0.2856,0.9413,0.2509,0.2256,0.9089,0.1573,0.3861,0.9867,0.0642,0.1491,0.9563,0.2399,0.167,0.9179,0.2755,0.2856,0.9867,0.0642,0.1491,0.9673,-0.0826,-0.2399,0.9501,0.0234,-0.3112,0.9563,0.2399,0.167,0.9673,-0.0826,-0.2399,0.9085,-0.1424,-0.3929,0.9103,-0.0252,-0.4132,0.9501,0.0234,-0.3112,0.9085,-0.1424,-0.3929,0.4925,-0.3055,-0.8149,0.4254,-0.3005,-0.8537,0.9103,-0.0252,-0.4132,0.4925,-0.3055,-0.8149,0.3669,-0.3241,-0.872,0.3201,-0.3422,-0.8834,0.4254,-0.3005,-0.8537,0.3669,-0.3241,-0.872,0.5928,-0.2765,-0.7564,0.6218,-0.2381,-0.7462,0.3201,-0.3422,-0.8834,0.5928,-0.2765,-0.7564,0.199,-0.3463,-0.9168,0.15,-0.3745,-0.915,0.6218,-0.2381,-0.7462,0.199,-0.3463,-0.9168,-0.1341,-0.354,-0.9256,-0.143,-0.4138,-0.899,0.15,-0.3745,-0.915,-0.1341,-0.354,-0.9256,0.1297,-0.3508,-0.9274,0.2016,-0.3693,-0.9072,-0.143,-0.4138,-0.899,0.1297,-0.3508,-0.9274,0.0195,-0.3604,-0.9326,0.0859,-0.3818,-0.9203,0.2016,-0.3693,-0.9072,0.0195,-0.3604,-0.9326,-0.3565,-0.3498,-0.8664,-0.3582,-0.3961,-0.8454,0.0859,-0.3818,-0.9203,-0.3565,-0.3498,-0.8664,-0.7706,-0.2547,-0.5842,-0.8166,-0.2973,-0.4948,-0.3582,-0.3961,-0.8454,-0.7706,-0.2547,-0.5842,-0.977,-0.1044,-0.1861,-0.9906,-0.1279,-0.0487,-0.8166,-0.2973,-0.4948,-0.977,-0.1044,-0.1861,-0.9831,0.0405,0.1784,-0.9433,0.0374,0.3298,-0.9906,-0.1279,-0.0487,-0.9831,0.0405,0.1784,-0.9434,-0.1363,-0.3022,-0.9071,-0.26,-0.331,-0.9433,0.0374,0.3298,-0.9071,-0.26,-0.331,-0.6172,-0.368,-0.6954,-0.7775,-0.2623,-0.5715,-0.9057,-0.1632,-0.3911,-0.6172,-0.368,-0.6954,-0.8419,0.1679,0.5129,-0.9187,0.2555,0.301,-0.7775,-0.2623,-0.5715,-0.8419,0.1679,0.5129,-0.8823,0.0955,0.4609,-0.7926,0.3133,0.5231,-0.9187,0.2555,0.301,-0.8823,0.0955,0.4609,-0.8101,0.1609,0.5639,-0.9263,0.1842,0.3287,-0.7926,0.3133,0.5231,-0.8101,0.1609,0.5639,-0.6806,0.2398,0.6923,-0.6852,0.3543,0.6364,-0.9263,0.1842,0.3287,-0.6806,0.2398,0.6923,-0.9796,-0.0138,0.2006,-0.8835,0.2207,0.4131,-0.6852,0.3543,0.6364,-0.9796,-0.0138,0.2006,-0.2462,0.4118,0.8774,-0.4127,0.4518,0.7909,-0.8835,0.2207,0.4131,-0.2462,0.4118,0.8774,0.2571,0.4571,0.8515,0.0613,0.4878,0.8708,-0.4127,0.4518,0.7909,0.2571,0.4571,0.8515,-0.2452,0.4078,0.8795,-0.1284,0.4685,0.8741,0.0613,0.4878,0.8708,-0.2452,0.4078,0.8795,0.2496,0.4666,0.8485,0.194,0.4728,0.8596,-0.1284,0.4685,0.8741,0.2496,0.4666,0.8485,0.8923,0.3046,0.3332,0.7027,0.3585,0.6146,0.194,0.4728,0.8596,0.8923,0.3046,0.3332,0.9063,0.2825,0.3143,0.7752,0.2997,0.5561,0.7027,0.3585,0.6146,0.9063,0.2825,0.3143,0.7119,0.385,0.5874,0.7365,0.306,0.6033,0.7752,0.2997,0.5561,0.7119,0.385,0.5874,0.9413,0.2509,0.2256,0.9129,0.1919,0.3604,0.7365,0.306,0.6033,0.9413,0.2509,0.2256,0.9179,0.2755,0.2856,0.9214,0.1732,0.3478,0.9129,0.1919,0.3604,0.9179,0.2755,0.2856,0.9563,0.2399,0.167,0.9842,0.094,0.1502,0.9214,0.1732,0.3478,0.9563,0.2399,0.167,0.9501,0.0234,-0.3112,0.9838,-0.0556,-0.1702,0.9842,0.094,0.1502,0.9501,0.0234,-0.3112,0.9103,-0.0252,-0.4132,0.9294,-0.1349,-0.3434,0.9838,-0.0556,-0.1702,0.9103,-0.0252,-0.4132,0.4254,-0.3005,-0.8537,0.6792,-0.2858,-0.676,0.9294,-0.1349,-0.3434,0.4254,-0.3005,-0.8537,0.3201,-0.3422,-0.8834,0.5739,-0.341,-0.7446,0.6792,-0.2858,-0.676,0.3201,-0.3422,-0.8834,0.6218,-0.2381,-0.7462,0.6021,-0.3465,-0.7194,0.5739,-0.341,-0.7446,0.6218,-0.2381,-0.7462,0.15,-0.3745,-0.915,0.2824,-0.4003,-0.8718,0.6021,-0.3465,-0.7194,0.15,-0.3745,-0.915,-0.143,-0.4138,-0.899,0.0588,-0.4201,-0.9056,0.2824,-0.4003,-0.8718,-0.143,-0.4138,-0.899,0.2016,-0.3693,-0.9072,0.0878,-0.4305,-0.8983,0.0588,-0.4201,-0.9056,0.2016,-0.3693,-0.9072,0.0859,-0.3818,-0.9203,-0.0741,-0.4215,-0.9038,0.0878,-0.4305,-0.8983,0.0859,-0.3818,-0.9203,-0.3582,-0.3961,-0.8454,-0.3711,-0.3723,-0.8507,-0.0741,-0.4215,-0.9038,-0.3582,-0.3961,-0.8454,-0.8166,-0.2973,-0.4948,-0.6842,-0.268,-0.6782,-0.3711,-0.3723,-0.8507,-0.8166,-0.2973,-0.4948,-0.9906,-0.1279,-0.0487,-0.8912,-0.1413,-0.4311,-0.6842,-0.268,-0.6782,-0.9906,-0.1279,-0.0487,-0.9433,0.0374,0.3298,-0.9848,-0.0206,-0.1727,-0.8912,-0.1413,-0.4311,-0.9433,0.0374,0.3298,-0.9071,-0.26,-0.331,-0.9057,-0.1632,-0.3911,-0.9848,-0.0206,-0.1727,-0.9057,-0.1632,-0.3911,-0.7775,-0.2623,-0.5715,-0.6285,-0.2076,-0.7496,-0.9062,-0.1217,-0.4049,-0.7775,-0.2623,-0.5715,-0.9187,0.2555,0.301,-0.9088,0.0432,0.415,-0.6285,-0.2076,-0.7496,-0.9187,0.2555,0.301,-0.7926,0.3133,0.5231,-0.8738,0.0916,0.4776,-0.9088,0.0432,0.415,-0.7926,0.3133,0.5231,-0.9263,0.1842,0.3287,-0.9158,0.0701,0.3955,-0.8738,0.0916,0.4776,-0.9263,0.1842,0.3287,-0.6852,0.3543,0.6364,-0.7399,0.1356,0.6589,-0.9158,0.0701,0.3955,-0.6852,0.3543,0.6364,-0.8835,0.2207,0.4131,-0.9605,0.0326,0.2764,-0.7399,0.1356,0.6589,-0.8835,0.2207,0.4131,-0.4127,0.4518,0.7909,-0.3011,0.1906,0.9344,-0.9605,0.0326,0.2764,-0.4127,0.4518,0.7909,0.0613,0.4878,0.8708,0.0552,0.2187,0.9742,-0.3011,0.1906,0.9344,0.0613,0.4878,0.8708,-0.1284,0.4685,0.8741,-0.204,0.2064,0.957,0.0552,0.2187,0.9742,-0.1284,0.4685,0.8741,0.194,0.4728,0.8596,0.238,0.2104,0.9482,-0.204,0.2064,0.957,0.194,0.4728,0.8596,0.7027,0.3585,0.6146,0.7968,0.146,0.5863,0.238,0.2104,0.9482,0.7027,0.3585,0.6146,0.7752,0.2997,0.5561,0.7781,0.158,0.6079,0.7968,0.146,0.5863,0.7752,0.2997,0.5561,0.7365,0.306,0.6033,0.7074,0.175,0.6848,0.7781,0.158,0.6079,0.7365,0.306,0.6033,0.9129,0.1919,0.3604,0.9186,0.1077,0.3802,0.7074,0.175,0.6848,0.9129,0.1919,0.3604,0.9214,0.1732,0.3478,0.8685,0.1287,0.4786,0.9186,0.1077,0.3802,0.9214,0.1732,0.3478,0.9842,0.094,0.1502,0.9767,0.0613,0.2055,0.8685,0.1287,0.4786,0.9842,0.094,0.1502,0.9838,-0.0556,-0.1702,0.9901,-0.0213,-0.1388,0.9767,0.0613,0.2055,0.9838,-0.0556,-0.1702,0.9294,-0.1349,-0.3434,0.9435,-0.0667,-0.3247,0.9901,-0.0213,-0.1388,0.9294,-0.1349,-0.3434,0.6792,-0.2858,-0.676,0.6371,-0.173,-0.7511,0.9435,-0.0667,-0.3247,0.6792,-0.2858,-0.676,0.5739,-0.341,-0.7446,0.5114,-0.1919,-0.8376,0.6371,-0.173,-0.7511,0.5739,-0.341,-0.7446,0.6021,-0.3465,-0.7194,0.6472,-0.1651,-0.7442,0.5114,-0.1919,-0.8376,0.6021,-0.3465,-0.7194,0.2824,-0.4003,-0.8718,0.3124,-0.2174,-0.9247,0.6472,-0.1651,-0.7442,0.2824,-0.4003,-0.8718,0.0588,-0.4201,-0.9056,-0.0001,-0.2348,-0.972,0.3124,-0.2174,-0.9247,0.0588,-0.4201,-0.9056,0.0878,-0.4305,-0.8983,0.1676,-0.2276,-0.9592,-0.0001,-0.2348,-0.972,0.0878,-0.4305,-0.8983,-0.0741,-0.4215,-0.9038,0.0428,-0.2376,-0.9704,0.1676,-0.2276,-0.9592,-0.0741,-0.4215,-0.9038,-0.3711,-0.3723,-0.8507,-0.2939,-0.24,-0.9252,0.0428,-0.2376,-0.9704,-0.3711,-0.3723,-0.8507,-0.6842,-0.268,-0.6782,-0.6754,-0.2001,-0.7098,-0.2939,-0.24,-0.9252,-0.6842,-0.268,-0.6782,-0.8912,-0.1413,-0.4311,-0.9166,-0.1245,-0.38,-0.6754,-0.2001,-0.7098,-0.8912,-0.1413,-0.4311,-0.9848,-0.0206,-0.1727,-0.9981,-0.041,-0.0459,-0.9166,-0.1245,-0.38,-0.9848,-0.0206,-0.1727,-0.9057,-0.1632,-0.3911,-0.9062,-0.1217,-0.4049,-0.9981,-0.041,-0.0459,-0.9062,-0.1217,-0.4049,-0.6285,-0.2076,-0.7496,-0.6115,-0.2454,-0.7522,-0.8458,-0.2473,-0.4727,-0.6285,-0.2076,-0.7496,-0.9088,0.0432,0.415,-0.8905,-0.0907,0.4458,-0.6115,-0.2454,-0.7522,-0.9088,0.0432,0.415,-0.8738,0.0916,0.4776,-0.8857,-0.0978,0.4539,-0.8905,-0.0907,0.4458,-0.8738,0.0916,0.4776,-0.9158,0.0701,0.3955,-0.8952,-0.1035,0.4334,-0.8857,-0.0978,0.4539,-0.9158,0.0701,0.3955,-0.7399,0.1356,0.6589,-0.7461,-0.0351,0.6649,-0.8952,-0.1035,0.4334,-0.7399,0.1356,0.6589,-0.9605,0.0326,0.2764,-0.9511,-0.1445,0.2729,-0.7461,-0.0351,0.6649,-0.9605,0.0326,0.2764,-0.3011,0.1906,0.9344,-0.3705,0.0924,0.9242,-0.9511,-0.1445,0.2729,-0.3011,0.1906,0.9344,0.0552,0.2187,0.9742,0.061,0.1887,0.9801,-0.3705,0.0924,0.9242,0.0552,0.2187,0.9742,-0.204,0.2064,0.957,-0.2492,0.1197,0.961,0.061,0.1887,0.9801,-0.204,0.2064,0.957,0.238,0.2104,0.9482,0.152,0.2058,0.9667,-0.2492,0.1197,0.961,0.238,0.2104,0.9482,0.7968,0.146,0.5863,0.7444,0.268,0.6115,0.152,0.2058,0.9667,0.7968,0.146,0.5863,0.7781,0.158,0.6079,0.779,0.2651,0.5683,0.7444,0.268,0.6115,0.7781,0.158,0.6079,0.7074,0.175,0.6848,0.6593,0.2622,0.7046,0.779,0.2651,0.5683,0.7074,0.175,0.6848,0.9186,0.1077,0.3802,0.8771,0.2577,0.4053,0.6593,0.2622,0.7046,0.9186,0.1077,0.3802,0.8685,0.1287,0.4786,0.86,0.2592,0.4397,0.8771,0.2577,0.4053,0.8685,0.1287,0.4786,0.9767,0.0613,0.2055,0.9316,0.247,0.2667,0.86,0.2592,0.4397,0.9767,0.0613,0.2055,0.9901,-0.0213,-0.1388,0.9691,0.1831,-0.1656,0.9316,0.247,0.2667,0.9901,-0.0213,-0.1388,0.9435,-0.0667,-0.3247,0.936,0.1511,-0.3181,0.9691,0.1831,-0.1656,0.9435,-0.0667,-0.3247,0.6371,-0.173,-0.7511,0.6384,0.0138,-0.7696,0.936,0.1511,-0.3181,0.6371,-0.173,-0.7511,0.5114,-0.1919,-0.8376,0.5224,-0.0262,-0.8523,0.6384,0.0138,-0.7696,0.5114,-0.1919,-0.8376,0.6472,-0.1651,-0.7442,0.6596,0.0181,-0.7514,0.5224,-0.0262,-0.8523,0.6472,-0.1651,-0.7442,0.3124,-0.2174,-0.9247,0.3162,-0.0839,-0.945,0.6596,0.0181,-0.7514,0.3124,-0.2174,-0.9247,-0.0001,-0.2348,-0.972,0.0409,-0.1491,-0.988,0.3162,-0.0839,-0.945,-0.0001,-0.2348,-0.972,0.1676,-0.2276,-0.9592,0.2071,-0.1127,-0.9718,0.0409,-0.1491,-0.988,0.1676,-0.2276,-0.9592,0.0428,-0.2376,-0.9704,0.0764,-0.1411,-0.987,0.2071,-0.1127,-0.9718,0.0428,-0.2376,-0.9704,-0.2939,-0.24,-0.9252,-0.2773,-0.2038,-0.9389,0.0764,-0.1411,-0.987,-0.2939,-0.24,-0.9252,-0.6754,-0.2001,-0.7098,-0.6727,-0.2439,-0.6986,-0.2773,-0.2038,-0.9389,-0.6754,-0.2001,-0.7098,-0.9166,-0.1245,-0.38,-0.9072,-0.2346,-0.3491,-0.6727,-0.2439,-0.6986,-0.9166,-0.1245,-0.38,-0.9981,-0.041,-0.0459,-0.981,-0.194,-0.0035,-0.9072,-0.2346,-0.3491,-0.9981,-0.041,-0.0459,-0.9062,-0.1217,-0.4049,-0.8458,-0.2473,-0.4727,-0.981,-0.194,-0.0035,-0.8458,-0.2473,-0.4727,-0.6115,-0.2454,-0.7522,-0.6457,-0.2387,-0.7253,-0.8592,-0.2377,-0.4532,-0.6115,-0.2454,-0.7522,-0.8905,-0.0907,0.4458,-0.911,-0.0866,0.4031,-0.6457,-0.2387,-0.7253,-0.8905,-0.0907,0.4458,-0.8857,-0.0978,0.4539,-0.8566,-0.0711,0.5111,-0.911,-0.0866,0.4031,-0.8857,-0.0978,0.4539,-0.8952,-0.1035,0.4334,-0.9168,-0.1017,0.3862,-0.8566,-0.0711,0.5111,-0.8952,-0.1035,0.4334,-0.7461,-0.0351,0.6649,-0.7272,-0.0131,0.6864,-0.9168,-0.1017,0.3862,-0.7461,-0.0351,0.6649,-0.9511,-0.1445,0.2729,-0.9409,-0.1161,0.3181,-0.7272,-0.0131,0.6864,-0.9511,-0.1445,0.2729,-0.3705,0.0924,0.9242,-0.4017,0.099,0.9104,-0.9409,-0.1161,0.3181,-0.3705,0.0924,0.9242,0.061,0.1887,0.9801,0.0489,0.1936,0.9799,-0.4017,0.099,0.9104,0.061,0.1887,0.9801,-0.2492,0.1197,0.961,-0.2259,0.1395,0.9641,0.0489,0.1936,0.9799,-0.2492,0.1197,0.961,0.152,0.2058,0.9667,0.1518,0.2154,0.9647,-0.2259,0.1395,0.9641,0.152,0.2058,0.9667,0.7444,0.268,0.6115,0.7264,0.2654,0.6339,0.1518,0.2154,0.9647,0.7444,0.268,0.6115,0.779,0.2651,0.5683,0.761,0.2621,0.5934,0.7264,0.2654,0.6339,0.779,0.2651,0.5683,0.6593,0.2622,0.7046,0.6714,0.2631,0.6928,0.761,0.2621,0.5934,0.6593,0.2622,0.7046,0.8771,0.2577,0.4053,0.8803,0.2529,0.4014,0.6714,0.2631,0.6928,0.8771,0.2577,0.4053,0.86,0.2592,0.4397,0.8624,0.256,0.4367,0.8803,0.2529,0.4014,0.86,0.2592,0.4397,0.9316,0.247,0.2667,0.944,0.2388,0.2278,0.8624,0.256,0.4367,0.9316,0.247,0.2667,0.9691,0.1831,-0.1656,0.9716,0.1759,-0.1583,0.944,0.2388,0.2278,0.9691,0.1831,-0.1656,0.936,0.1511,-0.3181,0.9317,0.1378,-0.3361,0.9716,0.1759,-0.1583,0.936,0.1511,-0.3181,0.6384,0.0138,-0.7696,0.6526,0.0069,-0.7577,0.9317,0.1378,-0.3361,0.6384,0.0138,-0.7696,0.5224,-0.0262,-0.8523,0.5509,-0.0286,-0.8341,0.6526,0.0069,-0.7577,0.5224,-0.0262,-0.8523,0.6596,0.0181,-0.7514,0.6507,0.0046,-0.7593,0.5509,-0.0286,-0.8341,0.6596,0.0181,-0.7514,0.3162,-0.0839,-0.945,0.3094,-0.0944,-0.9462,0.6507,0.0046,-0.7593,0.3162,-0.0839,-0.945,0.0409,-0.1491,-0.988,0.0608,-0.1515,-0.9866,0.3094,-0.0944,-0.9462,0.0409,-0.1491,-0.988,0.2071,-0.1127,-0.9718,0.1825,-0.1248,-0.9752,0.0608,-0.1515,-0.9866,0.2071,-0.1127,-0.9718,0.0764,-0.1411,-0.987,0.041,-0.1525,-0.9875,0.1825,-0.1248,-0.9752,0.0764,-0.1411,-0.987,-0.2773,-0.2038,-0.9389,-0.2931,-0.2064,-0.9335,0.041,-0.1525,-0.9875,-0.2773,-0.2038,-0.9389,-0.6727,-0.2439,-0.6986,-0.6614,-0.2394,-0.7108,-0.2931,-0.2064,-0.9335,-0.6727,-0.2439,-0.6986,-0.9072,-0.2346,-0.3491,-0.8921,-0.2304,-0.3886,-0.6614,-0.2394,-0.7108,-0.9072,-0.2346,-0.3491,-0.981,-0.194,-0.0035,-0.9789,-0.1938,-0.0643,-0.8921,-0.2304,-0.3886,-0.981,-0.194,-0.0035,-0.8458,-0.2473,-0.4727,-0.8592,-0.2377,-0.4532,-0.9789,-0.1938,-0.0643,-0.8592,-0.2377,-0.4532,-0.6457,-0.2387,-0.7253,-0.6982,-0.0582,-0.7135,-0.8974,-0.0877,-0.4325,-0.6457,-0.2387,-0.7253,-0.911,-0.0866,0.4031,-0.9193,-0.0371,0.3917,-0.6982,-0.0582,-0.7135,-0.911,-0.0866,0.4031,-0.8566,-0.0711,0.5111,-0.8264,-0.062,0.5597,-0.9193,-0.0371,0.3917,-0.8566,-0.0711,0.5111,-0.9168,-0.1017,0.3862,-0.9198,-0.0687,0.3862,-0.8264,-0.062,0.5597,-0.9168,-0.1017,0.3862,-0.7272,-0.0131,0.6864,-0.6897,-0.0365,0.7232,-0.9198,-0.0687,0.3862,-0.7272,-0.0131,0.6864,-0.9409,-0.1161,0.3181,-0.9367,-0.0606,0.3448,-0.6897,-0.0365,0.7232,-0.9409,-0.1161,0.3181,-0.4017,0.099,0.9104,-0.3825,0.0269,0.9236,-0.9367,-0.0606,0.3448,-0.4017,0.099,0.9104,0.0489,0.1936,0.9799,0.0986,0.0636,0.9931,-0.3825,0.0269,0.9236,0.0489,0.1936,0.9799,-0.2259,0.1395,0.9641,-0.1835,0.0404,0.9822,0.0986,0.0636,0.9931,-0.2259,0.1395,0.9641,0.1518,0.2154,0.9647,0.1957,0.0841,0.9771,-0.1835,0.0404,0.9822,0.1518,0.2154,0.9647,0.7264,0.2654,0.6339,0.7668,0.1199,0.6306,0.1957,0.0841,0.9771,0.7264,0.2654,0.6339,0.761,0.2621,0.5934,0.7976,0.1126,0.5926,0.7668,0.1199,0.6306,0.761,0.2621,0.5934,0.6714,0.2631,0.6928,0.717,0.1098,0.6883,0.7976,0.1126,0.5926,0.6714,0.2631,0.6928,0.8803,0.2529,0.4014,0.9153,0.1207,0.3842,0.717,0.1098,0.6883,0.8803,0.2529,0.4014,0.8624,0.256,0.4367,0.8941,0.1216,0.4311,0.9153,0.1207,0.3842,0.8624,0.256,0.4367,0.944,0.2388,0.2278,0.9722,0.1318,0.1936,0.8941,0.1216,0.4311,0.944,0.2388,0.2278,0.9716,0.1759,-0.1583,0.9771,0.1212,-0.1751,0.9722,0.1318,0.1936,0.9716,0.1759,-0.1583,0.9317,0.1378,-0.3361,0.9227,0.1118,-0.369,0.9771,0.1212,-0.1751,0.9317,0.1378,-0.3361,0.6526,0.0069,-0.7577,0.6192,0.062,-0.7828,0.9227,0.1118,-0.369,0.6526,0.0069,-0.7577,0.5509,-0.0286,-0.8341,0.5266,0.0453,-0.8489,0.6192,0.062,-0.7828,0.5509,-0.0286,-0.8341,0.6507,0.0046,-0.7593,0.6232,0.0589,-0.7798,0.5266,0.0453,-0.8489,0.6507,0.0046,-0.7593,0.3094,-0.0944,-0.9462,0.256,0.0161,-0.9665,0.6232,0.0589,-0.7798,0.3094,-0.0944,-0.9462,0.0608,-0.1515,-0.9866,0.0223,-0.0112,-0.9997,0.256,0.0161,-0.9665,0.0608,-0.1515,-0.9866,0.1825,-0.1248,-0.9752,0.1381,0.0041,-0.9904,0.0223,-0.0112,-0.9997,0.1825,-0.1248,-0.9752,0.041,-0.1525,-0.9875,-0.0116,-0.0049,-0.9999,0.1381,0.0041,-0.9904,0.041,-0.1525,-0.9875,-0.2931,-0.2064,-0.9335,-0.3468,-0.0317,-0.9374,-0.0116,-0.0049,-0.9999,-0.2931,-0.2064,-0.9335,-0.6614,-0.2394,-0.7108,-0.7047,-0.0615,-0.7068,-0.3468,-0.0317,-0.9374,-0.6614,-0.2394,-0.7108,-0.8921,-0.2304,-0.3886,-0.9216,-0.0802,-0.3798,-0.7047,-0.0615,-0.7068,-0.8921,-0.2304,-0.3886,-0.9789,-0.1938,-0.0643,-0.9947,-0.0878,-0.0533,-0.9216,-0.0802,-0.3798,-0.9789,-0.1938,-0.0643,-0.8592,-0.2377,-0.4532,-0.8974,-0.0877,-0.4325,-0.9947,-0.0878,-0.0533,-0.8974,-0.0877,-0.4325,-0.6982,-0.0582,-0.7135,-0.8767,-0.1152,-0.4671,-0.8975,-0.1393,-0.4184,-0.6982,-0.0582,-0.7135,-0.9193,-0.0371,0.3917,-0.914,-0.1243,0.3863,-0.8767,-0.1152,-0.4671,-0.9193,-0.0371,0.3917,-0.8264,-0.062,0.5597,-0.8578,-0.1714,0.4845,-0.914,-0.1243,0.3863,-0.8264,-0.062,0.5597,-0.9198,-0.0687,0.3862,-0.8707,-0.1768,0.4589,-0.8578,-0.1714,0.4845,-0.9198,-0.0687,0.3862,-0.6897,-0.0365,0.7232,-0.7272,-0.1569,0.6683,-0.8707,-0.1768,0.4589,-0.6897,-0.0365,0.7232,-0.9367,-0.0606,0.3448,-0.7633,-0.1533,0.6276,-0.7272,-0.1569,0.6683,-0.9367,-0.0606,0.3448,-0.3825,0.0269,0.9236,-0.3541,-0.0585,0.9334,-0.7633,-0.1533,0.6276,-0.3825,0.0269,0.9236,0.0986,0.0636,0.9931,-0.0786,-0.0183,0.9967,-0.3541,-0.0585,0.9334,0.0986,0.0636,0.9931,-0.1835,0.0404,0.9822,-0.0751,-0.0222,0.9969,-0.0786,-0.0183,0.9967,-0.1835,0.0404,0.9822,0.1957,0.0841,0.9771,0.2051,0.0433,0.9778,-0.0751,-0.0222,0.9969,0.1957,0.0841,0.9771,0.7668,0.1199,0.6306,0.5616,0.1176,0.819,0.2051,0.0433,0.9778,0.7668,0.1199,0.6306,0.7976,0.1126,0.5926,0.6686,0.1262,0.7329,0.5616,0.1176,0.819,0.7976,0.1126,0.5926,0.717,0.1098,0.6883,0.7161,0.1314,0.6855,0.6686,0.1262,0.7329,0.717,0.1098,0.6883,0.9153,0.1207,0.3842,0.8651,0.1733,0.4707,0.7161,0.1314,0.6855,0.9153,0.1207,0.3842,0.8941,0.1216,0.4311,0.907,0.1852,0.3781,0.8651,0.1733,0.4707,0.8941,0.1216,0.4311,0.9722,0.1318,0.1936,0.9605,0.2139,0.1778,0.907,0.1852,0.3781,0.9722,0.1318,0.1936,0.9771,0.1212,-0.1751,0.9638,0.2355,-0.1248,0.9605,0.2139,0.1778,0.9771,0.1212,-0.1751,0.9227,0.1118,-0.369,0.9219,0.236,-0.3074,0.9638,0.2355,-0.1248,0.9227,0.1118,-0.369,0.6192,0.062,-0.7828,0.7665,0.2198,-0.6034,0.9219,0.236,-0.3074,0.6192,0.062,-0.7828,0.5266,0.0453,-0.8489,0.6351,0.191,-0.7485,0.7665,0.2198,-0.6034,0.5266,0.0453,-0.8489,0.6232,0.0589,-0.7798,0.5871,0.1762,-0.7901,0.6351,0.191,-0.7485,0.6232,0.0589,-0.7798,0.256,0.0161,-0.9665,0.3652,0.1424,-0.92,0.5871,0.1762,-0.7901,0.256,0.0161,-0.9665,0.0223,-0.0112,-0.9997,0.1236,0.0965,-0.9876,0.3652,0.1424,-0.92,0.0223,-0.0112,-0.9997,0.1381,0.0041,-0.9904,0.0565,0.0796,-0.9952,0.1236,0.0965,-0.9876,0.1381,0.0041,-0.9904,-0.0116,-0.0049,-0.9999,-0.1141,0.0535,-0.992,0.0565,0.0796,-0.9952,-0.0116,-0.0049,-0.9999,-0.3468,-0.0317,-0.9374,-0.361,0.0128,-0.9325,-0.1141,0.0535,-0.992,-0.3468,-0.0317,-0.9374,-0.7047,-0.0615,-0.7068,-0.6185,-0.0395,-0.7848,-0.361,0.0128,-0.9325,-0.7047,-0.0615,-0.7068,-0.9216,-0.0802,-0.3798,-0.8131,-0.0918,-0.5749,-0.6185,-0.0395,-0.7848,-0.9216,-0.0802,-0.3798,-0.9947,-0.0878,-0.0533,-0.9296,-0.137,-0.342,-0.8131,-0.0918,-0.5749,-0.9947,-0.0878,-0.0533,-0.8974,-0.0877,-0.4325,-0.8975,-0.1393,-0.4184,-0.9296,-0.137,-0.342,-0.8975,-0.1393,-0.4184,-0.8767,-0.1152,-0.4671,-0.9522,-0.2125,-0.2196,-0.9004,-0.2142,-0.3786,-0.8767,-0.1152,-0.4671,-0.914,-0.1243,0.3863,-0.9757,-0.1904,0.108,-0.9522,-0.2125,-0.2196,-0.914,-0.1243,0.3863,-0.8578,-0.1714,0.4845,-0.9323,-0.1824,0.3123,-0.9757,-0.1904,0.108,-0.8578,-0.1714,0.4845,-0.8707,-0.1768,0.4589,-0.881,-0.1723,0.4406,-0.9323,-0.1824,0.3123,-0.8707,-0.1768,0.4589,-0.7272,-0.1569,0.6683,-0.7638,-0.1338,0.6314,-0.881,-0.1723,0.4406,-0.7272,-0.1569,0.6683,-0.7633,-0.1533,0.6276,-0.6576,-0.1038,0.7462,-0.7638,-0.1338,0.6314,-0.7633,-0.1533,0.6276,-0.3541,-0.0585,0.9334,-0.4582,-0.0425,0.8878,-0.6576,-0.1038,0.7462,-0.3541,-0.0585,0.9334,-0.0786,-0.0183,0.9967,-0.2422,0.0122,0.9702,-0.4582,-0.0425,0.8878,-0.0786,-0.0183,0.9967,-0.0751,-0.0222,0.9969,-0.0808,0.0463,0.9957,-0.2422,0.0122,0.9702,-0.0751,-0.0222,0.9969,0.2051,0.0433,0.9778,0.1288,0.0972,0.9869,-0.0808,0.0463,0.9957,0.2051,0.0433,0.9778,0.5616,0.1176,0.819,0.3542,0.1477,0.9235,0.1288,0.0972,0.9869,0.5616,0.1176,0.819,0.6686,0.1262,0.7329,0.5306,0.1794,0.8284,0.3542,0.1477,0.9235,0.6686,0.1262,0.7329,0.7161,0.1314,0.6855,0.6684,0.202,0.7159,0.5306,0.1794,0.8284,0.7161,0.1314,0.6855,0.8651,0.1733,0.4707,0.8042,0.2267,0.5494,0.6684,0.202,0.7159,0.8651,0.1733,0.4707,0.907,0.1852,0.3781,0.8951,0.2392,0.3763,0.8042,0.2267,0.5494,0.907,0.1852,0.3781,0.9605,0.2139,0.1778,0.9526,0.2456,0.1795,0.8951,0.2392,0.3763,0.9605,0.2139,0.1778,0.9638,0.2355,-0.1248,0.9691,0.2415,-0.0505,0.9526,0.2456,0.1795,0.9638,0.2355,-0.1248,0.9219,0.236,-0.3074,0.94,0.2252,-0.2563,0.9691,0.2415,-0.0505,0.9219,0.236,-0.3074,0.7665,0.2198,-0.6034,0.8578,0.1964,-0.4749,0.94,0.2252,-0.2563,0.7665,0.2198,-0.6034,0.6351,0.191,-0.7485,0.745,0.1586,-0.6479,0.8578,0.1964,-0.4749,0.6351,0.191,-0.7485,0.5871,0.1762,-0.7901,0.6147,0.1198,-0.7796,0.745,0.1586,-0.6479,0.5871,0.1762,-0.7901,0.3652,0.1424,-0.92,0.4316,0.0736,-0.8991,0.6147,0.1198,-0.7796,0.3652,0.1424,-0.92,0.1236,0.0965,-0.9876,0.2356,0.0236,-0.9716,0.4316,0.0736,-0.8991,0.1236,0.0965,-0.9876,0.0565,0.0796,-0.9952,0.0548,-0.0204,-0.9983,0.2356,0.0236,-0.9716,0.0565,0.0796,-0.9952,-0.1141,0.0535,-0.992,-0.1442,-0.0632,-0.9875,0.0548,-0.0204,-0.9983,-0.1141,0.0535,-0.992,-0.361,0.0128,-0.9325,-0.3489,-0.1044,-0.9313,-0.1442,-0.0632,-0.9875,-0.361,0.0128,-0.9325,-0.6185,-0.0395,-0.7848,-0.5418,-0.1426,-0.8283,-0.3489,-0.1044,-0.9313,-0.6185,-0.0395,-0.7848,-0.8131,-0.0918,-0.5749,-0.7055,-0.1751,-0.6868,-0.5418,-0.1426,-0.8283,-0.8131,-0.0918,-0.5749,-0.9296,-0.137,-0.342,-0.8328,-0.2,-0.5162,-0.7055,-0.1751,-0.6868,-0.9296,-0.137,-0.342,-0.8975,-0.1393,-0.4184,-0.9004,-0.2142,-0.3786,-0.8328,-0.2,-0.5162,-0.9004,-0.2142,-0.3786,-0.9522,-0.2125,-0.2196,-0.9718,0.1008,-0.213,-0.9211,0.0926,-0.3782,-0.9522,-0.2125,-0.2196,-0.9757,-0.1904,0.108,-0.9889,0.109,0.1008,-0.9718,0.1008,-0.213,-0.9757,-0.1904,0.108,-0.9323,-0.1824,0.3123,-0.9436,0.1084,0.3129,-0.9889,0.109,0.1008,-0.9323,-0.1824,0.3123,-0.881,-0.1723,0.4406,-0.892,0.1053,0.4396,-0.9436,0.1084,0.3129,-0.881,-0.1723,0.4406,-0.7638,-0.1338,0.6314,-0.771,0.0971,0.6294,-0.892,0.1053,0.4396,-0.7638,-0.1338,0.6314,-0.6576,-0.1038,0.7462,-0.6614,0.0883,0.7448,-0.771,0.0971,0.6294,-0.6576,-0.1038,0.7462,-0.4582,-0.0425,0.8878,-0.4643,0.0717,0.8828,-0.6614,0.0883,0.7448,-0.4582,-0.0425,0.8878,-0.2422,0.0122,0.9702,-0.2493,0.052,0.967,-0.4643,0.0717,0.8828,-0.2422,0.0122,0.9702,-0.0808,0.0463,0.9957,-0.0827,0.0358,0.9959,-0.2493,0.052,0.967,-0.0808,0.0463,0.9957,0.1288,0.0972,0.9869,0.1325,0.0144,0.9911,-0.0827,0.0358,0.9959,0.1288,0.0972,0.9869,0.3542,0.1477,0.9235,0.3641,-0.0098,0.9313,0.1325,0.0144,0.9911,0.3542,0.1477,0.9235,0.5306,0.1794,0.8284,0.5465,-0.03,0.8369,0.3641,-0.0098,0.9313,0.5306,0.1794,0.8284,0.6684,0.202,0.7159,0.6947,-0.0471,0.7178,0.5465,-0.03,0.8369,0.6684,0.202,0.7159,0.8042,0.2267,0.5494,0.8365,-0.0645,0.5442,0.6947,-0.0471,0.7178,0.8042,0.2267,0.5494,0.8951,0.2392,0.3763,0.9273,-0.077,0.3662,0.8365,-0.0645,0.5442,0.8951,0.2392,0.3763,0.9526,0.2456,0.1795,0.9841,-0.0865,0.155,0.9273,-0.077,0.3662,0.9526,0.2456,0.1795,0.9691,0.2415,-0.0505,0.9932,-0.0917,-0.0715,0.9841,-0.0865,0.155,0.9691,0.2415,-0.0505,0.94,0.2252,-0.2563,0.9553,-0.0919,-0.281,0.9932,-0.0917,-0.0715,0.94,0.2252,-0.2563,0.8578,0.1964,-0.4749,0.8657,-0.087,-0.493,0.9553,-0.0919,-0.281,0.8578,0.1964,-0.4749,0.745,0.1586,-0.6479,0.7497,-0.0787,-0.657,0.8657,-0.087,-0.493,0.745,0.1586,-0.6479,0.6147,0.1198,-0.7796,0.6146,-0.0678,-0.7859,0.7497,-0.0787,-0.657,0.6147,0.1198,-0.7796,0.4316,0.0736,-0.8991,0.43,-0.0515,-0.9014,0.6146,-0.0678,-0.7859,0.4316,0.0736,-0.8991,0.2356,0.0236,-0.9716,0.2396,-0.034,-0.9703,0.43,-0.0515,-0.9014,0.2356,0.0236,-0.9716,0.0548,-0.0204,-0.9983,0.0559,-0.0163,-0.9983,0.2396,-0.034,-0.9703,0.0548,-0.0204,-0.9983,-0.1442,-0.0632,-0.9875,-0.1447,0.0038,-0.9895,0.0559,-0.0163,-0.9983,-0.1442,-0.0632,-0.9875,-0.3489,-0.1044,-0.9313,-0.3512,0.0255,-0.936,-0.1447,0.0038,-0.9895,-0.3489,-0.1044,-0.9313,-0.5418,-0.1426,-0.8283,-0.5474,0.0469,-0.8356,-0.3512,0.0255,-0.936,-0.5418,-0.1426,-0.8283,-0.7055,-0.1751,-0.6868,-0.7158,0.0663,-0.6951,-0.5474,0.0469,-0.8356,-0.7055,-0.1751,-0.6868,-0.8328,-0.2,-0.5162,-0.848,0.0827,-0.5235,-0.7158,0.0663,-0.6951,-0.8328,-0.2,-0.5162,-0.9004,-0.2142,-0.3786,-0.9211,0.0926,-0.3782,-0.848,0.0827,-0.5235,-0.9211,0.0926,-0.3782,-0.9718,0.1008,-0.213,-0.9409,0.1811,-0.2863,-0.8751,0.1973,-0.4418,-0.9718,0.1008,-0.213,-0.9889,0.109,0.1008,-0.9903,0.1377,0.0205,-0.9409,0.1811,-0.2863,-0.9889,0.109,0.1008,-0.9436,0.1084,0.3129,-0.9676,0.0995,0.2322,-0.9903,0.1377,0.0205,-0.9436,0.1084,0.3129,-0.892,0.1053,0.4396,-0.9225,0.0702,0.3796,-0.9676,0.0995,0.2322,-0.892,0.1053,0.4396,-0.771,0.0971,0.6294,-0.8181,0.0249,0.5746,-0.9225,0.0702,0.3796,-0.771,0.0971,0.6294,-0.6614,0.0883,0.7448,-0.7081,-0.0103,0.7061,-0.8181,0.0249,0.5746,-0.6614,0.0883,0.7448,-0.4643,0.0717,0.8828,-0.5069,-0.0611,0.8599,-0.7081,-0.0103,0.7061,-0.4643,0.0717,0.8828,-0.2493,0.052,0.967,-0.304,-0.1018,0.9472,-0.5069,-0.0611,0.8599,-0.2493,0.052,0.967,-0.0827,0.0358,0.9959,-0.1299,-0.13,0.983,-0.304,-0.1018,0.9472,-0.0827,0.0358,0.9959,0.1325,0.0144,0.9911,0.0884,-0.1582,0.9834,-0.1299,-0.13,0.983,0.1325,0.0144,0.9911,0.3641,-0.0098,0.9313,0.3153,-0.1794,0.9319,0.0884,-0.1582,0.9834,0.3641,-0.0098,0.9313,0.5465,-0.03,0.8369,0.491,-0.189,0.8504,0.3153,-0.1794,0.9319,0.5465,-0.03,0.8369,0.6947,-0.0471,0.7178,0.6433,-0.1911,0.7414,0.491,-0.189,0.8504,0.6947,-0.0471,0.7178,0.8365,-0.0645,0.5442,0.7893,-0.1847,0.5856,0.6433,-0.1911,0.7414,0.8365,-0.0645,0.5442,0.9273,-0.077,0.3662,0.8886,-0.1716,0.4253,0.7893,-0.1847,0.5856,0.9273,-0.077,0.3662,0.9841,-0.0865,0.155,0.962,-0.1491,0.2286,0.8886,-0.1716,0.4253,0.9841,-0.0865,0.155,0.9932,-0.0917,-0.0715,0.9929,-0.1184,0.0145,0.962,-0.1491,0.2286,0.9932,-0.0917,-0.0715,0.9553,-0.0919,-0.281,0.9782,-0.0834,-0.1901,0.9929,-0.1184,0.0145,0.9553,-0.0919,-0.281,0.8657,-0.087,-0.493,0.9138,-0.0404,-0.4042,0.9782,-0.0834,-0.1901,0.8657,-0.087,-0.493,0.7497,-0.0787,-0.657,0.8142,0.0011,-0.5806,0.9138,-0.0404,-0.4042,0.7497,-0.0787,-0.657,0.6146,-0.0678,-0.7859,0.6916,0.0398,-0.7212,0.8142,0.0011,-0.5806,0.6146,-0.0678,-0.7859,0.43,-0.0515,-0.9014,0.5214,0.0826,-0.8493,0.6916,0.0398,-0.7212,0.43,-0.0515,-0.9014,0.2396,-0.034,-0.9703,0.3303,0.1214,-0.936,0.5214,0.0826,-0.8493,0.2396,-0.034,-0.9703,0.0559,-0.0163,-0.9983,0.1489,0.1517,-0.9771,0.3303,0.1214,-0.936,0.0559,-0.0163,-0.9983,-0.1447,0.0038,-0.9895,-0.0504,0.1785,-0.9826,0.1489,0.1517,-0.9771,-0.1447,0.0038,-0.9895,-0.3512,0.0255,-0.936,-0.2579,0.1994,-0.9454,-0.0504,0.1785,-0.9826,-0.3512,0.0255,-0.936,-0.5474,0.0469,-0.8356,-0.4589,0.2121,-0.8628,-0.2579,0.1994,-0.9454,-0.5474,0.0469,-0.8356,-0.7158,0.0663,-0.6951,-0.6374,0.2151,-0.7399,-0.4589,0.2121,-0.8628,-0.7158,0.0663,-0.6951,-0.848,0.0827,-0.5235,-0.7841,0.2088,-0.5845,-0.6374,0.2151,-0.7399,-0.848,0.0827,-0.5235,-0.9211,0.0926,-0.3782,-0.8751,0.1973,-0.4418,-0.7841,0.2088,-0.5845,-0.8751,0.1973,-0.4418,-0.9409,0.1811,-0.2863,-0.9617,0.194,-0.1935,-0.9073,0.2066,-0.3662,-0.9409,0.1811,-0.2863,-0.9903,0.1377,0.0205,-0.9813,0.1563,0.1126,-0.9617,0.194,-0.1935,-0.9903,0.1377,0.0205,-0.9676,0.0995,0.2322,-0.945,0.1264,0.3018,-0.9813,0.1563,0.1126,-0.9676,0.0995,0.2322,-0.9225,0.0702,0.3796,-0.8855,0.0978,0.4542,-0.945,0.1264,0.3018,-0.9225,0.0702,0.3796,-0.8181,0.0249,0.5746,-0.7691,0.0555,0.6367,-0.8855,0.0978,0.4542,-0.8181,0.0249,0.5746,-0.7081,-0.0103,0.7061,-0.6507,0.0212,0.7591,-0.7691,0.0555,0.6367,-0.7081,-0.0103,0.7061,-0.5069,-0.0611,0.8599,-0.4513,-0.0286,0.8919,-0.6507,0.0212,0.7591,-0.5069,-0.0611,0.8599,-0.304,-0.1018,0.9472,-0.2397,-0.0733,0.9681,-0.4513,-0.0286,0.8919,-0.304,-0.1018,0.9472,-0.1299,-0.13,0.983,-0.0689,-0.1036,0.9922,-0.2397,-0.0733,0.9681,-0.1299,-0.13,0.983,0.0884,-0.1582,0.9834,0.1398,-0.1362,0.9808,-0.0689,-0.1036,0.9922,0.0884,-0.1582,0.9834,0.3153,-0.1794,0.9319,0.3582,-0.1644,0.9191,0.1398,-0.1362,0.9808,0.3153,-0.1794,0.9319,0.491,-0.189,0.8504,0.5345,-0.1814,0.8255,0.3582,-0.1644,0.9191,0.491,-0.189,0.8504,0.6433,-0.1911,0.7414,0.6769,-0.1897,0.7112,0.5345,-0.1814,0.8255,0.6433,-0.1911,0.7414,0.7893,-0.1847,0.5856,0.8136,-0.1914,0.549,0.6769,-0.1897,0.7112,0.7893,-0.1847,0.5856,0.8886,-0.1716,0.4253,0.9081,-0.1847,0.3757,0.8136,-0.1914,0.549,0.8886,-0.1716,0.4253,0.962,-0.1491,0.2286,0.9694,-0.1692,0.1781,0.9081,-0.1847,0.3757,0.962,-0.1491,0.2286,0.9929,-0.1184,0.0145,0.9884,-0.1439,-0.0476,0.9694,-0.1692,0.1781,0.9929,-0.1184,0.0145,0.9782,-0.0834,-0.1901,0.9599,-0.1125,-0.2569,0.9884,-0.1439,-0.0476,0.9782,-0.0834,-0.1901,0.9138,-0.0404,-0.4042,0.8777,-0.0718,-0.4737,0.9599,-0.1125,-0.2569,0.9138,-0.0404,-0.4042,0.8142,0.0011,-0.5806,0.7608,-0.0305,-0.6482,0.8777,-0.0718,-0.4737,0.8142,0.0011,-0.5806,0.6916,0.0398,-0.7212,0.621,0.0099,-0.7838,0.7608,-0.0305,-0.6482,0.6916,0.0398,-0.7212,0.5214,0.0826,-0.8493,0.4325,0.0554,-0.8999,0.621,0.0099,-0.7838,0.5214,0.0826,-0.8493,0.3303,0.1214,-0.936,0.2345,0.0963,-0.9673,0.4325,0.0554,-0.8999,0.3303,0.1214,-0.936,0.1489,0.1517,-0.9771,0.0453,0.1305,-0.9904,0.2345,0.0963,-0.9673,0.1489,0.1517,-0.9771,-0.0504,0.1785,-0.9826,-0.1559,0.1615,-0.9745,0.0453,0.1305,-0.9904,-0.0504,0.1785,-0.9826,-0.2579,0.1994,-0.9454,-0.3579,0.1868,-0.9149,-0.1559,0.1615,-0.9745,-0.2579,0.1994,-0.9454,-0.4589,0.2121,-0.8628,-0.5464,0.2042,-0.8122,-0.3579,0.1868,-0.9149,-0.4589,0.2121,-0.8628,-0.6374,0.2151,-0.7399,-0.7074,0.2126,-0.6741,-0.5464,0.2042,-0.8122,-0.6374,0.2151,-0.7399,-0.7841,0.2088,-0.5845,-0.835,0.212,-0.5078,-0.7074,0.2126,-0.6741,-0.7841,0.2088,-0.5845,-0.8751,0.1973,-0.4418,-0.9073,0.2066,-0.3662,-0.835,0.212,-0.5078,-0.9073,0.2066,-0.3662,-0.9617,0.194,-0.1935,-0.9556,0.2705,-0.1167,-0.9226,0.2479,-0.2957,-0.9617,0.194,-0.1935,-0.9813,0.1563,0.1126,-0.9395,0.2877,0.1861,-0.9556,0.2705,-0.1167,-0.9813,0.1563,0.1126,-0.945,0.1264,0.3018,-0.8838,0.2852,0.3708,-0.9395,0.2877,0.1861,-0.945,0.1264,0.3018,-0.8855,0.0978,0.4542,-0.8056,0.2749,0.5248,-0.8838,0.2852,0.3708,-0.8855,0.0978,0.4542,-0.7691,0.0555,0.6367,-0.6778,0.2513,0.6909,-0.8056,0.2749,0.5248,-0.7691,0.0555,0.6367,-0.6507,0.0212,0.7591,-0.5469,0.2236,0.8068,-0.6778,0.2513,0.6909,-0.6507,0.0212,0.7591,-0.4513,-0.0286,0.8919,-0.3376,0.1739,0.9251,-0.5469,0.2236,0.8068,-0.4513,-0.0286,0.8919,-0.2397,-0.0733,0.9681,-0.1348,0.1215,0.9834,-0.3376,0.1739,0.9251,-0.2397,-0.0733,0.9681,-0.0689,-0.1036,0.9922,0.0408,0.0737,0.9964,-0.1348,0.1215,0.9834,-0.0689,-0.1036,0.9922,0.1398,-0.1362,0.9808,0.2482,0.0139,0.9686,0.0408,0.0737,0.9964,0.1398,-0.1362,0.9808,0.3582,-0.1644,0.9191,0.4559,-0.0499,0.8886,0.2482,0.0139,0.9686,0.3582,-0.1644,0.9191,0.5345,-0.1814,0.8255,0.6167,-0.1026,0.7805,0.4559,-0.0499,0.8886,0.5345,-0.1814,0.8255,0.6769,-0.1897,0.7112,0.7472,-0.1485,0.6478,0.6167,-0.1026,0.7805,0.6769,-0.1897,0.7112,0.8136,-0.1914,0.549,0.8609,-0.193,0.4707,0.7472,-0.1485,0.6478,0.8136,-0.1914,0.549,0.9081,-0.1847,0.3757,0.9302,-0.2254,0.2897,0.8609,-0.193,0.4707,0.9081,-0.1847,0.3757,0.9694,-0.1692,0.1781,0.9645,-0.2496,0.0863,0.9302,-0.2254,0.2897,0.9694,-0.1692,0.1781,0.9884,-0.1439,-0.0476,0.9556,-0.263,-0.1326,0.9645,-0.2496,0.0863,0.9884,-0.1439,-0.0476,0.9599,-0.1125,-0.2569,0.9058,-0.2635,-0.3317,0.9556,-0.263,-0.1326,0.9599,-0.1125,-0.2569,0.8777,-0.0718,-0.4737,0.8088,-0.2511,-0.5318,0.9058,-0.2635,-0.3317,0.8777,-0.0718,-0.4737,0.7608,-0.0305,-0.6482,0.6837,-0.2281,-0.6932,0.8088,-0.2511,-0.5318,0.7608,-0.0305,-0.6482,0.621,0.0099,-0.7838,0.5414,-0.1974,-0.8173,0.6837,-0.2281,-0.6932,0.621,0.0099,-0.7838,0.4325,0.0554,-0.8999,0.3579,-0.1539,-0.921,0.5414,-0.1974,-0.8173,0.4325,0.0554,-0.8999,0.2345,0.0963,-0.9673,0.1601,-0.1033,-0.9817,0.3579,-0.1539,-0.921,0.2345,0.0963,-0.9673,0.0453,0.1305,-0.9904,-0.0262,-0.0526,-0.9983,0.1601,-0.1033,-0.9817,0.0453,0.1305,-0.9904,-0.1559,0.1615,-0.9745,-0.2235,0.0042,-0.9747,-0.0262,-0.0526,-0.9983,-0.1559,0.1615,-0.9745,-0.3579,0.1868,-0.9149,-0.4203,0.064,-0.9051,-0.2235,0.0042,-0.9747,-0.3579,0.1868,-0.9149,-0.5464,0.2042,-0.8122,-0.6014,0.1228,-0.7895,-0.4203,0.064,-0.9051,-0.5464,0.2042,-0.8122,-0.7074,0.2126,-0.6741,-0.7515,0.1756,-0.636,-0.6014,0.1228,-0.7895,-0.7074,0.2126,-0.6741,-0.835,0.212,-0.5078,-0.8632,0.2197,-0.4546,-0.7515,0.1756,-0.636,-0.835,0.212,-0.5078,-0.9073,0.2066,-0.3662,-0.9226,0.2479,-0.2957,-0.8632,0.2197,-0.4546,-0.9226,0.2479,-0.2957,-0.9556,0.2705,-0.1167,-0.9852,0.1278,-0.1145,-0.9529,0.086,-0.2909,-0.9556,0.2705,-0.1167,-0.9395,0.2877,0.1861,-0.9676,0.1851,0.1716,-0.9852,0.1278,-0.1145,-0.9395,0.2877,0.1861,-0.8838,0.2852,0.3708,-0.9084,0.2155,0.3582,-0.9676,0.1851,0.1716,-0.8838,0.2852,0.3708,-0.8056,0.2749,0.5248,-0.8275,0.2363,0.5094,-0.9084,0.2155,0.3582,-0.8056,0.2749,0.5248,-0.6778,0.2513,0.6909,-0.6937,0.2524,0.6746,-0.8275,0.2363,0.5094,-0.6778,0.2513,0.6909,-0.5469,0.2236,0.8068,-0.5564,0.258,0.7899,-0.6937,0.2524,0.6746,-0.5469,0.2236,0.8068,-0.3376,0.1739,0.9251,-0.3438,0.2529,0.9044,-0.5564,0.258,0.7899,-0.3376,0.1739,0.9251,-0.1348,0.1215,0.9834,-0.1328,0.236,0.9626,-0.3438,0.2529,0.9044,-0.1348,0.1215,0.9834,0.0408,0.0737,0.9964,0.0501,0.2137,0.9756,-0.1328,0.236,0.9626,0.0408,0.0737,0.9964,0.2482,0.0139,0.9686,0.2622,0.179,0.9483,0.0501,0.2137,0.9756,0.2482,0.0139,0.9686,0.4559,-0.0499,0.8886,0.4735,0.1337,0.8706,0.2622,0.179,0.9483,0.4559,-0.0499,0.8886,0.6167,-0.1026,0.7805,0.6393,0.0885,0.7639,0.4735,0.1337,0.8706,0.6167,-0.1026,0.7805,0.7472,-0.1485,0.6478,0.7729,0.0429,0.633,0.6393,0.0885,0.7639,0.7472,-0.1485,0.6478,0.8609,-0.193,0.4707,0.8879,-0.0091,0.4599,0.7729,0.0429,0.633,0.8609,-0.193,0.4707,0.9302,-0.2254,0.2897,0.958,-0.056,0.2812,0.8879,-0.0091,0.4599,0.9302,-0.2254,0.2897,0.9645,-0.2496,0.0863,0.9914,-0.1022,0.0817,0.958,-0.056,0.2812,0.9645,-0.2496,0.0863,0.9556,-0.263,-0.1326,0.9805,-0.1455,-0.1324,0.9914,-0.1022,0.0817,0.9556,-0.263,-0.1326,0.9058,-0.2635,-0.3317,0.9273,-0.1792,-0.3287,0.9805,-0.1455,-0.1324,0.9058,-0.2635,-0.3317,0.8088,-0.2511,-0.5318,0.826,-0.2064,-0.5246,0.9273,-0.1792,-0.3287,0.8088,-0.2511,-0.5318,0.6837,-0.2281,-0.6932,0.6952,-0.2219,-0.6837,0.826,-0.2064,-0.5246,0.6837,-0.2281,-0.6932,0.5414,-0.1974,-0.8173,0.5455,-0.2271,-0.8068,0.6952,-0.2219,-0.6837,0.5414,-0.1974,-0.8173,0.3579,-0.1539,-0.921,0.3549,-0.2221,-0.9081,0.5455,-0.2271,-0.8068,0.3579,-0.1539,-0.921,0.1601,-0.1033,-0.9817,0.1507,-0.2065,-0.9668,0.3549,-0.2221,-0.9081,0.1601,-0.1033,-0.9817,-0.0262,-0.0526,-0.9983,-0.043,-0.1831,-0.9822,0.1507,-0.2065,-0.9668,-0.0262,-0.0526,-0.9983,-0.2235,0.0042,-0.9747,-0.2458,-0.1501,-0.9576,-0.043,-0.1831,-0.9822,-0.2235,0.0042,-0.9747,-0.4203,0.064,-0.9051,-0.4461,-0.1081,-0.8884,-0.2458,-0.1501,-0.9576,-0.4203,0.064,-0.9051,-0.6014,0.1228,-0.7895,-0.629,-0.0594,-0.7752,-0.4461,-0.1081,-0.8884,-0.6014,0.1228,-0.7895,-0.7515,0.1756,-0.636,-0.78,-0.0076,-0.6257,-0.629,-0.0594,-0.7752,-0.7515,0.1756,-0.636,-0.8632,0.2197,-0.4546,-0.8922,0.0445,-0.4494,-0.78,-0.0076,-0.6257,-0.8632,0.2197,-0.4546,-0.9226,0.2479,-0.2957,-0.9529,0.086,-0.2909,-0.8922,0.0445,-0.4494,-0.9529,0.086,-0.2909,-0.9852,0.1278,-0.1145,-0.9996,0.0214,-0.018,-0.9802,-0.0482,-0.1923,-0.9852,0.1278,-0.1145,-0.9676,0.1851,0.1716,-0.9614,0.1246,0.2452,-0.9996,0.0214,-0.018,-0.9676,0.1851,0.1716,-0.9084,0.2155,0.3582,-0.8913,0.1893,0.4119,-0.9614,0.1246,0.2452,-0.9084,0.2155,0.3582,-0.8275,0.2363,0.5094,-0.7957,0.2448,0.554,-0.8913,0.1893,0.4119,-0.8275,0.2363,0.5094,-0.6937,0.2524,0.6746,-0.6529,0.2993,0.6958,-0.7957,0.2448,0.554,-0.6937,0.2524,0.6746,-0.5564,0.258,0.7899,-0.5045,0.3373,0.7948,-0.6529,0.2993,0.6958,-0.5564,0.258,0.7899,-0.3438,0.2529,0.9044,-0.2862,0.3702,0.8838,-0.5045,0.3373,0.7948,-0.3438,0.2529,0.9044,-0.1328,0.236,0.9626,-0.0737,0.3826,0.921,-0.2862,0.3702,0.8838,-0.1328,0.236,0.9626,0.0501,0.2137,0.9756,0.1138,0.3797,0.9181,-0.0737,0.3826,0.921,0.0501,0.2137,0.9756,0.2622,0.179,0.9483,0.3246,0.3603,0.8745,0.1138,0.3797,0.9181,0.2622,0.179,0.9483,0.4735,0.1337,0.8706,0.5303,0.3224,0.7841,0.3246,0.3603,0.8745,0.4735,0.1337,0.8706,0.6393,0.0885,0.7639,0.6908,0.2751,0.6687,0.5303,0.3224,0.7841,0.6393,0.0885,0.7639,0.7729,0.0429,0.633,0.8177,0.2199,0.532,0.6908,0.2751,0.6687,0.7729,0.0429,0.633,0.8879,-0.0091,0.4599,0.9213,0.1504,0.3587,0.8177,0.2199,0.532,0.8879,-0.0091,0.4599,0.958,-0.056,0.2812,0.98,0.0802,0.1822,0.9213,0.1504,0.3587,0.958,-0.056,0.2812,0.9914,-0.1022,0.0817,1,0.0048,-0.0086,0.98,0.0802,0.1822,0.9914,-0.1022,0.0817,0.9805,-0.1455,-0.1324,0.9751,-0.0742,-0.2092,1,0.0048,-0.0086,0.9805,-0.1455,-0.1324,0.9273,-0.1792,-0.3287,0.9095,-0.1448,-0.3898,0.9751,-0.0742,-0.2092,0.9273,-0.1792,-0.3287,0.826,-0.2064,-0.5246,0.7969,-0.2131,-0.5652,0.9095,-0.1448,-0.3898,0.826,-0.2064,-0.5246,0.6952,-0.2219,-0.6837,0.6561,-0.2673,-0.7057,0.7969,-0.2131,-0.5652,0.6952,-0.2219,-0.6837,0.5455,-0.2271,-0.8068,0.4974,-0.3074,-0.8113,0.6561,-0.2673,-0.7057,0.5455,-0.2271,-0.8068,0.3549,-0.2221,-0.9081,0.3004,-0.3374,-0.8921,0.4974,-0.3074,-0.8113,0.3549,-0.2221,-0.9081,0.1507,-0.2065,-0.9668,0.091,-0.3511,-0.9319,0.3004,-0.3374,-0.8921,0.1507,-0.2065,-0.9668,-0.043,-0.1831,-0.9822,-0.1075,-0.3487,-0.931,0.091,-0.3511,-0.9319,-0.043,-0.1831,-0.9822,-0.2458,-0.1501,-0.9576,-0.3119,-0.3307,-0.8907,-0.1075,-0.3487,-0.931,-0.2458,-0.1501,-0.9576,-0.4461,-0.1081,-0.8884,-0.5101,-0.2958,-0.8077,-0.3119,-0.3307,-0.8907,-0.4461,-0.1081,-0.8884,-0.629,-0.0594,-0.7752,-0.6871,-0.2452,-0.6839,-0.5101,-0.2958,-0.8077,-0.629,-0.0594,-0.7752,-0.78,-0.0076,-0.6257,-0.8292,-0.1825,-0.5284,-0.6871,-0.2452,-0.6839,-0.78,-0.0076,-0.6257,-0.8922,0.0445,-0.4494,-0.9299,-0.1114,-0.3506,-0.8292,-0.1825,-0.5284,-0.8922,0.0445,-0.4494,-0.9529,0.086,-0.2909,-0.9802,-0.0482,-0.1923,-0.9299,-0.1114,-0.3506,-0.9802,-0.0482,-0.1923,-0.9996,0.0214,-0.018,-0.9919,-0.1263,0.0151,-0.9727,-0.1706,-0.1575,-0.9996,0.0214,-0.018,-0.9614,0.1246,0.2452,-0.9623,-0.0525,0.2668,-0.9919,-0.1263,0.0151,-0.9614,0.1246,0.2452,-0.8913,0.1893,0.4119,-0.8871,0.0114,0.4614,-0.9623,-0.0525,0.2668,-0.8913,0.1893,0.4119,-0.7957,0.2448,0.554,-0.7978,0.0629,0.5996,-0.8871,0.0114,0.4614,-0.7957,0.2448,0.554,-0.6529,0.2993,0.6958,-0.6466,0.1275,0.7521,-0.7978,0.0629,0.5996,-0.6529,0.2993,0.6958,-0.5045,0.3373,0.7948,-0.4915,0.1788,0.8523,-0.6466,0.1275,0.7521,-0.5045,0.3373,0.7948,-0.2862,0.3702,0.8838,-0.2683,0.2358,0.934,-0.4915,0.1788,0.8523,-0.2862,0.3702,0.8838,-0.0737,0.3826,0.921,-0.0461,0.2768,0.9598,-0.2683,0.2358,0.934,-0.0737,0.3826,0.921,0.1138,0.3797,0.9181,0.1486,0.3018,0.9417,-0.0461,0.2768,0.9598,0.1138,0.3797,0.9181,0.3246,0.3603,0.8745,0.3599,0.317,0.8775,0.1486,0.3018,0.9417,0.3246,0.3603,0.8745,0.5303,0.3224,0.7841,0.5587,0.3173,0.7663,0.3599,0.317,0.8775,0.5303,0.3224,0.7841,0.6908,0.2751,0.6687,0.7098,0.3046,0.6352,0.5587,0.3173,0.7663,0.6908,0.2751,0.6687,0.8177,0.2199,0.532,0.8294,0.2813,0.4826,0.7098,0.3046,0.6352,0.8177,0.2199,0.532,0.9213,0.1504,0.3587,0.9223,0.2454,0.2987,0.8294,0.2813,0.4826,0.9213,0.1504,0.3587,0.98,0.0802,0.1822,0.9719,0.2036,0.1179,0.9223,0.2454,0.2987,0.98,0.0802,0.1822,1,0.0048,-0.0086,0.9851,0.1509,-0.0825,0.9719,0.2036,0.1179,1,0.0048,-0.0086,0.9751,-0.0742,-0.2092,0.9554,0.0921,-0.2807,0.9851,0.1509,-0.0825,0.9751,-0.0742,-0.2092,0.9095,-0.1448,-0.3898,0.885,0.031,-0.4647,0.9554,0.0921,-0.2807,0.9095,-0.1448,-0.3898,0.7969,-0.2131,-0.5652,0.7692,-0.0343,-0.6381,0.885,0.031,-0.4647,0.7969,-0.2131,-0.5652,0.6561,-0.2673,-0.7057,0.6259,-0.0937,-0.7742,0.7692,-0.0343,-0.6381,0.6561,-0.2673,-0.7057,0.4974,-0.3074,-0.8113,0.4618,-0.1465,-0.8748,0.6259,-0.0937,-0.7742,0.4974,-0.3074,-0.8113,0.3004,-0.3374,-0.8921,0.2621,-0.1964,-0.9448,0.4618,-0.1465,-0.8748,0.3004,-0.3374,-0.8921,0.091,-0.3511,-0.9319,0.0538,-0.2354,-0.9704,0.2621,-0.1964,-0.9448,0.091,-0.3511,-0.9319,-0.1075,-0.3487,-0.931,-0.143,-0.2613,-0.9546,0.0538,-0.2354,-0.9704,-0.1075,-0.3487,-0.931,-0.3119,-0.3307,-0.8907,-0.3407,-0.2762,-0.8987,-0.143,-0.2613,-0.9546,-0.3119,-0.3307,-0.8907,-0.5101,-0.2958,-0.8077,-0.5281,-0.2784,-0.8022,-0.3407,-0.2762,-0.8987,-0.5101,-0.2958,-0.8077,-0.6871,-0.2452,-0.6839,-0.6934,-0.2673,-0.6692,-0.5281,-0.2784,-0.8022,-0.6871,-0.2452,-0.6839,-0.8292,-0.1825,-0.5284,-0.8262,-0.2436,-0.508,-0.6934,-0.2673,-0.6692,-0.8292,-0.1825,-0.5284,-0.9299,-0.1114,-0.3506,-0.9214,-0.209,-0.3275,-0.8262,-0.2436,-0.508,-0.9299,-0.1114,-0.3506,-0.9802,-0.0482,-0.1923,-0.9727,-0.1706,-0.1575,-0.9214,-0.209,-0.3275,-0.9727,-0.1706,-0.1575,-0.9919,-0.1263,0.0151,-0.972,-0.234,0.0219,-0.9508,-0.2603,-0.1683,-0.9919,-0.1263,0.0151,-0.9623,-0.0525,0.2668,-0.9428,-0.1831,0.2787,-0.972,-0.234,0.0219,-0.9623,-0.0525,0.2668,-0.8871,0.0114,0.4614,-0.8782,-0.136,0.4586,-0.9428,-0.1831,0.2787,-0.8871,0.0114,0.4614,-0.7978,0.0629,0.5996,-0.7862,-0.0852,0.612,-0.8782,-0.136,0.4586,-0.7978,0.0629,0.5996,-0.6466,0.1275,0.7521,-0.6508,-0.0237,0.7589,-0.7862,-0.0852,0.612,-0.6466,0.1275,0.7521,-0.4915,0.1788,0.8523,-0.5041,0.034,0.863,-0.6508,-0.0237,0.7589,-0.4915,0.1788,0.8523,-0.2683,0.2358,0.934,-0.3022,0.1036,0.9476,-0.5041,0.034,0.863,-0.2683,0.2358,0.934,-0.0461,0.2768,0.9598,-0.0984,0.165,0.9814,-0.3022,0.1036,0.9476,-0.0461,0.2768,0.9598,0.1486,0.3018,0.9417,0.088,0.2146,0.9727,-0.0984,0.165,0.9814,0.1486,0.3018,0.9417,0.3599,0.317,0.8775,0.2903,0.2614,0.9205,0.088,0.2146,0.9727,0.3599,0.317,0.8775,0.5587,0.3173,0.7663,0.4863,0.2986,0.8212,0.2903,0.2614,0.9205,0.5587,0.3173,0.7663,0.7098,0.3046,0.6352,0.6451,0.3207,0.6935,0.4863,0.2986,0.8212,0.7098,0.3046,0.6352,0.8294,0.2813,0.4826,0.7722,0.3305,0.5426,0.6451,0.3207,0.6935,0.8294,0.2813,0.4826,0.9223,0.2454,0.2987,0.8745,0.3278,0.3575,0.7722,0.3305,0.5426,0.9223,0.2454,0.2987,0.9719,0.2036,0.1179,0.9352,0.3126,0.1665,0.8745,0.3278,0.3575,0.9719,0.2036,0.1179,0.9851,0.1509,-0.0825,0.9578,0.2853,-0.0361,0.9352,0.3126,0.1665,0.9851,0.1509,-0.0825,0.9554,0.0921,-0.2807,0.9378,0.2449,-0.2459,0.9578,0.2853,-0.0361,0.9554,0.0921,-0.2807,0.885,0.031,-0.4647,0.8779,0.1968,-0.4364,0.9378,0.2449,-0.2459,0.885,0.031,-0.4647,0.7692,-0.0343,-0.6381,0.7743,0.1382,-0.6176,0.8779,0.1968,-0.4364,0.7692,-0.0343,-0.6381,0.6259,-0.0937,-0.7742,0.6406,0.077,-0.764,0.7743,0.1382,-0.6176,0.6259,-0.0937,-0.7742,0.4618,-0.1465,-0.8748,0.4858,0.0162,-0.8739,0.6406,0.077,-0.764,0.4618,-0.1465,-0.8748,0.2621,-0.1964,-0.9448,0.2972,-0.0488,-0.9536,0.4858,0.0162,-0.8739,0.2621,-0.1964,-0.9448,0.0538,-0.2354,-0.9704,0.0957,-0.1101,-0.9893,0.2972,-0.0488,-0.9536,0.0538,-0.2354,-0.9704,-0.143,-0.2613,-0.9546,-0.0999,-0.1625,-0.9816,0.0957,-0.1101,-0.9893,-0.143,-0.2613,-0.9546,-0.3407,-0.2762,-0.8987,-0.2988,-0.2085,-0.9313,-0.0999,-0.1625,-0.9816,-0.3407,-0.2762,-0.8987,-0.5281,-0.2784,-0.8022,-0.4898,-0.245,-0.8367,-0.2988,-0.2085,-0.9313,-0.5281,-0.2784,-0.8022,-0.6934,-0.2673,-0.6692,-0.66,-0.2691,-0.7014,-0.4898,-0.245,-0.8367,-0.6934,-0.2673,-0.6692,-0.8262,-0.2436,-0.508,-0.7979,-0.2792,-0.5343,-0.66,-0.2691,-0.7014,-0.8262,-0.2436,-0.508,-0.9214,-0.209,-0.3275,-0.8973,-0.275,-0.3452,-0.7979,-0.2792,-0.5343,-0.9214,-0.209,-0.3275,-0.9727,-0.1706,-0.1575,-0.9508,-0.2603,-0.1683,-0.8973,-0.275,-0.3452,-0.9508,-0.2603,-0.1683,-0.972,-0.234,0.0219,-0.9333,-0.3408,0.1133,-0.9152,-0.3959,-0.0756,-0.972,-0.234,0.0219,-0.9428,-0.1831,0.2787,-0.9036,-0.2492,0.3485,-0.9333,-0.3408,0.1133,-0.9428,-0.1831,0.2787,-0.8782,-0.136,0.4586,-0.8374,-0.1628,0.5218,-0.9036,-0.2492,0.3485,-0.8782,-0.136,0.4586,-0.7862,-0.0852,0.612,-0.7444,-0.0737,0.6636,-0.8374,-0.1628,0.5218,-0.7862,-0.0852,0.612,-0.6508,-0.0237,0.7589,-0.6109,0.0284,0.7912,-0.7444,-0.0737,0.6636,-0.6508,-0.0237,0.7589,-0.5041,0.034,0.863,-0.4647,0.1227,0.8769,-0.6109,0.0284,0.7912,-0.5041,0.034,0.863,-0.3022,0.1036,0.9476,-0.2732,0.2279,0.9346,-0.4647,0.1227,0.8769,-0.3022,0.1036,0.9476,-0.0984,0.165,0.9814,-0.0805,0.3174,0.9449,-0.2732,0.2279,0.9346,-0.0984,0.165,0.9814,0.088,0.2146,0.9727,0.0996,0.3886,0.916,-0.0805,0.3174,0.9449,0.088,0.2146,0.9727,0.2903,0.2614,0.9205,0.2898,0.4502,0.8446,0.0996,0.3886,0.916,0.2903,0.2614,0.9205,0.4863,0.2986,0.8212,0.4715,0.4937,0.7307,0.2898,0.4502,0.8446,0.4863,0.2986,0.8212,0.6451,0.3207,0.6935,0.6203,0.5142,0.5923,0.4715,0.4937,0.7307,0.6451,0.3207,0.6935,0.7722,0.3305,0.5426,0.7405,0.5148,0.432,0.6203,0.5142,0.5923,0.7722,0.3305,0.5426,0.8745,0.3278,0.3575,0.8345,0.4943,0.2436,0.7405,0.5148,0.432,0.8745,0.3278,0.3575,0.9352,0.3126,0.1665,0.8888,0.4552,0.0524,0.8345,0.4943,0.2436,0.9352,0.3126,0.1665,0.9578,0.2853,-0.0361,0.906,0.3967,-0.1472,0.8888,0.4552,0.0524,0.9578,0.2853,-0.0361,0.9378,0.2449,-0.2459,0.8822,0.3204,-0.3451,0.906,0.3967,-0.1472,0.9378,0.2449,-0.2459,0.8779,0.1968,-0.4364,0.8199,0.2336,-0.5226,0.8822,0.3204,-0.3451,0.8779,0.1968,-0.4364,0.7743,0.1382,-0.6176,0.7175,0.1342,-0.6835,0.8199,0.2336,-0.5226,0.7743,0.1382,-0.6176,0.6406,0.077,-0.764,0.5871,0.0341,-0.8088,0.7175,0.1342,-0.6835,0.6406,0.077,-0.764,0.4858,0.0162,-0.8739,0.4363,-0.063,-0.8976,0.5871,0.0341,-0.8088,0.4858,0.0162,-0.8739,0.2972,-0.0488,-0.9536,0.2577,-0.1613,-0.9527,0.4363,-0.063,-0.8976,0.2972,-0.0488,-0.9536,0.0957,-0.1101,-0.9893,0.0681,-0.2506,-0.9657,0.2577,-0.1613,-0.9527,0.0957,-0.1101,-0.9893,-0.0999,-0.1625,-0.9816,-0.117,-0.3246,-0.9386,0.0681,-0.2506,-0.9657,-0.0999,-0.1625,-0.9816,-0.2988,-0.2085,-0.9313,-0.3033,-0.3856,-0.8714,-0.117,-0.3246,-0.9386,-0.2988,-0.2085,-0.9313,-0.4898,-0.245,-0.8367,-0.4812,-0.4297,-0.7641,-0.3033,-0.3856,-0.8714,-0.4898,-0.245,-0.8367,-0.66,-0.2691,-0.7014,-0.64,-0.4532,-0.6204,-0.4812,-0.4297,-0.7641,-0.66,-0.2691,-0.7014,-0.7979,-0.2792,-0.5343,-0.7695,-0.4543,-0.4488,-0.64,-0.4532,-0.6204,-0.7979,-0.2792,-0.5343,-0.8973,-0.275,-0.3452,-0.8636,-0.4333,-0.258,-0.7695,-0.4543,-0.4488,-0.8973,-0.275,-0.3452,-0.9508,-0.2603,-0.1683,-0.9152,-0.3959,-0.0756,-0.8636,-0.4333,-0.258,-0.9152,-0.3959,-0.0756,-0.9333,-0.3408,0.1133,-0.96,-0.2796,0.0111,-0.9221,-0.3454,-0.1746,-0.9333,-0.3408,0.1133,-0.9036,-0.2492,0.3485,-0.9556,-0.1853,0.2289,-0.96,-0.2796,0.0111,-0.9036,-0.2492,0.3485,-0.8374,-0.1628,0.5218,-0.9077,-0.092,0.4093,-0.9556,-0.1853,0.2289,-0.8374,-0.1628,0.5218,-0.7444,-0.0737,0.6636,-0.8279,0.0003,0.5609,-0.9077,-0.092,0.4093,-0.7444,-0.0737,0.6636,-0.6109,0.0284,0.7912,-0.7054,0.1032,0.7013,-0.8279,0.0003,0.5609,-0.6109,0.0284,0.7912,-0.4647,0.1227,0.8769,-0.5639,0.196,0.8023,-0.7054,0.1032,0.7013,-0.4647,0.1227,0.8769,-0.2732,0.2279,0.9346,-0.3841,0.291,0.8763,-0.5639,0.196,0.8023,-0.2732,0.2279,0.9346,-0.0805,0.3174,0.9449,-0.1908,0.3724,0.9082,-0.3841,0.291,0.8763,-0.0805,0.3174,0.9449,0.0996,0.3886,0.916,-0.0048,0.4344,0.9007,-0.1908,0.3724,0.9082,0.0996,0.3886,0.916,0.2898,0.4502,0.8446,0.1908,0.4834,0.8544,-0.0048,0.4344,0.9007,0.2898,0.4502,0.8446,0.4715,0.4937,0.7307,0.3826,0.5138,0.7679,0.1908,0.4834,0.8544,0.4715,0.4937,0.7307,0.6203,0.5142,0.5923,0.5509,0.5226,0.6507,0.3826,0.5138,0.7679,0.6203,0.5142,0.5923,0.7405,0.5148,0.432,0.6932,0.5114,0.5078,0.5509,0.5226,0.6507,0.7405,0.5148,0.432,0.8345,0.4943,0.2436,0.8114,0.4791,0.3349,0.6932,0.5114,0.5078,0.8345,0.4943,0.2436,0.8888,0.4552,0.0524,0.8914,0.4279,0.1492,0.8114,0.4791,0.3349,0.8888,0.4552,0.0524,0.906,0.3967,-0.1472,0.9324,0.3583,-0.0482,0.8914,0.4279,0.1492,0.906,0.3967,-0.1472,0.8822,0.3204,-0.3451,0.9296,0.2718,-0.2489,0.9324,0.3583,-0.0482,0.8822,0.3204,-0.3451,0.8199,0.2336,-0.5226,0.8828,0.176,-0.4356,0.9296,0.2718,-0.2489,0.8199,0.2336,-0.5226,0.7175,0.1342,-0.6835,0.7918,0.0714,-0.6065,0.8828,0.176,-0.4356,0.7175,0.1342,-0.6835,0.5871,0.0341,-0.8088,0.6668,-0.0312,-0.7446,0.7918,0.0714,-0.6065,0.5871,0.0341,-0.8088,0.4363,-0.063,-0.8976,0.5152,-0.1279,-0.8475,0.6668,-0.0312,-0.7446,0.4363,-0.063,-0.8976,0.2577,-0.1613,-0.9527,0.3354,-0.2198,-0.9161,0.5152,-0.1279,-0.8475,0.2577,-0.1613,-0.9527,0.0681,-0.2506,-0.9657,0.1444,-0.2984,-0.9435,0.3354,-0.2198,-0.9161,0.0681,-0.2506,-0.9657,-0.117,-0.3246,-0.9386,-0.0475,-0.3604,-0.9316,0.1444,-0.2984,-0.9435,-0.117,-0.3246,-0.9386,-0.3033,-0.3856,-0.8714,-0.2403,-0.4065,-0.8815,-0.0475,-0.3604,-0.9316,-0.3033,-0.3856,-0.8714,-0.4812,-0.4297,-0.7641,-0.4257,-0.4342,-0.7939,-0.2403,-0.4065,-0.8815,-0.4812,-0.4297,-0.7641,-0.64,-0.4532,-0.6204,-0.5944,-0.4416,-0.6721,-0.4257,-0.4342,-0.7939,-0.64,-0.4532,-0.6204,-0.7695,-0.4543,-0.4488,-0.7379,-0.4281,-0.5218,-0.5944,-0.4416,-0.6721,-0.7695,-0.4543,-0.4488,-0.8636,-0.4333,-0.258,-0.8499,-0.3943,-0.3494,-0.7379,-0.4281,-0.5218,-0.8636,-0.4333,-0.258,-0.9152,-0.3959,-0.0756,-0.9221,-0.3454,-0.1746,-0.8499,-0.3943,-0.3494,-0.9221,-0.3454,-0.1746,-0.96,-0.2796,0.0111,-0.9929,-0.1072,-0.0513,-0.9523,-0.1915,-0.2378,-0.96,-0.2796,0.0111,-0.9556,-0.1853,0.2289,-0.9905,-0.0161,0.1366,-0.9929,-0.1072,-0.0513,-0.9556,-0.1853,0.2289,-0.9077,-0.092,0.4093,-0.9449,0.0772,0.3182,-0.9905,-0.0161,0.1366,-0.9077,-0.092,0.4093,-0.8279,0.0003,0.5609,-0.8585,0.1687,0.4843,-0.9449,0.0772,0.3182,-0.8279,0.0003,0.5609,-0.7054,0.1032,0.7013,-0.7346,0.2552,0.6287,-0.8585,0.1687,0.4843,-0.7054,0.1032,0.7013,-0.5639,0.196,0.8023,-0.5791,0.3323,0.7445,-0.7346,0.2552,0.6287,-0.5639,0.196,0.8023,-0.3841,0.291,0.8763,-0.3984,0.3971,0.8268,-0.5791,0.3323,0.7445,-0.3841,0.291,0.8763,-0.1908,0.3724,0.9082,-0.2005,0.4461,0.8722,-0.3984,0.3971,0.8268,-0.1908,0.3724,0.9082,-0.0048,0.4344,0.9007,0.0058,0.4775,0.8786,-0.2005,0.4461,0.8722,-0.0048,0.4344,0.9007,0.1908,0.4834,0.8544,0.2116,0.49,0.8457,0.0058,0.4775,0.8786,0.1908,0.4834,0.8544,0.3826,0.5138,0.7679,0.4079,0.483,0.7748,0.2116,0.49,0.8457,0.3826,0.5138,0.7679,0.5509,0.5226,0.6507,0.5863,0.4565,0.6692,0.4079,0.483,0.7748,0.5509,0.5226,0.6507,0.6932,0.5114,0.5078,0.7385,0.4121,0.5336,0.5863,0.4565,0.6692,0.6932,0.5114,0.5078,0.8114,0.4791,0.3349,0.8583,0.3517,0.3736,0.7385,0.4121,0.5336,0.8114,0.4791,0.3349,0.8914,0.4279,0.1492,0.9404,0.2777,0.1964,0.8583,0.3517,0.3736,0.8914,0.4279,0.1492,0.9324,0.3583,-0.0482,0.981,0.1936,0.0097,0.9404,0.2777,0.1964,0.9324,0.3583,-0.0482,0.9296,0.2718,-0.2489,0.9786,0.1029,-0.1785,0.981,0.1936,0.0097,0.9296,0.2718,-0.2489,0.8828,0.176,-0.4356,0.9331,0.0095,-0.3596,0.9786,0.1029,-0.1785,0.8828,0.176,-0.4356,0.7918,0.0714,-0.6065,0.8465,-0.0824,-0.5259,0.9331,0.0095,-0.3596,0.7918,0.0714,-0.6065,0.6668,-0.0312,-0.7446,0.7227,-0.1689,-0.6702,0.8465,-0.0824,-0.5259,0.6668,-0.0312,-0.7446,0.5152,-0.1279,-0.8475,0.5671,-0.2461,-0.786,0.7227,-0.1689,-0.6702,0.5152,-0.1279,-0.8475,0.3354,-0.2198,-0.9161,0.3864,-0.3106,-0.8685,0.5671,-0.2461,-0.786,0.3354,-0.2198,-0.9161,0.1444,-0.2984,-0.9435,0.1886,-0.3596,-0.9138,0.3864,-0.3106,-0.8685,0.1444,-0.2984,-0.9435,-0.0475,-0.3604,-0.9316,-0.0177,-0.3911,-0.9202,0.1886,-0.3596,-0.9138,-0.0475,-0.3604,-0.9316,-0.2403,-0.4065,-0.8815,-0.2235,-0.4035,-0.8873,-0.0177,-0.3911,-0.9202,-0.2403,-0.4065,-0.8815,-0.4257,-0.4342,-0.7939,-0.4198,-0.3964,-0.8165,-0.2235,-0.4035,-0.8873,-0.4257,-0.4342,-0.7939,-0.5944,-0.4416,-0.6721,-0.5981,-0.37,-0.7109,-0.4198,-0.3964,-0.8165,-0.5944,-0.4416,-0.6721,-0.7379,-0.4281,-0.5218,-0.7504,-0.3257,-0.5751,-0.5981,-0.37,-0.7109,-0.7379,-0.4281,-0.5218,-0.8499,-0.3943,-0.3494,-0.8702,-0.2653,-0.4151,-0.7504,-0.3257,-0.5751,-0.8499,-0.3943,-0.3494,-0.9221,-0.3454,-0.1746,-0.9523,-0.1915,-0.2378,-0.8702,-0.2653,-0.4151,0.9524,0.2973,0.0676,-0.1342,0.6079,-0.7826,-0.1588,0.478,-0.8639,0.9836,0.1693,0.0625,-0.1342,0.6079,-0.7826,-0.9528,-0.2961,-0.0666,-0.9711,-0.2329,0.0529,-0.1588,0.478,-0.8639,-0.9528,-0.2961,-0.0666,0.1337,-0.6067,0.7836,0.0545,-0.4985,0.8652,-0.9711,-0.2329,0.0529,0.1337,-0.6067,0.7836,0.9524,0.2973,0.0676,0.9836,0.1693,0.0625,0.0545,-0.4985,0.8652,0.9836,0.1693,0.0625,-0.1588,0.478,-0.8639,-0.036,0.2917,-0.9558,0.9864,0.1642,0.0098,-0.1588,0.478,-0.8639,-0.9711,-0.2329,0.0529,-0.9816,-0.1814,0.0603,-0.036,0.2917,-0.9558,-0.9711,-0.2329,0.0529,0.0545,-0.4985,0.8652,0.1052,-0.2763,0.9553,-0.9816,-0.1814,0.0603,0.0545,-0.4985,0.8652,0.9836,0.1693,0.0625,0.9864,0.1642,0.0098,0.1052,-0.2763,0.9553,0.9864,0.1642,0.0098,-0.036,0.2917,-0.9558,-0.0354,0.0529,-0.998,0.9748,0.2128,0.0663,-0.036,0.2917,-0.9558,-0.9816,-0.1814,0.0603,-0.9734,-0.2158,0.0766,-0.0354,0.0529,-0.998,-0.9816,-0.1814,0.0603,0.1052,-0.2763,0.9553,0.0052,-0.0545,0.9985,-0.9734,-0.2158,0.0766,0.1052,-0.2763,0.9553,0.9864,0.1642,0.0098,0.9748,0.2128,0.0663,0.0052,-0.0545,0.9985,0.9748,0.2128,0.0663,-0.0354,0.0529,-0.998,0.0292,-0.0317,-0.9991,0.9656,0.257,-0.0388,-0.0354,0.0529,-0.998,-0.9734,-0.2158,0.0766,-0.9672,-0.2535,-0.0174,0.0292,-0.0317,-0.9991,-0.9734,-0.2158,0.0766,0.0052,-0.0545,0.9985,0.0342,0.0547,0.9979,-0.9672,-0.2535,-0.0174,0.0052,-0.0545,0.9985,0.9748,0.2128,0.0663,0.9656,0.257,-0.0388,0.0342,0.0547,0.9979,0.9656,0.257,-0.0388,0.0292,-0.0317,-0.9991,-0.1005,0.173,-0.9798,0.9568,0.2728,-0.1005,0.0292,-0.0317,-0.9991,-0.9672,-0.2535,-0.0174,-0.9698,-0.2393,-0.0473,-0.1005,0.173,-0.9798,-0.9672,-0.2535,-0.0174,0.0342,0.0547,0.9979,0.0329,-0.1836,0.9824,-0.9698,-0.2393,-0.0473,0.0342,0.0547,0.9979,0.9656,0.257,-0.0388,0.9568,0.2728,-0.1005,0.0329,-0.1836,0.9824,0.9568,0.2728,-0.1005,-0.1005,0.173,-0.9798,-0.1327,0.4993,-0.8562,0.9668,0.2314,-0.1087,-0.1005,0.173,-0.9798,-0.9698,-0.2393,-0.0473,-0.989,-0.1458,-0.023,-0.1327,0.4993,-0.8562,-0.9698,-0.2393,-0.0473,0.0329,-0.1836,0.9824,0.1344,-0.4916,0.8604,-0.989,-0.1458,-0.023,0.0329,-0.1836,0.9824,0.9568,0.2728,-0.1005,0.9668,0.2314,-0.1087,0.1344,-0.4916,0.8604,0.9668,0.2314,-0.1087,-0.1327,0.4993,-0.8562,-0.1528,0.6227,-0.7674,0.9814,0.1899,-0.0274,-0.1327,0.4993,-0.8562,-0.989,-0.1458,-0.023,-0.9791,-0.1968,0.0519,-0.1528,0.6227,-0.7674,-0.989,-0.1458,-0.023,0.1344,-0.4916,0.8604,0.1535,-0.6147,0.7737,-0.9791,-0.1968,0.0519,0.1344,-0.4916,0.8604,0.9668,0.2314,-0.1087,0.9814,0.1899,-0.0274,0.1535,-0.6147,0.7737,0.9814,0.1899,-0.0274,-0.1528,0.6227,-0.7674,-0.1391,0.6011,-0.787,0.9763,0.2157,-0.0179,-0.1528,0.6227,-0.7674,-0.9791,-0.1968,0.0519,-0.9774,-0.2094,0.0294,-0.1391,0.6011,-0.787,-0.9791,-0.1968,0.0519,0.1535,-0.6147,0.7737,0.1576,-0.5873,0.7939,-0.9774,-0.2094,0.0294,0.1535,-0.6147,0.7737,0.9814,0.1899,-0.0274,0.9763,0.2157,-0.0179,0.1576,-0.5873,0.7939,0.9763,0.2157,-0.0179,-0.1391,0.6011,-0.787,-0.1806,0.654,-0.7346,0.9712,0.2301,-0.0625,-0.1391,0.6011,-0.787,-0.9774,-0.2094,0.0294,-0.9852,-0.1705,0.0154,-0.1806,0.654,-0.7346,-0.9774,-0.2094,0.0294,0.1576,-0.5873,0.7939,0.1412,-0.6517,0.7452,-0.9852,-0.1705,0.0154,0.1576,-0.5873,0.7939,0.9763,0.2157,-0.0179,0.9712,0.2301,-0.0625,0.1412,-0.6517,0.7452,0.9712,0.2301,-0.0625,-0.1806,0.654,-0.7346,-0.1847,0.6787,-0.7108,0.9884,0.1341,-0.0707,-0.1806,0.654,-0.7346,-0.9852,-0.1705,0.0154,-0.9811,-0.1547,0.1165,-0.1847,0.6787,-0.7108,-0.9852,-0.1705,0.0154,0.1412,-0.6517,0.7452,0.1521,-0.6716,0.7251,-0.9811,-0.1547,0.1165,0.1412,-0.6517,0.7452,0.9712,0.2301,-0.0625,0.9884,0.1341,-0.0707,0.1521,-0.6716,0.7251,0.9884,0.1341,-0.0707,-0.1847,0.6787,-0.7108,-0.2276,0.5462,-0.8061,0.9906,0.0024,-0.1367,-0.1847,0.6787,-0.7108,-0.9811,-0.1547,0.1165,-0.9711,-0.0442,0.2345,-0.2276,0.5462,-0.8061,-0.9811,-0.1547,0.1165,0.1521,-0.6716,0.7251,0.1256,-0.5334,0.8365,-0.9711,-0.0442,0.2345,0.1521,-0.6716,0.7251,0.9884,0.1341,-0.0707,0.9906,0.0024,-0.1367,0.1256,-0.5334,0.8365,0.9906,0.0024,-0.1367,-0.2276,0.5462,-0.8061,-0.1662,0.5554,-0.8148,0.9546,-0.0487,-0.294,-0.2276,0.5462,-0.8061,-0.9711,-0.0442,0.2345,-0.9707,0.1241,0.2058,-0.1662,0.5554,-0.8148,-0.9711,-0.0442,0.2345,0.1256,-0.5334,0.8365,0.159,-0.543,0.8245,-0.9707,0.1241,0.2058,0.1256,-0.5334,0.8365,0.9906,0.0024,-0.1367,0.9546,-0.0487,-0.294,0.159,-0.543,0.8245,0.9546,-0.0487,-0.294,-0.1662,0.5554,-0.8148,-0.1544,0.6263,-0.7641,0.9584,-0.1235,-0.2574,-0.1662,0.5554,-0.8148,-0.9707,0.1241,0.2058,-0.9526,0.105,0.2856,-0.1544,0.6263,-0.7641,-0.9707,0.1241,0.2058,0.159,-0.543,0.8245,0.1341,-0.6211,0.7722,-0.9526,0.105,0.2856,0.159,-0.543,0.8245,0.9546,-0.0487,-0.294,0.9584,-0.1235,-0.2574,0.1341,-0.6211,0.7722,0.9584,-0.1235,-0.2574,-0.1544,0.6263,-0.7641,-0.1636,0.6874,-0.7077,0.9011,-0.1833,-0.393,-0.1544,0.6263,-0.7641,-0.9526,0.105,0.2856,-0.9134,0.251,0.3205,-0.1636,0.6874,-0.7077,-0.9526,0.105,0.2856,0.1341,-0.6211,0.7722,0.0671,-0.6639,0.7448,-0.9134,0.251,0.3205,0.1341,-0.6211,0.7722,0.9584,-0.1235,-0.2574,0.9011,-0.1833,-0.393,0.0671,-0.6639,0.7448,0.9011,-0.1833,-0.393,-0.1636,0.6874,-0.7077,-0.0872,0.7401,-0.6669,0.8452,-0.3144,-0.4322,-0.1636,0.6874,-0.7077,-0.9134,0.251,0.3205,-0.8439,0.3008,0.4443,-0.0872,0.7401,-0.6669,-0.9134,0.251,0.3205,0.0671,-0.6639,0.7448,0.0722,-0.7348,0.6745,-0.8439,0.3008,0.4443,0.0671,-0.6639,0.7448,0.9011,-0.1833,-0.393,0.8452,-0.3144,-0.4322,0.0722,-0.7348,0.6745,0.8452,-0.3144,-0.4322,-0.0872,0.7401,-0.6669,-0.081,0.6676,-0.7401,0.8877,-0.2743,-0.3699,-0.0872,0.7401,-0.6669,-0.8439,0.3008,0.4443,-0.8799,0.2325,0.4144,-0.081,0.6676,-0.7401,-0.8439,0.3008,0.4443,0.0722,-0.7348,0.6745,0.1613,-0.6907,0.7049,-0.8799,0.2325,0.4144,0.0722,-0.7348,0.6745,0.8452,-0.3144,-0.4322,0.8877,-0.2743,-0.3699,0.1613,-0.6907,0.7049,0.8877,-0.2743,-0.3699,-0.081,0.6676,-0.7401,-0.1504,0.6313,-0.7608,0.9249,-0.1821,-0.3339,-0.081,0.6676,-0.7401,-0.8799,0.2325,0.4144,-0.9249,0.1821,0.3339,-0.1504,0.6313,-0.7608,-0.8799,0.2325,0.4144,0.1613,-0.6907,0.7049,0.1504,-0.6313,0.7609,-0.9249,0.1821,0.3339,0.1613,-0.6907,0.7049,0.8877,-0.2743,-0.3699,0.9249,-0.1821,-0.3339,0.1504,-0.6313,0.7609,-0.8308,0.2154,-0.5133,-0.2291,0.7027,0.6735,-0.3243,0.6599,0.6777,-0.7554,0.2689,-0.5975,-0.2291,0.7027,0.6735,0.8314,-0.212,0.5136,0.7818,-0.3147,0.5382,-0.3243,0.6599,0.6777,0.8314,-0.212,0.5136,0.2387,-0.7033,-0.6696,0.2487,-0.6269,-0.7384,0.7818,-0.3147,0.5382,0.2387,-0.7033,-0.6696,-0.8308,0.2154,-0.5133,-0.7554,0.2689,-0.5975,0.2487,-0.6269,-0.7384,-0.7554,0.2689,-0.5975,-0.3243,0.6599,0.6777,-0.3369,0.57,0.7494,-0.7069,0.3572,-0.6105,-0.3243,0.6599,0.6777,0.7818,-0.3147,0.5382,0.7167,-0.3584,0.5983,-0.3369,0.57,0.7494,0.7818,-0.3147,0.5382,0.2487,-0.6269,-0.7384,0.3552,-0.5698,-0.7411,0.7167,-0.3584,0.5983,0.2487,-0.6269,-0.7384,-0.7554,0.2689,-0.5975,-0.7069,0.3572,-0.6105,0.3552,-0.5698,-0.7411,-0.7069,0.3572,-0.6105,-0.3369,0.57,0.7494,-0.4717,0.4176,0.7766,-0.6621,0.3331,-0.6714,-0.3369,0.57,0.7494,0.7167,-0.3584,0.5983,0.7487,-0.3916,0.5349,-0.4717,0.4176,0.7766,0.7167,-0.3584,0.5983,0.3552,-0.5698,-0.7411,0.4613,-0.3971,-0.7935,0.7487,-0.3916,0.5349,0.3552,-0.5698,-0.7411,-0.7069,0.3572,-0.6105,-0.6621,0.3331,-0.6714,0.4613,-0.3971,-0.7935,-0.6621,0.3331,-0.6714,-0.4717,0.4176,0.7766,-0.537,0.2191,0.8146,-0.7204,0.3178,-0.6165,-0.4717,0.4176,0.7766,0.7487,-0.3916,0.5349,0.7359,-0.3065,0.6037,-0.537,0.2191,0.8146,0.7487,-0.3916,0.5349,0.4613,-0.3971,-0.7935,0.5975,-0.2256,-0.7695,0.7359,-0.3065,0.6037,0.4613,-0.3971,-0.7935,-0.6621,0.3331,-0.6714,-0.7204,0.3178,-0.6165,0.5975,-0.2256,-0.7695,-0.7204,0.3178,-0.6165,-0.537,0.2191,0.8146,-0.6011,0.1239,0.7895,-0.7253,0.2441,-0.6437,-0.537,0.2191,0.8146,0.7359,-0.3065,0.6037,0.7843,-0.2322,0.5753,-0.6011,0.1239,0.7895,0.7359,-0.3065,0.6037,0.5975,-0.2256,-0.7695,0.6044,-0.1009,-0.7903,0.7843,-0.2322,0.5753,0.5975,-0.2256,-0.7695,-0.7204,0.3178,-0.6165,-0.7253,0.2441,-0.6437,0.6044,-0.1009,-0.7903,-0.7253,0.2441,-0.6437,-0.6011,0.1239,0.7895,-0.5926,0.0933,0.8001,-0.7801,0.2147,-0.5876,-0.6011,0.1239,0.7895,0.7843,-0.2322,0.5753,0.7487,-0.1808,0.6378,-0.5926,0.0933,0.8001,0.7843,-0.2322,0.5753,0.6044,-0.1009,-0.7903,0.6304,-0.0723,-0.7729,0.7487,-0.1808,0.6378,0.6044,-0.1009,-0.7903,-0.7253,0.2441,-0.6437,-0.7801,0.2147,-0.5876,0.6304,-0.0723,-0.7729,-0.7801,0.2147,-0.5876,-0.5926,0.0933,0.8001,-0.5754,0.2745,0.7704,-0.7886,0.2151,-0.5761,-0.5926,0.0933,0.8001,0.7487,-0.1808,0.6378,0.7346,-0.1678,0.6575,-0.5754,0.2745,0.7704,0.7487,-0.1808,0.6378,0.6304,-0.0723,-0.7729,0.5531,-0.2496,-0.7949,0.7346,-0.1678,0.6575,0.6304,-0.0723,-0.7729,-0.7801,0.2147,-0.5876,-0.7886,0.2151,-0.5761,0.5531,-0.2496,-0.7949,-0.7886,0.2151,-0.5761,-0.5754,0.2745,0.7704,-0.486,0.3715,0.7911,-0.7857,0.147,-0.6009,-0.5754,0.2745,0.7704,0.7346,-0.1678,0.6575,0.7834,-0.1439,0.6046,-0.486,0.3715,0.7911,0.7346,-0.1678,0.6575,0.5531,-0.2496,-0.7949,0.5528,-0.3808,-0.7413,0.7834,-0.1439,0.6046,0.5531,-0.2496,-0.7949,-0.7886,0.2151,-0.5761,-0.7857,0.147,-0.6009,0.5528,-0.3808,-0.7413,-0.7857,0.147,-0.6009,-0.486,0.3715,0.7911,-0.5193,0.3532,0.7782,-0.8098,0.0387,-0.5855,-0.486,0.3715,0.7911,0.7834,-0.1439,0.6046,0.8241,-0.0487,0.5643,-0.5193,0.3532,0.7782,0.7834,-0.1439,0.6046,0.5528,-0.3808,-0.7413,0.5315,-0.3537,-0.7697,0.8241,-0.0487,0.5643,0.5528,-0.3808,-0.7413,-0.7857,0.147,-0.6009,-0.8098,0.0387,-0.5855,0.5315,-0.3537,-0.7697,-0.8098,0.0387,-0.5855,-0.5193,0.3532,0.7782,-0.5364,0.325,0.7789,-0.8201,0.0277,-0.5715,-0.5193,0.3532,0.7782,0.8241,-0.0487,0.5643,0.8214,-0.0286,0.5696,-0.5364,0.325,0.7789,0.8241,-0.0487,0.5643,0.5315,-0.3537,-0.7697,0.5281,-0.3248,-0.7846,0.8214,-0.0286,0.5696,0.5315,-0.3537,-0.7697,-0.8098,0.0387,-0.5855,-0.8201,0.0277,-0.5715,0.5281,-0.3248,-0.7846,-0.1806,0.0693,0.9811,0.7957,0.597,0.102,0.7992,0.5975,0.0656,-0.1309,0.0045,0.9914,0.7957,0.597,0.102,0.1786,-0.066,-0.9817,0.1284,-0.0005,-0.9917,0.7992,0.5975,0.0656,0.1786,-0.066,-0.9817,-0.7971,-0.5942,-0.1074,-0.7928,-0.5932,-0.1396,0.1284,-0.0005,-0.9917,-0.7971,-0.5942,-0.1074,-0.1806,0.0693,0.9811,-0.1309,0.0045,0.9914,-0.7928,-0.5932,-0.1396,-0.1309,0.0045,0.9914,0.7992,0.5975,0.0656,0.807,0.5819,0.101,-0.0893,-0.0686,0.9936,0.7992,0.5975,0.0656,0.1284,-0.0005,-0.9917,0.0672,0.0645,-0.9957,0.807,0.5819,0.101,0.1284,-0.0005,-0.9917,-0.7928,-0.5932,-0.1396,-0.8123,-0.5739,-0.1037,0.0672,0.0645,-0.9957,-0.7928,-0.5932,-0.1396,-0.1309,0.0045,0.9914,-0.0893,-0.0686,0.9936,-0.8123,-0.5739,-0.1037,-0.0893,-0.0686,0.9936,0.807,0.5819,0.101,0.8258,0.5556,0.0971,-0.0786,-0.0748,0.9941,0.807,0.5819,0.101,0.0672,0.0645,-0.9957,0.0623,0.0803,-0.9948,0.8258,0.5556,0.0971,0.0672,0.0645,-0.9957,-0.8123,-0.5739,-0.1037,-0.8327,-0.5435,-0.106,0.0623,0.0803,-0.9948,-0.8123,-0.5739,-0.1037,-0.0893,-0.0686,0.9936,-0.0786,-0.0748,0.9941,-0.8327,-0.5435,-0.106,-0.0786,-0.0748,0.9941,0.8258,0.5556,0.0971,0.7528,0.6511,0.097,-0.0116,-0.0602,0.9981,0.8258,0.5556,0.0971,0.0623,0.0803,-0.9948,0.0873,0.1491,-0.985,0.7528,0.6511,0.097,0.0623,0.0803,-0.9948,-0.8327,-0.5435,-0.106,-0.764,-0.6344,-0.1181,0.0873,0.1491,-0.985,-0.8327,-0.5435,-0.106,-0.0786,-0.0748,0.9941,-0.0116,-0.0602,0.9981,-0.764,-0.6344,-0.1181,-0.0116,-0.0602,0.9981,0.7528,0.6511,0.097,0.7717,0.6333,0.0579,-0.0481,-0.2125,0.976,0.7528,0.6511,0.097,0.0873,0.1491,-0.985,-0.0826,0.1395,-0.9868,0.7717,0.6333,0.0579,0.0873,0.1491,-0.985,-0.764,-0.6344,-0.1181,-0.7888,-0.6025,-0.1214,-0.0826,0.1395,-0.9868,-0.764,-0.6344,-0.1181,-0.0116,-0.0602,0.9981,-0.0481,-0.2125,0.976,-0.7888,-0.6025,-0.1214,-0.0481,-0.2125,0.976,0.7717,0.6333,0.0579,0.8691,0.493,0.0396,0.0757,-0.2673,0.9606,0.7717,0.6333,0.0579,-0.0826,0.1395,-0.9868,-0.0985,0.2875,-0.9527,0.8691,0.493,0.0396,-0.0826,0.1395,-0.9868,-0.7888,-0.6025,-0.1214,-0.8873,-0.4551,-0.0747,-0.0985,0.2875,-0.9527,-0.7888,-0.6025,-0.1214,-0.0481,-0.2125,0.976,0.0757,-0.2673,0.9606,-0.8873,-0.4551,-0.0747,0.0757,-0.2673,0.9606,0.8691,0.493,0.0396,0.8282,0.5549,0.0792,0.1601,-0.3142,0.9358,0.8691,0.493,0.0396,-0.0985,0.2875,-0.9527,-0.0938,0.3758,-0.9219,0.8282,0.5549,0.0792,-0.0985,0.2875,-0.9527,-0.8873,-0.4551,-0.0747,-0.8408,-0.5319,-0.1006,-0.0938,0.3758,-0.9219,-0.8873,-0.4551,-0.0747,0.0757,-0.2673,0.9606,0.1601,-0.3142,0.9358,-0.8408,-0.5319,-0.1006,0.1601,-0.3142,0.9358,0.8282,0.5549,0.0792,0.7948,0.598,0.1036,0.1462,-0.3922,0.9082,0.8282,0.5549,0.0792,-0.0938,0.3758,-0.9219,-0.1694,0.3746,-0.9116,0.7948,0.598,0.1036,-0.0938,0.3758,-0.9219,-0.8408,-0.5319,-0.1006,-0.7977,-0.591,-0.1203,-0.1694,0.3746,-0.9116,-0.8408,-0.5319,-0.1006,0.1601,-0.3142,0.9358,0.1462,-0.3922,0.9082,-0.7977,-0.591,-0.1203,0.1462,-0.3922,0.9082,0.7948,0.598,0.1036,0.8184,0.5652,0.1034,0.1592,-0.3878,0.9079,0.7948,0.598,0.1036,-0.1694,0.3746,-0.9116,-0.1626,0.3855,-0.9083,0.8184,0.5652,0.1034,-0.1694,0.3746,-0.9116,-0.7977,-0.591,-0.1203,-0.8162,-0.5707,-0.0907,-0.1626,0.3855,-0.9083,-0.7977,-0.591,-0.1203,0.1462,-0.3922,0.9082,0.1592,-0.3878,0.9079,-0.8162,-0.5707,-0.0907,0.1592,-0.3878,0.9079,0.8184,0.5652,0.1034,0.8202,0.5637,0.0974,0.1521,-0.3754,0.9143,0.8184,0.5652,0.1034,-0.1626,0.3855,-0.9083,-0.1524,0.3751,-0.9143,0.8202,0.5637,0.0974,-0.1626,0.3855,-0.9083,-0.8162,-0.5707,-0.0907,-0.8195,-0.5655,-0.093,-0.1524,0.3751,-0.9143,-0.8162,-0.5707,-0.0907,0.1592,-0.3878,0.9079,0.1521,-0.3754,0.9143,-0.8195,-0.5655,-0.093,0.6869,0.2516,0.6818,0.4261,0.6236,-0.6555,0.4562,0.4957,-0.739,0.7094,0.1225,0.6941,0.4261,0.6236,-0.6555,-0.6867,-0.2485,-0.6831,-0.7767,-0.1882,-0.6011,0.4562,0.4957,-0.739,-0.6867,-0.2485,-0.6831,-0.4255,-0.6217,0.6576,-0.5359,-0.5111,0.672,-0.7767,-0.1882,-0.6011,-0.4255,-0.6217,0.6576,0.6869,0.2516,0.6818,0.7094,0.1225,0.6941,-0.5359,-0.5111,0.672,0.7094,0.1225,0.6941,0.4562,0.4957,-0.739,0.6039,0.3052,-0.7363,0.7452,0.1193,0.6561,0.4562,0.4957,-0.739,-0.7767,-0.1882,-0.6011,-0.7875,-0.1381,-0.6006,0.6039,0.3052,-0.7363,-0.7767,-0.1882,-0.6011,-0.5359,-0.5111,0.672,-0.5505,-0.2925,0.7819,-0.7875,-0.1381,-0.6006,-0.5359,-0.5111,0.672,0.7094,0.1225,0.6941,0.7452,0.1193,0.6561,-0.5505,-0.2925,0.7819,0.7452,0.1193,0.6561,0.6039,0.3052,-0.7363,0.6257,0.0672,-0.7771,0.7008,0.1689,0.6931,0.6039,0.3052,-0.7363,-0.7875,-0.1381,-0.6006,-0.7927,-0.1744,-0.5841,0.6257,0.0672,-0.7771,-0.7875,-0.1381,-0.6006,-0.5505,-0.2925,0.7819,-0.6484,-0.0673,0.7583,-0.7927,-0.1744,-0.5841,-0.5505,-0.2925,0.7819,0.7452,0.1193,0.6561,0.7008,0.1689,0.6931,-0.6484,-0.0673,0.7583,0.7008,0.1689,0.6931,0.6257,0.0672,-0.7771,0.6732,-0.0207,-0.7391,0.7629,0.2162,0.6094,0.6257,0.0672,-0.7771,-0.7927,-0.1744,-0.5841,-0.7276,-0.2123,-0.6524,0.6732,-0.0207,-0.7391,-0.7927,-0.1744,-0.5841,-0.6484,-0.0673,0.7583,-0.6236,0.0407,0.7807,-0.7276,-0.2123,-0.6524,-0.6484,-0.0673,0.7583,0.7008,0.1689,0.6931,0.7629,0.2162,0.6094,-0.6236,0.0407,0.7807,0.7629,0.2162,0.6094,0.6732,-0.0207,-0.7391,0.5682,0.1872,-0.8013,0.7962,0.2344,0.5579,0.6732,-0.0207,-0.7391,-0.7276,-0.2123,-0.6524,-0.7093,-0.1989,-0.6763,0.5682,0.1872,-0.8013,-0.7276,-0.2123,-0.6524,-0.6236,0.0407,0.7807,-0.6203,-0.1962,0.7595,-0.7093,-0.1989,-0.6763,-0.6236,0.0407,0.7807,0.7629,0.2162,0.6094,0.7962,0.2344,0.5579,-0.6203,-0.1962,0.7595,0.7962,0.2344,0.5579,0.5682,0.1872,-0.8013,0.4718,0.5114,-0.7182,0.8075,0.1939,0.5571,0.5682,0.1872,-0.8013,-0.7093,-0.1989,-0.6763,-0.7366,-0.107,-0.6678,0.4718,0.5114,-0.7182,-0.7093,-0.1989,-0.6763,-0.6203,-0.1962,0.7595,-0.472,-0.5049,0.7227,-0.7366,-0.107,-0.6678,-0.6203,-0.1962,0.7595,0.7962,0.2344,0.5579,0.8075,0.1939,0.5571,-0.472,-0.5049,0.7227,0.8075,0.1939,0.5571,0.4718,0.5114,-0.7182,0.402,0.6339,-0.6607,0.7641,0.1523,0.6269,0.4718,0.5114,-0.7182,-0.7366,-0.107,-0.6678,-0.7781,-0.1603,-0.6073,0.402,0.6339,-0.6607,-0.7366,-0.107,-0.6678,-0.472,-0.5049,0.7227,-0.4046,-0.6265,0.6662,-0.7781,-0.1603,-0.6073,-0.472,-0.5049,0.7227,0.8075,0.1939,0.5571,0.7641,0.1523,0.6269,-0.4046,-0.6265,0.6662,0.7641,0.1523,0.6269,0.402,0.6339,-0.6607,0.4249,0.6116,-0.6674,0.7539,0.1791,0.632,0.402,0.6339,-0.6607,-0.7781,-0.1603,-0.6073,-0.7617,-0.1739,-0.6241,0.4249,0.6116,-0.6674,-0.7781,-0.1603,-0.6073,-0.4046,-0.6265,0.6662,-0.4143,-0.5991,0.6851,-0.7617,-0.1739,-0.6241,-0.4046,-0.6265,0.6662,0.7641,0.1523,0.6269,0.7539,0.1791,0.632,-0.4143,-0.5991,0.6851,0.7539,0.1791,0.632,0.4249,0.6116,-0.6674,0.3612,0.6648,-0.6539,0.7787,0.195,0.5963,0.4249,0.6116,-0.6674,-0.7617,-0.1739,-0.6241,-0.7569,-0.1356,-0.6393,0.3612,0.6648,-0.6539,-0.7617,-0.1739,-0.6241,-0.4143,-0.5991,0.6851,-0.3964,-0.6621,0.636,-0.7569,-0.1356,-0.6393,-0.4143,-0.5991,0.6851,0.7539,0.1791,0.632,0.7787,0.195,0.5963,-0.3964,-0.6621,0.636,0.7787,0.195,0.5963,0.3612,0.6648,-0.6539,0.3434,0.6888,-0.6384,0.7945,0.0997,0.5991,0.3612,0.6648,-0.6539,-0.7569,-0.1356,-0.6393,-0.8187,-0.1221,-0.5611,0.3434,0.6888,-0.6384,-0.7569,-0.1356,-0.6393,-0.3964,-0.6621,0.636,-0.376,-0.6817,0.6277,-0.8187,-0.1221,-0.5611,-0.3964,-0.6621,0.636,0.7787,0.195,0.5963,0.7945,0.0997,0.5991,-0.376,-0.6817,0.6277,0.7945,0.0997,0.5991,0.3434,0.6888,-0.6384,0.3709,0.5581,-0.7423,0.836,-0.0302,0.5479,0.3434,0.6888,-0.6384,-0.8187,-0.1221,-0.5611,-0.886,-0.0145,-0.4635,0.3709,0.5581,-0.7423,-0.8187,-0.1221,-0.5611,-0.376,-0.6817,0.6277,-0.4662,-0.5436,0.698,-0.886,-0.0145,-0.4635,-0.376,-0.6817,0.6277,0.7945,0.0997,0.5991,0.836,-0.0302,0.5479,-0.4662,-0.5436,0.698,0.836,-0.0302,0.5479,0.3709,0.5581,-0.7423,0.4226,0.5666,-0.7074,0.9101,-0.0756,0.4073,0.3709,0.5581,-0.7423,-0.886,-0.0145,-0.4635,-0.8638,0.1547,-0.4794,0.4226,0.5666,-0.7074,-0.886,-0.0145,-0.4635,-0.4662,-0.5436,0.698,-0.4341,-0.5514,0.7124,-0.8638,0.1547,-0.4794,-0.4662,-0.5436,0.698,0.836,-0.0302,0.5479,0.9101,-0.0756,0.4073,-0.4341,-0.5514,0.7124,0.9101,-0.0756,0.4073,0.4226,0.5666,-0.7074,0.3995,0.6366,-0.6596,0.8873,-0.1492,0.4364,0.4226,0.5666,-0.7074,-0.8638,0.1547,-0.4794,-0.9028,0.1339,-0.4088,0.3995,0.6366,-0.6596,-0.8638,0.1547,-0.4794,-0.4341,-0.5514,0.7124,-0.4202,-0.6272,0.6558,-0.9028,0.1339,-0.4088,-0.4341,-0.5514,0.7124,0.9101,-0.0756,0.4073,0.8873,-0.1492,0.4364,-0.4202,-0.6272,0.6558,0.8873,-0.1492,0.4364,0.3995,0.6366,-0.6596,0.3572,0.6949,-0.6242,0.9326,-0.2072,0.2955,0.3995,0.6366,-0.6596,-0.9028,0.1339,-0.4088,-0.8931,0.2755,-0.3557,0.3572,0.6949,-0.6242,-0.9028,0.1339,-0.4088,-0.4202,-0.6272,0.6558,-0.4529,-0.6694,0.5889,-0.8931,0.2755,-0.3557,-0.4202,-0.6272,0.6558,0.8873,-0.1492,0.4364,0.9326,-0.2072,0.2955,-0.4529,-0.6694,0.5889,0.9326,-0.2072,0.2955,0.3572,0.6949,-0.6242,0.3884,0.7448,-0.5426,0.9143,-0.3354,0.2272,0.3572,0.6949,-0.6242,-0.8931,0.2755,-0.3557,-0.9216,0.3215,-0.2175,0.3884,0.7448,-0.5426,-0.8931,0.2755,-0.3557,-0.4529,-0.6694,0.5889,-0.4041,-0.7394,0.5385,-0.9216,0.3215,-0.2175,-0.4529,-0.6694,0.5889,0.9326,-0.2072,0.2955,0.9143,-0.3354,0.2272,-0.4041,-0.7394,0.5385,0.9143,-0.3354,0.2272,0.3884,0.7448,-0.5426,0.458,0.6516,-0.6047,0.8997,-0.2782,0.3364,0.3884,0.7448,-0.5426,-0.9216,0.3215,-0.2175,-0.9327,0.222,-0.2841,0.458,0.6516,-0.6047,-0.9216,0.3215,-0.2175,-0.4041,-0.7394,0.5385,-0.3455,-0.6825,0.6441,-0.9327,0.222,-0.2841,-0.4041,-0.7394,0.5385,0.9143,-0.3354,0.2272,0.8997,-0.2782,0.3364,-0.3455,-0.6825,0.6441,0.8997,-0.2782,0.3364,0.458,0.6516,-0.6047,0.402,0.6146,-0.6787,0.9068,-0.1527,0.3929,0.458,0.6516,-0.6047,-0.9327,0.222,-0.2841,-0.9006,0.1623,-0.4033,0.402,0.6146,-0.6787,-0.9327,0.222,-0.2841,-0.3455,-0.6825,0.6441,-0.4089,-0.6134,0.6756,-0.9006,0.1623,-0.4033,-0.3455,-0.6825,0.6441,0.8997,-0.2782,0.3364,0.9068,-0.1527,0.3929,-0.4089,-0.6134,0.6756,0.9068,-0.1527,0.3929,0.402,0.6146,-0.6787,0.402,0.6274,-0.6669,0.9043,-0.165,0.3938,0.402,0.6146,-0.6787,-0.9006,0.1623,-0.4033,-0.9054,0.1632,-0.3919,0.402,0.6274,-0.6669,-0.9006,0.1623,-0.4033,-0.4089,-0.6134,0.6756,-0.4041,-0.627,0.666,-0.9054,0.1632,-0.3919,-0.4089,-0.6134,0.6756,0.9068,-0.1527,0.3929,0.9043,-0.165,0.3938,-0.4041,-0.627,0.666,-0.2181,-0.2343,-0.9474,-0.5255,0.8448,-0.1007,-0.3841,0.9107,-0.1518,-0.2264,-0.1699,-0.9591,-0.5255,0.8448,-0.1007,0.2114,0.2468,0.9457,0.175,0.3047,0.9362,-0.3841,0.9107,-0.1518,0.2114,0.2468,0.9457,0.5239,-0.8469,0.0905,0.3822,-0.9135,0.1396,0.175,0.3047,0.9362,0.5239,-0.8469,0.0905,-0.2181,-0.2343,-0.9474,-0.2264,-0.1699,-0.9591,0.3822,-0.9135,0.1396,-0.2264,-0.1699,-0.9591,-0.3841,0.9107,-0.1518,-0.2652,0.9462,-0.1855,-0.1706,-0.2468,-0.9539,-0.3841,0.9107,-0.1518,0.175,0.3047,0.9362,0.1834,0.2154,0.9591,-0.2652,0.9462,-0.1855,0.175,0.3047,0.9362,0.3822,-0.9135,0.1396,0.2683,-0.9475,0.1739,0.1834,0.2154,0.9591,0.3822,-0.9135,0.1396,-0.2264,-0.1699,-0.9591,-0.1706,-0.2468,-0.9539,0.2683,-0.9475,0.1739,-0.1706,-0.2468,-0.9539,-0.2652,0.9462,-0.1855,-0.3169,0.9304,-0.1841,-0.1286,-0.2265,-0.9655,-0.2652,0.9462,-0.1855,0.1834,0.2154,0.9591,0.1399,0.2143,0.9667,-0.3169,0.9304,-0.1841,0.1834,0.2154,0.9591,0.2683,-0.9475,0.1739,0.3204,-0.9347,0.1536,0.1399,0.2143,0.9667,0.2683,-0.9475,0.1739,-0.1706,-0.2468,-0.9539,-0.1286,-0.2265,-0.9655,0.3204,-0.9347,0.1536,-0.1286,-0.2265,-0.9655,-0.3169,0.9304,-0.1841,-0.2602,0.9514,-0.165,-0.1374,-0.1857,-0.973,-0.3169,0.9304,-0.1841,0.1399,0.2143,0.9667,0.1302,0.2501,0.9594,-0.2602,0.9514,-0.165,0.1399,0.2143,0.9667,0.3204,-0.9347,0.1536,0.2715,-0.9432,0.1915,0.1302,0.2501,0.9594,0.3204,-0.9347,0.1536,-0.1286,-0.2265,-0.9655,-0.1374,-0.1857,-0.973,0.2715,-0.9432,0.1915,-0.1374,-0.1857,-0.973,-0.2602,0.9514,-0.165,-0.2482,0.9546,-0.1648,-0.1782,-0.2545,-0.9505,-0.2602,0.9514,-0.165,0.1302,0.2501,0.9594,0.2039,0.2021,0.9579,-0.2482,0.9546,-0.1648,0.1302,0.2501,0.9594,0.2715,-0.9432,0.1915,0.2651,-0.9463,0.1853,0.2039,0.2021,0.9579,0.2715,-0.9432,0.1915,-0.1374,-0.1857,-0.973,-0.1782,-0.2545,-0.9505,0.2651,-0.9463,0.1853,-0.1782,-0.2545,-0.9505,-0.2482,0.9546,-0.1648,-0.4065,0.9116,-0.0613,-0.2851,-0.3168,-0.9046,-0.2482,0.9546,-0.1648,0.2039,0.2021,0.9579,0.3464,0.2169,0.9127,-0.4065,0.9116,-0.0613,0.2039,0.2021,0.9579,0.2651,-0.9463,0.1853,0.4509,-0.8802,0.1479,0.3464,0.2169,0.9127,0.2651,-0.9463,0.1853,-0.1782,-0.2545,-0.9505,-0.2851,-0.3168,-0.9046,0.4509,-0.8802,0.1479,-0.2851,-0.3168,-0.9046,-0.4065,0.9116,-0.0613,-0.4375,0.8921,-0.1127,-0.4253,-0.2609,-0.8666,-0.4065,0.9116,-0.0613,0.3464,0.2169,0.9127,0.3937,0.3611,0.8454,-0.4375,0.8921,-0.1127,0.3464,0.2169,0.9127,0.4509,-0.8802,0.1479,0.4517,-0.8856,0.1082,0.3937,0.3611,0.8454,0.4509,-0.8802,0.1479,-0.2851,-0.3168,-0.9046,-0.4253,-0.2609,-0.8666,0.4517,-0.8856,0.1082,-0.4253,-0.2609,-0.8666,-0.4375,0.8921,-0.1127,-0.3742,0.9165,-0.1416,-0.413,-0.3331,-0.8476,-0.4375,0.8921,-0.1127,0.3937,0.3611,0.8454,0.4465,0.2991,0.8433,-0.3742,0.9165,-0.1416,0.3937,0.3611,0.8454,0.4517,-0.8856,0.1082,0.3991,-0.9054,0.145,0.4465,0.2991,0.8433,0.4517,-0.8856,0.1082,-0.4253,-0.2609,-0.8666,-0.413,-0.3331,-0.8476,0.3991,-0.9054,0.145,-0.413,-0.3331,-0.8476,-0.3742,0.9165,-0.1416,-0.3141,0.939,-0.1403,-0.5412,-0.2977,-0.7864,-0.3742,0.9165,-0.1416,0.4465,0.2991,0.8433,0.5286,0.3846,0.7567,-0.3141,0.939,-0.1403,0.4465,0.2991,0.8433,0.3991,-0.9054,0.145,0.3824,-0.9005,0.207,0.5286,0.3846,0.7567,0.3991,-0.9054,0.145,-0.413,-0.3331,-0.8476,-0.5412,-0.2977,-0.7864,0.3824,-0.9005,0.207,-0.5412,-0.2977,-0.7864,-0.3141,0.939,-0.1403,-0.2849,0.9349,-0.2117,-0.6245,-0.3692,-0.6883,-0.3141,0.939,-0.1403,0.5286,0.3846,0.7567,0.6389,0.3439,0.6881,-0.2849,0.9349,-0.2117,0.5286,0.3846,0.7567,0.3824,-0.9005,0.207,0.301,-0.929,0.2153,0.6389,0.3439,0.6881,0.3824,-0.9005,0.207,-0.5412,-0.2977,-0.7864,-0.6245,-0.3692,-0.6883,0.301,-0.929,0.2153,-0.6245,-0.3692,-0.6883,-0.2849,0.9349,-0.2117,-0.4253,0.8869,-0.1802,-0.5244,-0.3771,-0.7634,-0.2849,0.9349,-0.2117,0.6389,0.3439,0.6881,0.5581,0.2932,0.7762,-0.4253,0.8869,-0.1802,0.6389,0.3439,0.6881,0.301,-0.929,0.2153,0.3597,-0.9296,0.0807,0.5581,0.2932,0.7762,0.301,-0.929,0.2153,-0.6245,-0.3692,-0.6883,-0.5244,-0.3771,-0.7634,0.3597,-0.9296,0.0807,-0.5244,-0.3771,-0.7634,-0.4253,0.8869,-0.1802,-0.4374,0.8956,-0.0809,-0.4535,-0.2887,-0.8432,-0.4253,0.8869,-0.1802,0.5581,0.2932,0.7762,0.4404,0.3167,0.8401,-0.4374,0.8956,-0.0809,0.5581,0.2932,0.7762,0.3597,-0.9296,0.0807,0.4441,-0.891,0.0946,0.4404,0.3167,0.8401,0.3597,-0.9296,0.0807,-0.5244,-0.3771,-0.7634,-0.4535,-0.2887,-0.8432,0.4441,-0.891,0.0946,-0.4535,-0.2887,-0.8432,-0.4374,0.8956,-0.0809,-0.3915,0.9134,-0.1115,-0.4799,-0.3041,-0.8229,-0.4374,0.8956,-0.0809,0.4404,0.3167,0.8401,0.472,0.3233,0.8202,-0.3915,0.9134,-0.1115,0.4404,0.3167,0.8401,0.4441,-0.891,0.0946,0.3994,-0.9081,0.1263,0.472,0.3233,0.8202,0.4441,-0.891,0.0946,-0.4535,-0.2887,-0.8432,-0.4799,-0.3041,-0.8229,0.3994,-0.9081,0.1263,-0.4799,-0.3041,-0.8229,-0.3915,0.9134,-0.1115,-0.3747,0.9183,-0.1276,-0.4885,-0.3253,-0.8096,-0.3915,0.9134,-0.1115,0.472,0.3233,0.8202,0.4938,0.3122,0.8116,-0.3747,0.9183,-0.1276,0.472,0.3233,0.8202,0.3994,-0.9081,0.1263,0.3796,-0.9151,0.1362,0.4938,0.3122,0.8116,0.3994,-0.9081,0.1263,-0.4799,-0.3041,-0.8229,-0.4885,-0.3253,-0.8096,0.3796,-0.9151,0.1362,-0.8167,-0.4819,-0.3174,-0.5005,0.8652,-0.0302,-0.4982,0.8665,-0.0319,-0.8176,-0.4836,-0.3127,-0.5005,0.8652,-0.0302,0.8155,0.486,0.3144,0.818,0.4855,0.3085,-0.4982,0.8665,-0.0319,0.8155,0.486,0.3144,0.5026,-0.8641,0.0278,0.5036,-0.8635,0.0292,0.818,0.4855,0.3085,0.5026,-0.8641,0.0278,-0.8167,-0.4819,-0.3174,-0.8176,-0.4836,-0.3127,0.5036,-0.8635,0.0292,-0.8176,-0.4836,-0.3127,-0.4982,0.8665,-0.0319,-0.4914,0.8678,-0.074,-0.8236,-0.4703,-0.317,-0.4982,0.8665,-0.0319,0.818,0.4855,0.3085,0.8096,0.5011,0.3058,-0.4914,0.8678,-0.074,0.818,0.4855,0.3085,0.5036,-0.8635,0.0292,0.4893,-0.8698,0.0636,0.8096,0.5011,0.3058,0.5036,-0.8635,0.0292,-0.8176,-0.4836,-0.3127,-0.8236,-0.4703,-0.317,0.4893,-0.8698,0.0636,-0.8236,-0.4703,-0.317,-0.4914,0.8678,-0.074,-0.481,0.8757,0.0414,-0.7981,-0.5442,-0.2587,-0.4914,0.8678,-0.074,0.8096,0.5011,0.3058,0.8677,0.4329,0.2443,-0.481,0.8757,0.0414,0.8096,0.5011,0.3058,0.4893,-0.8698,0.0636,0.5363,-0.8433,-0.0364,0.8677,0.4329,0.2443,0.4893,-0.8698,0.0636,-0.8236,-0.4703,-0.317,-0.7981,-0.5442,-0.2587,0.5363,-0.8433,-0.0364,-0.7981,-0.5442,-0.2587,-0.481,0.8757,0.0414,-0.5334,0.8267,0.1792,-0.843,-0.4999,-0.1987,-0.481,0.8757,0.0414,0.8677,0.4329,0.2443,0.8466,0.4996,0.1834,-0.5334,0.8267,0.1792,0.8677,0.4329,0.2443,0.5363,-0.8433,-0.0364,0.5289,-0.826,-0.1948,0.8466,0.4996,0.1834,0.5363,-0.8433,-0.0364,-0.7981,-0.5442,-0.2587,-0.843,-0.4999,-0.1987,0.5289,-0.826,-0.1948,-0.843,-0.4999,-0.1987,-0.5334,0.8267,0.1792,-0.5243,0.8454,0.1025,-0.8612,-0.4663,-0.202,-0.5334,0.8267,0.1792,0.8466,0.4996,0.1834,0.8241,0.5333,0.1909,-0.5243,0.8454,0.1025,0.8466,0.4996,0.1834,0.5289,-0.826,-0.1948,0.5279,-0.8406,-0.121,0.8241,0.5333,0.1909,0.5289,-0.826,-0.1948,-0.843,-0.4999,-0.1987,-0.8612,-0.4663,-0.202,0.5279,-0.8406,-0.121,-0.8612,-0.4663,-0.202,-0.5243,0.8454,0.1025,-0.5254,0.8509,0.0051,-0.8366,-0.4925,-0.2398,-0.5243,0.8454,0.1025,0.8241,0.5333,0.1909,0.837,0.503,0.2154,-0.5254,0.8509,0.0051,0.8241,0.5333,0.1909,0.5279,-0.8406,-0.121,0.5046,-0.8626,-0.0364,0.837,0.503,0.2154,0.5279,-0.8406,-0.121,-0.8612,-0.4663,-0.202,-0.8366,-0.4925,-0.2398,0.5046,-0.8626,-0.0364,-0.8366,-0.4925,-0.2398,-0.5254,0.8509,0.0051,-0.5091,0.8564,-0.0862,-0.8288,-0.4585,-0.3207,-0.5254,0.8509,0.0051,0.837,0.503,0.2154,0.799,0.5256,0.2922,-0.5091,0.8564,-0.0862,0.837,0.503,0.2154,0.5046,-0.8626,-0.0364,0.4805,-0.8755,0.0502,0.799,0.5256,0.2922,0.5046,-0.8626,-0.0364,-0.8366,-0.4925,-0.2398,-0.8288,-0.4585,-0.3207,0.4805,-0.8755,0.0502,-0.8288,-0.4585,-0.3207,-0.5091,0.8564,-0.0862,-0.5113,0.835,-0.2034,-0.728,-0.4756,-0.4938,-0.5091,0.8564,-0.0862,0.799,0.5256,0.2922,0.7256,0.4917,0.4814,-0.5113,0.835,-0.2034,0.799,0.5256,0.2922,0.4805,-0.8755,0.0502,0.4167,-0.9001,0.1274,0.7256,0.4917,0.4814,0.4805,-0.8755,0.0502,-0.8288,-0.4585,-0.3207,-0.728,-0.4756,-0.4938,0.4167,-0.9001,0.1274,-0.728,-0.4756,-0.4938,-0.5113,0.835,-0.2034,-0.5281,0.841,-0.1177,-0.5924,-0.4895,-0.6398,-0.5113,0.835,-0.2034,0.7256,0.4917,0.4814,0.6386,0.4129,0.6494,-0.5281,0.841,-0.1177,0.7256,0.4917,0.4814,0.4167,-0.9001,0.1274,0.505,-0.8581,0.0929,0.6386,0.4129,0.6494,0.4167,-0.9001,0.1274,-0.728,-0.4756,-0.4938,-0.5924,-0.4895,-0.6398,0.505,-0.8581,0.0929,-0.5924,-0.4895,-0.6398,-0.5281,0.841,-0.1177,-0.5766,0.8166,-0.0277,-0.5893,-0.4398,-0.6778,-0.5281,0.841,-0.1177,0.6386,0.4129,0.6494,0.5909,0.4375,0.6778,-0.5766,0.8166,-0.0277,0.6386,0.4129,0.6494,0.505,-0.8581,0.0929,0.5756,-0.8173,0.0266,0.5909,0.4375,0.6778,0.505,-0.8581,0.0929,-0.5924,-0.4895,-0.6398,-0.5893,-0.4398,-0.6778,0.5756,-0.8173,0.0266,-0.5893,-0.4398,-0.6778,-0.5766,0.8166,-0.0277,-0.5783,0.8154,-0.0254,-0.5878,-0.4396,-0.6791,-0.5766,0.8166,-0.0277,0.5909,0.4375,0.6778,0.5902,0.4362,0.6792,-0.5783,0.8154,-0.0254,0.5909,0.4375,0.6778,0.5756,-0.8173,0.0266,0.5774,-0.8161,0.0244,0.5902,0.4362,0.6792,0.5756,-0.8173,0.0266,-0.5893,-0.4398,-0.6778,-0.5878,-0.4396,-0.6791,0.5774,-0.8161,0.0244,-0.8163,-0.2229,0.5329,0.7261,0.5533,0.4082,0.7732,0.4451,0.4517,-0.8674,-0.1924,0.459,0.7261,0.5533,0.4082,0.0928,-0.3294,-0.9396,0.014,-0.2951,-0.9554,0.7732,0.4451,0.4517,0.0928,-0.3294,-0.9396,-0.8163,-0.2229,0.5329,-0.8674,-0.1924,0.459,0.014,-0.2951,-0.9554,-0.8674,-0.1924,0.459,0.7732,0.4451,0.4517,0.7754,0.3711,0.511,-0.8532,0.0044,0.5216,0.7732,0.4451,0.4517,0.014,-0.2951,-0.9554,0.0435,-0.3476,-0.9366,0.7754,0.3711,0.511,0.014,-0.2951,-0.9554,-0.8674,-0.1924,0.459,-0.8532,0.0044,0.5216,0.0435,-0.3476,-0.9366,-0.8532,0.0044,0.5216,0.7754,0.3711,0.511,0.8407,0.3704,0.395,-0.8865,-0.0039,0.4626,0.7754,0.3711,0.511,0.0435,-0.3476,-0.9366,0.0788,-0.3872,-0.9186,0.8407,0.3704,0.395,0.0435,-0.3476,-0.9366,-0.8532,0.0044,0.5216,-0.8865,-0.0039,0.4626,0.0788,-0.3872,-0.9186,-0.8865,-0.0039,0.4626,0.8407,0.3704,0.395,0.8174,0.3765,0.436,-0.8594,-0.0567,0.5082,0.8407,0.3704,0.395,0.0788,-0.3872,-0.9186,0.0393,-0.3212,-0.9462,0.8174,0.3765,0.436,0.0788,-0.3872,-0.9186,-0.8865,-0.0039,0.4626,-0.8594,-0.0567,0.5082,0.0393,-0.3212,-0.9462,0.6096,0.3999,0.6845,-0.1073,0.439,-0.8921,0.0497,0.3719,-0.9269,0.4932,0.3854,0.7799,-0.1073,0.439,-0.8921,-0.4986,-0.8426,0.2034,-0.5419,-0.7933,0.2774,0.0497,0.3719,-0.9269,-0.4986,-0.8426,0.2034,0.6096,0.3999,0.6845,0.4932,0.3854,0.7799,-0.5419,-0.7933,0.2774,0.4932,0.3854,0.7799,0.0497,0.3719,-0.9269,0.1039,0.3718,-0.9225,0.4462,0.5756,0.6853,0.0497,0.3719,-0.9269,-0.5419,-0.7933,0.2774,-0.5025,-0.849,0.1635,0.1039,0.3718,-0.9225,-0.5419,-0.7933,0.2774,0.4932,0.3854,0.7799,0.4462,0.5756,0.6853,-0.5025,-0.849,0.1635,0.4462,0.5756,0.6853,0.1039,0.3718,-0.9225,-0.1854,0.4285,-0.8843,0.4578,0.5931,0.6623,0.1039,0.3718,-0.9225,-0.5025,-0.849,0.1635,-0.2906,-0.9514,0.1016,-0.1854,0.4285,-0.8843,-0.5025,-0.849,0.1635,0.4462,0.5756,0.6853,0.4578,0.5931,0.6623,-0.2906,-0.9514,0.1016,0.4578,0.5931,0.6623,-0.1854,0.4285,-0.8843,-0.3318,0.4621,-0.8225,0.5096,0.5119,0.6916,-0.1854,0.4285,-0.8843,-0.2906,-0.9514,0.1016,-0.1781,-0.9753,0.1311,-0.3318,0.4621,-0.8225,-0.2906,-0.9514,0.1016,0.4578,0.5931,0.6623,0.5096,0.5119,0.6916,-0.1781,-0.9753,0.1311,0.5855,0.606,-0.5385,-0.8415,0.3513,0.4105,-0.8783,0.3321,0.3439,0.6307,0.5807,-0.5148,-0.8415,0.3513,0.4105,0.2545,-0.9586,0.1279,0.3026,-0.9408,0.1526,-0.8783,0.3321,0.3439,0.2545,-0.9586,0.1279,0.5855,0.606,-0.5385,0.6307,0.5807,-0.5148,0.3026,-0.9408,0.1526,0.6307,0.5807,-0.5148,-0.8783,0.3321,0.3439,-0.9062,0.2974,0.3007,0.6007,0.6058,-0.5218,-0.8783,0.3321,0.3439,0.3026,-0.9408,0.1526,0.2854,-0.9279,0.2401,-0.9062,0.2974,0.3007,0.3026,-0.9408,0.1526,0.6307,0.5807,-0.5148,0.6007,0.6058,-0.5218,0.2854,-0.9279,0.2401,0.6007,0.6058,-0.5218,-0.9062,0.2974,0.3007,-0.9113,0.262,0.3176,0.5802,0.5273,-0.6207,-0.9062,0.2974,0.3007,0.2854,-0.9279,0.2401,0.345,-0.8724,0.3461,-0.9113,0.262,0.3176,0.2854,-0.9279,0.2401,0.6007,0.6058,-0.5218,0.5802,0.5273,-0.6207,0.345,-0.8724,0.3461,0.5802,0.5273,-0.6207,-0.9113,0.262,0.3176,-0.8323,0.4358,0.3425,0.4582,0.6234,-0.6336,-0.9113,0.262,0.3176,0.345,-0.8724,0.3461,0.2768,-0.9179,0.2843,-0.8323,0.4358,0.3425,0.345,-0.8724,0.3461,0.5802,0.5273,-0.6207,0.4582,0.6234,-0.6336,0.2768,-0.9179,0.2843,0.4582,0.6234,-0.6336,-0.8323,0.4358,0.3425,-0.7535,0.4195,0.5062,0.5653,0.557,-0.6084,-0.8323,0.4358,0.3425,0.2768,-0.9179,0.2843,0.1888,-0.9767,0.1018,-0.7535,0.4195,0.5062,0.2768,-0.9179,0.2843,0.4582,0.6234,-0.6336,0.5653,0.557,-0.6084,0.1888,-0.9767,0.1018,-0.9395,-0.3207,-0.1205,0.3804,0.0961,0.9198,0.3719,0.2283,0.8997,-0.8376,-0.5142,-0.1846,0.3804,0.0961,0.9198,0.5621,0.2141,-0.7989,0.6092,0.3809,-0.6956,0.3719,0.2283,0.8997,0.5621,0.2141,-0.7989,-0.9395,-0.3207,-0.1205,-0.8376,-0.5142,-0.1846,0.6092,0.3809,-0.6956,-0.8376,-0.5142,-0.1846,0.3719,0.2283,0.8997,0.2748,0.2405,0.9309,-0.6837,-0.6992,-0.2092,0.3719,0.2283,0.8997,0.6092,0.3809,-0.6956,0.4227,0.4777,-0.7701,0.2748,0.2405,0.9309,0.6092,0.3809,-0.6956,-0.8376,-0.5142,-0.1846,-0.6837,-0.6992,-0.2092,0.4227,0.4777,-0.7701,-0.6837,-0.6992,-0.2092,0.2748,0.2405,0.9309,0.3896,0.1618,0.9067,-0.6778,-0.7018,-0.2192,0.2748,0.2405,0.9309,0.4227,0.4777,-0.7701,0.2875,0.5636,-0.7744,0.3896,0.1618,0.9067,0.4227,0.4777,-0.7701,-0.6837,-0.6992,-0.2092,-0.6778,-0.7018,-0.2192,0.2875,0.5636,-0.7744,-0.6778,-0.7018,-0.2192,0.3896,0.1618,0.9067,0.442,0.0793,0.8935,-0.678,-0.7171,-0.1613,0.3896,0.1618,0.9067,0.2875,0.5636,-0.7744,0.2367,0.6387,-0.7322,0.442,0.0793,0.8935,0.2875,0.5636,-0.7744,-0.6778,-0.7018,-0.2192,-0.678,-0.7171,-0.1613,0.2367,0.6387,-0.7322,-0.5573,0.2313,-0.7974,-0.1696,0.4532,0.8751,-0.1907,0.336,0.9224,-0.5289,0.2035,-0.8239,-0.1696,0.4532,0.8751,0.7294,-0.6797,-0.0775,0.7839,-0.6007,-0.1573,-0.1907,0.336,0.9224,0.7294,-0.6797,-0.0775,-0.5573,0.2313,-0.7974,-0.5289,0.2035,-0.8239,0.7839,-0.6007,-0.1573,-0.5289,0.2035,-0.8239,-0.1907,0.336,0.9224,-0.2814,0.049,0.9583,-0.4798,0.1964,-0.8551,-0.1907,0.336,0.9224,0.7839,-0.6007,-0.1573,0.9324,-0.2965,-0.2069,-0.2814,0.049,0.9583,0.7839,-0.6007,-0.1573,-0.5289,0.2035,-0.8239,-0.4798,0.1964,-0.8551,0.9324,-0.2965,-0.2069,-0.4798,0.1964,-0.8551,-0.2814,0.049,0.9583,-0.426,-0.1976,0.8829,-0.5676,0.293,-0.7694,-0.2814,0.049,0.9583,0.9324,-0.2965,-0.2069,0.9791,-0.0727,-0.1899,-0.426,-0.1976,0.8829,0.9324,-0.2965,-0.2069,-0.4798,0.1964,-0.8551,-0.5676,0.293,-0.7694,0.9791,-0.0727,-0.1899,-0.5676,0.293,-0.7694,-0.426,-0.1976,0.8829,-0.4097,-0.2812,0.8678,-0.5747,0.3728,-0.7285,-0.426,-0.1976,0.8829,0.9791,-0.0727,-0.1899,0.9858,-0.091,-0.1414,-0.4097,-0.2812,0.8678,0.9791,-0.0727,-0.1899,-0.5676,0.293,-0.7694,-0.5747,0.3728,-0.7285,0.9858,-0.091,-0.1414,0.8255,-0.0507,-0.5621,-0.3296,0.8914,0.3111,-0.3174,0.8923,0.3209,0.8314,-0.0427,-0.554,-0.3296,0.8914,0.3111,-0.4911,-0.8351,0.248,-0.5085,-0.8293,0.2317,-0.3174,0.8923,0.3209,-0.4911,-0.8351,0.248,0.8255,-0.0507,-0.5621,0.8314,-0.0427,-0.554,-0.5085,-0.8293,0.2317,0.8314,-0.0427,-0.554,-0.3174,0.8923,0.3209,-0.5217,0.8417,0.1393,0.8488,-0.2145,-0.4832,-0.3174,0.8923,0.3209,-0.5085,-0.8293,0.2317,-0.3143,-0.8667,0.3874,-0.5217,0.8417,0.1393,-0.5085,-0.8293,0.2317,0.8314,-0.0427,-0.554,0.8488,-0.2145,-0.4832,-0.3143,-0.8667,0.3874,0.8488,-0.2145,-0.4832,-0.5217,0.8417,0.1393,-0.628,0.7622,-0.1573,0.8804,-0.0585,-0.4706,-0.5217,0.8417,0.1393,-0.3143,-0.8667,0.3874,-0.2386,-0.7307,0.6396,-0.628,0.7622,-0.1573,-0.3143,-0.8667,0.3874,0.8488,-0.2145,-0.4832,0.8804,-0.0585,-0.4706,-0.2386,-0.7307,0.6396,0.8804,-0.0585,-0.4706,-0.628,0.7622,-0.1573,-0.7591,0.6301,-0.1636,0.8557,-0.1908,-0.481,-0.628,0.7622,-0.1573,-0.2386,-0.7307,0.6396,-0.1325,-0.5554,0.821,-0.7591,0.6301,-0.1636,-0.2386,-0.7307,0.6396,0.8804,-0.0585,-0.4706,0.8557,-0.1908,-0.481,-0.1325,-0.5554,0.821,0.8557,-0.1908,-0.481,-0.7591,0.6301,-0.1636,-0.754,0.581,-0.3065,0.7616,-0.2073,-0.6141,-0.7591,0.6301,-0.1636,-0.1325,-0.5554,0.821,-0.0159,-0.3715,0.9283,-0.754,0.581,-0.3065,-0.1325,-0.5554,0.821,0.8557,-0.1908,-0.481,0.7616,-0.2073,-0.6141,-0.0159,-0.3715,0.9283,-0.1135,-0.542,0.8326,0.7262,0.6853,-0.0556,0.6269,0.7742,0.0874,-0.0944,-0.4293,0.8982,0.7262,0.6853,-0.0556,-0.6106,-0.1442,-0.7787,-0.432,-0.2556,-0.8649,0.6269,0.7742,0.0874,-0.6106,-0.1442,-0.7787,-0.1135,-0.542,0.8326,-0.0944,-0.4293,0.8982,-0.432,-0.2556,-0.8649,-0.0944,-0.4293,0.8982,0.6269,0.7742,0.0874,0.6132,0.7896,0.0219,-0.3298,-0.4705,0.8185,0.6269,0.7742,0.0874,-0.432,-0.2556,-0.8649,-0.3593,-0.4174,-0.8346,0.6132,0.7896,0.0219,-0.432,-0.2556,-0.8649,-0.0944,-0.4293,0.8982,-0.3298,-0.4705,0.8185,-0.3593,-0.4174,-0.8346,-0.3298,-0.4705,0.8185,0.6132,0.7896,0.0219,0.73,0.6834,0.0122,-0.3568,-0.3663,0.8593,0.6132,0.7896,0.0219,-0.3593,-0.4174,-0.8346,-0.374,-0.3178,-0.8713,0.73,0.6834,0.0122,-0.3593,-0.4174,-0.8346,-0.3298,-0.4705,0.8185,-0.3568,-0.3663,0.8593,-0.374,-0.3178,-0.8713,-0.7359,-0.1259,-0.6652,0.1491,0.8997,0.4103,0.2359,0.8032,0.5471,-0.7854,-0.2475,-0.5674,0.1491,0.8997,0.4103,0.5916,-0.766,0.2515,0.7169,-0.6955,0.048,0.2359,0.8032,0.5471,0.5916,-0.766,0.2515,-0.7359,-0.1259,-0.6652,-0.7854,-0.2475,-0.5674,0.7169,-0.6955,0.048,-0.7854,-0.2475,-0.5674,0.2359,0.8032,0.5471,0.0997,0.8543,0.5102,-0.9062,-0.199,-0.373,0.2359,0.8032,0.5471,0.7169,-0.6955,0.048,0.8074,-0.5822,-0.0961,0.0997,0.8543,0.5102,0.7169,-0.6955,0.048,-0.7854,-0.2475,-0.5674,-0.9062,-0.199,-0.373,0.8074,-0.5822,-0.0961,-0.9062,-0.199,-0.373,0.0997,0.8543,0.5102,0.115,0.9114,0.3951,-0.9027,-0.2211,-0.369,0.0997,0.8543,0.5102,0.8074,-0.5822,-0.0961,0.7622,-0.6472,-0.0172,0.115,0.9114,0.3951,0.8074,-0.5822,-0.0961,-0.9062,-0.199,-0.373,-0.9027,-0.2211,-0.369,0.7622,-0.6472,-0.0172,-0.9027,-0.2211,-0.369,0.115,0.9114,0.3951,0.1491,0.9187,0.3659,-0.8875,-0.2424,-0.3918,0.115,0.9114,0.3951,0.7622,-0.6472,-0.0172,0.7424,-0.6693,0.0297,0.1491,0.9187,0.3659,0.7622,-0.6472,-0.0172,-0.9027,-0.2211,-0.369,-0.8875,-0.2424,-0.3918,0.7424,-0.6693,0.0297,-0.1547,-0.381,-0.9115,-0.294,0.9355,0.1959,-0.3835,0.8748,0.2962,-0.1116,-0.4158,-0.9026,-0.294,0.9355,0.1959,0.4492,-0.5444,0.7084,0.5534,-0.5531,0.6228,-0.3835,0.8748,0.2962,0.4492,-0.5444,0.7084,-0.1547,-0.381,-0.9115,-0.1116,-0.4158,-0.9026,0.5534,-0.5531,0.6228,-0.1116,-0.4158,-0.9026,-0.3835,0.8748,0.2962,-0.5899,0.6583,0.4677,-0.0395,-0.4142,-0.9093,-0.3835,0.8748,0.2962,0.5534,-0.5531,0.6228,0.8051,-0.3552,0.475,-0.5899,0.6583,0.4677,0.5534,-0.5531,0.6228,-0.1116,-0.4158,-0.9026,-0.0395,-0.4142,-0.9093,0.8051,-0.3552,0.475,-0.0395,-0.4142,-0.9093,-0.5899,0.6583,0.4677,-0.7973,0.3586,0.4856,-0.1,-0.1929,-0.9761,-0.5899,0.6583,0.4677,0.8051,-0.3552,0.475,0.9151,-0.2065,0.3464,-0.7973,0.3586,0.4856,0.8051,-0.3552,0.475,-0.0395,-0.4142,-0.9093,-0.1,-0.1929,-0.9761,0.9151,-0.2065,0.3464,-0.1,-0.1929,-0.9761,-0.7973,0.3586,0.4856,-0.7939,0.2326,0.5618,-0.0778,-0.0236,-0.9967,-0.7973,0.3586,0.4856,0.9151,-0.2065,0.3464,0.8753,-0.2096,0.4359,-0.7939,0.2326,0.5618,0.9151,-0.2065,0.3464,-0.1,-0.1929,-0.9761,-0.0778,-0.0236,-0.9967,0.8753,-0.2096,0.4359,0.2215,-0.0642,0.973,0.0194,0.8865,-0.4624,0.0154,0.9013,-0.433,0.188,-0.043,0.9812,0.0194,0.8865,-0.4624,-0.2416,-0.8219,-0.5158,-0.196,-0.8318,-0.5193,0.0154,0.9013,-0.433,-0.2416,-0.8219,-0.5158,0.2215,-0.0642,0.973,0.188,-0.043,0.9812,-0.196,-0.8318,-0.5193,0.188,-0.043,0.9812,0.0154,0.9013,-0.433,0.0092,0.8456,-0.5337,0.2413,-0.1185,0.9632,0.0154,0.9013,-0.433,-0.196,-0.8318,-0.5193,-0.2862,-0.8084,-0.5144,0.0092,0.8456,-0.5337,-0.196,-0.8318,-0.5193,0.188,-0.043,0.9812,0.2413,-0.1185,0.9632,-0.2862,-0.8084,-0.5144,0.2413,-0.1185,0.9632,0.0092,0.8456,-0.5337,-0.0386,0.9063,-0.4209,0.4001,-0.042,0.9155,0.0092,0.8456,-0.5337,-0.2862,-0.8084,-0.5144,-0.3658,-0.7632,-0.5326,-0.0386,0.9063,-0.4209,-0.2862,-0.8084,-0.5144,0.2413,-0.1185,0.9632,0.4001,-0.042,0.9155,-0.3658,-0.7632,-0.5326,0.4001,-0.042,0.9155,-0.0386,0.9063,-0.4209,-0.1541,0.8687,-0.4707,0.5029,-0.1501,0.8512,-0.0386,0.9063,-0.4209,-0.3658,-0.7632,-0.5326,-0.398,-0.8027,-0.4441,-0.1541,0.8687,-0.4707,-0.3658,-0.7632,-0.5326,0.4001,-0.042,0.9155,0.5029,-0.1501,0.8512,-0.398,-0.8027,-0.4441,0.5029,-0.1501,0.8512,-0.1541,0.8687,-0.4707,-0.0439,0.892,-0.45,0.5464,-0.1003,0.8315,-0.1541,0.8687,-0.4707,-0.398,-0.8027,-0.4441,-0.4854,-0.7998,-0.3531,-0.0439,0.892,-0.45,-0.398,-0.8027,-0.4441,0.5029,-0.1501,0.8512,0.5464,-0.1003,0.8315,-0.4854,-0.7998,-0.3531,0.5464,-0.1003,0.8315,-0.0439,0.892,-0.45,-0.0308,0.879,-0.4758,0.5137,-0.085,0.8538,-0.0439,0.892,-0.45,-0.4854,-0.7998,-0.3531,-0.4811,-0.7917,-0.3764,-0.0308,0.879,-0.4758,-0.4854,-0.7998,-0.3531,0.5464,-0.1003,0.8315,0.5137,-0.085,0.8538,-0.4811,-0.7917,-0.3764,0.2598,0.4846,-0.8352,-0.8776,0.1968,0.4372,-0.874,0.1893,0.4475,0.256,0.4725,-0.8433,-0.8776,0.1968,0.4372,0.6194,-0.6791,0.3939,0.619,-0.6715,0.4073,-0.874,0.1893,0.4475,0.6194,-0.6791,0.3939,0.2598,0.4846,-0.8352,0.256,0.4725,-0.8433,0.619,-0.6715,0.4073,0.256,0.4725,-0.8433,-0.874,0.1893,0.4475,-0.8779,0.1996,0.4352,0.2538,0.4688,-0.8461,-0.874,0.1893,0.4475,0.619,-0.6715,0.4073,0.6267,-0.6638,0.4082,-0.8779,0.1996,0.4352,0.619,-0.6715,0.4073,0.256,0.4725,-0.8433,0.2538,0.4688,-0.8461,0.6267,-0.6638,0.4082,0.2538,0.4688,-0.8461,-0.8779,0.1996,0.4352,-0.8672,0.2721,0.417,0.2435,0.606,-0.7573,-0.8779,0.1996,0.4352,0.6267,-0.6638,0.4082,0.5815,-0.7682,0.2678,-0.8672,0.2721,0.417,0.6267,-0.6638,0.4082,0.2538,0.4688,-0.8461,0.2435,0.606,-0.7573,0.5815,-0.7682,0.2678,0.2435,0.606,-0.7573,-0.8672,0.2721,0.417,-0.8957,0.1473,0.4195,0.4258,0.636,-0.6436,-0.8672,0.2721,0.417,0.5815,-0.7682,0.2678,0.5553,-0.8097,0.1898,-0.8957,0.1473,0.4195,0.5815,-0.7682,0.2678,0.2435,0.606,-0.7573,0.4258,0.636,-0.6436,0.5553,-0.8097,0.1898,0.4258,0.636,-0.6436,-0.8957,0.1473,0.4195,-0.9442,0.0998,0.314,0.4008,0.7047,-0.5855,-0.8957,0.1473,0.4195,0.5553,-0.8097,0.1898,0.5458,-0.795,0.2648,-0.9442,0.0998,0.314,0.5553,-0.8097,0.1898,0.4258,0.636,-0.6436,0.4008,0.7047,-0.5855,0.5458,-0.795,0.2648,0.4008,0.7047,-0.5855,-0.9442,0.0998,0.314,-0.9448,0.0861,0.316,0.4076,0.7116,-0.5722,-0.9442,0.0998,0.314,0.5458,-0.795,0.2648,0.5337,-0.8043,0.2613,-0.9448,0.0861,0.316,0.5458,-0.795,0.2648,0.4008,0.7047,-0.5855,0.4076,0.7116,-0.5722,0.5337,-0.8043,0.2613,-0.5039,-0.5514,0.6649,0.0372,0.994,0.1028,0.165,0.978,0.1274,-0.494,-0.6086,0.6209,0.0372,0.994,0.1028,0.4657,-0.4402,-0.7677,0.3463,-0.46,-0.8176,0.165,0.978,0.1274,0.4657,-0.4402,-0.7677,-0.5039,-0.5514,0.6649,-0.494,-0.6086,0.6209,0.3463,-0.46,-0.8176,-0.494,-0.6086,0.6209,0.165,0.978,0.1274,0.3106,0.9259,0.2151,-0.5019,-0.5762,0.645,0.165,0.978,0.1274,0.3463,-0.46,-0.8176,0.1918,-0.3876,-0.9016,0.3106,0.9259,0.2151,0.3463,-0.46,-0.8176,-0.494,-0.6086,0.6209,-0.5019,-0.5762,0.645,0.1918,-0.3876,-0.9016,-0.5019,-0.5762,0.645,0.3106,0.9259,0.2151,0.3508,0.9013,0.254,-0.4944,-0.5502,0.6729,0.3106,0.9259,0.2151,0.1918,-0.3876,-0.9016,0.1442,-0.3491,-0.9259,0.3508,0.9013,0.254,0.1918,-0.3876,-0.9016,-0.5019,-0.5762,0.645,-0.4944,-0.5502,0.6729,0.1442,-0.3491,-0.9259,-0.0696,0.2655,-0.9616,-0.7739,0.143,0.6169,-0.7424,0.15,0.653,-0.0906,0.196,-0.9764,-0.7739,0.143,0.6169,0.8462,-0.4082,0.3425,0.8521,-0.3624,0.3776,-0.7424,0.15,0.653,0.8462,-0.4082,0.3425,-0.0696,0.2655,-0.9616,-0.0906,0.196,-0.9764,0.8521,-0.3624,0.3776,-0.0906,0.196,-0.9764,-0.7424,0.15,0.653,-0.7274,0.2828,0.6252,-0.1815,0.1111,-0.9771,-0.7424,0.15,0.653,0.8521,-0.3624,0.3776,0.8413,-0.3664,0.3974,-0.7274,0.2828,0.6252,0.8521,-0.3624,0.3776,-0.0906,0.196,-0.9764,-0.1815,0.1111,-0.9771,0.8413,-0.3664,0.3974,-0.1815,0.1111,-0.9771,-0.7274,0.2828,0.6252,-0.654,0.4004,0.6419,-0.1822,0.0313,-0.9828,-0.7274,0.2828,0.6252,0.8413,-0.3664,0.3974,0.8259,-0.4246,0.3709,-0.654,0.4004,0.6419,0.8413,-0.3664,0.3974,-0.1815,0.1111,-0.9771,-0.1822,0.0313,-0.9828,0.8259,-0.4246,0.3709,-0.1822,0.0313,-0.9828,-0.654,0.4004,0.6419,-0.6432,0.4351,0.6301,-0.1904,-0.0045,-0.9817,-0.654,0.4004,0.6419,0.8259,-0.4246,0.3709,0.8321,-0.4298,0.3505,-0.6432,0.4351,0.6301,0.8259,-0.4246,0.3709,-0.1822,0.0313,-0.9828,-0.1904,-0.0045,-0.9817,0.8321,-0.4298,0.3505,0.9328,0.0693,0.3536,-0.363,0.711,-0.6023,-0.4277,0.673,-0.6035,0.958,-0.0227,0.2857,-0.363,0.711,-0.6023,-0.5692,-0.7829,0.2511,-0.6263,-0.7064,0.3298,-0.4277,0.673,-0.6035,-0.5692,-0.7829,0.2511,0.9328,0.0693,0.3536,0.958,-0.0227,0.2857,-0.6263,-0.7064,0.3298,0.958,-0.0227,0.2857,-0.4277,0.673,-0.6035,-0.4427,0.6782,-0.5865,0.9752,-0.1971,0.1005,-0.4277,0.673,-0.6035,-0.6263,-0.7064,0.3298,-0.6652,-0.5207,0.5351,-0.4427,0.6782,-0.5865,-0.6263,-0.7064,0.3298,0.958,-0.0227,0.2857,0.9752,-0.1971,0.1005,-0.6652,-0.5207,0.5351,0.9752,-0.1971,0.1005,-0.4427,0.6782,-0.5865,-0.3662,0.7235,-0.5852,0.9523,-0.2936,-0.0829,-0.4427,0.6782,-0.5865,-0.6652,-0.5207,0.5351,-0.6228,-0.4125,0.6648,-0.3662,0.7235,-0.5852,-0.6652,-0.5207,0.5351,0.9752,-0.1971,0.1005,0.9523,-0.2936,-0.0829,-0.6228,-0.4125,0.6648,0.9523,-0.2936,-0.0829,-0.3662,0.7235,-0.5852,-0.3379,0.7486,-0.5705,0.9372,-0.3302,-0.1126,-0.3662,0.7235,-0.5852,-0.6228,-0.4125,0.6648,-0.5997,-0.4176,0.6826,-0.3379,0.7486,-0.5705,-0.6228,-0.4125,0.6648,0.9523,-0.2936,-0.0829,0.9372,-0.3302,-0.1126,-0.5997,-0.4176,0.6826,0.124,-0.9046,-0.4078,0.4753,0.7947,-0.3775,0.3019,0.8359,-0.4585,0.143,-0.9395,-0.3112,0.4753,0.7947,-0.3775,-0.5991,0.1125,0.7927,-0.5054,0.0018,0.8629,0.3019,0.8359,-0.4585,-0.5991,0.1125,0.7927,0.124,-0.9046,-0.4078,0.143,-0.9395,-0.3112,-0.5054,0.0018,0.8629,0.143,-0.9395,-0.3112,0.3019,0.8359,-0.4585,-0.0335,0.7923,-0.6093,0.3097,-0.9153,-0.2575,0.3019,0.8359,-0.4585,-0.5054,0.0018,0.8629,-0.276,0.0175,0.961,-0.0335,0.7923,-0.6093,-0.5054,0.0018,0.8629,0.143,-0.9395,-0.3112,0.3097,-0.9153,-0.2575,-0.276,0.0175,0.961,0.3097,-0.9153,-0.2575,-0.0335,0.7923,-0.6093,-0.2332,0.7203,-0.6533,0.4129,-0.8586,-0.3038,-0.0335,0.7923,-0.6093,-0.276,0.0175,0.961,-0.1745,0.1202,0.9773,-0.2332,0.7203,-0.6533,-0.276,0.0175,0.961,0.3097,-0.9153,-0.2575,0.4129,-0.8586,-0.3038,-0.1745,0.1202,0.9773,0.4129,-0.8586,-0.3038,-0.2332,0.7203,-0.6533,-0.2625,0.7026,-0.6614,0.4251,-0.846,-0.3217,-0.2332,0.7203,-0.6533,-0.1745,0.1202,0.9773,-0.1612,0.1415,0.9767,-0.2625,0.7026,-0.6614,-0.1745,0.1202,0.9773,0.4129,-0.8586,-0.3038,0.4251,-0.846,-0.3217,-0.1612,0.1415,0.9767,0.2918,-0.9456,0.1442,0.2547,0.4953,-0.8305,0.0674,0.5411,-0.8383,0.2058,-0.9545,0.2157,0.2547,0.4953,-0.8305,-0.5501,0.4698,0.6904,-0.3435,0.4878,0.8026,0.0674,0.5411,-0.8383,-0.5501,0.4698,0.6904,0.2918,-0.9456,0.1442,0.2058,-0.9545,0.2157,-0.3435,0.4878,0.8026,0.2058,-0.9545,0.2157,0.0674,0.5411,-0.8383,-0.2267,0.2717,-0.9353,0.3883,-0.9087,0.153,0.0674,0.5411,-0.8383,-0.3435,0.4878,0.8026,-0.0867,0.4739,0.8763,-0.2267,0.2717,-0.9353,-0.3435,0.4878,0.8026,0.2058,-0.9545,0.2157,0.3883,-0.9087,0.153,-0.0867,0.4739,0.8763,0.3883,-0.9087,0.153,-0.2267,0.2717,-0.9353,-0.3665,0.3323,-0.8691,0.4337,-0.8917,0.1296,-0.2267,0.2717,-0.9353,-0.0867,0.4739,0.8763,-0.124,0.6809,0.7218,-0.3665,0.3323,-0.8691,-0.0867,0.4739,0.8763,0.3883,-0.9087,0.153,0.4337,-0.8917,0.1296,-0.124,0.6809,0.7218,0.4337,-0.8917,0.1296,-0.3665,0.3323,-0.8691,-0.2685,0.2775,-0.9224,0.2765,-0.9478,0.1586,-0.3665,0.3323,-0.8691,-0.124,0.6809,0.7218,-0.0059,0.6549,0.7557,-0.2685,0.2775,-0.9224,-0.124,0.6809,0.7218,0.4337,-0.8917,0.1296,0.2765,-0.9478,0.1586,-0.0059,0.6549,0.7557,-0.3006,0.9528,-0.0433,0.9472,-0.2179,0.235,0.9371,-0.2917,0.1916,-0.3745,0.9232,0.0866,0.9472,-0.2179,0.235,-0.6518,-0.7337,-0.1919,-0.5777,-0.7562,-0.3072,0.9371,-0.2917,0.1916,-0.6518,-0.7337,-0.1919,-0.3006,0.9528,-0.0433,-0.3745,0.9232,0.0866,-0.5777,-0.7562,-0.3072,-0.3745,0.9232,0.0866,0.9371,-0.2917,0.1916,0.9517,-0.2707,0.1452,-0.4617,0.8223,0.3326,0.9371,-0.2917,0.1916,-0.5777,-0.7562,-0.3072,-0.511,-0.6613,-0.5491,0.9517,-0.2707,0.1452,-0.5777,-0.7562,-0.3072,-0.3745,0.9232,0.0866,-0.4617,0.8223,0.3326,-0.511,-0.6613,-0.5491,-0.4617,0.8223,0.3326,0.9517,-0.2707,0.1452,0.962,-0.1961,0.1898,-0.461,0.7582,0.4611,0.9517,-0.2707,0.1452,-0.511,-0.6613,-0.5491,-0.5101,-0.5603,-0.6526,0.962,-0.1961,0.1898,-0.511,-0.6613,-0.5491,-0.4617,0.8223,0.3326,-0.461,0.7582,0.4611,-0.5101,-0.5603,-0.6526,-0.6195,0.7847,0.02,0.8861,0.0738,-0.4575,0.9263,0.273,-0.2598,-0.767,0.6221,-0.157,0.8861,0.0738,-0.4575,-0.267,-0.855,0.4447,-0.3896,-0.8214,0.4165,0.9263,0.273,-0.2598,-0.267,-0.855,0.4447,-0.6195,0.7847,0.02,-0.767,0.6221,-0.157,-0.3896,-0.8214,0.4165,-0.767,0.6221,-0.157,0.9263,0.273,-0.2598,0.9829,0.1772,-0.0509,-0.7466,0.6371,-0.1914,0.9263,0.273,-0.2598,-0.3896,-0.8214,0.4165,-0.1211,-0.9519,0.2816,0.9829,0.1772,-0.0509,-0.3896,-0.8214,0.4165,-0.767,0.6221,-0.157,-0.7466,0.6371,-0.1914,-0.1211,-0.9519,0.2816,-0.7466,0.6371,-0.1914,0.9829,0.1772,-0.0509,0.9438,0.2331,-0.2342,-0.6912,0.7148,0.1064,0.9829,0.1772,-0.0509,-0.1211,-0.9519,0.2816,-0.1944,-0.974,0.1164,0.9438,0.2331,-0.2342,-0.1211,-0.9519,0.2816,-0.7466,0.6371,-0.1914,-0.6912,0.7148,0.1064,-0.1944,-0.974,0.1164,-0.6912,0.7148,0.1064,0.9438,0.2331,-0.2342,0.9217,0.2539,-0.2934,-0.6822,0.7085,0.1805,0.9438,0.2331,-0.2342,-0.1944,-0.974,0.1164,-0.2355,-0.9654,0.1116,0.9217,0.2539,-0.2934,-0.1944,-0.974,0.1164,-0.6912,0.7148,0.1064,-0.6822,0.7085,0.1805,-0.2355,-0.9654,0.1116,-0.7158,0.6721,-0.1895,0.9583,0.226,-0.1748,0.9336,0.2356,-0.2698,-0.6744,0.6929,-0.2552,0.9583,0.226,-0.1748,-0.2431,-0.8989,0.3645,-0.2169,-0.8513,0.4777,0.9336,0.2356,-0.2698,-0.2431,-0.8989,0.3645,-0.7158,0.6721,-0.1895,-0.6744,0.6929,-0.2552,-0.2169,-0.8513,0.4777,-0.6744,0.6929,-0.2552,0.9336,0.2356,-0.2698,0.9449,0.064,-0.3211,-0.7066,0.6917,-0.1492,0.9336,0.2356,-0.2698,-0.2169,-0.8513,0.4777,-0.1855,-0.8456,0.5006,0.9449,0.064,-0.3211,-0.2169,-0.8513,0.4777,-0.6744,0.6929,-0.2552,-0.7066,0.6917,-0.1492,-0.1855,-0.8456,0.5006,-0.7066,0.6917,-0.1492,0.9449,0.064,-0.3211,0.8446,-0.0672,-0.5312,-0.4961,0.8451,0.199,0.9449,0.064,-0.3211,-0.1855,-0.8456,0.5006,-0.2037,-0.9428,0.264,0.8446,-0.0672,-0.5312,-0.1855,-0.8456,0.5006,-0.7066,0.6917,-0.1492,-0.4961,0.8451,0.199,-0.2037,-0.9428,0.264,-0.4961,0.8451,0.199,0.8446,-0.0672,-0.5312,0.713,0.0442,-0.6997,-0.3137,0.8274,0.4658,0.8446,-0.0672,-0.5312,-0.2037,-0.9428,0.264,-0.3966,-0.8892,0.2279,0.713,0.0442,-0.6997,-0.2037,-0.9428,0.264,-0.4961,0.8451,0.199,-0.3137,0.8274,0.4658,-0.3966,-0.8892,0.2279,-0.3137,0.8274,0.4658,0.713,0.0442,-0.6997,0.7085,0.0554,-0.7035,-0.2979,0.8255,0.4795,0.713,0.0442,-0.6997,-0.3966,-0.8892,0.2279,-0.4113,-0.8836,0.224,0.7085,0.0554,-0.7035,-0.3966,-0.8892,0.2279,-0.3137,0.8274,0.4658,-0.2979,0.8255,0.4795,-0.4113,-0.8836,0.224,-0.0059,0.8109,0.5852,0.8226,-0.2417,-0.5147,0.8115,-0.318,-0.4903,-0.04,0.7789,0.6259,0.8226,-0.2417,-0.5147,-0.8197,-0.5685,-0.0705,-0.8532,-0.5013,-0.1439,0.8115,-0.318,-0.4903,-0.8197,-0.5685,-0.0705,-0.0059,0.8109,0.5852,-0.04,0.7789,0.6259,-0.8532,-0.5013,-0.1439,-0.04,0.7789,0.6259,0.8115,-0.318,-0.4903,0.8288,-0.4229,-0.3665,-0.0404,0.7567,0.6525,0.8115,-0.318,-0.4903,-0.8532,-0.5013,-0.1439,-0.8957,-0.3394,-0.2872,0.8288,-0.4229,-0.3665,-0.8532,-0.5013,-0.1439,-0.04,0.7789,0.6259,-0.0404,0.7567,0.6525,-0.8957,-0.3394,-0.2872,-0.0404,0.7567,0.6525,0.8288,-0.4229,-0.3665,0.8428,-0.5004,-0.1982,-0.0082,0.7881,0.6155,0.8288,-0.4229,-0.3665,-0.8957,-0.3394,-0.2872,-0.8802,-0.2522,-0.402,0.8428,-0.5004,-0.1982,-0.8957,-0.3394,-0.2872,-0.0404,0.7567,0.6525,-0.0082,0.7881,0.6155,-0.8802,-0.2522,-0.402,-0.0082,0.7881,0.6155,0.8428,-0.5004,-0.1982,0.8249,-0.5463,-0.1453,0.0318,0.8102,0.5852,0.8428,-0.5004,-0.1982,-0.8802,-0.2522,-0.402,-0.8577,-0.2647,-0.4407,0.8249,-0.5463,-0.1453,-0.8802,-0.2522,-0.402,-0.0082,0.7881,0.6155,0.0318,0.8102,0.5852,-0.8577,-0.2647,-0.4407],"colors":[0],"uvs":[[0,0,0.0209,0,0.0419,0,0.0628,0,0.0838,0,0.1047,0,0.1257,0,0.1466,0,0.1676,0,0.1885,0,0.2094,0,0.2304,0,0.2513,0,0.2723,0,0.2932,0,0.3142,0,0.3351,0,0.356,0,0.377,0,0.3979,0,0.4189,0,0.4398,0,0.4608,0,0.4817,0,0.5027,0,0.5236,0,0.5445,0,0.5655,0,0.5864,0,0.6074,0,0.6283,0,0,0.3,0.0209,0.3,0.0419,0.3,0.0628,0.3,0.0838,0.3,0.1047,0.3,0.1257,0.3,0.1466,0.3,0.1676,0.3,0.1885,0.3,0.2094,0.3,0.2304,0.3,0.2513,0.3,0.2723,0.3,0.2932,0.3,0.3142,0.3,0.3351,0.3,0.356,0.3,0.377,0.3,0.3979,0.3,0.4189,0.3,0.4398,0.3,0.4608,0.3,0.4817,0.3,0.5027,0.3,0.5236,0.3,0.5445,0.3,0.5655,0.3,0.5864,0.3,0.6074,0.3,0.6283,0.3,0,0.6,0.0209,0.6,0.0419,0.6,0.0628,0.6,0.0838,0.6,0.1047,0.6,0.1257,0.6,0.1466,0.6,0.1676,0.6,0.1885,0.6,0.2094,0.6,0.2304,0.6,0.2513,0.6,0.2723,0.6,0.2932,0.6,0.3142,0.6,0.3351,0.6,0.356,0.6,0.377,0.6,0.3979,0.6,0.4189,0.6,0.4398,0.6,0.4608,0.6,0.4817,0.6,0.5027,0.6,0.5236,0.6,0.5445,0.6,0.5655,0.6,0.5864,0.6,0.6074,0.6,0.6283,0.6,0,0.9,0.0209,0.9,0.0419,0.9,0.0628,0.9,0.0838,0.9,0.1047,0.9,0.1257,0.9,0.1466,0.9,0.1676,0.9,0.1885,0.9,0.2094,0.9,0.2304,0.9,0.2513,0.9,0.2723,0.9,0.2932,0.9,0.3142,0.9,0.3351,0.9,0.356,0.9,0.377,0.9,0.3979,0.9,0.4189,0.9,0.4398,0.9,0.4608,0.9,0.4817,0.9,0.5027,0.9,0.5236,0.9,0.5445,0.9,0.5655,0.9,0.5864,0.9,0.6074,0.9,0.6283,0.9,0,1.2,0.0209,1.2,0.0419,1.2,0.0628,1.2,0.0838,1.2,0.1047,1.2,0.1257,1.2,0.1466,1.2,0.1676,1.2,0.1885,1.2,0.2094,1.2,0.2304,1.2,0.2513,1.2,0.2723,1.2,0.2932,1.2,0.3142,1.2,0.3351,1.2,0.356,1.2,0.377,1.2,0.3979,1.2,0.4189,1.2,0.4398,1.2,0.4608,1.2,0.4817,1.2,0.5027,1.2,0.5236,1.2,0.5445,1.2,0.5655,1.2,0.5864,1.2,0.6074,1.2,0.6283,1.2,0,1.5,0.0209,1.5,0.0419,1.5,0.0628,1.5,0.0838,1.5,0.1047,1.5,0.1257,1.5,0.1466,1.5,0.1676,1.5,0.1885,1.5,0.2094,1.5,0.2304,1.5,0.2513,1.5,0.2723,1.5,0.2932,1.5,0.3142,1.5,0.3351,1.5,0.356,1.5,0.377,1.5,0.3979,1.5,0.4189,1.5,0.4398,1.5,0.4608,1.5,0.4817,1.5,0.5027,1.5,0.5236,1.5,0.5445,1.5,0.5655,1.5,0.5864,1.5,0.6074,1.5,0.6283,1.5,0,1.8,0.0209,1.8,0.0419,1.8,0.0628,1.8,0.0838,1.8,0.1047,1.8,0.1257,1.8,0.1466,1.8,0.1676,1.8,0.1885,1.8,0.2094,1.8,0.2304,1.8,0.2513,1.8,0.2723,1.8,0.2932,1.8,0.3142,1.8,0.3351,1.8,0.356,1.8,0.377,1.8,0.3979,1.8,0.4189,1.8,0.4398,1.8,0.4608,1.8,0.4817,1.8,0.5027,1.8,0.5236,1.8,0.5445,1.8,0.5655,1.8,0.5864,1.8,0.6074,1.8,0.6283,1.8,0,2.1,0.0209,2.1,0.0419,2.1,0.0628,2.1,0.0838,2.1,0.1047,2.1,0.1257,2.1,0.1466,2.1,0.1676,2.1,0.1885,2.1,0.2094,2.1,0.2304,2.1,0.2513,2.1,0.2723,2.1,0.2932,2.1,0.3142,2.1,0.3351,2.1,0.356,2.1,0.377,2.1,0.3979,2.1,0.4189,2.1,0.4398,2.1,0.4608,2.1,0.4817,2.1,0.5027,2.1,0.5236,2.1,0.5445,2.1,0.5655,2.1,0.5864,2.1,0.6074,2.1,0.6283,2.1,0,2.4,0.0209,2.4,0.0419,2.4,0.0628,2.4,0.0838,2.4,0.1047,2.4,0.1257,2.4,0.1466,2.4,0.1676,2.4,0.1885,2.4,0.2094,2.4,0.2304,2.4,0.2513,2.4,0.2723,2.4,0.2932,2.4,0.3142,2.4,0.3351,2.4,0.356,2.4,0.377,2.4,0.3979,2.4,0.4189,2.4,0.4398,2.4,0.4608,2.4,0.4817,2.4,0.5027,2.4,0.5236,2.4,0.5445,2.4,0.5655,2.4,0.5864,2.4,0.6074,2.4,0.6283,2.4,0,2.7,0.0209,2.7,0.0419,2.7,0.0628,2.7,0.0838,2.7,0.1047,2.7,0.1257,2.7,0.1466,2.7,0.1676,2.7,0.1885,2.7,0.2094,2.7,0.2304,2.7,0.2513,2.7,0.2723,2.7,0.2932,2.7,0.3142,2.7,0.3351,2.7,0.356,2.7,0.377,2.7,0.3979,2.7,0.4189,2.7,0.4398,2.7,0.4608,2.7,0.4817,2.7,0.5027,2.7,0.5236,2.7,0.5445,2.7,0.5655,2.7,0.5864,2.7,0.6074,2.7,0.6283,2.7,0,3,0.0209,3,0.0419,3,0.0628,3,0.0838,3,0.1047,3,0.1257,3,0.1466,3,0.1676,3,0.1885,3,0.2094,3,0.2304,3,0.2513,3,0.2723,3,0.2932,3,0.3142,3,0.3351,3,0.356,3,0.377,3,0.3979,3,0.4189,3,0.4398,3,0.4608,3,0.4817,3,0.5027,3,0.5236,3,0.5445,3,0.5655,3,0.5864,3,0.6074,3,0.6283,3,0,3.3,0.0209,3.3,0.0419,3.3,0.0628,3.3,0.0838,3.3,0.1047,3.3,0.1257,3.3,0.1466,3.3,0.1676,3.3,0.1885,3.3,0.2094,3.3,0.2304,3.3,0.2513,3.3,0.2723,3.3,0.2932,3.3,0.3142,3.3,0.3351,3.3,0.356,3.3,0.377,3.3,0.3979,3.3,0.4189,3.3,0.4398,3.3,0.4608,3.3,0.4817,3.3,0.5027,3.3,0.5236,3.3,0.5445,3.3,0.5655,3.3,0.5864,3.3,0.6074,3.3,0.6283,3.3,0,3.6,0.0209,3.6,0.0419,3.6,0.0628,3.6,0.0838,3.6,0.1047,3.6,0.1257,3.6,0.1466,3.6,0.1676,3.6,0.1885,3.6,0.2094,3.6,0.2304,3.6,0.2513,3.6,0.2723,3.6,0.2932,3.6,0.3142,3.6,0.3351,3.6,0.356,3.6,0.377,3.6,0.3979,3.6,0.4189,3.6,0.4398,3.6,0.4608,3.6,0.4817,3.6,0.5027,3.6,0.5236,3.6,0.5445,3.6,0.5655,3.6,0.5864,3.6,0.6074,3.6,0.6283,3.6,0,3.9,0.0209,3.9,0.0419,3.9,0.0628,3.9,0.0838,3.9,0.1047,3.9,0.1257,3.9,0.1466,3.9,0.1676,3.9,0.1885,3.9,0.2094,3.9,0.2304,3.9,0.2513,3.9,0.2723,3.9,0.2932,3.9,0.3142,3.9,0.3351,3.9,0.356,3.9,0.377,3.9,0.3979,3.9,0.4189,3.9,0.4398,3.9,0.4608,3.9,0.4817,3.9,0.5027,3.9,0.5236,3.9,0.5445,3.9,0.5655,3.9,0.5864,3.9,0.6074,3.9,0.6283,3.9,0,4.2001,0.0209,4.2001,0.0419,4.2001,0.0628,4.2001,0.0838,4.2001,0.1047,4.2001,0.1257,4.2001,0.1466,4.2001,0.1676,4.2001,0.1885,4.2001,0.2094,4.2001,0.2304,4.2001,0.2513,4.2001,0.2723,4.2001,0.2932,4.2001,0.3142,4.2001,0.3351,4.2001,0.356,4.2001,0.377,4.2001,0.3979,4.2001,0.4189,4.2001,0.4398,4.2001,0.4608,4.2001,0.4817,4.2001,0.5027,4.2001,0.5236,4.2001,0.5445,4.2001,0.5655,4.2001,0.5864,4.2001,0.6074,4.2001,0.6283,4.2001,0,4.5001,0.0209,4.5001,0.0419,4.5001,0.0628,4.5001,0.0838,4.5001,0.1047,4.5001,0.1257,4.5001,0.1466,4.5001,0.1676,4.5001,0.1885,4.5001,0.2094,4.5001,0.2304,4.5001,0.2513,4.5001,0.2723,4.5001,0.2932,4.5001,0.3142,4.5001,0.3351,4.5001,0.356,4.5001,0.377,4.5001,0.3979,4.5001,0.4189,4.5001,0.4398,4.5001,0.4608,4.5001,0.4817,4.5001,0.5027,4.5001,0.5236,4.5001,0.5445,4.5001,0.5655,4.5001,0.5864,4.5001,0.6074,4.5001,0.6283,4.5001,0,4.8001,0.0209,4.8001,0.0419,4.8001,0.0628,4.8001,0.0838,4.8001,0.1047,4.8001,0.1257,4.8001,0.1466,4.8001,0.1676,4.8001,0.1885,4.8001,0.2094,4.8001,0.2304,4.8001,0.2513,4.8001,0.2723,4.8001,0.2932,4.8001,0.3142,4.8001,0.3351,4.8001,0.356,4.8001,0.377,4.8001,0.3979,4.8001,0.4189,4.8001,0.4398,4.8001,0.4608,4.8001,0.4817,4.8001,0.5027,4.8001,0.5236,4.8001,0.5445,4.8001,0.5655,4.8001,0.5864,4.8001,0.6074,4.8001,0.6283,4.8001,0,5.1001,0.0209,5.1001,0.0419,5.1001,0.0628,5.1001,0.0838,5.1001,0.1047,5.1001,0.1257,5.1001,0.1466,5.1001,0.1676,5.1001,0.1885,5.1001,0.2094,5.1001,0.2304,5.1001,0.2513,5.1001,0.2723,5.1001,0.2932,5.1001,0.3142,5.1001,0.3351,5.1001,0.356,5.1001,0.377,5.1001,0.3979,5.1001,0.4189,5.1001,0.4398,5.1001,0.4608,5.1001,0.4817,5.1001,0.5027,5.1001,0.5236,5.1001,0.5445,5.1001,0.5655,5.1001,0.5864,5.1001,0.6074,5.1001,0.6283,5.1001,0,5.4002,0.0209,5.4002,0.0419,5.4002,0.0628,5.4002,0.0838,5.4002,0.1047,5.4002,0.1257,5.4002,0.1466,5.4002,0.1676,5.4002,0.1885,5.4002,0.2094,5.4002,0.2304,5.4002,0.2513,5.4002,0.2723,5.4002,0.2932,5.4002,0.3142,5.4002,0.3351,5.4002,0.356,5.4002,0.377,5.4002,0.3979,5.4002,0.4189,5.4002,0.4398,5.4002,0.4608,5.4002,0.4817,5.4002,0.5027,5.4002,0.5236,5.4002,0.5445,5.4002,0.5655,5.4002,0.5864,5.4002,0.6074,5.4002,0.6283,5.4002,0,5.7002,0.0209,5.7002,0.0419,5.7002,0.0628,5.7002,0.0838,5.7002,0.1047,5.7002,0.1257,5.7002,0.1466,5.7002,0.1676,5.7002,0.1885,5.7002,0.2094,5.7002,0.2304,5.7002,0.2513,5.7002,0.2723,5.7002,0.2932,5.7002,0.3142,5.7002,0.3351,5.7002,0.356,5.7002,0.377,5.7002,0.3979,5.7002,0.4189,5.7002,0.4398,5.7002,0.4608,5.7002,0.4817,5.7002,0.5027,5.7002,0.5236,5.7002,0.5445,5.7002,0.5655,5.7002,0.5864,5.7002,0.6074,5.7002,0.6283,5.7002,0,6.0003,0.0209,6.0003,0.0419,6.0003,0.0628,6.0003,0.0838,6.0003,0.1047,6.0003,0.1257,6.0003,0.1466,6.0003,0.1676,6.0003,0.1885,6.0003,0.2094,6.0003,0.2304,6.0003,0.2513,6.0003,0.2723,6.0003,0.2932,6.0003,0.3142,6.0003,0.3351,6.0003,0.356,6.0003,0.377,6.0003,0.3979,6.0003,0.4189,6.0003,0.4398,6.0003,0.4608,6.0003,0.4817,6.0003,0.5027,6.0003,0.5236,6.0003,0.5445,6.0003,0.5655,6.0003,0.5864,6.0003,0.6074,6.0003,0.6283,6.0003,0,6.3004,0.0209,6.3004,0.0419,6.3004,0.0628,6.3004,0.0838,6.3004,0.1047,6.3004,0.1257,6.3004,0.1466,6.3004,0.1676,6.3004,0.1885,6.3004,0.2094,6.3004,0.2304,6.3004,0.2513,6.3004,0.2723,6.3004,0.2932,6.3004,0.3142,6.3004,0.3351,6.3004,0.356,6.3004,0.377,6.3004,0.3979,6.3004,0.4189,6.3004,0.4398,6.3004,0.4608,6.3004,0.4817,6.3004,0.5027,6.3004,0.5236,6.3004,0.5445,6.3004,0.5655,6.3004,0.5864,6.3004,0.6074,6.3004,0.6283,6.3004,0,6.6007,0.0209,6.6007,0.0419,6.6007,0.0628,6.6007,0.0838,6.6007,0.1047,6.6007,0.1257,6.6007,0.1466,6.6007,0.1676,6.6007,0.1885,6.6007,0.2094,6.6007,0.2304,6.6007,0.2513,6.6007,0.2723,6.6007,0.2932,6.6007,0.3142,6.6007,0.3351,6.6007,0.356,6.6007,0.377,6.6007,0.3979,6.6007,0.4189,6.6007,0.4398,6.6007,0.4608,6.6007,0.4817,6.6007,0.5027,6.6007,0.5236,6.6007,0.5445,6.6007,0.5655,6.6007,0.5864,6.6007,0.6074,6.6007,0.6283,6.6007,0,6.8662,0.0209,6.8662,0.0419,6.8662,0.0628,6.8662,0.0838,6.8662,0.1047,6.8662,0.1257,6.8662,0.1466,6.8662,0.1676,6.8662,0.1885,6.8662,0.2094,6.8662,0.2304,6.8662,0.2513,6.8662,0.2723,6.8662,0.2932,6.8662,0.3142,6.8662,0.3351,6.8662,0.356,6.8662,0.377,6.8662,0.3979,6.8662,0.4189,6.8662,0.4398,6.8662,0.4608,6.8662,0.4817,6.8662,0.5027,6.8662,0.5236,6.8662,0.5445,6.8662,0.5655,6.8662,0.5864,6.8662,0.6074,6.8662,0.6283,6.8662,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4,0.0503,1.4,0.1005,1.4,0.1508,1.4,0.2011,1.4,0,1.6,0.0503,1.6,0.1005,1.6,0.1508,1.6,0.2011,1.6,0,1.8,0.0503,1.8,0.1005,1.8,0.1508,1.8,0.2011,1.8,0,2,0.0503,2,0.1005,2,0.1508,2,0.2011,2,0,2.2,0.0503,2.2,0.1005,2.2,0.1508,2.2,0.2011,2.2,0,2.4,0.0503,2.4,0.1005,2.4,0.1508,2.4,0.2011,2.4,0,2.6,0.0503,2.6,0.1005,2.6,0.1508,2.6,0.2011,2.6,0,2.8,0.0503,2.8,0.1005,2.8,0.1508,2.8,0.2011,2.8,0,3,0.0503,3,0.1005,3,0.1508,3,0.2011,3,0,3.2,0.0503,3.2,0.1005,3.2,0.1508,3.2,0.2011,3.2,0,3.346,0.0503,3.346,0.1005,3.346,0.1508,3.346,0.2011,3.346,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4001,0.0503,1.4001,0.1005,1.4001,0.1508,1.4001,0.2011,1.4001,0,1.6001,0.0503,1.6001,0.1005,1.6001,0.1508,1.6001,0.2011,1.6001,0,1.8001,0.0503,1.8001,0.1005,1.8001,0.1508,1.8001,0.2011,1.8001,0,1.9377,0.0503,1.9377,0.1005,1.9377,0.1508,1.9377,0.2011,1.9377,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4001,0.0503,1.4001,0.1005,1.4001,0.1508,1.4001,0.2011,1.4001,0,1.6001,0.0503,1.6001,0.1005,1.6001,0.1508,1.6001,0.2011,1.6001,0,1.8001,0.0503,1.8001,0.1005,1.8001,0.1508,1.8001,0.2011,1.8001,0,1.8752,0.0503,1.8752,0.1005,1.8752,0.1508,1.8752,0.2011,1.8752,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4,0.0503,1.4,0.1005,1.4,0.1508,1.4,0.2011,1.4,0,1.6,0.0503,1.6,0.1005,1.6,0.1508,1.6,0.2011,1.6,0,1.8,0.0503,1.8,0.1005,1.8,0.1508,1.8,0.2011,1.8,0,2,0.0503,2,0.1005,2,0.1508,2,0.2011,2,0,2.2,0.0503,2.2,0.1005,2.2,0.1508,2.2,0.2011,2.2,0,2.4,0.0503,2.4,0.1005,2.4,0.1508,2.4,0.2011,2.4,0,2.6,0.0503,2.6,0.1005,2.6,0.1508,2.6,0.2011,2.6,0,2.8,0.0503,2.8,0.1005,2.8,0.1508,2.8,0.2011,2.8,0,3,0.0503,3,0.1005,3,0.1508,3,0.2011,3,0,3.2,0.0503,3.2,0.1005,3.2,0.1508,3.2,0.2011,3.2,0,3.4,0.0503,3.4,0.1005,3.4,0.1508,3.4,0.2011,3.4,0,3.4763,0.0503,3.4763,0.1005,3.4763,0.1508,3.4763,0.2011,3.4763,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4,0.0503,1.4,0.1005,1.4,0.1508,1.4,0.2011,1.4,0,1.6,0.0503,1.6,0.1005,1.6,0.1508,1.6,0.2011,1.6,0,1.8,0.0503,1.8,0.1005,1.8,0.1508,1.8,0.2011,1.8,0,2,0.0503,2,0.1005,2,0.1508,2,0.2011,2,0,2.2,0.0503,2.2,0.1005,2.2,0.1508,2.2,0.2011,2.2,0,2.4,0.0503,2.4,0.1005,2.4,0.1508,2.4,0.2011,2.4,0,2.6,0.0503,2.6,0.1005,2.6,0.1508,2.6,0.2011,2.6,0,2.6469,0.0503,2.6469,0.1005,2.6469,0.1508,2.6469,0.2011,2.6469,0,0,0.0503,0,0.1005,0,0.1508,0,0.2011,0,0,0.2,0.0503,0.2,0.1005,0.2,0.1508,0.2,0.2011,0.2,0,0.4,0.0503,0.4,0.1005,0.4,0.1508,0.4,0.2011,0.4,0,0.6,0.0503,0.6,0.1005,0.6,0.1508,0.6,0.2011,0.6,0,0.8,0.0503,0.8,0.1005,0.8,0.1508,0.8,0.2011,0.8,0,1,0.0503,1,0.1005,1,0.1508,1,0.2011,1,0,1.2,0.0503,1.2,0.1005,1.2,0.1508,1.2,0.2011,1.2,0,1.4,0.0503,1.4,0.1005,1.4,0.1508,1.4,0.2011,1.4,0,1.6001,0.0503,1.6001,0.1005,1.6001,0.1508,1.6001,0.2011,1.6001,0,1.8001,0.0503,1.8001,0.1005,1.8001,0.1508,1.8001,0.2011,1.8001,0,2.0001,0.0503,2.0001,0.1005,2.0001,0.1508,2.0001,0.2011,2.0001,0,2.0578,0.0503,2.0578,0.1005,2.0578,0.1508,2.0578,0.2011,2.0578,0,0,0.3333,0,0.6667,0,1,0,0,0.254,0.3333,0.254,0.6667,0.254,1,0.254,0,0.5079,0.3333,0.5079,0.6667,0.5079,1,0.5079,0,0.7619,0.3333,0.7619,0.6667,0.7619,1,0.7619,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2589,0.3333,0.2589,0.6667,0.2589,1,0.2589,0,0.5178,0.3333,0.5178,0.6667,0.5178,1,0.5178,0,0.7767,0.3333,0.7767,0.6667,0.7767,1,0.7767,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2029,0.3333,0.2029,0.6667,0.2029,1,0.2029,0,0.4058,0.3333,0.4058,0.6667,0.4058,1,0.4058,0,0.6087,0.3333,0.6087,0.6667,0.6087,1,0.6087,0,0.8115,0.3333,0.8115,0.6667,0.8115,1,0.8115,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2509,0.3333,0.2509,0.6667,0.2509,1,0.2509,0,0.5018,0.3333,0.5018,0.6667,0.5018,1,0.5018,0,0.7527,0.3333,0.7527,0.6667,0.7527,1,0.7527,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2723,0.3333,0.2723,0.6667,0.2723,1,0.2723,0,0.5446,0.3333,0.5446,0.6667,0.5446,1,0.5446,0,0.8168,0.3333,0.8168,0.6667,0.8168,1,0.8168,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2011,0.3333,0.2011,0.6667,0.2011,1,0.2011,0,0.4022,0.3333,0.4022,0.6667,0.4022,1,0.4022,0,0.6033,0.3333,0.6033,0.6667,0.6033,1,0.6033,0,0.8044,0.3333,0.8044,0.6667,0.8044,1,0.8044,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.3481,0.3333,0.3481,0.6667,0.3481,1,0.3481,0,0.6962,0.3333,0.6962,0.6667,0.6962,1,0.6962,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2633,0.3333,0.2633,0.6667,0.2633,1,0.2633,0,0.5267,0.3333,0.5267,0.6667,0.5267,1,0.5267,0,0.79,0.3333,0.79,0.6667,0.79,1,0.79,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2605,0.3333,0.2605,0.6667,0.2605,1,0.2605,0,0.5209,0.3333,0.5209,0.6667,0.5209,1,0.5209,0,0.7814,0.3333,0.7814,0.6667,0.7814,1,0.7814,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.1935,0.3333,0.1935,0.6667,0.1935,1,0.1935,0,0.387,0.3333,0.387,0.6667,0.387,1,0.387,0,0.5805,0.3333,0.5805,0.6667,0.5805,1,0.5805,0,0.7739,0.3333,0.7739,0.6667,0.7739,1,0.7739,0,0.9674,0.3333,0.9674,0.6667,0.9674,1,0.9674,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.1956,0.3333,0.1956,0.6667,0.1956,1,0.1956,0,0.3912,0.3333,0.3912,0.6667,0.3912,1,0.3912,0,0.5868,0.3333,0.5868,0.6667,0.5868,1,0.5868,0,0.7824,0.3333,0.7824,0.6667,0.7824,1,0.7824,0,0.9781,0.3333,0.9781,0.6667,0.9781,1,0.9781,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.3786,0.3333,0.3786,0.6667,0.3786,1,0.3786,0,0.7572,0.3333,0.7572,0.6667,0.7572,1,0.7572,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2839,0.3333,0.2839,0.6667,0.2839,1,0.2839,0,0.5679,0.3333,0.5679,0.6667,0.5679,1,0.5679,0,0.8518,0.3333,0.8518,0.6667,0.8518,1,0.8518,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2886,0.3333,0.2886,0.6667,0.2886,1,0.2886,0,0.5771,0.3333,0.5771,0.6667,0.5771,1,0.5771,0,0.8657,0.3333,0.8657,0.6667,0.8657,1,0.8657,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2839,0.3333,0.2839,0.6667,0.2839,1,0.2839,0,0.5679,0.3333,0.5679,0.6667,0.5679,1,0.5679,0,0.8518,0.3333,0.8518,0.6667,0.8518,1,0.8518,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2571,0.3333,0.2571,0.6667,0.2571,1,0.2571,0,0.5141,0.3333,0.5141,0.6667,0.5141,1,0.5141,0,0.7712,0.3333,0.7712,0.6667,0.7712,1,0.7712,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.3548,0.3333,0.3548,0.6667,0.3548,1,0.3548,0,0.7097,0.3333,0.7097,0.6667,0.7097,1,0.7097,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2917,0.3333,0.2917,0.6667,0.2917,1,0.2917,0,0.5835,0.3333,0.5835,0.6667,0.5835,1,0.5835,0,0.8752,0.3333,0.8752,0.6667,0.8752,1,0.8752,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2305,0.3333,0.2305,0.6667,0.2305,1,0.2305,0,0.461,0.3333,0.461,0.6667,0.461,1,0.461,0,0.6915,0.3333,0.6915,0.6667,0.6915,1,0.6915,0,0.9219,0.3333,0.9219,0.6667,0.9219,1,0.9219,0,1,0.3333,1,0.6667,1,1,1,0,0,0.3333,0,0.6667,0,1,0,0,0.2571,0.3333,0.2571,0.6667,0.2571,1,0.2571,0,0.5141,0.3333,0.5141,0.6667,0.5141,1,0.5141,0,0.7712,0.3333,0.7712,0.6667,0.7712,1,0.7712,0,1,0.3333,1,0.6667,1,1,1]],"faces":[43,0,1,31,30,0,0,1,32,31,0,1,2,3,43,1,2,32,31,0,1,2,33,32,4,5,6,7,43,2,3,33,32,0,2,3,34,33,8,9,10,11,43,3,4,34,33,0,3,4,35,34,12,13,14,15,43,4,5,35,34,0,4,5,36,35,16,17,18,19,43,5,6,36,35,0,5,6,37,36,20,21,22,23,43,6,7,37,36,0,6,7,38,37,24,25,26,27,43,7,8,38,37,0,7,8,39,38,28,29,30,31,43,8,9,39,38,0,8,9,40,39,32,33,34,35,43,9,10,40,39,0,9,10,41,40,36,37,38,39,43,10,11,41,40,0,10,11,42,41,40,41,42,43,43,11,12,42,41,0,11,12,43,42,44,45,46,47,43,12,13,43,42,0,12,13,44,43,48,49,50,51,43,13,14,44,43,0,13,14,45,44,52,53,54,55,43,14,15,45,44,0,14,15,46,45,56,57,58,59,43,15,16,46,45,0,15,16,47,46,60,61,62,63,43,16,17,47,46,0,16,17,48,47,64,65,66,67,43,17,18,48,47,0,17,18,49,48,68,69,70,71,43,18,19,49,48,0,18,19,50,49,72,73,74,75,43,19,20,50,49,0,19,20,51,50,76,77,78,79,43,20,21,51,50,0,20,21,52,51,80,81,82,83,43,21,22,52,51,0,21,22,53,52,84,85,86,87,43,22,23,53,52,0,22,23,54,53,88,89,90,91,43,23,24,54,53,0,23,24,55,54,92,93,94,95,43,24,25,55,54,0,24,25,56,55,96,97,98,99,43,25,26,56,55,0,25,26,57,56,100,101,102,103,43,26,27,57,56,0,26,27,58,57,104,105,106,107,43,27,28,58,57,0,27,28,59,58,108,109,110,111,43,28,29,59,58,0,28,29,60,59,112,113,114,115,43,29,0,30,59,0,29,30,61,60,116,117,118,119,43,30,31,61,60,0,31,32,63,62,120,121,122,123,43,31,32,62,61,0,32,33,64,63,124,125,126,127,43,32,33,63,62,0,33,34,65,64,128,129,130,131,43,33,34,64,63,0,34,35,66,65,132,133,134,135,43,34,35,65,64,0,35,36,67,66,136,137,138,139,43,35,36,66,65,0,36,37,68,67,140,141,142,143,43,36,37,67,66,0,37,38,69,68,144,145,146,147,43,37,38,68,67,0,38,39,70,69,148,149,150,151,43,38,39,69,68,0,39,40,71,70,152,153,154,155,43,39,40,70,69,0,40,41,72,71,156,157,158,159,43,40,41,71,70,0,41,42,73,72,160,161,162,163,43,41,42,72,71,0,42,43,74,73,164,165,166,167,43,42,43,73,72,0,43,44,75,74,168,169,170,171,43,43,44,74,73,0,44,45,76,75,172,173,174,175,43,44,45,75,74,0,45,46,77,76,176,177,178,179,43,45,46,76,75,0,46,47,78,77,180,181,182,183,43,46,47,77,76,0,47,48,79,78,184,185,186,187,43,47,48,78,77,0,48,49,80,79,188,189,190,191,43,48,49,79,78,0,49,50,81,80,192,193,194,195,43,49,50,80,79,0,50,51,82,81,196,197,198,199,43,50,51,81,80,0,51,52,83,82,200,201,202,203,43,51,52,82,81,0,52,53,84,83,204,205,206,207,43,52,53,83,82,0,53,54,85,84,208,209,210,211,43,53,54,84,83,0,54,55,86,85,212,213,214,215,43,54,55,85,84,0,55,56,87,86,216,217,218,219,43,55,56,86,85,0,56,57,88,87,220,221,222,223,43,56,57,87,86,0,57,58,89,88,224,225,226,227,43,57,58,88,87,0,58,59,90,89,228,229,230,231,43,58,59,89,88,0,59,60,91,90,232,233,234,235,43,59,30,60,89,0,60,61,92,91,236,237,238,239,43,60,61,91,90,0,62,63,94,93,240,241,242,243,43,61,62,92,91,0,63,64,95,94,244,245,246,247,43,62,63,93,92,0,64,65,96,95,248,249,250,251,43,63,64,94,93,0,65,66,97,96,252,253,254,255,43,64,65,95,94,0,66,67,98,97,256,257,258,259,43,65,66,96,95,0,67,68,99,98,260,261,262,263,43,66,67,97,96,0,68,69,100,99,264,265,266,267,43,67,68,98,97,0,69,70,101,100,268,269,270,271,43,68,69,99,98,0,70,71,102,101,272,273,274,275,43,69,70,100,99,0,71,72,103,102,276,277,278,279,43,70,71,101,100,0,72,73,104,103,280,281,282,283,43,71,72,102,101,0,73,74,105,104,284,285,286,287,43,72,73,103,102,0,74,75,106,105,288,289,290,291,43,73,74,104,103,0,75,76,107,106,292,293,294,295,43,74,75,105,104,0,76,77,108,107,296,297,298,299,43,75,76,106,105,0,77,78,109,108,300,301,302,303,43,76,77,107,106,0,78,79,110,109,304,305,306,307,43,77,78,108,107,0,79,80,111,110,308,309,310,311,43,78,79,109,108,0,80,81,112,111,312,313,314,315,43,79,80,110,109,0,81,82,113,112,316,317,318,319,43,80,81,111,110,0,82,83,114,113,320,321,322,323,43,81,82,112,111,0,83,84,115,114,324,325,326,327,43,82,83,113,112,0,84,85,116,115,328,329,330,331,43,83,84,114,113,0,85,86,117,116,332,333,334,335,43,84,85,115,114,0,86,87,118,117,336,337,338,339,43,85,86,116,115,0,87,88,119,118,340,341,342,343,43,86,87,117,116,0,88,89,120,119,344,345,346,347,43,87,88,118,117,0,89,90,121,120,348,349,350,351,43,88,89,119,118,0,90,91,122,121,352,353,354,355,43,89,60,90,119,0,91,92,123,122,356,357,358,359,43,90,91,121,120,0,93,94,125,124,360,361,362,363,43,91,92,122,121,0,94,95,126,125,364,365,366,367,43,92,93,123,122,0,95,96,127,126,368,369,370,371,43,93,94,124,123,0,96,97,128,127,372,373,374,375,43,94,95,125,124,0,97,98,129,128,376,377,378,379,43,95,96,126,125,0,98,99,130,129,380,381,382,383,43,96,97,127,126,0,99,100,131,130,384,385,386,387,43,97,98,128,127,0,100,101,132,131,388,389,390,391,43,98,99,129,128,0,101,102,133,132,392,393,394,395,43,99,100,130,129,0,102,103,134,133,396,397,398,399,43,100,101,131,130,0,103,104,135,134,400,401,402,403,43,101,102,132,131,0,104,105,136,135,404,405,406,407,43,102,103,133,132,0,105,106,137,136,408,409,410,411,43,103,104,134,133,0,106,107,138,137,412,413,414,415,43,104,105,135,134,0,107,108,139,138,416,417,418,419,43,105,106,136,135,0,108,109,140,139,420,421,422,423,43,106,107,137,136,0,109,110,141,140,424,425,426,427,43,107,108,138,137,0,110,111,142,141,428,429,430,431,43,108,109,139,138,0,111,112,143,142,432,433,434,435,43,109,110,140,139,0,112,113,144,143,436,437,438,439,43,110,111,141,140,0,113,114,145,144,440,441,442,443,43,111,112,142,141,0,114,115,146,145,444,445,446,447,43,112,113,143,142,0,115,116,147,146,448,449,450,451,43,113,114,144,143,0,116,117,148,147,452,453,454,455,43,114,115,145,144,0,117,118,149,148,456,457,458,459,43,115,116,146,145,0,118,119,150,149,460,461,462,463,43,116,117,147,146,0,119,120,151,150,464,465,466,467,43,117,118,148,147,0,120,121,152,151,468,469,470,471,43,118,119,149,148,0,121,122,153,152,472,473,474,475,43,119,90,120,149,0,122,123,154,153,476,477,478,479,43,120,121,151,150,0,124,125,156,155,480,481,482,483,43,121,122,152,151,0,125,126,157,156,484,485,486,487,43,122,123,153,152,0,126,127,158,157,488,489,490,491,43,123,124,154,153,0,127,128,159,158,492,493,494,495,43,124,125,155,154,0,128,129,160,159,496,497,498,499,43,125,126,156,155,0,129,130,161,160,500,501,502,503,43,126,127,157,156,0,130,131,162,161,504,505,506,507,43,127,128,158,157,0,131,132,163,162,508,509,510,511,43,128,129,159,158,0,132,133,164,163,512,513,514,515,43,129,130,160,159,0,133,134,165,164,516,517,518,519,43,130,131,161,160,0,134,135,166,165,520,521,522,523,43,131,132,162,161,0,135,136,167,166,524,525,526,527,43,132,133,163,162,0,136,137,168,167,528,529,530,531,43,133,134,164,163,0,137,138,169,168,532,533,534,535,43,134,135,165,164,0,138,139,170,169,536,537,538,539,43,135,136,166,165,0,139,140,171,170,540,541,542,543,43,136,137,167,166,0,140,141,172,171,544,545,546,547,43,137,138,168,167,0,141,142,173,172,548,549,550,551,43,138,139,169,168,0,142,143,174,173,552,553,554,555,43,139,140,170,169,0,143,144,175,174,556,557,558,559,43,140,141,171,170,0,144,145,176,175,560,561,562,563,43,141,142,172,171,0,145,146,177,176,564,565,566,567,43,142,143,173,172,0,146,147,178,177,568,569,570,571,43,143,144,174,173,0,147,148,179,178,572,573,574,575,43,144,145,175,174,0,148,149,180,179,576,577,578,579,43,145,146,176,175,0,149,150,181,180,580,581,582,583,43,146,147,177,176,0,150,151,182,181,584,585,586,587,43,147,148,178,177,0,151,152,183,182,588,589,590,591,43,148,149,179,178,0,152,153,184,183,592,593,594,595,43,149,120,150,179,0,153,154,185,184,596,597,598,599,43,150,151,181,180,0,155,156,187,186,600,601,602,603,43,151,152,182,181,0,156,157,188,187,604,605,606,607,43,152,153,183,182,0,157,158,189,188,608,609,610,611,43,153,154,184,183,0,158,159,190,189,612,613,614,615,43,154,155,185,184,0,159,160,191,190,616,617,618,619,43,155,156,186,185,0,160,161,192,191,620,621,622,623,43,156,157,187,186,0,161,162,193,192,624,625,626,627,43,157,158,188,187,0,162,163,194,193,628,629,630,631,43,158,159,189,188,0,163,164,195,194,632,633,634,635,43,159,160,190,189,0,164,165,196,195,636,637,638,639,43,160,161,191,190,0,165,166,197,196,640,641,642,643,43,161,162,192,191,0,166,167,198,197,644,645,646,647,43,162,163,193,192,0,167,168,199,198,648,649,650,651,43,163,164,194,193,0,168,169,200,199,652,653,654,655,43,164,165,195,194,0,169,170,201,200,656,657,658,659,43,165,166,196,195,0,170,171,202,201,660,661,662,663,43,166,167,197,196,0,171,172,203,202,664,665,666,667,43,167,168,198,197,0,172,173,204,203,668,669,670,671,43,168,169,199,198,0,173,174,205,204,672,673,674,675,43,169,170,200,199,0,174,175,206,205,676,677,678,679,43,170,171,201,200,0,175,176,207,206,680,681,682,683,43,171,172,202,201,0,176,177,208,207,684,685,686,687,43,172,173,203,202,0,177,178,209,208,688,689,690,691,43,173,174,204,203,0,178,179,210,209,692,693,694,695,43,174,175,205,204,0,179,180,211,210,696,697,698,699,43,175,176,206,205,0,180,181,212,211,700,701,702,703,43,176,177,207,206,0,181,182,213,212,704,705,706,707,43,177,178,208,207,0,182,183,214,213,708,709,710,711,43,178,179,209,208,0,183,184,215,214,712,713,714,715,43,179,150,180,209,0,184,185,216,215,716,717,718,719,43,180,181,211,210,0,186,187,218,217,720,721,722,723,43,181,182,212,211,0,187,188,219,218,724,725,726,727,43,182,183,213,212,0,188,189,220,219,728,729,730,731,43,183,184,214,213,0,189,190,221,220,732,733,734,735,43,184,185,215,214,0,190,191,222,221,736,737,738,739,43,185,186,216,215,0,191,192,223,222,740,741,742,743,43,186,187,217,216,0,192,193,224,223,744,745,746,747,43,187,188,218,217,0,193,194,225,224,748,749,750,751,43,188,189,219,218,0,194,195,226,225,752,753,754,755,43,189,190,220,219,0,195,196,227,226,756,757,758,759,43,190,191,221,220,0,196,197,228,227,760,761,762,763,43,191,192,222,221,0,197,198,229,228,764,765,766,767,43,192,193,223,222,0,198,199,230,229,768,769,770,771,43,193,194,224,223,0,199,200,231,230,772,773,774,775,43,194,195,225,224,0,200,201,232,231,776,777,778,779,43,195,196,226,225,0,201,202,233,232,780,781,782,783,43,196,197,227,226,0,202,203,234,233,784,785,786,787,43,197,198,228,227,0,203,204,235,234,788,789,790,791,43,198,199,229,228,0,204,205,236,235,792,793,794,795,43,199,200,230,229,0,205,206,237,236,796,797,798,799,43,200,201,231,230,0,206,207,238,237,800,801,802,803,43,201,202,232,231,0,207,208,239,238,804,805,806,807,43,202,203,233,232,0,208,209,240,239,808,809,810,811,43,203,204,234,233,0,209,210,241,240,812,813,814,815,43,204,205,235,234,0,210,211,242,241,816,817,818,819,43,205,206,236,235,0,211,212,243,242,820,821,822,823,43,206,207,237,236,0,212,213,244,243,824,825,826,827,43,207,208,238,237,0,213,214,245,244,828,829,830,831,43,208,209,239,238,0,214,215,246,245,832,833,834,835,43,209,180,210,239,0,215,216,247,246,836,837,838,839,43,210,211,241,240,0,217,218,249,248,840,841,842,843,43,211,212,242,241,0,218,219,250,249,844,845,846,847,43,212,213,243,242,0,219,220,251,250,848,849,850,851,43,213,214,244,243,0,220,221,252,251,852,853,854,855,43,214,215,245,244,0,221,222,253,252,856,857,858,859,43,215,216,246,245,0,222,223,254,253,860,861,862,863,43,216,217,247,246,0,223,224,255,254,864,865,866,867,43,217,218,248,247,0,224,225,256,255,868,869,870,871,43,218,219,249,248,0,225,226,257,256,872,873,874,875,43,219,220,250,249,0,226,227,258,257,876,877,878,879,43,220,221,251,250,0,227,228,259,258,880,881,882,883,43,221,222,252,251,0,228,229,260,259,884,885,886,887,43,222,223,253,252,0,229,230,261,260,888,889,890,891,43,223,224,254,253,0,230,231,262,261,892,893,894,895,43,224,225,255,254,0,231,232,263,262,896,897,898,899,43,225,226,256,255,0,232,233,264,263,900,901,902,903,43,226,227,257,256,0,233,234,265,264,904,905,906,907,43,227,228,258,257,0,234,235,266,265,908,909,910,911,43,228,229,259,258,0,235,236,267,266,912,913,914,915,43,229,230,260,259,0,236,237,268,267,916,917,918,919,43,230,231,261,260,0,237,238,269,268,920,921,922,923,43,231,232,262,261,0,238,239,270,269,924,925,926,927,43,232,233,263,262,0,239,240,271,270,928,929,930,931,43,233,234,264,263,0,240,241,272,271,932,933,934,935,43,234,235,265,264,0,241,242,273,272,936,937,938,939,43,235,236,266,265,0,242,243,274,273,940,941,942,943,43,236,237,267,266,0,243,244,275,274,944,945,946,947,43,237,238,268,267,0,244,245,276,275,948,949,950,951,43,238,239,269,268,0,245,246,277,276,952,953,954,955,43,239,210,240,269,0,246,247,278,277,956,957,958,959,43,240,241,271,270,0,248,249,280,279,960,961,962,963,43,241,242,272,271,0,249,250,281,280,964,965,966,967,43,242,243,273,272,0,250,251,282,281,968,969,970,971,43,243,244,274,273,0,251,252,283,282,972,973,974,975,43,244,245,275,274,0,252,253,284,283,976,977,978,979,43,245,246,276,275,0,253,254,285,284,980,981,982,983,43,246,247,277,276,0,254,255,286,285,984,985,986,987,43,247,248,278,277,0,255,256,287,286,988,989,990,991,43,248,249,279,278,0,256,257,288,287,992,993,994,995,43,249,250,280,279,0,257,258,289,288,996,997,998,999,43,250,251,281,280,0,258,259,290,289,1000,1001,1002,1003,43,251,252,282,281,0,259,260,291,290,1004,1005,1006,1007,43,252,253,283,282,0,260,261,292,291,1008,1009,1010,1011,43,253,254,284,283,0,261,262,293,292,1012,1013,1014,1015,43,254,255,285,284,0,262,263,294,293,1016,1017,1018,1019,43,255,256,286,285,0,263,264,295,294,1020,1021,1022,1023,43,256,257,287,286,0,264,265,296,295,1024,1025,1026,1027,43,257,258,288,287,0,265,266,297,296,1028,1029,1030,1031,43,258,259,289,288,0,266,267,298,297,1032,1033,1034,1035,43,259,260,290,289,0,267,268,299,298,1036,1037,1038,1039,43,260,261,291,290,0,268,269,300,299,1040,1041,1042,1043,43,261,262,292,291,0,269,270,301,300,1044,1045,1046,1047,43,262,263,293,292,0,270,271,302,301,1048,1049,1050,1051,43,263,264,294,293,0,271,272,303,302,1052,1053,1054,1055,43,264,265,295,294,0,272,273,304,303,1056,1057,1058,1059,43,265,266,296,295,0,273,274,305,304,1060,1061,1062,1063,43,266,267,297,296,0,274,275,306,305,1064,1065,1066,1067,43,267,268,298,297,0,275,276,307,306,1068,1069,1070,1071,43,268,269,299,298,0,276,277,308,307,1072,1073,1074,1075,43,269,240,270,299,0,277,278,309,308,1076,1077,1078,1079,43,270,271,301,300,0,279,280,311,310,1080,1081,1082,1083,43,271,272,302,301,0,280,281,312,311,1084,1085,1086,1087,43,272,273,303,302,0,281,282,313,312,1088,1089,1090,1091,43,273,274,304,303,0,282,283,314,313,1092,1093,1094,1095,43,274,275,305,304,0,283,284,315,314,1096,1097,1098,1099,43,275,276,306,305,0,284,285,316,315,1100,1101,1102,1103,43,276,277,307,306,0,285,286,317,316,1104,1105,1106,1107,43,277,278,308,307,0,286,287,318,317,1108,1109,1110,1111,43,278,279,309,308,0,287,288,319,318,1112,1113,1114,1115,43,279,280,310,309,0,288,289,320,319,1116,1117,1118,1119,43,280,281,311,310,0,289,290,321,320,1120,1121,1122,1123,43,281,282,312,311,0,290,291,322,321,1124,1125,1126,1127,43,282,283,313,312,0,291,292,323,322,1128,1129,1130,1131,43,283,284,314,313,0,292,293,324,323,1132,1133,1134,1135,43,284,285,315,314,0,293,294,325,324,1136,1137,1138,1139,43,285,286,316,315,0,294,295,326,325,1140,1141,1142,1143,43,286,287,317,316,0,295,296,327,326,1144,1145,1146,1147,43,287,288,318,317,0,296,297,328,327,1148,1149,1150,1151,43,288,289,319,318,0,297,298,329,328,1152,1153,1154,1155,43,289,290,320,319,0,298,299,330,329,1156,1157,1158,1159,43,290,291,321,320,0,299,300,331,330,1160,1161,1162,1163,43,291,292,322,321,0,300,301,332,331,1164,1165,1166,1167,43,292,293,323,322,0,301,302,333,332,1168,1169,1170,1171,43,293,294,324,323,0,302,303,334,333,1172,1173,1174,1175,43,294,295,325,324,0,303,304,335,334,1176,1177,1178,1179,43,295,296,326,325,0,304,305,336,335,1180,1181,1182,1183,43,296,297,327,326,0,305,306,337,336,1184,1185,1186,1187,43,297,298,328,327,0,306,307,338,337,1188,1189,1190,1191,43,298,299,329,328,0,307,308,339,338,1192,1193,1194,1195,43,299,270,300,329,0,308,309,340,339,1196,1197,1198,1199,43,300,301,331,330,0,310,311,342,341,1200,1201,1202,1203,43,301,302,332,331,0,311,312,343,342,1204,1205,1206,1207,43,302,303,333,332,0,312,313,344,343,1208,1209,1210,1211,43,303,304,334,333,0,313,314,345,344,1212,1213,1214,1215,43,304,305,335,334,0,314,315,346,345,1216,1217,1218,1219,43,305,306,336,335,0,315,316,347,346,1220,1221,1222,1223,43,306,307,337,336,0,316,317,348,347,1224,1225,1226,1227,43,307,308,338,337,0,317,318,349,348,1228,1229,1230,1231,43,308,309,339,338,0,318,319,350,349,1232,1233,1234,1235,43,309,310,340,339,0,319,320,351,350,1236,1237,1238,1239,43,310,311,341,340,0,320,321,352,351,1240,1241,1242,1243,43,311,312,342,341,0,321,322,353,352,1244,1245,1246,1247,43,312,313,343,342,0,322,323,354,353,1248,1249,1250,1251,43,313,314,344,343,0,323,324,355,354,1252,1253,1254,1255,43,314,315,345,344,0,324,325,356,355,1256,1257,1258,1259,43,315,316,346,345,0,325,326,357,356,1260,1261,1262,1263,43,316,317,347,346,0,326,327,358,357,1264,1265,1266,1267,43,317,318,348,347,0,327,328,359,358,1268,1269,1270,1271,43,318,319,349,348,0,328,329,360,359,1272,1273,1274,1275,43,319,320,350,349,0,329,330,361,360,1276,1277,1278,1279,43,320,321,351,350,0,330,331,362,361,1280,1281,1282,1283,43,321,322,352,351,0,331,332,363,362,1284,1285,1286,1287,43,322,323,353,352,0,332,333,364,363,1288,1289,1290,1291,43,323,324,354,353,0,333,334,365,364,1292,1293,1294,1295,43,324,325,355,354,0,334,335,366,365,1296,1297,1298,1299,43,325,326,356,355,0,335,336,367,366,1300,1301,1302,1303,43,326,327,357,356,0,336,337,368,367,1304,1305,1306,1307,43,327,328,358,357,0,337,338,369,368,1308,1309,1310,1311,43,328,329,359,358,0,338,339,370,369,1312,1313,1314,1315,43,329,300,330,359,0,339,340,371,370,1316,1317,1318,1319,43,330,331,361,360,0,341,342,373,372,1320,1321,1322,1323,43,331,332,362,361,0,342,343,374,373,1324,1325,1326,1327,43,332,333,363,362,0,343,344,375,374,1328,1329,1330,1331,43,333,334,364,363,0,344,345,376,375,1332,1333,1334,1335,43,334,335,365,364,0,345,346,377,376,1336,1337,1338,1339,43,335,336,366,365,0,346,347,378,377,1340,1341,1342,1343,43,336,337,367,366,0,347,348,379,378,1344,1345,1346,1347,43,337,338,368,367,0,348,349,380,379,1348,1349,1350,1351,43,338,339,369,368,0,349,350,381,380,1352,1353,1354,1355,43,339,340,370,369,0,350,351,382,381,1356,1357,1358,1359,43,340,341,371,370,0,351,352,383,382,1360,1361,1362,1363,43,341,342,372,371,0,352,353,384,383,1364,1365,1366,1367,43,342,343,373,372,0,353,354,385,384,1368,1369,1370,1371,43,343,344,374,373,0,354,355,386,385,1372,1373,1374,1375,43,344,345,375,374,0,355,356,387,386,1376,1377,1378,1379,43,345,346,376,375,0,356,357,388,387,1380,1381,1382,1383,43,346,347,377,376,0,357,358,389,388,1384,1385,1386,1387,43,347,348,378,377,0,358,359,390,389,1388,1389,1390,1391,43,348,349,379,378,0,359,360,391,390,1392,1393,1394,1395,43,349,350,380,379,0,360,361,392,391,1396,1397,1398,1399,43,350,351,381,380,0,361,362,393,392,1400,1401,1402,1403,43,351,352,382,381,0,362,363,394,393,1404,1405,1406,1407,43,352,353,383,382,0,363,364,395,394,1408,1409,1410,1411,43,353,354,384,383,0,364,365,396,395,1412,1413,1414,1415,43,354,355,385,384,0,365,366,397,396,1416,1417,1418,1419,43,355,356,386,385,0,366,367,398,397,1420,1421,1422,1423,43,356,357,387,386,0,367,368,399,398,1424,1425,1426,1427,43,357,358,388,387,0,368,369,400,399,1428,1429,1430,1431,43,358,359,389,388,0,369,370,401,400,1432,1433,1434,1435,43,359,330,360,389,0,370,371,402,401,1436,1437,1438,1439,43,360,361,391,390,0,372,373,404,403,1440,1441,1442,1443,43,361,362,392,391,0,373,374,405,404,1444,1445,1446,1447,43,362,363,393,392,0,374,375,406,405,1448,1449,1450,1451,43,363,364,394,393,0,375,376,407,406,1452,1453,1454,1455,43,364,365,395,394,0,376,377,408,407,1456,1457,1458,1459,43,365,366,396,395,0,377,378,409,408,1460,1461,1462,1463,43,366,367,397,396,0,378,379,410,409,1464,1465,1466,1467,43,367,368,398,397,0,379,380,411,410,1468,1469,1470,1471,43,368,369,399,398,0,380,381,412,411,1472,1473,1474,1475,43,369,370,400,399,0,381,382,413,412,1476,1477,1478,1479,43,370,371,401,400,0,382,383,414,413,1480,1481,1482,1483,43,371,372,402,401,0,383,384,415,414,1484,1485,1486,1487,43,372,373,403,402,0,384,385,416,415,1488,1489,1490,1491,43,373,374,404,403,0,385,386,417,416,1492,1493,1494,1495,43,374,375,405,404,0,386,387,418,417,1496,1497,1498,1499,43,375,376,406,405,0,387,388,419,418,1500,1501,1502,1503,43,376,377,407,406,0,388,389,420,419,1504,1505,1506,1507,43,377,378,408,407,0,389,390,421,420,1508,1509,1510,1511,43,378,379,409,408,0,390,391,422,421,1512,1513,1514,1515,43,379,380,410,409,0,391,392,423,422,1516,1517,1518,1519,43,380,381,411,410,0,392,393,424,423,1520,1521,1522,1523,43,381,382,412,411,0,393,394,425,424,1524,1525,1526,1527,43,382,383,413,412,0,394,395,426,425,1528,1529,1530,1531,43,383,384,414,413,0,395,396,427,426,1532,1533,1534,1535,43,384,385,415,414,0,396,397,428,427,1536,1537,1538,1539,43,385,386,416,415,0,397,398,429,428,1540,1541,1542,1543,43,386,387,417,416,0,398,399,430,429,1544,1545,1546,1547,43,387,388,418,417,0,399,400,431,430,1548,1549,1550,1551,43,388,389,419,418,0,400,401,432,431,1552,1553,1554,1555,43,389,360,390,419,0,401,402,433,432,1556,1557,1558,1559,43,390,391,421,420,0,403,404,435,434,1560,1561,1562,1563,43,391,392,422,421,0,404,405,436,435,1564,1565,1566,1567,43,392,393,423,422,0,405,406,437,436,1568,1569,1570,1571,43,393,394,424,423,0,406,407,438,437,1572,1573,1574,1575,43,394,395,425,424,0,407,408,439,438,1576,1577,1578,1579,43,395,396,426,425,0,408,409,440,439,1580,1581,1582,1583,43,396,397,427,426,0,409,410,441,440,1584,1585,1586,1587,43,397,398,428,427,0,410,411,442,441,1588,1589,1590,1591,43,398,399,429,428,0,411,412,443,442,1592,1593,1594,1595,43,399,400,430,429,0,412,413,444,443,1596,1597,1598,1599,43,400,401,431,430,0,413,414,445,444,1600,1601,1602,1603,43,401,402,432,431,0,414,415,446,445,1604,1605,1606,1607,43,402,403,433,432,0,415,416,447,446,1608,1609,1610,1611,43,403,404,434,433,0,416,417,448,447,1612,1613,1614,1615,43,404,405,435,434,0,417,418,449,448,1616,1617,1618,1619,43,405,406,436,435,0,418,419,450,449,1620,1621,1622,1623,43,406,407,437,436,0,419,420,451,450,1624,1625,1626,1627,43,407,408,438,437,0,420,421,452,451,1628,1629,1630,1631,43,408,409,439,438,0,421,422,453,452,1632,1633,1634,1635,43,409,410,440,439,0,422,423,454,453,1636,1637,1638,1639,43,410,411,441,440,0,423,424,455,454,1640,1641,1642,1643,43,411,412,442,441,0,424,425,456,455,1644,1645,1646,1647,43,412,413,443,442,0,425,426,457,456,1648,1649,1650,1651,43,413,414,444,443,0,426,427,458,457,1652,1653,1654,1655,43,414,415,445,444,0,427,428,459,458,1656,1657,1658,1659,43,415,416,446,445,0,428,429,460,459,1660,1661,1662,1663,43,416,417,447,446,0,429,430,461,460,1664,1665,1666,1667,43,417,418,448,447,0,430,431,462,461,1668,1669,1670,1671,43,418,419,449,448,0,431,432,463,462,1672,1673,1674,1675,43,419,390,420,449,0,432,433,464,463,1676,1677,1678,1679,43,420,421,451,450,0,434,435,466,465,1680,1681,1682,1683,43,421,422,452,451,0,435,436,467,466,1684,1685,1686,1687,43,422,423,453,452,0,436,437,468,467,1688,1689,1690,1691,43,423,424,454,453,0,437,438,469,468,1692,1693,1694,1695,43,424,425,455,454,0,438,439,470,469,1696,1697,1698,1699,43,425,426,456,455,0,439,440,471,470,1700,1701,1702,1703,43,426,427,457,456,0,440,441,472,471,1704,1705,1706,1707,43,427,428,458,457,0,441,442,473,472,1708,1709,1710,1711,43,428,429,459,458,0,442,443,474,473,1712,1713,1714,1715,43,429,430,460,459,0,443,444,475,474,1716,1717,1718,1719,43,430,431,461,460,0,444,445,476,475,1720,1721,1722,1723,43,431,432,462,461,0,445,446,477,476,1724,1725,1726,1727,43,432,433,463,462,0,446,447,478,477,1728,1729,1730,1731,43,433,434,464,463,0,447,448,479,478,1732,1733,1734,1735,43,434,435,465,464,0,448,449,480,479,1736,1737,1738,1739,43,435,436,466,465,0,449,450,481,480,1740,1741,1742,1743,43,436,437,467,466,0,450,451,482,481,1744,1745,1746,1747,43,437,438,468,467,0,451,452,483,482,1748,1749,1750,1751,43,438,439,469,468,0,452,453,484,483,1752,1753,1754,1755,43,439,440,470,469,0,453,454,485,484,1756,1757,1758,1759,43,440,441,471,470,0,454,455,486,485,1760,1761,1762,1763,43,441,442,472,471,0,455,456,487,486,1764,1765,1766,1767,43,442,443,473,472,0,456,457,488,487,1768,1769,1770,1771,43,443,444,474,473,0,457,458,489,488,1772,1773,1774,1775,43,444,445,475,474,0,458,459,490,489,1776,1777,1778,1779,43,445,446,476,475,0,459,460,491,490,1780,1781,1782,1783,43,446,447,477,476,0,460,461,492,491,1784,1785,1786,1787,43,447,448,478,477,0,461,462,493,492,1788,1789,1790,1791,43,448,449,479,478,0,462,463,494,493,1792,1793,1794,1795,43,449,420,450,479,0,463,464,495,494,1796,1797,1798,1799,43,450,451,481,480,0,465,466,497,496,1800,1801,1802,1803,43,451,452,482,481,0,466,467,498,497,1804,1805,1806,1807,43,452,453,483,482,0,467,468,499,498,1808,1809,1810,1811,43,453,454,484,483,0,468,469,500,499,1812,1813,1814,1815,43,454,455,485,484,0,469,470,501,500,1816,1817,1818,1819,43,455,456,486,485,0,470,471,502,501,1820,1821,1822,1823,43,456,457,487,486,0,471,472,503,502,1824,1825,1826,1827,43,457,458,488,487,0,472,473,504,503,1828,1829,1830,1831,43,458,459,489,488,0,473,474,505,504,1832,1833,1834,1835,43,459,460,490,489,0,474,475,506,505,1836,1837,1838,1839,43,460,461,491,490,0,475,476,507,506,1840,1841,1842,1843,43,461,462,492,491,0,476,477,508,507,1844,1845,1846,1847,43,462,463,493,492,0,477,478,509,508,1848,1849,1850,1851,43,463,464,494,493,0,478,479,510,509,1852,1853,1854,1855,43,464,465,495,494,0,479,480,511,510,1856,1857,1858,1859,43,465,466,496,495,0,480,481,512,511,1860,1861,1862,1863,43,466,467,497,496,0,481,482,513,512,1864,1865,1866,1867,43,467,468,498,497,0,482,483,514,513,1868,1869,1870,1871,43,468,469,499,498,0,483,484,515,514,1872,1873,1874,1875,43,469,470,500,499,0,484,485,516,515,1876,1877,1878,1879,43,470,471,501,500,0,485,486,517,516,1880,1881,1882,1883,43,471,472,502,501,0,486,487,518,517,1884,1885,1886,1887,43,472,473,503,502,0,487,488,519,518,1888,1889,1890,1891,43,473,474,504,503,0,488,489,520,519,1892,1893,1894,1895,43,474,475,505,504,0,489,490,521,520,1896,1897,1898,1899,43,475,476,506,505,0,490,491,522,521,1900,1901,1902,1903,43,476,477,507,506,0,491,492,523,522,1904,1905,1906,1907,43,477,478,508,507,0,492,493,524,523,1908,1909,1910,1911,43,478,479,509,508,0,493,494,525,524,1912,1913,1914,1915,43,479,450,480,509,0,494,495,526,525,1916,1917,1918,1919,43,480,481,511,510,0,496,497,528,527,1920,1921,1922,1923,43,481,482,512,511,0,497,498,529,528,1924,1925,1926,1927,43,482,483,513,512,0,498,499,530,529,1928,1929,1930,1931,43,483,484,514,513,0,499,500,531,530,1932,1933,1934,1935,43,484,485,515,514,0,500,501,532,531,1936,1937,1938,1939,43,485,486,516,515,0,501,502,533,532,1940,1941,1942,1943,43,486,487,517,516,0,502,503,534,533,1944,1945,1946,1947,43,487,488,518,517,0,503,504,535,534,1948,1949,1950,1951,43,488,489,519,518,0,504,505,536,535,1952,1953,1954,1955,43,489,490,520,519,0,505,506,537,536,1956,1957,1958,1959,43,490,491,521,520,0,506,507,538,537,1960,1961,1962,1963,43,491,492,522,521,0,507,508,539,538,1964,1965,1966,1967,43,492,493,523,522,0,508,509,540,539,1968,1969,1970,1971,43,493,494,524,523,0,509,510,541,540,1972,1973,1974,1975,43,494,495,525,524,0,510,511,542,541,1976,1977,1978,1979,43,495,496,526,525,0,511,512,543,542,1980,1981,1982,1983,43,496,497,527,526,0,512,513,544,543,1984,1985,1986,1987,43,497,498,528,527,0,513,514,545,544,1988,1989,1990,1991,43,498,499,529,528,0,514,515,546,545,1992,1993,1994,1995,43,499,500,530,529,0,515,516,547,546,1996,1997,1998,1999,43,500,501,531,530,0,516,517,548,547,2000,2001,2002,2003,43,501,502,532,531,0,517,518,549,548,2004,2005,2006,2007,43,502,503,533,532,0,518,519,550,549,2008,2009,2010,2011,43,503,504,534,533,0,519,520,551,550,2012,2013,2014,2015,43,504,505,535,534,0,520,521,552,551,2016,2017,2018,2019,43,505,506,536,535,0,521,522,553,552,2020,2021,2022,2023,43,506,507,537,536,0,522,523,554,553,2024,2025,2026,2027,43,507,508,538,537,0,523,524,555,554,2028,2029,2030,2031,43,508,509,539,538,0,524,525,556,555,2032,2033,2034,2035,43,509,480,510,539,0,525,526,557,556,2036,2037,2038,2039,43,510,511,541,540,0,527,528,559,558,2040,2041,2042,2043,43,511,512,542,541,0,528,529,560,559,2044,2045,2046,2047,43,512,513,543,542,0,529,530,561,560,2048,2049,2050,2051,43,513,514,544,543,0,530,531,562,561,2052,2053,2054,2055,43,514,515,545,544,0,531,532,563,562,2056,2057,2058,2059,43,515,516,546,545,0,532,533,564,563,2060,2061,2062,2063,43,516,517,547,546,0,533,534,565,564,2064,2065,2066,2067,43,517,518,548,547,0,534,535,566,565,2068,2069,2070,2071,43,518,519,549,548,0,535,536,567,566,2072,2073,2074,2075,43,519,520,550,549,0,536,537,568,567,2076,2077,2078,2079,43,520,521,551,550,0,537,538,569,568,2080,2081,2082,2083,43,521,522,552,551,0,538,539,570,569,2084,2085,2086,2087,43,522,523,553,552,0,539,540,571,570,2088,2089,2090,2091,43,523,524,554,553,0,540,541,572,571,2092,2093,2094,2095,43,524,525,555,554,0,541,542,573,572,2096,2097,2098,2099,43,525,526,556,555,0,542,543,574,573,2100,2101,2102,2103,43,526,527,557,556,0,543,544,575,574,2104,2105,2106,2107,43,527,528,558,557,0,544,545,576,575,2108,2109,2110,2111,43,528,529,559,558,0,545,546,577,576,2112,2113,2114,2115,43,529,530,560,559,0,546,547,578,577,2116,2117,2118,2119,43,530,531,561,560,0,547,548,579,578,2120,2121,2122,2123,43,531,532,562,561,0,548,549,580,579,2124,2125,2126,2127,43,532,533,563,562,0,549,550,581,580,2128,2129,2130,2131,43,533,534,564,563,0,550,551,582,581,2132,2133,2134,2135,43,534,535,565,564,0,551,552,583,582,2136,2137,2138,2139,43,535,536,566,565,0,552,553,584,583,2140,2141,2142,2143,43,536,537,567,566,0,553,554,585,584,2144,2145,2146,2147,43,537,538,568,567,0,554,555,586,585,2148,2149,2150,2151,43,538,539,569,568,0,555,556,587,586,2152,2153,2154,2155,43,539,510,540,569,0,556,557,588,587,2156,2157,2158,2159,43,540,541,571,570,0,558,559,590,589,2160,2161,2162,2163,43,541,542,572,571,0,559,560,591,590,2164,2165,2166,2167,43,542,543,573,572,0,560,561,592,591,2168,2169,2170,2171,43,543,544,574,573,0,561,562,593,592,2172,2173,2174,2175,43,544,545,575,574,0,562,563,594,593,2176,2177,2178,2179,43,545,546,576,575,0,563,564,595,594,2180,2181,2182,2183,43,546,547,577,576,0,564,565,596,595,2184,2185,2186,2187,43,547,548,578,577,0,565,566,597,596,2188,2189,2190,2191,43,548,549,579,578,0,566,567,598,597,2192,2193,2194,2195,43,549,550,580,579,0,567,568,599,598,2196,2197,2198,2199,43,550,551,581,580,0,568,569,600,599,2200,2201,2202,2203,43,551,552,582,581,0,569,570,601,600,2204,2205,2206,2207,43,552,553,583,582,0,570,571,602,601,2208,2209,2210,2211,43,553,554,584,583,0,571,572,603,602,2212,2213,2214,2215,43,554,555,585,584,0,572,573,604,603,2216,2217,2218,2219,43,555,556,586,585,0,573,574,605,604,2220,2221,2222,2223,43,556,557,587,586,0,574,575,606,605,2224,2225,2226,2227,43,557,558,588,587,0,575,576,607,606,2228,2229,2230,2231,43,558,559,589,588,0,576,577,608,607,2232,2233,2234,2235,43,559,560,590,589,0,577,578,609,608,2236,2237,2238,2239,43,560,561,591,590,0,578,579,610,609,2240,2241,2242,2243,43,561,562,592,591,0,579,580,611,610,2244,2245,2246,2247,43,562,563,593,592,0,580,581,612,611,2248,2249,2250,2251,43,563,564,594,593,0,581,582,613,612,2252,2253,2254,2255,43,564,565,595,594,0,582,583,614,613,2256,2257,2258,2259,43,565,566,596,595,0,583,584,615,614,2260,2261,2262,2263,43,566,567,597,596,0,584,585,616,615,2264,2265,2266,2267,43,567,568,598,597,0,585,586,617,616,2268,2269,2270,2271,43,568,569,599,598,0,586,587,618,617,2272,2273,2274,2275,43,569,540,570,599,0,587,588,619,618,2276,2277,2278,2279,43,570,571,601,600,0,589,590,621,620,2280,2281,2282,2283,43,571,572,602,601,0,590,591,622,621,2284,2285,2286,2287,43,572,573,603,602,0,591,592,623,622,2288,2289,2290,2291,43,573,574,604,603,0,592,593,624,623,2292,2293,2294,2295,43,574,575,605,604,0,593,594,625,624,2296,2297,2298,2299,43,575,576,606,605,0,594,595,626,625,2300,2301,2302,2303,43,576,577,607,606,0,595,596,627,626,2304,2305,2306,2307,43,577,578,608,607,0,596,597,628,627,2308,2309,2310,2311,43,578,579,609,608,0,597,598,629,628,2312,2313,2314,2315,43,579,580,610,609,0,598,599,630,629,2316,2317,2318,2319,43,580,581,611,610,0,599,600,631,630,2320,2321,2322,2323,43,581,582,612,611,0,600,601,632,631,2324,2325,2326,2327,43,582,583,613,612,0,601,602,633,632,2328,2329,2330,2331,43,583,584,614,613,0,602,603,634,633,2332,2333,2334,2335,43,584,585,615,614,0,603,604,635,634,2336,2337,2338,2339,43,585,586,616,615,0,604,605,636,635,2340,2341,2342,2343,43,586,587,617,616,0,605,606,637,636,2344,2345,2346,2347,43,587,588,618,617,0,606,607,638,637,2348,2349,2350,2351,43,588,589,619,618,0,607,608,639,638,2352,2353,2354,2355,43,589,590,620,619,0,608,609,640,639,2356,2357,2358,2359,43,590,591,621,620,0,609,610,641,640,2360,2361,2362,2363,43,591,592,622,621,0,610,611,642,641,2364,2365,2366,2367,43,592,593,623,622,0,611,612,643,642,2368,2369,2370,2371,43,593,594,624,623,0,612,613,644,643,2372,2373,2374,2375,43,594,595,625,624,0,613,614,645,644,2376,2377,2378,2379,43,595,596,626,625,0,614,615,646,645,2380,2381,2382,2383,43,596,597,627,626,0,615,616,647,646,2384,2385,2386,2387,43,597,598,628,627,0,616,617,648,647,2388,2389,2390,2391,43,598,599,629,628,0,617,618,649,648,2392,2393,2394,2395,43,599,570,600,629,0,618,619,650,649,2396,2397,2398,2399,43,600,601,631,630,0,620,621,652,651,2400,2401,2402,2403,43,601,602,632,631,0,621,622,653,652,2404,2405,2406,2407,43,602,603,633,632,0,622,623,654,653,2408,2409,2410,2411,43,603,604,634,633,0,623,624,655,654,2412,2413,2414,2415,43,604,605,635,634,0,624,625,656,655,2416,2417,2418,2419,43,605,606,636,635,0,625,626,657,656,2420,2421,2422,2423,43,606,607,637,636,0,626,627,658,657,2424,2425,2426,2427,43,607,608,638,637,0,627,628,659,658,2428,2429,2430,2431,43,608,609,639,638,0,628,629,660,659,2432,2433,2434,2435,43,609,610,640,639,0,629,630,661,660,2436,2437,2438,2439,43,610,611,641,640,0,630,631,662,661,2440,2441,2442,2443,43,611,612,642,641,0,631,632,663,662,2444,2445,2446,2447,43,612,613,643,642,0,632,633,664,663,2448,2449,2450,2451,43,613,614,644,643,0,633,634,665,664,2452,2453,2454,2455,43,614,615,645,644,0,634,635,666,665,2456,2457,2458,2459,43,615,616,646,645,0,635,636,667,666,2460,2461,2462,2463,43,616,617,647,646,0,636,637,668,667,2464,2465,2466,2467,43,617,618,648,647,0,637,638,669,668,2468,2469,2470,2471,43,618,619,649,648,0,638,639,670,669,2472,2473,2474,2475,43,619,620,650,649,0,639,640,671,670,2476,2477,2478,2479,43,620,621,651,650,0,640,641,672,671,2480,2481,2482,2483,43,621,622,652,651,0,641,642,673,672,2484,2485,2486,2487,43,622,623,653,652,0,642,643,674,673,2488,2489,2490,2491,43,623,624,654,653,0,643,644,675,674,2492,2493,2494,2495,43,624,625,655,654,0,644,645,676,675,2496,2497,2498,2499,43,625,626,656,655,0,645,646,677,676,2500,2501,2502,2503,43,626,627,657,656,0,646,647,678,677,2504,2505,2506,2507,43,627,628,658,657,0,647,648,679,678,2508,2509,2510,2511,43,628,629,659,658,0,648,649,680,679,2512,2513,2514,2515,43,629,600,630,659,0,649,650,681,680,2516,2517,2518,2519,43,630,631,661,660,0,651,652,683,682,2520,2521,2522,2523,43,631,632,662,661,0,652,653,684,683,2524,2525,2526,2527,43,632,633,663,662,0,653,654,685,684,2528,2529,2530,2531,43,633,634,664,663,0,654,655,686,685,2532,2533,2534,2535,43,634,635,665,664,0,655,656,687,686,2536,2537,2538,2539,43,635,636,666,665,0,656,657,688,687,2540,2541,2542,2543,43,636,637,667,666,0,657,658,689,688,2544,2545,2546,2547,43,637,638,668,667,0,658,659,690,689,2548,2549,2550,2551,43,638,639,669,668,0,659,660,691,690,2552,2553,2554,2555,43,639,640,670,669,0,660,661,692,691,2556,2557,2558,2559,43,640,641,671,670,0,661,662,693,692,2560,2561,2562,2563,43,641,642,672,671,0,662,663,694,693,2564,2565,2566,2567,43,642,643,673,672,0,663,664,695,694,2568,2569,2570,2571,43,643,644,674,673,0,664,665,696,695,2572,2573,2574,2575,43,644,645,675,674,0,665,666,697,696,2576,2577,2578,2579,43,645,646,676,675,0,666,667,698,697,2580,2581,2582,2583,43,646,647,677,676,0,667,668,699,698,2584,2585,2586,2587,43,647,648,678,677,0,668,669,700,699,2588,2589,2590,2591,43,648,649,679,678,0,669,670,701,700,2592,2593,2594,2595,43,649,650,680,679,0,670,671,702,701,2596,2597,2598,2599,43,650,651,681,680,0,671,672,703,702,2600,2601,2602,2603,43,651,652,682,681,0,672,673,704,703,2604,2605,2606,2607,43,652,653,683,682,0,673,674,705,704,2608,2609,2610,2611,43,653,654,684,683,0,674,675,706,705,2612,2613,2614,2615,43,654,655,685,684,0,675,676,707,706,2616,2617,2618,2619,43,655,656,686,685,0,676,677,708,707,2620,2621,2622,2623,43,656,657,687,686,0,677,678,709,708,2624,2625,2626,2627,43,657,658,688,687,0,678,679,710,709,2628,2629,2630,2631,43,658,659,689,688,0,679,680,711,710,2632,2633,2634,2635,43,659,630,660,689,0,680,681,712,711,2636,2637,2638,2639,43,660,661,691,690,0,682,683,714,713,2640,2641,2642,2643,43,661,662,692,691,0,683,684,715,714,2644,2645,2646,2647,43,662,663,693,692,0,684,685,716,715,2648,2649,2650,2651,43,663,664,694,693,0,685,686,717,716,2652,2653,2654,2655,43,664,665,695,694,0,686,687,718,717,2656,2657,2658,2659,43,665,666,696,695,0,687,688,719,718,2660,2661,2662,2663,43,666,667,697,696,0,688,689,720,719,2664,2665,2666,2667,43,667,668,698,697,0,689,690,721,720,2668,2669,2670,2671,43,668,669,699,698,0,690,691,722,721,2672,2673,2674,2675,43,669,670,700,699,0,691,692,723,722,2676,2677,2678,2679,43,670,671,701,700,0,692,693,724,723,2680,2681,2682,2683,43,671,672,702,701,0,693,694,725,724,2684,2685,2686,2687,43,672,673,703,702,0,694,695,726,725,2688,2689,2690,2691,43,673,674,704,703,0,695,696,727,726,2692,2693,2694,2695,43,674,675,705,704,0,696,697,728,727,2696,2697,2698,2699,43,675,676,706,705,0,697,698,729,728,2700,2701,2702,2703,43,676,677,707,706,0,698,699,730,729,2704,2705,2706,2707,43,677,678,708,707,0,699,700,731,730,2708,2709,2710,2711,43,678,679,709,708,0,700,701,732,731,2712,2713,2714,2715,43,679,680,710,709,0,701,702,733,732,2716,2717,2718,2719,43,680,681,711,710,0,702,703,734,733,2720,2721,2722,2723,43,681,682,712,711,0,703,704,735,734,2724,2725,2726,2727,43,682,683,713,712,0,704,705,736,735,2728,2729,2730,2731,43,683,684,714,713,0,705,706,737,736,2732,2733,2734,2735,43,684,685,715,714,0,706,707,738,737,2736,2737,2738,2739,43,685,686,716,715,0,707,708,739,738,2740,2741,2742,2743,43,686,687,717,716,0,708,709,740,739,2744,2745,2746,2747,43,687,688,718,717,0,709,710,741,740,2748,2749,2750,2751,43,688,689,719,718,0,710,711,742,741,2752,2753,2754,2755,43,689,660,690,719,0,711,712,743,742,2756,2757,2758,2759,43,720,721,725,724,0,744,745,750,749,2760,2761,2762,2763,43,721,722,726,725,0,745,746,751,750,2764,2765,2766,2767,43,722,723,727,726,0,746,747,752,751,2768,2769,2770,2771,43,723,720,724,727,0,747,748,753,752,2772,2773,2774,2775,43,724,725,729,728,0,749,750,755,754,2776,2777,2778,2779,43,725,726,730,729,0,750,751,756,755,2780,2781,2782,2783,43,726,727,731,730,0,751,752,757,756,2784,2785,2786,2787,43,727,724,728,731,0,752,753,758,757,2788,2789,2790,2791,43,728,729,733,732,0,754,755,760,759,2792,2793,2794,2795,43,729,730,734,733,0,755,756,761,760,2796,2797,2798,2799,43,730,731,735,734,0,756,757,762,761,2800,2801,2802,2803,43,731,728,732,735,0,757,758,763,762,2804,2805,2806,2807,43,732,733,737,736,0,759,760,765,764,2808,2809,2810,2811,43,733,734,738,737,0,760,761,766,765,2812,2813,2814,2815,43,734,735,739,738,0,761,762,767,766,2816,2817,2818,2819,43,735,732,736,739,0,762,763,768,767,2820,2821,2822,2823,43,736,737,741,740,0,764,765,770,769,2824,2825,2826,2827,43,737,738,742,741,0,765,766,771,770,2828,2829,2830,2831,43,738,739,743,742,0,766,767,772,771,2832,2833,2834,2835,43,739,736,740,743,0,767,768,773,772,2836,2837,2838,2839,43,740,741,745,744,0,769,770,775,774,2840,2841,2842,2843,43,741,742,746,745,0,770,771,776,775,2844,2845,2846,2847,43,742,743,747,746,0,771,772,777,776,2848,2849,2850,2851,43,743,740,744,747,0,772,773,778,777,2852,2853,2854,2855,43,744,745,749,748,0,774,775,780,779,2856,2857,2858,2859,43,745,746,750,749,0,775,776,781,780,2860,2861,2862,2863,43,746,747,751,750,0,776,777,782,781,2864,2865,2866,2867,43,747,744,748,751,0,777,778,783,782,2868,2869,2870,2871,43,748,749,753,752,0,779,780,785,784,2872,2873,2874,2875,43,749,750,754,753,0,780,781,786,785,2876,2877,2878,2879,43,750,751,755,754,0,781,782,787,786,2880,2881,2882,2883,43,751,748,752,755,0,782,783,788,787,2884,2885,2886,2887,43,752,753,757,756,0,784,785,790,789,2888,2889,2890,2891,43,753,754,758,757,0,785,786,791,790,2892,2893,2894,2895,43,754,755,759,758,0,786,787,792,791,2896,2897,2898,2899,43,755,752,756,759,0,787,788,793,792,2900,2901,2902,2903,43,756,757,761,760,0,789,790,795,794,2904,2905,2906,2907,43,757,758,762,761,0,790,791,796,795,2908,2909,2910,2911,43,758,759,763,762,0,791,792,797,796,2912,2913,2914,2915,43,759,756,760,763,0,792,793,798,797,2916,2917,2918,2919,43,760,761,765,764,0,794,795,800,799,2920,2921,2922,2923,43,761,762,766,765,0,795,796,801,800,2924,2925,2926,2927,43,762,763,767,766,0,796,797,802,801,2928,2929,2930,2931,43,763,760,764,767,0,797,798,803,802,2932,2933,2934,2935,43,764,765,769,768,0,799,800,805,804,2936,2937,2938,2939,43,765,766,770,769,0,800,801,806,805,2940,2941,2942,2943,43,766,767,771,770,0,801,802,807,806,2944,2945,2946,2947,43,767,764,768,771,0,802,803,808,807,2948,2949,2950,2951,43,768,769,773,772,0,804,805,810,809,2952,2953,2954,2955,43,769,770,774,773,0,805,806,811,810,2956,2957,2958,2959,43,770,771,775,774,0,806,807,812,811,2960,2961,2962,2963,43,771,768,772,775,0,807,808,813,812,2964,2965,2966,2967,43,772,773,777,776,0,809,810,815,814,2968,2969,2970,2971,43,773,774,778,777,0,810,811,816,815,2972,2973,2974,2975,43,774,775,779,778,0,811,812,817,816,2976,2977,2978,2979,43,775,772,776,779,0,812,813,818,817,2980,2981,2982,2983,43,776,777,781,780,0,814,815,820,819,2984,2985,2986,2987,43,777,778,782,781,0,815,816,821,820,2988,2989,2990,2991,43,778,779,783,782,0,816,817,822,821,2992,2993,2994,2995,43,779,776,780,783,0,817,818,823,822,2996,2997,2998,2999,43,780,781,785,784,0,819,820,825,824,3000,3001,3002,3003,43,781,782,786,785,0,820,821,826,825,3004,3005,3006,3007,43,782,783,787,786,0,821,822,827,826,3008,3009,3010,3011,43,783,780,784,787,0,822,823,828,827,3012,3013,3014,3015,43,784,785,789,788,0,824,825,830,829,3016,3017,3018,3019,43,785,786,790,789,0,825,826,831,830,3020,3021,3022,3023,43,786,787,791,790,0,826,827,832,831,3024,3025,3026,3027,43,787,784,788,791,0,827,828,833,832,3028,3029,3030,3031,43,792,793,797,796,0,834,835,840,839,3032,3033,3034,3035,43,793,794,798,797,0,835,836,841,840,3036,3037,3038,3039,43,794,795,799,798,0,836,837,842,841,3040,3041,3042,3043,43,795,792,796,799,0,837,838,843,842,3044,3045,3046,3047,43,796,797,801,800,0,839,840,845,844,3048,3049,3050,3051,43,797,798,802,801,0,840,841,846,845,3052,3053,3054,3055,43,798,799,803,802,0,841,842,847,846,3056,3057,3058,3059,43,799,796,800,803,0,842,843,848,847,3060,3061,3062,3063,43,800,801,805,804,0,844,845,850,849,3064,3065,3066,3067,43,801,802,806,805,0,845,846,851,850,3068,3069,3070,3071,43,802,803,807,806,0,846,847,852,851,3072,3073,3074,3075,43,803,800,804,807,0,847,848,853,852,3076,3077,3078,3079,43,804,805,809,808,0,849,850,855,854,3080,3081,3082,3083,43,805,806,810,809,0,850,851,856,855,3084,3085,3086,3087,43,806,807,811,810,0,851,852,857,856,3088,3089,3090,3091,43,807,804,808,811,0,852,853,858,857,3092,3093,3094,3095,43,808,809,813,812,0,854,855,860,859,3096,3097,3098,3099,43,809,810,814,813,0,855,856,861,860,3100,3101,3102,3103,43,810,811,815,814,0,856,857,862,861,3104,3105,3106,3107,43,811,808,812,815,0,857,858,863,862,3108,3109,3110,3111,43,812,813,817,816,0,859,860,865,864,3112,3113,3114,3115,43,813,814,818,817,0,860,861,866,865,3116,3117,3118,3119,43,814,815,819,818,0,861,862,867,866,3120,3121,3122,3123,43,815,812,816,819,0,862,863,868,867,3124,3125,3126,3127,43,816,817,821,820,0,864,865,870,869,3128,3129,3130,3131,43,817,818,822,821,0,865,866,871,870,3132,3133,3134,3135,43,818,819,823,822,0,866,867,872,871,3136,3137,3138,3139,43,819,816,820,823,0,867,868,873,872,3140,3141,3142,3143,43,820,821,825,824,0,869,870,875,874,3144,3145,3146,3147,43,821,822,826,825,0,870,871,876,875,3148,3149,3150,3151,43,822,823,827,826,0,871,872,877,876,3152,3153,3154,3155,43,823,820,824,827,0,872,873,878,877,3156,3157,3158,3159,43,824,825,829,828,0,874,875,880,879,3160,3161,3162,3163,43,825,826,830,829,0,875,876,881,880,3164,3165,3166,3167,43,826,827,831,830,0,876,877,882,881,3168,3169,3170,3171,43,827,824,828,831,0,877,878,883,882,3172,3173,3174,3175,43,828,829,833,832,0,879,880,885,884,3176,3177,3178,3179,43,829,830,834,833,0,880,881,886,885,3180,3181,3182,3183,43,830,831,835,834,0,881,882,887,886,3184,3185,3186,3187,43,831,828,832,835,0,882,883,888,887,3188,3189,3190,3191,43,836,837,841,840,0,889,890,895,894,3192,3193,3194,3195,43,837,838,842,841,0,890,891,896,895,3196,3197,3198,3199,43,838,839,843,842,0,891,892,897,896,3200,3201,3202,3203,43,839,836,840,843,0,892,893,898,897,3204,3205,3206,3207,43,840,841,845,844,0,894,895,900,899,3208,3209,3210,3211,43,841,842,846,845,0,895,896,901,900,3212,3213,3214,3215,43,842,843,847,846,0,896,897,902,901,3216,3217,3218,3219,43,843,840,844,847,0,897,898,903,902,3220,3221,3222,3223,43,844,845,849,848,0,899,900,905,904,3224,3225,3226,3227,43,845,846,850,849,0,900,901,906,905,3228,3229,3230,3231,43,846,847,851,850,0,901,902,907,906,3232,3233,3234,3235,43,847,844,848,851,0,902,903,908,907,3236,3237,3238,3239,43,848,849,853,852,0,904,905,910,909,3240,3241,3242,3243,43,849,850,854,853,0,905,906,911,910,3244,3245,3246,3247,43,850,851,855,854,0,906,907,912,911,3248,3249,3250,3251,43,851,848,852,855,0,907,908,913,912,3252,3253,3254,3255,43,852,853,857,856,0,909,910,915,914,3256,3257,3258,3259,43,853,854,858,857,0,910,911,916,915,3260,3261,3262,3263,43,854,855,859,858,0,911,912,917,916,3264,3265,3266,3267,43,855,852,856,859,0,912,913,918,917,3268,3269,3270,3271,43,856,857,861,860,0,914,915,920,919,3272,3273,3274,3275,43,857,858,862,861,0,915,916,921,920,3276,3277,3278,3279,43,858,859,863,862,0,916,917,922,921,3280,3281,3282,3283,43,859,856,860,863,0,917,918,923,922,3284,3285,3286,3287,43,860,861,865,864,0,919,920,925,924,3288,3289,3290,3291,43,861,862,866,865,0,920,921,926,925,3292,3293,3294,3295,43,862,863,867,866,0,921,922,927,926,3296,3297,3298,3299,43,863,860,864,867,0,922,923,928,927,3300,3301,3302,3303,43,864,865,869,868,0,924,925,930,929,3304,3305,3306,3307,43,865,866,870,869,0,925,926,931,930,3308,3309,3310,3311,43,866,867,871,870,0,926,927,932,931,3312,3313,3314,3315,43,867,864,868,871,0,927,928,933,932,3316,3317,3318,3319,43,868,869,873,872,0,929,930,935,934,3320,3321,3322,3323,43,869,870,874,873,0,930,931,936,935,3324,3325,3326,3327,43,870,871,875,874,0,931,932,937,936,3328,3329,3330,3331,43,871,868,872,875,0,932,933,938,937,3332,3333,3334,3335,43,872,873,877,876,0,934,935,940,939,3336,3337,3338,3339,43,873,874,878,877,0,935,936,941,940,3340,3341,3342,3343,43,874,875,879,878,0,936,937,942,941,3344,3345,3346,3347,43,875,872,876,879,0,937,938,943,942,3348,3349,3350,3351,43,880,881,885,884,0,944,945,950,949,3352,3353,3354,3355,43,881,882,886,885,0,945,946,951,950,3356,3357,3358,3359,43,882,883,887,886,0,946,947,952,951,3360,3361,3362,3363,43,883,880,884,887,0,947,948,953,952,3364,3365,3366,3367,43,884,885,889,888,0,949,950,955,954,3368,3369,3370,3371,43,885,886,890,889,0,950,951,956,955,3372,3373,3374,3375,43,886,887,891,890,0,951,952,957,956,3376,3377,3378,3379,43,887,884,888,891,0,952,953,958,957,3380,3381,3382,3383,43,888,889,893,892,0,954,955,960,959,3384,3385,3386,3387,43,889,890,894,893,0,955,956,961,960,3388,3389,3390,3391,43,890,891,895,894,0,956,957,962,961,3392,3393,3394,3395,43,891,888,892,895,0,957,958,963,962,3396,3397,3398,3399,43,892,893,897,896,0,959,960,965,964,3400,3401,3402,3403,43,893,894,898,897,0,960,961,966,965,3404,3405,3406,3407,43,894,895,899,898,0,961,962,967,966,3408,3409,3410,3411,43,895,892,896,899,0,962,963,968,967,3412,3413,3414,3415,43,896,897,901,900,0,964,965,970,969,3416,3417,3418,3419,43,897,898,902,901,0,965,966,971,970,3420,3421,3422,3423,43,898,899,903,902,0,966,967,972,971,3424,3425,3426,3427,43,899,896,900,903,0,967,968,973,972,3428,3429,3430,3431,43,900,901,905,904,0,969,970,975,974,3432,3433,3434,3435,43,901,902,906,905,0,970,971,976,975,3436,3437,3438,3439,43,902,903,907,906,0,971,972,977,976,3440,3441,3442,3443,43,903,900,904,907,0,972,973,978,977,3444,3445,3446,3447,43,904,905,909,908,0,974,975,980,979,3448,3449,3450,3451,43,905,906,910,909,0,975,976,981,980,3452,3453,3454,3455,43,906,907,911,910,0,976,977,982,981,3456,3457,3458,3459,43,907,904,908,911,0,977,978,983,982,3460,3461,3462,3463,43,908,909,913,912,0,979,980,985,984,3464,3465,3466,3467,43,909,910,914,913,0,980,981,986,985,3468,3469,3470,3471,43,910,911,915,914,0,981,982,987,986,3472,3473,3474,3475,43,911,908,912,915,0,982,983,988,987,3476,3477,3478,3479,43,912,913,917,916,0,984,985,990,989,3480,3481,3482,3483,43,913,914,918,917,0,985,986,991,990,3484,3485,3486,3487,43,914,915,919,918,0,986,987,992,991,3488,3489,3490,3491,43,915,912,916,919,0,987,988,993,992,3492,3493,3494,3495,43,916,917,921,920,0,989,990,995,994,3496,3497,3498,3499,43,917,918,922,921,0,990,991,996,995,3500,3501,3502,3503,43,918,919,923,922,0,991,992,997,996,3504,3505,3506,3507,43,919,916,920,923,0,992,993,998,997,3508,3509,3510,3511,43,920,921,925,924,0,994,995,1000,999,3512,3513,3514,3515,43,921,922,926,925,0,995,996,1001,1000,3516,3517,3518,3519,43,922,923,927,926,0,996,997,1002,1001,3520,3521,3522,3523,43,923,920,924,927,0,997,998,1003,1002,3524,3525,3526,3527,43,924,925,929,928,0,999,1000,1005,1004,3528,3529,3530,3531,43,925,926,930,929,0,1000,1001,1006,1005,3532,3533,3534,3535,43,926,927,931,930,0,1001,1002,1007,1006,3536,3537,3538,3539,43,927,924,928,931,0,1002,1003,1008,1007,3540,3541,3542,3543,43,928,929,933,932,0,1004,1005,1010,1009,3544,3545,3546,3547,43,929,930,934,933,0,1005,1006,1011,1010,3548,3549,3550,3551,43,930,931,935,934,0,1006,1007,1012,1011,3552,3553,3554,3555,43,931,928,932,935,0,1007,1008,1013,1012,3556,3557,3558,3559,43,932,933,937,936,0,1009,1010,1015,1014,3560,3561,3562,3563,43,933,934,938,937,0,1010,1011,1016,1015,3564,3565,3566,3567,43,934,935,939,938,0,1011,1012,1017,1016,3568,3569,3570,3571,43,935,932,936,939,0,1012,1013,1018,1017,3572,3573,3574,3575,43,936,937,941,940,0,1014,1015,1020,1019,3576,3577,3578,3579,43,937,938,942,941,0,1015,1016,1021,1020,3580,3581,3582,3583,43,938,939,943,942,0,1016,1017,1022,1021,3584,3585,3586,3587,43,939,936,940,943,0,1017,1018,1023,1022,3588,3589,3590,3591,43,940,941,945,944,0,1019,1020,1025,1024,3592,3593,3594,3595,43,941,942,946,945,0,1020,1021,1026,1025,3596,3597,3598,3599,43,942,943,947,946,0,1021,1022,1027,1026,3600,3601,3602,3603,43,943,940,944,947,0,1022,1023,1028,1027,3604,3605,3606,3607,43,944,945,949,948,0,1024,1025,1030,1029,3608,3609,3610,3611,43,945,946,950,949,0,1025,1026,1031,1030,3612,3613,3614,3615,43,946,947,951,950,0,1026,1027,1032,1031,3616,3617,3618,3619,43,947,944,948,951,0,1027,1028,1033,1032,3620,3621,3622,3623,43,948,949,953,952,0,1029,1030,1035,1034,3624,3625,3626,3627,43,949,950,954,953,0,1030,1031,1036,1035,3628,3629,3630,3631,43,950,951,955,954,0,1031,1032,1037,1036,3632,3633,3634,3635,43,951,948,952,955,0,1032,1033,1038,1037,3636,3637,3638,3639,43,956,957,961,960,0,1039,1040,1045,1044,3640,3641,3642,3643,43,957,958,962,961,0,1040,1041,1046,1045,3644,3645,3646,3647,43,958,959,963,962,0,1041,1042,1047,1046,3648,3649,3650,3651,43,959,956,960,963,0,1042,1043,1048,1047,3652,3653,3654,3655,43,960,961,965,964,0,1044,1045,1050,1049,3656,3657,3658,3659,43,961,962,966,965,0,1045,1046,1051,1050,3660,3661,3662,3663,43,962,963,967,966,0,1046,1047,1052,1051,3664,3665,3666,3667,43,963,960,964,967,0,1047,1048,1053,1052,3668,3669,3670,3671,43,964,965,969,968,0,1049,1050,1055,1054,3672,3673,3674,3675,43,965,966,970,969,0,1050,1051,1056,1055,3676,3677,3678,3679,43,966,967,971,970,0,1051,1052,1057,1056,3680,3681,3682,3683,43,967,964,968,971,0,1052,1053,1058,1057,3684,3685,3686,3687,43,968,969,973,972,0,1054,1055,1060,1059,3688,3689,3690,3691,43,969,970,974,973,0,1055,1056,1061,1060,3692,3693,3694,3695,43,970,971,975,974,0,1056,1057,1062,1061,3696,3697,3698,3699,43,971,968,972,975,0,1057,1058,1063,1062,3700,3701,3702,3703,43,972,973,977,976,0,1059,1060,1065,1064,3704,3705,3706,3707,43,973,974,978,977,0,1060,1061,1066,1065,3708,3709,3710,3711,43,974,975,979,978,0,1061,1062,1067,1066,3712,3713,3714,3715,43,975,972,976,979,0,1062,1063,1068,1067,3716,3717,3718,3719,43,976,977,981,980,0,1064,1065,1070,1069,3720,3721,3722,3723,43,977,978,982,981,0,1065,1066,1071,1070,3724,3725,3726,3727,43,978,979,983,982,0,1066,1067,1072,1071,3728,3729,3730,3731,43,979,976,980,983,0,1067,1068,1073,1072,3732,3733,3734,3735,43,980,981,985,984,0,1069,1070,1075,1074,3736,3737,3738,3739,43,981,982,986,985,0,1070,1071,1076,1075,3740,3741,3742,3743,43,982,983,987,986,0,1071,1072,1077,1076,3744,3745,3746,3747,43,983,980,984,987,0,1072,1073,1078,1077,3748,3749,3750,3751,43,984,985,989,988,0,1074,1075,1080,1079,3752,3753,3754,3755,43,985,986,990,989,0,1075,1076,1081,1080,3756,3757,3758,3759,43,986,987,991,990,0,1076,1077,1082,1081,3760,3761,3762,3763,43,987,984,988,991,0,1077,1078,1083,1082,3764,3765,3766,3767,43,988,989,993,992,0,1079,1080,1085,1084,3768,3769,3770,3771,43,989,990,994,993,0,1080,1081,1086,1085,3772,3773,3774,3775,43,990,991,995,994,0,1081,1082,1087,1086,3776,3777,3778,3779,43,991,988,992,995,0,1082,1083,1088,1087,3780,3781,3782,3783,43,992,993,997,996,0,1084,1085,1090,1089,3784,3785,3786,3787,43,993,994,998,997,0,1085,1086,1091,1090,3788,3789,3790,3791,43,994,995,999,998,0,1086,1087,1092,1091,3792,3793,3794,3795,43,995,992,996,999,0,1087,1088,1093,1092,3796,3797,3798,3799,43,996,997,1001,1000,0,1089,1090,1095,1094,3800,3801,3802,3803,43,997,998,1002,1001,0,1090,1091,1096,1095,3804,3805,3806,3807,43,998,999,1003,1002,0,1091,1092,1097,1096,3808,3809,3810,3811,43,999,996,1000,1003,0,1092,1093,1098,1097,3812,3813,3814,3815,43,1000,1001,1005,1004,0,1094,1095,1100,1099,3816,3817,3818,3819,43,1001,1002,1006,1005,0,1095,1096,1101,1100,3820,3821,3822,3823,43,1002,1003,1007,1006,0,1096,1097,1102,1101,3824,3825,3826,3827,43,1003,1000,1004,1007,0,1097,1098,1103,1102,3828,3829,3830,3831,43,1004,1005,1009,1008,0,1099,1100,1105,1104,3832,3833,3834,3835,43,1005,1006,1010,1009,0,1100,1101,1106,1105,3836,3837,3838,3839,43,1006,1007,1011,1010,0,1101,1102,1107,1106,3840,3841,3842,3843,43,1007,1004,1008,1011,0,1102,1103,1108,1107,3844,3845,3846,3847,43,1008,1009,1013,1012,0,1104,1105,1110,1109,3848,3849,3850,3851,43,1009,1010,1014,1013,0,1105,1106,1111,1110,3852,3853,3854,3855,43,1010,1011,1015,1014,0,1106,1107,1112,1111,3856,3857,3858,3859,43,1011,1008,1012,1015,0,1107,1108,1113,1112,3860,3861,3862,3863,43,1016,1017,1021,1020,0,1114,1115,1120,1119,3864,3865,3866,3867,43,1017,1018,1022,1021,0,1115,1116,1121,1120,3868,3869,3870,3871,43,1018,1019,1023,1022,0,1116,1117,1122,1121,3872,3873,3874,3875,43,1019,1016,1020,1023,0,1117,1118,1123,1122,3876,3877,3878,3879,43,1020,1021,1025,1024,0,1119,1120,1125,1124,3880,3881,3882,3883,43,1021,1022,1026,1025,0,1120,1121,1126,1125,3884,3885,3886,3887,43,1022,1023,1027,1026,0,1121,1122,1127,1126,3888,3889,3890,3891,43,1023,1020,1024,1027,0,1122,1123,1128,1127,3892,3893,3894,3895,43,1024,1025,1029,1028,0,1124,1125,1130,1129,3896,3897,3898,3899,43,1025,1026,1030,1029,0,1125,1126,1131,1130,3900,3901,3902,3903,43,1026,1027,1031,1030,0,1126,1127,1132,1131,3904,3905,3906,3907,43,1027,1024,1028,1031,0,1127,1128,1133,1132,3908,3909,3910,3911,43,1028,1029,1033,1032,0,1129,1130,1135,1134,3912,3913,3914,3915,43,1029,1030,1034,1033,0,1130,1131,1136,1135,3916,3917,3918,3919,43,1030,1031,1035,1034,0,1131,1132,1137,1136,3920,3921,3922,3923,43,1031,1028,1032,1035,0,1132,1133,1138,1137,3924,3925,3926,3927,43,1032,1033,1037,1036,0,1134,1135,1140,1139,3928,3929,3930,3931,43,1033,1034,1038,1037,0,1135,1136,1141,1140,3932,3933,3934,3935,43,1034,1035,1039,1038,0,1136,1137,1142,1141,3936,3937,3938,3939,43,1035,1032,1036,1039,0,1137,1138,1143,1142,3940,3941,3942,3943,43,1036,1037,1041,1040,0,1139,1140,1145,1144,3944,3945,3946,3947,43,1037,1038,1042,1041,0,1140,1141,1146,1145,3948,3949,3950,3951,43,1038,1039,1043,1042,0,1141,1142,1147,1146,3952,3953,3954,3955,43,1039,1036,1040,1043,0,1142,1143,1148,1147,3956,3957,3958,3959,43,1040,1041,1045,1044,0,1144,1145,1150,1149,3960,3961,3962,3963,43,1041,1042,1046,1045,0,1145,1146,1151,1150,3964,3965,3966,3967,43,1042,1043,1047,1046,0,1146,1147,1152,1151,3968,3969,3970,3971,43,1043,1040,1044,1047,0,1147,1148,1153,1152,3972,3973,3974,3975,43,1044,1045,1049,1048,0,1149,1150,1155,1154,3976,3977,3978,3979,43,1045,1046,1050,1049,0,1150,1151,1156,1155,3980,3981,3982,3983,43,1046,1047,1051,1050,0,1151,1152,1157,1156,3984,3985,3986,3987,43,1047,1044,1048,1051,0,1152,1153,1158,1157,3988,3989,3990,3991,43,1048,1049,1053,1052,0,1154,1155,1160,1159,3992,3993,3994,3995,43,1049,1050,1054,1053,0,1155,1156,1161,1160,3996,3997,3998,3999,43,1050,1051,1055,1054,0,1156,1157,1162,1161,4000,4001,4002,4003,43,1051,1048,1052,1055,0,1157,1158,1163,1162,4004,4005,4006,4007,43,1052,1053,1057,1056,0,1159,1160,1165,1164,4008,4009,4010,4011,43,1053,1054,1058,1057,0,1160,1161,1166,1165,4012,4013,4014,4015,43,1054,1055,1059,1058,0,1161,1162,1167,1166,4016,4017,4018,4019,43,1055,1052,1056,1059,0,1162,1163,1168,1167,4020,4021,4022,4023,43,1056,1057,1061,1060,0,1164,1165,1170,1169,4024,4025,4026,4027,43,1057,1058,1062,1061,0,1165,1166,1171,1170,4028,4029,4030,4031,43,1058,1059,1063,1062,0,1166,1167,1172,1171,4032,4033,4034,4035,43,1059,1056,1060,1063,0,1167,1168,1173,1172,4036,4037,4038,4039,43,1064,1065,1068,1067,0,1174,1175,1179,1178,4040,4041,4042,4043,43,1065,1066,1069,1068,0,1175,1176,1180,1179,4044,4045,4046,4047,43,1066,1064,1067,1069,0,1176,1177,1181,1180,4048,4049,4050,4051,43,1067,1068,1071,1070,0,1178,1179,1183,1182,4052,4053,4054,4055,43,1068,1069,1072,1071,0,1179,1180,1184,1183,4056,4057,4058,4059,43,1069,1067,1070,1072,0,1180,1181,1185,1184,4060,4061,4062,4063,43,1070,1071,1074,1073,0,1182,1183,1187,1186,4064,4065,4066,4067,43,1071,1072,1075,1074,0,1183,1184,1188,1187,4068,4069,4070,4071,43,1072,1070,1073,1075,0,1184,1185,1189,1188,4072,4073,4074,4075,43,1073,1074,1077,1076,0,1186,1187,1191,1190,4076,4077,4078,4079,43,1074,1075,1078,1077,0,1187,1188,1192,1191,4080,4081,4082,4083,43,1075,1073,1076,1078,0,1188,1189,1193,1192,4084,4085,4086,4087,43,1079,1080,1083,1082,0,1194,1195,1199,1198,4088,4089,4090,4091,43,1080,1081,1084,1083,0,1195,1196,1200,1199,4092,4093,4094,4095,43,1081,1079,1082,1084,0,1196,1197,1201,1200,4096,4097,4098,4099,43,1082,1083,1086,1085,0,1198,1199,1203,1202,4100,4101,4102,4103,43,1083,1084,1087,1086,0,1199,1200,1204,1203,4104,4105,4106,4107,43,1084,1082,1085,1087,0,1200,1201,1205,1204,4108,4109,4110,4111,43,1085,1086,1089,1088,0,1202,1203,1207,1206,4112,4113,4114,4115,43,1086,1087,1090,1089,0,1203,1204,1208,1207,4116,4117,4118,4119,43,1087,1085,1088,1090,0,1204,1205,1209,1208,4120,4121,4122,4123,43,1088,1089,1092,1091,0,1206,1207,1211,1210,4124,4125,4126,4127,43,1089,1090,1093,1092,0,1207,1208,1212,1211,4128,4129,4130,4131,43,1090,1088,1091,1093,0,1208,1209,1213,1212,4132,4133,4134,4135,43,1094,1095,1098,1097,0,1214,1215,1219,1218,4136,4137,4138,4139,43,1095,1096,1099,1098,0,1215,1216,1220,1219,4140,4141,4142,4143,43,1096,1094,1097,1099,0,1216,1217,1221,1220,4144,4145,4146,4147,43,1097,1098,1101,1100,0,1218,1219,1223,1222,4148,4149,4150,4151,43,1098,1099,1102,1101,0,1219,1220,1224,1223,4152,4153,4154,4155,43,1099,1097,1100,1102,0,1220,1221,1225,1224,4156,4157,4158,4159,43,1100,1101,1104,1103,0,1222,1223,1227,1226,4160,4161,4162,4163,43,1101,1102,1105,1104,0,1223,1224,1228,1227,4164,4165,4166,4167,43,1102,1100,1103,1105,0,1224,1225,1229,1228,4168,4169,4170,4171,43,1103,1104,1107,1106,0,1226,1227,1231,1230,4172,4173,4174,4175,43,1104,1105,1108,1107,0,1227,1228,1232,1231,4176,4177,4178,4179,43,1105,1103,1106,1108,0,1228,1229,1233,1232,4180,4181,4182,4183,43,1106,1107,1110,1109,0,1230,1231,1235,1234,4184,4185,4186,4187,43,1107,1108,1111,1110,0,1231,1232,1236,1235,4188,4189,4190,4191,43,1108,1106,1109,1111,0,1232,1233,1237,1236,4192,4193,4194,4195,43,1112,1113,1116,1115,0,1238,1239,1243,1242,4196,4197,4198,4199,43,1113,1114,1117,1116,0,1239,1240,1244,1243,4200,4201,4202,4203,43,1114,1112,1115,1117,0,1240,1241,1245,1244,4204,4205,4206,4207,43,1115,1116,1119,1118,0,1242,1243,1247,1246,4208,4209,4210,4211,43,1116,1117,1120,1119,0,1243,1244,1248,1247,4212,4213,4214,4215,43,1117,1115,1118,1120,0,1244,1245,1249,1248,4216,4217,4218,4219,43,1118,1119,1122,1121,0,1246,1247,1251,1250,4220,4221,4222,4223,43,1119,1120,1123,1122,0,1247,1248,1252,1251,4224,4225,4226,4227,43,1120,1118,1121,1123,0,1248,1249,1253,1252,4228,4229,4230,4231,43,1121,1122,1125,1124,0,1250,1251,1255,1254,4232,4233,4234,4235,43,1122,1123,1126,1125,0,1251,1252,1256,1255,4236,4237,4238,4239,43,1123,1121,1124,1126,0,1252,1253,1257,1256,4240,4241,4242,4243,43,1127,1128,1131,1130,0,1258,1259,1263,1262,4244,4245,4246,4247,43,1128,1129,1132,1131,0,1259,1260,1264,1263,4248,4249,4250,4251,43,1129,1127,1130,1132,0,1260,1261,1265,1264,4252,4253,4254,4255,43,1130,1131,1134,1133,0,1262,1263,1267,1266,4256,4257,4258,4259,43,1131,1132,1135,1134,0,1263,1264,1268,1267,4260,4261,4262,4263,43,1132,1130,1133,1135,0,1264,1265,1269,1268,4264,4265,4266,4267,43,1133,1134,1137,1136,0,1266,1267,1271,1270,4268,4269,4270,4271,43,1134,1135,1138,1137,0,1267,1268,1272,1271,4272,4273,4274,4275,43,1135,1133,1136,1138,0,1268,1269,1273,1272,4276,4277,4278,4279,43,1136,1137,1140,1139,0,1270,1271,1275,1274,4280,4281,4282,4283,43,1137,1138,1141,1140,0,1271,1272,1276,1275,4284,4285,4286,4287,43,1138,1136,1139,1141,0,1272,1273,1277,1276,4288,4289,4290,4291,43,1142,1143,1146,1145,0,1278,1279,1283,1282,4292,4293,4294,4295,43,1143,1144,1147,1146,0,1279,1280,1284,1283,4296,4297,4298,4299,43,1144,1142,1145,1147,0,1280,1281,1285,1284,4300,4301,4302,4303,43,1145,1146,1149,1148,0,1282,1283,1287,1286,4304,4305,4306,4307,43,1146,1147,1150,1149,0,1283,1284,1288,1287,4308,4309,4310,4311,43,1147,1145,1148,1150,0,1284,1285,1289,1288,4312,4313,4314,4315,43,1148,1149,1152,1151,0,1286,1287,1291,1290,4316,4317,4318,4319,43,1149,1150,1153,1152,0,1287,1288,1292,1291,4320,4321,4322,4323,43,1150,1148,1151,1153,0,1288,1289,1293,1292,4324,4325,4326,4327,43,1151,1152,1155,1154,0,1290,1291,1295,1294,4328,4329,4330,4331,43,1152,1153,1156,1155,0,1291,1292,1296,1295,4332,4333,4334,4335,43,1153,1151,1154,1156,0,1292,1293,1297,1296,4336,4337,4338,4339,43,1154,1155,1158,1157,0,1294,1295,1299,1298,4340,4341,4342,4343,43,1155,1156,1159,1158,0,1295,1296,1300,1299,4344,4345,4346,4347,43,1156,1154,1157,1159,0,1296,1297,1301,1300,4348,4349,4350,4351,43,1160,1161,1164,1163,0,1302,1303,1307,1306,4352,4353,4354,4355,43,1161,1162,1165,1164,0,1303,1304,1308,1307,4356,4357,4358,4359,43,1162,1160,1163,1165,0,1304,1305,1309,1308,4360,4361,4362,4363,43,1163,1164,1167,1166,0,1306,1307,1311,1310,4364,4365,4366,4367,43,1164,1165,1168,1167,0,1307,1308,1312,1311,4368,4369,4370,4371,43,1165,1163,1166,1168,0,1308,1309,1313,1312,4372,4373,4374,4375,43,1166,1167,1170,1169,0,1310,1311,1315,1314,4376,4377,4378,4379,43,1167,1168,1171,1170,0,1311,1312,1316,1315,4380,4381,4382,4383,43,1168,1166,1169,1171,0,1312,1313,1317,1316,4384,4385,4386,4387,43,1172,1173,1176,1175,0,1318,1319,1323,1322,4388,4389,4390,4391,43,1173,1174,1177,1176,0,1319,1320,1324,1323,4392,4393,4394,4395,43,1174,1172,1175,1177,0,1320,1321,1325,1324,4396,4397,4398,4399,43,1175,1176,1179,1178,0,1322,1323,1327,1326,4400,4401,4402,4403,43,1176,1177,1180,1179,0,1323,1324,1328,1327,4404,4405,4406,4407,43,1177,1175,1178,1180,0,1324,1325,1329,1328,4408,4409,4410,4411,43,1178,1179,1182,1181,0,1326,1327,1331,1330,4412,4413,4414,4415,43,1179,1180,1183,1182,0,1327,1328,1332,1331,4416,4417,4418,4419,43,1180,1178,1181,1183,0,1328,1329,1333,1332,4420,4421,4422,4423,43,1181,1182,1185,1184,0,1330,1331,1335,1334,4424,4425,4426,4427,43,1182,1183,1186,1185,0,1331,1332,1336,1335,4428,4429,4430,4431,43,1183,1181,1184,1186,0,1332,1333,1337,1336,4432,4433,4434,4435,43,1187,1188,1191,1190,0,1338,1339,1343,1342,4436,4437,4438,4439,43,1188,1189,1192,1191,0,1339,1340,1344,1343,4440,4441,4442,4443,43,1189,1187,1190,1192,0,1340,1341,1345,1344,4444,4445,4446,4447,43,1190,1191,1194,1193,0,1342,1343,1347,1346,4448,4449,4450,4451,43,1191,1192,1195,1194,0,1343,1344,1348,1347,4452,4453,4454,4455,43,1192,1190,1193,1195,0,1344,1345,1349,1348,4456,4457,4458,4459,43,1193,1194,1197,1196,0,1346,1347,1351,1350,4460,4461,4462,4463,43,1194,1195,1198,1197,0,1347,1348,1352,1351,4464,4465,4466,4467,43,1195,1193,1196,1198,0,1348,1349,1353,1352,4468,4469,4470,4471,43,1196,1197,1200,1199,0,1350,1351,1355,1354,4472,4473,4474,4475,43,1197,1198,1201,1200,0,1351,1352,1356,1355,4476,4477,4478,4479,43,1198,1196,1199,1201,0,1352,1353,1357,1356,4480,4481,4482,4483,43,1202,1203,1206,1205,0,1358,1359,1363,1362,4484,4485,4486,4487,43,1203,1204,1207,1206,0,1359,1360,1364,1363,4488,4489,4490,4491,43,1204,1202,1205,1207,0,1360,1361,1365,1364,4492,4493,4494,4495,43,1205,1206,1209,1208,0,1362,1363,1367,1366,4496,4497,4498,4499,43,1206,1207,1210,1209,0,1363,1364,1368,1367,4500,4501,4502,4503,43,1207,1205,1208,1210,0,1364,1365,1369,1368,4504,4505,4506,4507,43,1208,1209,1212,1211,0,1366,1367,1371,1370,4508,4509,4510,4511,43,1209,1210,1213,1212,0,1367,1368,1372,1371,4512,4513,4514,4515,43,1210,1208,1211,1213,0,1368,1369,1373,1372,4516,4517,4518,4519,43,1211,1212,1215,1214,0,1370,1371,1375,1374,4520,4521,4522,4523,43,1212,1213,1216,1215,0,1371,1372,1376,1375,4524,4525,4526,4527,43,1213,1211,1214,1216,0,1372,1373,1377,1376,4528,4529,4530,4531,43,1214,1215,1218,1217,0,1374,1375,1379,1378,4532,4533,4534,4535,43,1215,1216,1219,1218,0,1375,1376,1380,1379,4536,4537,4538,4539,43,1216,1214,1217,1219,0,1376,1377,1381,1380,4540,4541,4542,4543,43,1217,1218,1221,1220,0,1378,1379,1383,1382,4544,4545,4546,4547,43,1218,1219,1222,1221,0,1379,1380,1384,1383,4548,4549,4550,4551,43,1219,1217,1220,1222,0,1380,1381,1385,1384,4552,4553,4554,4555,43,1223,1224,1227,1226,0,1386,1387,1391,1390,4556,4557,4558,4559,43,1224,1225,1228,1227,0,1387,1388,1392,1391,4560,4561,4562,4563,43,1225,1223,1226,1228,0,1388,1389,1393,1392,4564,4565,4566,4567,43,1226,1227,1230,1229,0,1390,1391,1395,1394,4568,4569,4570,4571,43,1227,1228,1231,1230,0,1391,1392,1396,1395,4572,4573,4574,4575,43,1228,1226,1229,1231,0,1392,1393,1397,1396,4576,4577,4578,4579,43,1229,1230,1233,1232,0,1394,1395,1399,1398,4580,4581,4582,4583,43,1230,1231,1234,1233,0,1395,1396,1400,1399,4584,4585,4586,4587,43,1231,1229,1232,1234,0,1396,1397,1401,1400,4588,4589,4590,4591,43,1232,1233,1236,1235,0,1398,1399,1403,1402,4592,4593,4594,4595,43,1233,1234,1237,1236,0,1399,1400,1404,1403,4596,4597,4598,4599,43,1234,1232,1235,1237,0,1400,1401,1405,1404,4600,4601,4602,4603,43,1235,1236,1239,1238,0,1402,1403,1407,1406,4604,4605,4606,4607,43,1236,1237,1240,1239,0,1403,1404,1408,1407,4608,4609,4610,4611,43,1237,1235,1238,1240,0,1404,1405,1409,1408,4612,4613,4614,4615,43,1238,1239,1242,1241,0,1406,1407,1411,1410,4616,4617,4618,4619,43,1239,1240,1243,1242,0,1407,1408,1412,1411,4620,4621,4622,4623,43,1240,1238,1241,1243,0,1408,1409,1413,1412,4624,4625,4626,4627,43,1244,1245,1248,1247,0,1414,1415,1419,1418,4628,4629,4630,4631,43,1245,1246,1249,1248,0,1415,1416,1420,1419,4632,4633,4634,4635,43,1246,1244,1247,1249,0,1416,1417,1421,1420,4636,4637,4638,4639,43,1247,1248,1251,1250,0,1418,1419,1423,1422,4640,4641,4642,4643,43,1248,1249,1252,1251,0,1419,1420,1424,1423,4644,4645,4646,4647,43,1249,1247,1250,1252,0,1420,1421,1425,1424,4648,4649,4650,4651,43,1250,1251,1254,1253,0,1422,1423,1427,1426,4652,4653,4654,4655,43,1251,1252,1255,1254,0,1423,1424,1428,1427,4656,4657,4658,4659,43,1252,1250,1253,1255,0,1424,1425,1429,1428,4660,4661,4662,4663,43,1256,1257,1260,1259,0,1430,1431,1435,1434,4664,4665,4666,4667,43,1257,1258,1261,1260,0,1431,1432,1436,1435,4668,4669,4670,4671,43,1258,1256,1259,1261,0,1432,1433,1437,1436,4672,4673,4674,4675,43,1259,1260,1263,1262,0,1434,1435,1439,1438,4676,4677,4678,4679,43,1260,1261,1264,1263,0,1435,1436,1440,1439,4680,4681,4682,4683,43,1261,1259,1262,1264,0,1436,1437,1441,1440,4684,4685,4686,4687,43,1262,1263,1266,1265,0,1438,1439,1443,1442,4688,4689,4690,4691,43,1263,1264,1267,1266,0,1439,1440,1444,1443,4692,4693,4694,4695,43,1264,1262,1265,1267,0,1440,1441,1445,1444,4696,4697,4698,4699,43,1265,1266,1269,1268,0,1442,1443,1447,1446,4700,4701,4702,4703,43,1266,1267,1270,1269,0,1443,1444,1448,1447,4704,4705,4706,4707,43,1267,1265,1268,1270,0,1444,1445,1449,1448,4708,4709,4710,4711,43,1271,1272,1275,1274,0,1450,1451,1455,1454,4712,4713,4714,4715,43,1272,1273,1276,1275,0,1451,1452,1456,1455,4716,4717,4718,4719,43,1273,1271,1274,1276,0,1452,1453,1457,1456,4720,4721,4722,4723,43,1274,1275,1278,1277,0,1454,1455,1459,1458,4724,4725,4726,4727,43,1275,1276,1279,1278,0,1455,1456,1460,1459,4728,4729,4730,4731,43,1276,1274,1277,1279,0,1456,1457,1461,1460,4732,4733,4734,4735,43,1277,1278,1281,1280,0,1458,1459,1463,1462,4736,4737,4738,4739,43,1278,1279,1282,1281,0,1459,1460,1464,1463,4740,4741,4742,4743,43,1279,1277,1280,1282,0,1460,1461,1465,1464,4744,4745,4746,4747,43,1280,1281,1284,1283,0,1462,1463,1467,1466,4748,4749,4750,4751,43,1281,1282,1285,1284,0,1463,1464,1468,1467,4752,4753,4754,4755,43,1282,1280,1283,1285,0,1464,1465,1469,1468,4756,4757,4758,4759,43,1286,1287,1290,1289,0,1470,1471,1475,1474,4760,4761,4762,4763,43,1287,1288,1291,1290,0,1471,1472,1476,1475,4764,4765,4766,4767,43,1288,1286,1289,1291,0,1472,1473,1477,1476,4768,4769,4770,4771,43,1289,1290,1293,1292,0,1474,1475,1479,1478,4772,4773,4774,4775,43,1290,1291,1294,1293,0,1475,1476,1480,1479,4776,4777,4778,4779,43,1291,1289,1292,1294,0,1476,1477,1481,1480,4780,4781,4782,4783,43,1292,1293,1296,1295,0,1478,1479,1483,1482,4784,4785,4786,4787,43,1293,1294,1297,1296,0,1479,1480,1484,1483,4788,4789,4790,4791,43,1294,1292,1295,1297,0,1480,1481,1485,1484,4792,4793,4794,4795,43,1295,1296,1299,1298,0,1482,1483,1487,1486,4796,4797,4798,4799,43,1296,1297,1300,1299,0,1483,1484,1488,1487,4800,4801,4802,4803,43,1297,1295,1298,1300,0,1484,1485,1489,1488,4804,4805,4806,4807,43,1301,1302,1305,1304,0,1490,1491,1495,1494,4808,4809,4810,4811,43,1302,1303,1306,1305,0,1491,1492,1496,1495,4812,4813,4814,4815,43,1303,1301,1304,1306,0,1492,1493,1497,1496,4816,4817,4818,4819,43,1304,1305,1308,1307,0,1494,1495,1499,1498,4820,4821,4822,4823,43,1305,1306,1309,1308,0,1495,1496,1500,1499,4824,4825,4826,4827,43,1306,1304,1307,1309,0,1496,1497,1501,1500,4828,4829,4830,4831,43,1307,1308,1311,1310,0,1498,1499,1503,1502,4832,4833,4834,4835,43,1308,1309,1312,1311,0,1499,1500,1504,1503,4836,4837,4838,4839,43,1309,1307,1310,1312,0,1500,1501,1505,1504,4840,4841,4842,4843,43,1310,1311,1314,1313,0,1502,1503,1507,1506,4844,4845,4846,4847,43,1311,1312,1315,1314,0,1503,1504,1508,1507,4848,4849,4850,4851,43,1312,1310,1313,1315,0,1504,1505,1509,1508,4852,4853,4854,4855,43,1316,1317,1320,1319,0,1510,1511,1515,1514,4856,4857,4858,4859,43,1317,1318,1321,1320,0,1511,1512,1516,1515,4860,4861,4862,4863,43,1318,1316,1319,1321,0,1512,1513,1517,1516,4864,4865,4866,4867,43,1319,1320,1323,1322,0,1514,1515,1519,1518,4868,4869,4870,4871,43,1320,1321,1324,1323,0,1515,1516,1520,1519,4872,4873,4874,4875,43,1321,1319,1322,1324,0,1516,1517,1521,1520,4876,4877,4878,4879,43,1322,1323,1326,1325,0,1518,1519,1523,1522,4880,4881,4882,4883,43,1323,1324,1327,1326,0,1519,1520,1524,1523,4884,4885,4886,4887,43,1324,1322,1325,1327,0,1520,1521,1525,1524,4888,4889,4890,4891,43,1328,1329,1332,1331,0,1526,1527,1531,1530,4892,4893,4894,4895,43,1329,1330,1333,1332,0,1527,1528,1532,1531,4896,4897,4898,4899,43,1330,1328,1331,1333,0,1528,1529,1533,1532,4900,4901,4902,4903,43,1331,1332,1335,1334,0,1530,1531,1535,1534,4904,4905,4906,4907,43,1332,1333,1336,1335,0,1531,1532,1536,1535,4908,4909,4910,4911,43,1333,1331,1334,1336,0,1532,1533,1537,1536,4912,4913,4914,4915,43,1334,1335,1338,1337,0,1534,1535,1539,1538,4916,4917,4918,4919,43,1335,1336,1339,1338,0,1535,1536,1540,1539,4920,4921,4922,4923,43,1336,1334,1337,1339,0,1536,1537,1541,1540,4924,4925,4926,4927,43,1337,1338,1341,1340,0,1538,1539,1543,1542,4928,4929,4930,4931,43,1338,1339,1342,1341,0,1539,1540,1544,1543,4932,4933,4934,4935,43,1339,1337,1340,1342,0,1540,1541,1545,1544,4936,4937,4938,4939,43,1343,1344,1347,1346,0,1546,1547,1551,1550,4940,4941,4942,4943,43,1344,1345,1348,1347,0,1547,1548,1552,1551,4944,4945,4946,4947,43,1345,1343,1346,1348,0,1548,1549,1553,1552,4948,4949,4950,4951,43,1346,1347,1350,1349,0,1550,1551,1555,1554,4952,4953,4954,4955,43,1347,1348,1351,1350,0,1551,1552,1556,1555,4956,4957,4958,4959,43,1348,1346,1349,1351,0,1552,1553,1557,1556,4960,4961,4962,4963,43,1349,1350,1353,1352,0,1554,1555,1559,1558,4964,4965,4966,4967,43,1350,1351,1354,1353,0,1555,1556,1560,1559,4968,4969,4970,4971,43,1351,1349,1352,1354,0,1556,1557,1561,1560,4972,4973,4974,4975,43,1352,1353,1356,1355,0,1558,1559,1563,1562,4976,4977,4978,4979,43,1353,1354,1357,1356,0,1559,1560,1564,1563,4980,4981,4982,4983,43,1354,1352,1355,1357,0,1560,1561,1565,1564,4984,4985,4986,4987,43,1355,1356,1359,1358,0,1562,1563,1567,1566,4988,4989,4990,4991,43,1356,1357,1360,1359,0,1563,1564,1568,1567,4992,4993,4994,4995,43,1357,1355,1358,1360,0,1564,1565,1569,1568,4996,4997,4998,4999,43,1361,1362,1365,1364,0,1570,1571,1575,1574,5000,5001,5002,5003,43,1362,1363,1366,1365,0,1571,1572,1576,1575,5004,5005,5006,5007,43,1363,1361,1364,1366,0,1572,1573,1577,1576,5008,5009,5010,5011,43,1364,1365,1368,1367,0,1574,1575,1579,1578,5012,5013,5014,5015,43,1365,1366,1369,1368,0,1575,1576,1580,1579,5016,5017,5018,5019,43,1366,1364,1367,1369,0,1576,1577,1581,1580,5020,5021,5022,5023,43,1367,1368,1371,1370,0,1578,1579,1583,1582,5024,5025,5026,5027,43,1368,1369,1372,1371,0,1579,1580,1584,1583,5028,5029,5030,5031,43,1369,1367,1370,1372,0,1580,1581,1585,1584,5032,5033,5034,5035,43,1370,1371,1374,1373,0,1582,1583,1587,1586,5036,5037,5038,5039,43,1371,1372,1375,1374,0,1583,1584,1588,1587,5040,5041,5042,5043,43,1372,1370,1373,1375,0,1584,1585,1589,1588,5044,5045,5046,5047]}',carrot_01:'{"metadata":{"formatVersion":0.5,"sourceFile":"carrot_01.obj","generatedBy":"three-obj","vertices":134,"faces":144,"normals":552,"colors":0,"uvs":149,"materials":1},"scale":1,"materials":[],"vertices":[8.1093,3.7297,-0.4358,7.6845,7.0838,-0.4207,5.4444,9.3239,-0.3706,2.0904,9.7487,-0.2678,-1.4213,8.2084,-0.1217,-4.2072,5.1781,0.0173,-5.6221,1.5499,0.1043,-5.3227,-1.6876,0.1239,-3.327,-3.6833,0.0542,-0.0895,-3.9827,-0.1058,3.5387,-2.5679,-0.2876,6.5691,0.218,-0.404,10.5928,3.3049,4.3714,9.7941,8.1088,4.3989,6.4695,11.4335,4.4402,1.6656,12.2322,4.5602,-3.2556,10.2259,4.7672,-7.0502,6.0423,4.9632,-8.8573,0.9275,5.0783,-8.2577,-3.6827,5.1139,-5.3221,-6.6184,5.0371,-0.7119,-7.2179,4.806,4.403,-5.4108,4.5302,8.5866,-1.6162,4.3818,10.2813,1.8715,14.6906,8.9742,6.9116,14.7194,5.2723,10.6135,14.7579,0.2322,11.9207,14.879,-4.775,10.4192,15.0936,-8.4283,6.5398,15.2955,-9.8133,1.4191,15.4129,-8.6226,-3.5075,15.4508,-5.1468,-6.9833,15.375,-0.2202,-8.174,15.1354,4.9005,-6.7889,14.8476,8.7798,-3.1357,14.6968,9.9335,0.4443,27.0313,8.1142,5.6839,27.0605,4.0446,9.7535,27.097,-1.1951,11.5729,27.2191,-6.2343,10.5882,27.4382,-9.6894,7.0357,27.6459,-10.6243,1.9491,27.7634,-8.8547,-3.2432,27.8041,-4.8826,-7.2154,27.7287,0.3097,-8.9849,27.4827,5.3963,-8.05,27.1869,8.9488,-4.5949,27.0334,9.2706,0.1228,36.2157,7.5238,5.2205,36.2436,3.5812,9.1632,36.2822,-1.5165,10.9099,36.4043,-6.4377,9.9321,36.6179,-9.8294,6.4628,36.8197,-10.7672,1.5044,36.9355,-9.0604,-3.556,36.9751,-5.1954,-7.4211,36.8993,-0.135,-9.1278,36.6588,4.8235,-8.19,36.3719,8.2928,-4.7984,36.2211,7.8818,0.1238,45.417,6.4123,4.6182,45.4403,2.9788,8.0516,45.4863,-1.5155,9.5211,45.6038,-5.8896,8.5968,45.7927,-8.9484,5.5044,45.971,-9.8551,1.1141,46.0785,-8.4031,-3.364,46.1103,-5.0033,-6.7638,46.0339,-0.5252,-8.2158,45.8223,3.8651,-7.309,45.5752,6.9575,-4.2503,45.4358,6.8354,0.1808,54.6172,5.5855,4.1943,54.6373,2.5549,7.2249,54.6876,-1.4586,8.4747,54.7979,-5.3992,7.5966,54.9655,-8.1915,4.811,55.129,-9.0729,0.8735,55.2278,-7.8197,-3.1432,55.2524,-4.7825,-6.1804,55.1762,-0.7659,-7.4336,54.9906,3.1716,-6.5521,54.7759,5.9573,-3.7599,54.6437,5.9664,0.2024,63.8173,4.8787,3.817,63.834,2.1777,6.5181,63.884,-1.4369,7.6057,63.9897,-5.0125,6.7854,64.143,-7.5751,4.259,64.2882,-8.4141,0.701,64.3793,-7.3078,-2.9312,64.4004,-4.5705,-5.6684,64.3291,-0.9384,-6.7747,64.1608,2.6197,-5.9358,63.9684,5.1461,-3.3732,63.8482,3.6785,0.1366,73.0618,2.929,2.6762,73.0711,1.0368,4.5683,73.1173,-1.5027,5.3179,73.1988,-4.0189,4.7285,73.306,-5.8279,2.9522,73.4109,-6.433,0.4516,73.4755,-5.6677,-2.1036,73.4852,-3.7429,-4.0284,73.4277,-1.1877,-4.7937,73.3152,1.3128,-4.1885,73.1886,3.0892,-2.3796,73.096,0.0428,-0.0505,82.2145,-0.3783,1.3794,82.2164,-1.4417,2.4469,82.2453,-2.87,2.8735,82.2986,-4.2817,2.5431,82.3611,-5.2975,1.545,82.4194,-5.6374,0.141,82.4566,-5.2095,-1.295,82.4609,-4.1337,-2.376,82.428,-2.6988,-2.8066,82.3694,-1.2936,-2.4722,82.2984,-0.2904,-1.4606,82.244,0.1701,-0.5457,92.0018,0.0222,-0.0508,92.0021,-0.3483,0.3194,92.0145,-0.8454,0.4649,92.0328,-1.3326,0.346,92.0524,-1.6827,-0.0024,92.0719,-1.7985,-0.491,92.0819,-1.6497,-0.9867,92.0825,-1.2777,-1.3589,92.0692,-0.7795,-1.5037,92.0518,-0.2934,-1.3855,92.0292,0.0551,-1.0351,92.0104,-2.6075,-3.6965,103.6029,1.1206,2.7599,-1.0742],"morphTargets":[],"morphColors":[],"normals":[0.8823,-0.1167,-0.4561,0.8062,0.3975,-0.4382,0.8761,0.4551,-0.1591,0.9723,-0.0921,-0.2146,0.8062,0.3975,-0.4382,0.3974,0.8016,-0.4466,0.4598,0.8728,-0.1636,0.8761,0.4551,-0.1591,0.3974,0.8016,-0.4466,-0.1295,0.8744,-0.4676,-0.0996,0.9694,-0.2243,0.4598,0.8728,-0.1636,-0.1295,0.8744,-0.4676,-0.5155,0.7074,-0.4836,-0.5533,0.7812,-0.289,-0.0996,0.9694,-0.2243,-0.5155,0.7074,-0.4836,-0.7381,0.4565,-0.4969,-0.824,0.4711,-0.3148,-0.5533,0.7812,-0.289,-0.7381,0.4565,-0.4969,-0.842,0.1307,-0.5234,-0.9483,0.0775,-0.3078,-0.824,0.4711,-0.3148,-0.842,0.1307,-0.5234,-0.7517,-0.3277,-0.5723,-0.8541,-0.4267,-0.2974,-0.9483,0.0775,-0.3078,-0.7517,-0.3277,-0.5723,-0.3502,-0.7338,-0.5821,-0.4445,-0.8421,-0.3053,-0.8541,-0.4267,-0.2974,-0.3502,-0.7338,-0.5821,0.1123,-0.8318,-0.5437,0.0687,-0.9437,-0.3235,-0.4445,-0.8421,-0.3053,0.1123,-0.8318,-0.5437,0.4526,-0.7293,-0.5131,0.4746,-0.8187,-0.323,0.0687,-0.9437,-0.3235,0.4526,-0.7293,-0.5131,0.7156,-0.5016,-0.486,0.7906,-0.5421,-0.2847,0.4746,-0.8187,-0.323,0.7156,-0.5016,-0.486,0.8823,-0.1167,-0.4561,0.9723,-0.0921,-0.2146,0.7906,-0.5421,-0.2847,0.9723,-0.0921,-0.2146,0.8761,0.4551,-0.1591,0.8671,0.4862,0.1088,0.9995,-0.0233,0.0233,0.8761,0.4551,-0.1591,0.4598,0.8728,-0.1636,0.498,0.86,0.1116,0.8671,0.4862,0.1088,0.4598,0.8728,-0.1636,-0.0996,0.9694,-0.2243,-0.0207,0.9994,0.026,0.498,0.86,0.1116,-0.0996,0.9694,-0.2243,-0.5533,0.7812,-0.289,-0.5321,0.8431,-0.0778,-0.0207,0.9994,0.026,-0.5533,0.7812,-0.289,-0.824,0.4711,-0.3148,-0.8721,0.4756,-0.1151,-0.5321,0.8431,-0.0778,-0.824,0.4711,-0.3148,-0.9483,0.0775,-0.3078,-0.9969,0.0116,-0.0782,-0.8721,0.4756,-0.1151,-0.9483,0.0775,-0.3078,-0.8541,-0.4267,-0.2974,-0.8755,-0.4827,-0.0237,-0.9969,0.0116,-0.0782,-0.8541,-0.4267,-0.2974,-0.4445,-0.8421,-0.3053,-0.495,-0.8686,-0.0217,-0.8755,-0.4827,-0.0237,-0.4445,-0.8421,-0.3053,0.0687,-0.9437,-0.3235,0.0113,-0.997,-0.077,-0.495,-0.8686,-0.0217,0.0687,-0.9437,-0.3235,0.4746,-0.8187,-0.323,0.4862,-0.8663,-0.1149,0.0113,-0.997,-0.077,0.4746,-0.8187,-0.323,0.7906,-0.5421,-0.2847,0.8494,-0.5221,-0.0767,0.4862,-0.8663,-0.1149,0.7906,-0.5421,-0.2847,0.9723,-0.0921,-0.2146,0.9995,-0.0233,0.0233,0.8494,-0.5221,-0.0767,0.9995,-0.0233,0.0233,0.8671,0.4862,0.1088,0.8486,0.5215,0.0892,0.9974,0.0564,0.0442,0.8671,0.4862,0.1088,0.498,0.86,0.1116,0.5269,0.8444,0.0966,0.8486,0.5215,0.0892,0.498,0.86,0.1116,-0.0207,0.9994,0.026,0.0598,0.9964,0.0595,0.5269,0.8444,0.0966,-0.0207,0.9994,0.026,-0.5321,0.8431,-0.0778,-0.4846,0.8747,-0.0023,0.0598,0.9964,0.0595,-0.5321,0.8431,-0.0778,-0.8721,0.4756,-0.1151,-0.8863,0.461,-0.0446,-0.4846,0.8747,-0.0023,-0.8721,0.4756,-0.1151,-0.9969,0.0116,-0.0782,-0.997,-0.061,-0.0476,-0.8863,0.461,-0.0446,-0.9969,0.0116,-0.0782,-0.8755,-0.4827,-0.0237,-0.8532,-0.5208,-0.0285,-0.997,-0.061,-0.0476,-0.8755,-0.4827,-0.0237,-0.495,-0.8686,-0.0217,-0.526,-0.8502,-0.0207,-0.8532,-0.5208,-0.0285,-0.495,-0.8686,-0.0217,0.0113,-0.997,-0.077,-0.0614,-0.9976,-0.0326,-0.526,-0.8502,-0.0207,0.0113,-0.997,-0.077,0.4862,-0.8663,-0.1149,0.466,-0.8839,-0.039,-0.0614,-0.9976,-0.0326,0.4862,-0.8663,-0.1149,0.8494,-0.5221,-0.0767,0.8766,-0.4811,-0.0111,0.466,-0.8839,-0.039,0.8494,-0.5221,-0.0767,0.9995,-0.0233,0.0233,0.9974,0.0564,0.0442,0.8766,-0.4811,-0.0111,0.9974,0.0564,0.0442,0.8486,0.5215,0.0892,0.8442,0.5249,0.1085,0.992,0.0623,0.1099,0.8486,0.5215,0.0892,0.5269,0.8444,0.0966,0.5256,0.8437,0.1091,0.8442,0.5249,0.1085,0.5269,0.8444,0.0966,0.0598,0.9964,0.0595,0.0662,0.9916,0.1112,0.5256,0.8437,0.1091,0.0598,0.9964,0.0595,-0.4846,0.8747,-0.0023,-0.473,0.8752,0.1015,0.0662,0.9916,0.1112,-0.4846,0.8747,-0.0023,-0.8863,0.461,-0.0446,-0.8837,0.4624,0.0724,-0.473,0.8752,0.1015,-0.8863,0.461,-0.0446,-0.997,-0.061,-0.0476,-0.997,-0.068,0.0381,-0.8837,0.4624,0.0724,-0.997,-0.061,-0.0476,-0.8532,-0.5208,-0.0285,-0.8495,-0.5272,0.0181,-0.997,-0.068,0.0381,-0.8532,-0.5208,-0.0285,-0.526,-0.8502,-0.0207,-0.5257,-0.8505,0.0191,-0.8495,-0.5272,0.0181,-0.526,-0.8502,-0.0207,-0.0614,-0.9976,-0.0326,-0.0661,-0.997,0.0398,-0.5257,-0.8505,0.0191,-0.0614,-0.9976,-0.0326,0.466,-0.8839,-0.039,0.4619,-0.884,0.0723,-0.0661,-0.997,0.0398,0.466,-0.8839,-0.039,0.8766,-0.4811,-0.0111,0.8733,-0.4769,0.1001,0.4619,-0.884,0.0723,0.8766,-0.4811,-0.0111,0.9974,0.0564,0.0442,0.992,0.0623,0.1099,0.8733,-0.4769,0.1001,0.992,0.0623,0.1099,0.8442,0.5249,0.1085,0.8458,0.5198,0.1198,0.9899,0.0532,0.1312,0.8442,0.5249,0.1085,0.5256,0.8437,0.1091,0.5205,0.8455,0.1196,0.8458,0.5198,0.1198,0.5256,0.8437,0.1091,0.0662,0.9916,0.1112,0.058,0.9897,0.1308,0.5205,0.8455,0.1196,0.0662,0.9916,0.1112,-0.473,0.8752,0.1015,-0.4696,0.8723,0.1363,0.058,0.9897,0.1308,-0.473,0.8752,0.1015,-0.8837,0.4624,0.0724,-0.874,0.4709,0.1199,-0.4696,0.8723,0.1363,-0.8837,0.4624,0.0724,-0.997,-0.068,0.0381,-0.9943,-0.0555,0.0908,-0.874,0.4709,0.1199,-0.997,-0.068,0.0381,-0.8495,-0.5272,0.0181,-0.8497,-0.5225,0.0706,-0.9943,-0.0555,0.0908,-0.8495,-0.5272,0.0181,-0.5257,-0.8505,0.0191,-0.519,-0.8519,0.0705,-0.8497,-0.5225,0.0706,-0.5257,-0.8505,0.0191,-0.0661,-0.997,0.0398,-0.0519,-0.9946,0.0902,-0.519,-0.8519,0.0705,-0.0661,-0.997,0.0398,0.4619,-0.884,0.0723,0.4705,-0.8744,0.119,-0.0519,-0.9946,0.0902,0.4619,-0.884,0.0723,0.8733,-0.4769,0.1001,0.8696,-0.4746,0.136,0.4705,-0.8744,0.119,0.8733,-0.4769,0.1001,0.992,0.0623,0.1099,0.9899,0.0532,0.1312,0.8696,-0.4746,0.136,0.9899,0.0532,0.1312,0.8458,0.5198,0.1198,0.8517,0.5154,0.0949,0.9937,0.0419,0.1037,0.8458,0.5198,0.1198,0.5205,0.8455,0.1196,0.5162,0.8513,0.0943,0.8517,0.5154,0.0949,0.5205,0.8455,0.1196,0.058,0.9897,0.1308,0.0457,0.9937,0.1027,0.5162,0.8513,0.0943,0.058,0.9897,0.1308,-0.4696,0.8723,0.1363,-0.4734,0.8742,0.1077,0.0457,0.9937,0.1027,-0.4696,0.8723,0.1363,-0.874,0.4709,0.1199,-0.8705,0.4824,0.0979,-0.4734,0.8742,0.1077,-0.874,0.4709,0.1199,-0.9943,-0.0555,0.0908,-0.9961,-0.0413,0.0784,-0.8705,0.4824,0.0979,-0.9943,-0.0555,0.0908,-0.8497,-0.5225,0.0706,-0.8532,-0.5177,0.0644,-0.9961,-0.0413,0.0784,-0.8497,-0.5225,0.0706,-0.519,-0.8519,0.0705,-0.5146,-0.855,0.0639,-0.8532,-0.5177,0.0644,-0.519,-0.8519,0.0705,-0.0519,-0.9946,0.0902,-0.0383,-0.9963,0.0773,-0.5146,-0.855,0.0639,-0.0519,-0.9946,0.0902,0.4705,-0.8744,0.119,0.4822,-0.8707,0.0967,-0.0383,-0.9963,0.0773,0.4705,-0.8744,0.119,0.8696,-0.4746,0.136,0.8722,-0.4771,0.1077,0.4822,-0.8707,0.0967,0.8696,-0.4746,0.136,0.9899,0.0532,0.1312,0.9937,0.0419,0.1037,0.8722,-0.4771,0.1077,0.9937,0.0419,0.1037,0.8517,0.5154,0.0949,0.8473,0.506,0.1613,0.9856,0.0338,0.1656,0.8517,0.5154,0.0949,0.5162,0.8513,0.0943,0.5092,0.8455,0.1607,0.8473,0.506,0.1613,0.5162,0.8513,0.0943,0.0457,0.9937,0.1027,0.0393,0.9855,0.1652,0.5092,0.8455,0.1607,0.0457,0.9937,0.1027,-0.4734,0.8742,0.1077,-0.4678,0.8679,0.1673,0.0393,0.9855,0.1652,-0.4734,0.8742,0.1077,-0.8705,0.4824,0.0979,-0.8581,0.4884,0.1584,-0.4678,0.8679,0.1673,-0.8705,0.4824,0.0979,-0.9961,-0.0413,0.0784,-0.9895,-0.0295,0.1415,-0.8581,0.4884,0.1584,-0.9961,-0.0413,0.0784,-0.8532,-0.5177,0.0644,-0.8498,-0.5111,0.1288,-0.9895,-0.0295,0.1415,-0.8532,-0.5177,0.0644,-0.5146,-0.855,0.0639,-0.5066,-0.8526,0.1284,-0.8498,-0.5111,0.1288,-0.5146,-0.855,0.0639,-0.0383,-0.9963,0.0773,-0.0249,-0.9899,0.1397,-0.5066,-0.8526,0.1284,-0.0383,-0.9963,0.0773,0.4822,-0.8707,0.0967,0.4893,-0.8582,0.1554,-0.0249,-0.9899,0.1397,0.4822,-0.8707,0.0967,0.8722,-0.4771,0.1077,0.8661,-0.4717,0.1655,0.4893,-0.8582,0.1554,0.8722,-0.4771,0.1077,0.9937,0.0419,0.1037,0.9856,0.0338,0.1656,0.8661,-0.4717,0.1655,0.9856,0.0338,0.1656,0.8473,0.506,0.1613,0.8243,0.4826,0.2959,0.9527,0.0293,0.3024,0.8473,0.506,0.1613,0.5092,0.8455,0.1607,0.5023,0.8186,0.2786,0.8243,0.4826,0.2959,0.5092,0.8455,0.1607,0.0393,0.9855,0.1652,0.0462,0.9662,0.2535,0.5023,0.8186,0.2786,0.0393,0.9855,0.1652,-0.4678,0.8679,0.1673,-0.4539,0.8633,0.2207,0.0462,0.9662,0.2535,-0.4678,0.8679,0.1673,-0.8581,0.4884,0.1584,-0.8494,0.4954,0.1822,-0.4539,0.8633,0.2207,-0.8581,0.4884,0.1584,-0.9895,-0.0295,0.1415,-0.9881,-0.0245,0.1516,-0.8494,0.4954,0.1822,-0.9895,-0.0295,0.1415,-0.8498,-0.5111,0.1288,-0.8462,-0.5127,0.1452,-0.9881,-0.0245,0.1516,-0.8498,-0.5111,0.1288,-0.5066,-0.8526,0.1284,-0.4935,-0.8533,0.1682,-0.8462,-0.5127,0.1452,-0.5066,-0.8526,0.1284,-0.0249,-0.9899,0.1397,-0.0074,-0.977,0.2133,-0.4935,-0.8533,0.1682,-0.0249,-0.9899,0.1397,0.4893,-0.8582,0.1554,0.4921,-0.8305,0.261,-0.0074,-0.977,0.2133,0.4893,-0.8582,0.1554,0.8661,-0.4717,0.1655,0.8432,-0.4513,0.2922,0.4921,-0.8305,0.261,0.8661,-0.4717,0.1655,0.9856,0.0338,0.1656,0.9527,0.0293,0.3024,0.8432,-0.4513,0.2922,0.9527,0.0293,0.3024,0.8243,0.4826,0.2959,0.8344,0.5102,0.2087,0.9813,0.0318,0.1899,0.8243,0.4826,0.2959,0.5023,0.8186,0.2786,0.4842,0.8438,0.2314,0.8344,0.5102,0.2087,0.5023,0.8186,0.2786,0.0462,0.9662,0.2535,0.0118,0.9682,0.25,0.4842,0.8438,0.2314,0.0462,0.9662,0.2535,-0.4539,0.8633,0.2207,-0.4778,0.8402,0.2564,0.0118,0.9682,0.25,-0.4539,0.8633,0.2207,-0.8494,0.4954,0.1822,-0.8455,0.4733,0.2473,-0.4778,0.8402,0.2564,-0.8494,0.4954,0.1822,-0.9881,-0.0245,0.1516,-0.9737,-0.0205,0.2268,-0.8455,0.4733,0.2473,-0.9881,-0.0245,0.1516,-0.8462,-0.5127,0.1452,-0.8482,-0.4892,0.2032,-0.9737,-0.0205,0.2268,-0.8462,-0.5127,0.1452,-0.4935,-0.8533,0.1682,-0.5211,-0.8334,0.1843,-0.8482,-0.4892,0.2032,-0.4935,-0.8533,0.1682,-0.0074,-0.977,0.2133,-0.0503,-0.9833,0.1747,-0.5211,-0.8334,0.1843,-0.0074,-0.977,0.2133,0.4921,-0.8305,0.261,0.4662,-0.8674,0.1741,-0.0503,-0.9833,0.1747,0.4921,-0.8305,0.261,0.8432,-0.4513,0.2922,0.8569,-0.4835,0.1788,0.4662,-0.8674,0.1741,0.8432,-0.4513,0.2922,0.9527,0.0293,0.3024,0.9813,0.0318,0.1899,0.8569,-0.4835,0.1788,0.9813,0.0318,0.1899,0.8344,0.5102,0.2087,0.8466,0.4996,0.1835,0.9922,0.0444,0.1169,0.8344,0.5102,0.2087,0.4842,0.8438,0.2314,0.5145,0.8224,0.2428,0.8466,0.4996,0.1835,0.4842,0.8438,0.2314,0.0118,0.9682,0.25,0.0593,0.9569,0.2844,0.5145,0.8224,0.2428,0.0118,0.9682,0.25,-0.4778,0.8402,0.2564,-0.4294,0.8548,0.2916,0.0593,0.9569,0.2844,-0.4778,0.8402,0.2564,-0.8455,0.4733,0.2473,-0.8268,0.5052,0.2473,-0.4294,0.8548,0.2916,-0.8455,0.4733,0.2473,-0.9737,-0.0205,0.2268,-0.9871,-0.0108,0.1595,-0.8268,0.5052,0.2473,-0.9737,-0.0205,0.2268,-0.8482,-0.4892,0.2032,-0.8563,-0.5121,0.0667,-0.9871,-0.0108,0.1595,-0.8482,-0.4892,0.2032,-0.5211,-0.8334,0.1843,-0.4956,-0.8685,0,-0.8563,-0.5121,0.0667,-0.5211,-0.8334,0.1843,-0.0503,-0.9833,0.1747,0.0055,-0.9996,-0.0291,-0.4956,-0.8685,0,-0.0503,-0.9833,0.1747,0.4662,-0.8674,0.1741,0.5214,-0.8532,-0.0089,0.0055,-0.9996,-0.0291,0.4662,-0.8674,0.1741,0.8569,-0.4835,0.1788,0.8879,-0.4576,0.0477,0.5214,-0.8532,-0.0089,0.8569,-0.4835,0.1788,0.9813,0.0318,0.1899,0.9922,0.0444,0.1169,0.8879,-0.4576,0.0477,0.9922,0.0444,0.1169,0.8466,0.4996,0.1835,-0.147,-0.2606,0.9542,0.8466,0.4996,0.1835,0.5145,0.8224,0.2428,-0.147,-0.2606,0.9542,0.5145,0.8224,0.2428,0.0593,0.9569,0.2844,-0.147,-0.2606,0.9542,0.0593,0.9569,0.2844,-0.4294,0.8548,0.2916,-0.147,-0.2606,0.9542,-0.4294,0.8548,0.2916,-0.8268,0.5052,0.2473,-0.147,-0.2606,0.9542,-0.8268,0.5052,0.2473,-0.9871,-0.0108,0.1595,-0.147,-0.2606,0.9542,-0.9871,-0.0108,0.1595,-0.8563,-0.5121,0.0667,-0.147,-0.2606,0.9542,-0.8563,-0.5121,0.0667,-0.4956,-0.8685,0,-0.147,-0.2606,0.9542,-0.4956,-0.8685,0,0.0055,-0.9996,-0.0291,-0.147,-0.2606,0.9542,0.0055,-0.9996,-0.0291,0.5214,-0.8532,-0.0089,-0.147,-0.2606,0.9542,0.5214,-0.8532,-0.0089,0.8879,-0.4576,0.0477,-0.147,-0.2606,0.9542,0.8879,-0.4576,0.0477,0.9922,0.0444,0.1169,-0.147,-0.2606,0.9542,0.0888,0.0157,-0.9959,0.0888,0.0157,-0.9959,0.0888,0.0157,-0.9959,0.0509,0.0732,-0.996,0.0509,0.0732,-0.996,0.0509,0.0732,-0.996,-0.0156,0.1167,-0.993,-0.0156,0.1167,-0.993,-0.0156,0.1167,-0.993,-0.0969,0.1273,-0.9871,-0.0969,0.1273,-0.9871,-0.0969,0.1273,-0.9871,-0.1565,0.0988,-0.9827,-0.1565,0.0988,-0.9827,-0.1565,0.0988,-0.9827,-0.1801,0.0467,-0.9825,-0.1801,0.0467,-0.9825,-0.1801,0.0467,-0.9825,-0.1684,-0.0216,-0.9855,-0.1684,-0.0216,-0.9855,-0.1684,-0.0216,-0.9855,-0.1228,-0.0883,-0.9885,-0.1228,-0.0883,-0.9885,-0.1228,-0.0883,-0.9885,-0.061,-0.1312,-0.9895,-0.061,-0.1312,-0.9895,-0.061,-0.1312,-0.9895,0.0063,-0.1433,-0.9897,0.0063,-0.1433,-0.9897,0.0063,-0.1433,-0.9897,0.0681,-0.1154,-0.991,0.0681,-0.1154,-0.991,0.0681,-0.1154,-0.991,0.098,-0.052,-0.9938,0.098,-0.052,-0.9938,0.098,-0.052,-0.9938],"colors":[0],"uvs":[[0.75,0,0.8333,0,0.9167,0,0,0,0.0833,0,0.1667,0,0.25,0,0.3333,0,0.4167,0,0.5,0,0.5833,0,0.6667,0,0.75,0.0909,0.8333,0.0909,0.9167,0.0909,0,0.0909,0.0833,0.0909,0.1667,0.0909,0.25,0.0909,0.3333,0.0909,0.4167,0.0909,0.5,0.0909,0.5833,0.0909,0.6667,0.0909,0.75,0.1818,0.8333,0.1818,0.9167,0.1818,0,0.1818,0.0833,0.1818,0.1667,0.1818,0.25,0.1818,0.3333,0.1818,0.4167,0.1818,0.5,0.1818,0.5833,0.1818,0.6667,0.1818,0.75,0.2727,0.8333,0.2727,0.9167,0.2727,0,0.2727,0.0833,0.2727,0.1667,0.2727,0.25,0.2727,0.3333,0.2727,0.4167,0.2727,0.5,0.2727,0.5833,0.2727,0.6667,0.2727,0.75,0.3636,0.8333,0.3636,0.9167,0.3636,0,0.3636,0.0833,0.3636,0.1667,0.3636,0.25,0.3636,0.3333,0.3636,0.4167,0.3636,0.5,0.3636,0.5833,0.3636,0.6667,0.3636,0.75,0.4545,0.8333,0.4545,0.9167,0.4545,0,0.4545,0.0833,0.4545,0.1667,0.4545,0.25,0.4545,0.3333,0.4545,0.4167,0.4545,0.5,0.4545,0.5833,0.4545,0.6667,0.4545,0.75,0.5455,0.8333,0.5455,0.9167,0.5455,0,0.5455,0.0833,0.5455,0.1667,0.5455,0.25,0.5455,0.3333,0.5455,0.4167,0.5455,0.5,0.5455,0.5833,0.5455,0.6667,0.5455,0.75,0.6364,0.8333,0.6364,0.9167,0.6364,0,0.6364,0.0833,0.6364,0.1667,0.6364,0.25,0.6364,0.3333,0.6364,0.4167,0.6364,0.5,0.6364,0.5833,0.6364,0.6667,0.6364,0.75,0.7273,0.8333,0.7273,0.9167,0.7273,0,0.7273,0.0833,0.7273,0.1667,0.7273,0.25,0.7273,0.3333,0.7273,0.4167,0.7273,0.5,0.7273,0.5833,0.7273,0.6667,0.7273,0.75,0.8182,0.8333,0.8182,0.9167,0.8182,0,0.8182,0.0833,0.8182,0.1667,0.8182,0.25,0.8182,0.3333,0.8182,0.4167,0.8182,0.5,0.8182,0.5833,0.8182,0.6667,0.8182,0.75,0.9091,0.8333,0.9091,0.9167,0.9091,0,0.9091,0.0833,0.9091,0.1667,0.9091,0.25,0.9091,0.3333,0.9091,0.4167,0.9091,0.5,0.9091,0.5833,0.9091,0.6667,0.9091,0.2917,1,1,0,1,0.0909,1,0.1818,1,0.2727,1,0.3636,1,0.4545,1,0.5455,1,0.6364,1,0.7273,1,0.8182,1,0.9091,0.8333,1,0.7917,0,0.9583,0,0.25,0,0.625,0]],"faces":[43,0,1,13,12,0,0,1,13,12,0,1,2,3,43,1,2,14,13,0,1,2,14,13,4,5,6,7,43,2,3,15,14,0,2,133,134,14,8,9,10,11,43,3,4,16,15,0,3,4,16,15,12,13,14,15,43,4,5,17,16,0,4,5,17,16,16,17,18,19,43,5,6,18,17,0,5,6,18,17,20,21,22,23,43,6,7,19,18,0,6,7,19,18,24,25,26,27,43,7,8,20,19,0,7,8,20,19,28,29,30,31,43,8,9,21,20,0,8,9,21,20,32,33,34,35,43,9,10,22,21,0,9,10,22,21,36,37,38,39,43,10,11,23,22,0,10,11,23,22,40,41,42,43,43,11,0,12,23,0,11,0,12,23,44,45,46,47,43,12,13,25,24,0,12,13,25,24,48,49,50,51,43,13,14,26,25,0,13,14,26,25,52,53,54,55,43,14,15,27,26,0,14,134,135,26,56,57,58,59,43,15,16,28,27,0,15,16,28,27,60,61,62,63,43,16,17,29,28,0,16,17,29,28,64,65,66,67,43,17,18,30,29,0,17,18,30,29,68,69,70,71,43,18,19,31,30,0,18,19,31,30,72,73,74,75,43,19,20,32,31,0,19,20,32,31,76,77,78,79,43,20,21,33,32,0,20,21,33,32,80,81,82,83,43,21,22,34,33,0,21,22,34,33,84,85,86,87,43,22,23,35,34,0,22,23,35,34,88,89,90,91,43,23,12,24,35,0,23,12,24,35,92,93,94,95,43,24,25,37,36,0,24,25,37,36,96,97,98,99,43,25,26,38,37,0,25,26,38,37,100,101,102,103,43,26,27,39,38,0,26,135,136,38,104,105,106,107,43,27,28,40,39,0,27,28,40,39,108,109,110,111,43,28,29,41,40,0,28,29,41,40,112,113,114,115,43,29,30,42,41,0,29,30,42,41,116,117,118,119,43,30,31,43,42,0,30,31,43,42,120,121,122,123,43,31,32,44,43,0,31,32,44,43,124,125,126,127,43,32,33,45,44,0,32,33,45,44,128,129,130,131,43,33,34,46,45,0,33,34,46,45,132,133,134,135,43,34,35,47,46,0,34,35,47,46,136,137,138,139,43,35,24,36,47,0,35,24,36,47,140,141,142,143,43,36,37,49,48,0,36,37,49,48,144,145,146,147,43,37,38,50,49,0,37,38,50,49,148,149,150,151,43,38,39,51,50,0,38,136,137,50,152,153,154,155,43,39,40,52,51,0,39,40,52,51,156,157,158,159,43,40,41,53,52,0,40,41,53,52,160,161,162,163,43,41,42,54,53,0,41,42,54,53,164,165,166,167,43,42,43,55,54,0,42,43,55,54,168,169,170,171,43,43,44,56,55,0,43,44,56,55,172,173,174,175,43,44,45,57,56,0,44,45,57,56,176,177,178,179,43,45,46,58,57,0,45,46,58,57,180,181,182,183,43,46,47,59,58,0,46,47,59,58,184,185,186,187,43,47,36,48,59,0,47,36,48,59,188,189,190,191,43,48,49,61,60,0,48,49,61,60,192,193,194,195,43,49,50,62,61,0,49,50,62,61,196,197,198,199,43,50,51,63,62,0,50,137,138,62,200,201,202,203,43,51,52,64,63,0,51,52,64,63,204,205,206,207,43,52,53,65,64,0,52,53,65,64,208,209,210,211,43,53,54,66,65,0,53,54,66,65,212,213,214,215,43,54,55,67,66,0,54,55,67,66,216,217,218,219,43,55,56,68,67,0,55,56,68,67,220,221,222,223,43,56,57,69,68,0,56,57,69,68,224,225,226,227,43,57,58,70,69,0,57,58,70,69,228,229,230,231,43,58,59,71,70,0,58,59,71,70,232,233,234,235,43,59,48,60,71,0,59,48,60,71,236,237,238,239,43,60,61,73,72,0,60,61,73,72,240,241,242,243,43,61,62,74,73,0,61,62,74,73,244,245,246,247,43,62,63,75,74,0,62,138,139,74,248,249,250,251,43,63,64,76,75,0,63,64,76,75,252,253,254,255,43,64,65,77,76,0,64,65,77,76,256,257,258,259,43,65,66,78,77,0,65,66,78,77,260,261,262,263,43,66,67,79,78,0,66,67,79,78,264,265,266,267,43,67,68,80,79,0,67,68,80,79,268,269,270,271,43,68,69,81,80,0,68,69,81,80,272,273,274,275,43,69,70,82,81,0,69,70,82,81,276,277,278,279,43,70,71,83,82,0,70,71,83,82,280,281,282,283,43,71,60,72,83,0,71,60,72,83,284,285,286,287,43,72,73,85,84,0,72,73,85,84,288,289,290,291,43,73,74,86,85,0,73,74,86,85,292,293,294,295,43,74,75,87,86,0,74,139,140,86,296,297,298,299,43,75,76,88,87,0,75,76,88,87,300,301,302,303,43,76,77,89,88,0,76,77,89,88,304,305,306,307,43,77,78,90,89,0,77,78,90,89,308,309,310,311,43,78,79,91,90,0,78,79,91,90,312,313,314,315,43,79,80,92,91,0,79,80,92,91,316,317,318,319,43,80,81,93,92,0,80,81,93,92,320,321,322,323,43,81,82,94,93,0,81,82,94,93,324,325,326,327,43,82,83,95,94,0,82,83,95,94,328,329,330,331,43,83,72,84,95,0,83,72,84,95,332,333,334,335,43,84,85,97,96,0,84,85,97,96,336,337,338,339,43,85,86,98,97,0,85,86,98,97,340,341,342,343,43,86,87,99,98,0,86,140,141,98,344,345,346,347,43,87,88,100,99,0,87,88,100,99,348,349,350,351,43,88,89,101,100,0,88,89,101,100,352,353,354,355,43,89,90,102,101,0,89,90,102,101,356,357,358,359,43,90,91,103,102,0,90,91,103,102,360,361,362,363,43,91,92,104,103,0,91,92,104,103,364,365,366,367,43,92,93,105,104,0,92,93,105,104,368,369,370,371,43,93,94,106,105,0,93,94,106,105,372,373,374,375,43,94,95,107,106,0,94,95,107,106,376,377,378,379,43,95,84,96,107,0,95,84,96,107,380,381,382,383,43,96,97,109,108,0,96,97,109,108,384,385,386,387,43,97,98,110,109,0,97,98,110,109,388,389,390,391,43,98,99,111,110,0,98,141,142,110,392,393,394,395,43,99,100,112,111,0,99,100,112,111,396,397,398,399,43,100,101,113,112,0,100,101,113,112,400,401,402,403,43,101,102,114,113,0,101,102,114,113,404,405,406,407,43,102,103,115,114,0,102,103,115,114,408,409,410,411,43,103,104,116,115,0,103,104,116,115,412,413,414,415,43,104,105,117,116,0,104,105,117,116,416,417,418,419,43,105,106,118,117,0,105,106,118,117,420,421,422,423,43,106,107,119,118,0,106,107,119,118,424,425,426,427,43,107,96,108,119,0,107,96,108,119,428,429,430,431,43,108,109,121,120,0,108,109,121,120,432,433,434,435,43,109,110,122,121,0,109,110,122,121,436,437,438,439,43,110,111,123,122,0,110,142,143,122,440,441,442,443,43,111,112,124,123,0,111,112,124,123,444,445,446,447,43,112,113,125,124,0,112,113,125,124,448,449,450,451,43,113,114,126,125,0,113,114,126,125,452,453,454,455,43,114,115,127,126,0,114,115,127,126,456,457,458,459,43,115,116,128,127,0,115,116,128,127,460,461,462,463,43,116,117,129,128,0,116,117,129,128,464,465,466,467,43,117,118,130,129,0,117,118,130,129,468,469,470,471,43,118,119,131,130,0,118,119,131,130,472,473,474,475,43,119,108,120,131,0,119,108,120,131,476,477,478,479,42,120,121,132,0,120,121,144,480,481,482,42,121,122,132,0,121,122,144,483,484,485,42,122,123,132,0,122,143,144,486,487,488,42,123,124,132,0,123,124,132,489,490,491,42,124,125,132,0,124,125,132,492,493,494,42,125,126,132,0,125,126,132,495,496,497,42,126,127,132,0,126,127,132,498,499,500,42,127,128,132,0,127,128,132,501,502,503,42,128,129,132,0,128,129,132,504,505,506,42,129,130,132,0,129,130,132,507,508,509,42,130,131,132,0,130,131,132,510,511,512,42,131,120,132,0,131,120,144,513,514,515,42,1,0,133,0,1,0,145,516,517,518,42,2,1,133,0,2,1,146,519,520,521,42,3,2,133,0,133,2,146,522,523,524,42,4,3,133,0,4,3,147,525,526,527,42,5,4,133,0,5,4,147,528,529,530,42,6,5,133,0,6,5,147,531,532,533,42,7,6,133,0,7,6,147,534,535,536,42,8,7,133,0,8,7,147,537,538,539,42,9,8,133,0,9,8,147,540,541,542,42,10,9,133,0,10,9,148,543,544,545,42,11,10,133,0,11,10,148,546,547,548,42,0,11,133,0,0,11,145,549,550,551]}'}
}),require.register("snowbuilder/app/utils/object-pool.js",function(a,b,c){"use strict";function d(){this.pool=[],this.avail=[]}c.exports=d,d.prototype.createObject=function(){return new Object},d.prototype.getObject=function(){if(0===this.avail.length){var a=this.createObject();a.poolId=this.pool.length,this.pool.push(a),this.avail.push(a.poolId)}var b=this.avail.pop();return this.pool[b]},d.prototype.returnObject=function(a){this.avail.push(a)},d.prototype.dispose=function(){for(var a=this.pool.length-1;a>=0;a--)this.pool[a].dispose&&this.pool[a].dispose();this.pool.length=0,this.avail.length=0}}),require.register("snowbuilder/app/utils/detector.js",function(a,b,c){"use strict";function d(a){return e.hasClass(a)}var e=$("html"),f=navigator.userAgent,g=1,h=2,i=3,j={width:645,height:645},k=!!("ontouchstart"in window)||!!("onmsgesturechange"in window),l=/android|webos|ip(hone|ad|od)|blackberry|iemobile|windows (ce|phone)|opera mini/i.test(f.toLowerCase()),m=l&&(window.innerWidth>j.width||window.innerHeight>j.height),n=function(){return l?g:k?h:i}(),o=function(){try{return!(!window.WebGLRenderingContext||!document.createElement("canvas").getContext("experimental-webgl")&&!document.createElement("canvas").getContext("webgl"))}catch(a){return!1}}(),p=d("canvas")&&d("csstransforms")&&d("csstransforms3d")&&d("svg"),q=window.devicePixelRatio>=2,r=/nexus\s4|galaxy\snexus/i.test(f),s=/nexus\s7|nexus\s10/i.test(f),t=!!~f.indexOf("Gecko")&&!~f.indexOf("KHTML"),u=/MSIE (\d+\.\d+);/.test(f),v=/ip(hone|ad|od)/i.test(f);v&&(l=!0,m=!1);var w=function(){if("Microsoft Internet Explorer"==navigator.appName){var a=navigator.userAgent;if(null!=a.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/)){var b=parseFloat(RegExp.$1);if(11>b)return!1}}return!0}();c.exports={TYPE_MOBILE:g,TYPE_TOUCH:h,TYPE_DESKTOP:i,isBrowserSupported:p,isTouchDevice:k,isMobile:l,isTablet:m,isDesktop:!l&&!m,isRetina:q,getType:n,webgl:o,hasPointerEvents:w,isNexusPhone:r,isNexusTablet:s,isMozilla:t,isIE:u,isiOS:v}}),require.register("snowbuilder/app/decoration-editor.js",function(a,b,c){function d(a,b){this.scene=a,this.camera=b,this.currentType="",this._attachedStones=[],this._target=null,this._currentBall=null,this._projector=new THREE.Projector;var c=h.parse(JSON.parse(g.carrot_01)).geometry,d=THREE.ImageUtils.loadTexture("assets/images/carrot-small.jpg");d.wrapT=d.wrapS=THREE.RepeatWrapping,this._carrot=new THREE.Mesh(c,new THREE.MeshPhongMaterial({map:d})),this._carrot.scale.set(.1,.1,.1);var e=h.parse(JSON.parse(g.branch_01)).geometry;e.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI*-.5)),e.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI*-.5));var i=THREE.ImageUtils.loadTexture("assets/images/branches_01.jpg"),j=new THREE.MeshLambertMaterial({map:i,ambient:3355443});i.wrapT=i.wrapS=THREE.RepeatWrapping,this._branch1=new THREE.Mesh(e,j),this._branch1.scale.set(.8,.8,.8),this._branch1.castShadows=!0;var k=h.parse(JSON.parse(g.branch_02)).geometry;k.applyMatrix((new THREE.Matrix4).makeRotationZ(Math.PI*-.5)),k.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI*-.5)),this._branch2=new THREE.Mesh(k,j),this._branch2.scale.set(.8,.8,.8),this._branch2.castShadows=!0,this._stonePool=new f;var l=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:4473924,ambient:3355443}),m=new THREE.OctahedronGeometry(5,1);this._stonePool.createObject=function(){var a=new THREE.Mesh(m,l),b=.1*Math.random();return a.scale.set(b+.2,b+.2,b+.2),a.id="stone",a}}c.exports=d;var e=b("emitter"),f=b("./utils/object-pool"),g=b("./geometries/package.js"),h=new THREE.JSONLoader(!0),i=d.prototype;e(i),i.getCurrentBall=function(){return this._currentBall},i.activeBall=function(a){this._currentBall=a,this._target=a.mesh,this._currentObject&&(this._currentObject.parent!==this._target&&this._currentObject.parent.remove(this._currentObject),a?this._target.add(this._currentObject):(this._currentBall=null,this._target=null))},i.set3DCursor=function(a){this._currentObject&&(this._currentObject.visible=!0,this._currentObject.position=this._target.worldToLocal(a.clone()),this._currentObject.lookAt(this._currentObject.position.clone().multiplyScalar(10)))},i.addCarrot=function(){this.currentType="carrot",this._currentObject=this._carrot,this._target.add(this._currentObject);var a=.1*this._currentBall.ballRadius/30*2;this._currentObject.scale.set(a,a,a)},i.addBranch1=function(){this.currentType="branch1",this._currentObject=this._branch1,this._target.add(this._currentObject)},i.addBranch2=function(){this.currentType="branch2",this._currentObject=this._branch2,this._target.add(this._currentObject)},i.addStone=function(){this.currentType="stone",this._currentObject=this._stonePool.getObject(),this._target.add(this._currentObject)},i.attachObject=function(){this._currentObject.isAttached=!0,this._attachedStones.push(this._currentObject),this.emit("attachedObject",this.currentType,this._currentBall),"carrot"===this.currentType?this.addBranch1():"branch1"===this.currentType?this.addBranch2():this.addStone()},i.hideObject=function(){this._currentObject&&(this._currentObject.visible=!1)}}),require.register("snowbuilder/app/sounds.js",function(a,b,c){function d(){this.ambientTrack=new Howl({urls:["assets/audio/ambient-loop.m4a","assets/audio/ambient-loop.ogg","assets/audio/ambient-loop.mp3"],autoplay:!0,loop:!0}),this.rollTrack=new Howl({urls:["assets/audio/snow-loop.m4a","assets/audio/snow-loop.ogg","assets/audio/snow-loop.mp3"],autoplay:!0,loop:!0}),this.rollTrack.volume(0)}c.exports=d,d.prototype.init=function(){this.ambientTrack.volume(.2)},d.prototype.setRollVolume=function(a){this.rollTrack.volume(.5*a)}}),require.register("snowbuilder/app/tutorial.js",function(a,b,c){function d(a){this.renderer=a,this.$el=$("#instructions"),this.$contentEl=$("#instructionContent"),this.$snowmanEl=$(".snowman-icon"),this._currentStep=-1,this._isActive=!1,this.$el.removeClass("inactive")}c.exports=d;var e=b("emitter"),f='<a class="js-build-snowman build-snowman-btn">BUTTON</a>',g='<a class="js-build-ok build-snowman-btn">OK</a>',h='<a class="js-build-shot build-snowman-btn">PICTURE</a>',i=[{mouse:"Click anywhere in the snow to start!",touch:"Tap anywhere in the snow to start!"},{mouse:"Drag the ball or use arrow keys to roll it",touch:"Drag the ball to roll it"},{mouse:"Create more by clicking the snow. At least three would be great.",touch:"Create more by tapping the snow. At least three would be great."},{mouse:"Perfect! You got three! Now press this "+f,touch:"Perfect! You got three! Now tap this "+f},{mouse:"Great! Start with placing the nose. Click to attach.",touch:"Great! Start with placing the nose. Tap where you want it."},{mouse:"Arms perhaps?",touch:"Arms perhaps?"},{mouse:"Decorate with stones, press "+g+" when you are done.",touch:"Decorate with stones, tap "+g+" when you are done."},{mouse:"Take a "+h+" ?",touch:"Take a "+h+" ?"},{mouse:"Merry Cristmas everybody!",touch:"Merry Cristmas everybody!"}],j=d.prototype;e(j),j._show=function(){function a(){b._inTransition=!1}var b=this;if(!this._inTransition){if(this._isActive=!0,this._temporaryNote)this.$contentEl.html(this._temporaryNote),this._temporaryNote=null,this._temporaryTimeoutId=setTimeout(function(){b.toStep(b._currentStep,!0)},1e3*this._temporaryNoteTimeOut);else{this._currentStep=this._toStep,this._toStep=null;var c=i[this._currentStep].mouse;if(this.$contentEl.html(c),-1!==c.indexOf("BUTTON")){var d=$(".js-build-snowman");d.bind("click",function(a){a.preventDefault(),a.stopPropagation(),b.emit("createSnowman"),b.hide()})}else if(-1!==c.indexOf("OK")){var d=$(".js-build-ok");d.bind("click",function(a){a.preventDefault(),a.stopPropagation(),b.emit("editDone"),b.hide()})}else if(-1!==c.indexOf("PICTURE")){var d=$(".js-build-shot");d[0].href=this.renderer.domElement.toDataURL(),d[0].download="snowman-"+Date.now()+".png",d.bind("click",function(){b.emit("takePicture"),b.hide()})}}this._inTransition=!0,TweenMax.fromTo(this.$snowmanEl,.7,{y:180},{delay:.5,y:0,ease:Back.easeOut,force3D:!0}),TweenMax.fromTo(this.$el,.7,{y:200},{delay:.5,y:0,ease:Back.easeOut,force3D:!0,onComplete:a})}},j._animationOut=function(){function a(){b._inTransition=!1,b._isActive=!1,b._toStep&&b._show()}this._inTransition=!0,$(".js-build-snowman").unbind(),$(".js-build-ok").unbind(),$(".js-build-shot").unbind(),this._clearTemporaryTimeouts();var b=this;TweenMax.fromTo(this.$snowmanEl,.7,{y:0},{delay:.5,y:180,ease:Back.easeIn,force3D:!0}),TweenMax.fromTo(this.$el,.3,{y:0},{y:200,ease:Back.easeIn,force3D:!0,onComplete:a})},j._clearTemporaryTimeouts=function(){this._temporaryTimeoutId&&(clearTimeout(this._temporaryTimeoutId),this._temporaryTimeoutId=null)},j.toStep=function(a,b){(a===this._currentStep+1||b)&&(this._inTransition&&TweenMax.killTweensOf(this.$el),this._toStep=a,this._isActive?this._animationOut():this._show())},j.hide=function(){this._animationOut()},j.temporaryNote=function(a,b){this._inTransition=!1,this._clearTemporaryTimeouts(),this._temporaryNote=a,this._temporaryNoteTimeOut=b,this._show()}}),require.register("snowbuilder/app/settings.js",function(a,b,c){c.exports={ballRadius:0,ballScale:1}}),require.register("snowbuilder/app/settings-ui.js",function(a,b,c){"use strict";function d(){var a=new DAT.GUI;DAT.GUI.autoPlace=!1,$("#uiContainer").append(a.domElement),a.add(e,"ballRadius").min(5).max(80).listen(),a.add(e,"ballScale").min(.2).max(3)}var e=b("./settings");c.exports=d}),require.register("snowbuilder/app/builder.js",function(a,b,c){"use strict";function d(){this.usePostProcessing=!l.isMobile&&!l.isTablet,this.postProcessingActivated=!1,this.groundSize={width:2e3,height:2e3},this.size={},this._cursor="",this._mouse2D=new THREE.Vector2,this._normalizedMouse2D=new THREE.Vector2,this._collisionList=[],this._canCreateBallAt=new THREE.Vector3(-1,-1,0),this._cameraOffset=new THREE.Vector3(0,300,300),this._greetingCameraCenter=new THREE.Vector3(0,10,0),this._mouseMoved=!1,this._steerIsActive=!1,this._keyStatus=Object.call(this),this._draw=this._draw.bind(this),this._onResize=this._onResize.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this._onMouseDown=this._onMouseDown.bind(this),this._onMouseUp=this._onMouseUp.bind(this),this._onUpdateTrailPosition=this._onUpdateTrailPosition.bind(this),this._createSnowman=this._createSnowman.bind(this),this._initEditMode=this._initEditMode.bind(this),this._onSnowmanEditDone=this._onSnowmanEditDone.bind(this),this._updateMousePicker=this._updateMousePicker.bind(this),this._onTakePicture=this._onTakePicture.bind(this),this.sizeRatio=1,this.projector=new THREE.Projector,this._balls=[],this._ballMap={},this._currentBallSelected=0,this._currentBallHover=0,this._snowmanBalls=[],this._lookAtPosition=null,this._initSnowChunks()}c.exports=d;var e=b("dom-event-map"),f=b("raf"),g=b("mixin"),h=(b("debug"),b("for-each")),j=(b("./settings"),b("./settings-ui"),b("./trail")),k=b("./ball"),l=b("./utils/detector"),m=b("./utils/object-pool"),n=b("./snow-chunk"),o=b("./sounds"),p=b("./decoration-editor"),q=b("./tutorial"),r="creating balls",s="animate balls",t="edit snowman",u="edit complete",v="cursor open hand",w="cursor closed hand",x="cursor pointer";e(d.prototype),g(d.prototype,{init:function(){return l.isMobile?(this._showFallback(),void 0):(this._sounds=new o,this._sounds.init(),this._stage=document.getElementById("stage"),this._$stage=$(document.getElementById("stage")),this._clock=new THREE.Clock,this._state=r,this.trailCanvas=new j,this._init3D(),this._updateTrailTexture=this._updateTrailTexture.bind(this),this.trailCanvas.on("updateTrailTexture",this._updateTrailTexture),this.usePostProcessing&&this._initPostProcessing(),this._onResize(),this._initLights(),this._createSceneObjects(),this._draw(),this._addEventListeners(),this._tutorial=new q(this.renderer),this._createSnowman=this._createSnowman.bind(this),this._tutorial.once("createSnowman",this._createSnowman),this._tutorial.once("editDone",this._onSnowmanEditDone),this._tutorial.on("takePicture",this._onTakePicture),this._tutorial.toStep(0),void 0)},_updateTrailTexture:function(){this.trailTexture.needsUpdate=!0},_onTakePicture:function(){this._tutorial.toStep(8)},_initSnowChunks:function(){this._snowChunks=[],this._snowChunksPool=new m,this._snowChunksPool.createObject=function(){var a=new n;return a}},_spawnSnowChunk:function(){},_addEventListeners:function(){var a=this;this.mapListener(window,"resize",this._onResize),this.mapListener(window,"mouseup",this._onMouseUp),this.mapListener(this._stage,"mousedown",this._onMouseDown),this.mapListener(this._stage,"mousemove",this._onMouseMove);var b=["left","right","up","down"];h(b,function(b){function c(c){c.preventDefault(),a._keyStatus[b]=!0,a._steerIsActive=!0,0===a._balls.length&&a._createNewBall()}function d(c){c.preventDefault(),1===a._balls.length&&a._tutorial.toStep(2),a._keyStatus[b]=!1,a._steerIsActive=a._keyStatus.left||a._keyStatus.right||a._keyStatus.down||a._keyStatus.up}Mousetrap.bind(b,c,"keydown"),Mousetrap.bind(b,d,"keyup")})},_onMouseMove:function(a){this._mouse2D.set(a.clientX,a.clientY),this._normalizedMouse2D.set(2*(this._mouse2D.x/this.size.width-.5),2*(this._mouse2D.y/this.size.height-.5)),this._mouseIsDown||(this._mouseMoved=!0)},_onMouseDown:function(){this._mouseIsDown=!0,this._state===r&&(5e3!==this._canCreateBallAt.x?this._createNewBall(this._canCreateBallAt):-1!==this._currentBallHover&&(this._currentBallSelected=this._currentBallHover))},_onMouseUp:function(){if(this._mouseIsDown=!1,this._decorationEditor){var a=this._decorationEditor.getCurrentBall();a&&(1===this._balls.length&&this._tutorial.toStep(2),this._decorationEditor.attachObject())}},_init3D:function(){this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,7e3),this.scene=new THREE.Scene,this.camera.position.copy(this._cameraOffset),this.camera.lookAt(this.scene.position),this.camera.lookAtTarget=new THREE.Vector3,l.isTouchDevice&&l.isMobile&&(this.sizeRatio=2.5);try{this.renderer=new THREE.WebGLRenderer({canvas:document.getElementById("builderCanvas"),antialias:!1,preserveDrawingBuffer:!0})}catch(a){return this._showFallback(),void 0}this.renderer.sortElements=!1,this.renderer.setClearColor(16777215,1),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!0,this.renderer.physicallyBasedShading=!0,this.renderer.shadowMapEnabled=!0,this.renderer.shadowMapSoft=!0,this.renderer.shadowMapDebug=!1,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.sizeRatio>1&&(this.renderer.domElement.style.webkitTransform="scale3d("+this.sizeRatio+", "+this.sizeRatio+", 1)",this.renderer.domElement.style.webkitTransformOrigin="0 0 0")},_showFallback:function(){var a=$("#error");a.html('<iframe id="fallback" src="//player.vimeo.com/video/82333173" width="100%" height="100%"" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'),this.$fallback=a.find("#fallback"),$("#errorWrapper").removeClass("inactive");var b=this;this.mapListener(window,"resize",this._onResize),this.mapListener(window,"orientationchange",function(){b._onResize()}),this._onResize(),$("body").addClass("fallback-bg")},_initPostProcessing:function(){this.renderer.autoClear=!1,this.composer=new THREE.EffectComposer(this.renderer),this.composer.addPass(new THREE.RenderPass(this.scene,this.camera)),this.depthTarget=new THREE.WebGLRenderTarget(this.size.width/this.sizeRatio,this.size.height/this.sizeRatio,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.ssao=new THREE.ShaderPass(THREE.SSAOShader),this.ssao.uniforms.tDepth.value=this.depthTarget,this.ssao.uniforms.size.value.set(this.size.width/this.sizeRatio,this.size.height/this.sizeRatio),this.ssao.uniforms.cameraNear.value=10,this.ssao.uniforms.cameraFar.value=1e3,this.ssao.uniforms.aoClamp.value=.6,this.ssao.uniforms.lumInfluence.value=.9,this.ssao.uniforms.onlyAO.value=0,this.composer.addPass(this.ssao),this.fxaa=new THREE.ShaderPass(THREE.FXAAShader),this.fxaa.uniforms.resolution.value=new THREE.Vector2(1/this.size.width,1/this.size.height),this.fxaa.renderToScreen=!0,this.composer.addPass(this.fxaa),this.depthPassPlugin=new THREE.DepthPassPlugin,this.depthPassPlugin.renderTarget=this.depthTarget,this.renderer.addPrePlugin(this.depthPassPlugin)},_initLights:function(){this.ambientLight=new THREE.AmbientLight(7829367,.4),this.scene.add(this.ambientLight);var a=new THREE.HemisphereLight(16711422,14477816,.6);this.scene.add(a),this.dirLight=new THREE.DirectionalLight(16382716,.97),this.dirLight.position.set(-500,1400,-200),this.dirLight.shadowMapWidth=2048,this.dirLight.shadowMapHeight=2048,this.dirLight.shadowCameraNear=1150,this.dirLight.shadowCameraFar=2500,this.dirLight.shadowDarkness=.3,this.dirLight.shadowBias=.039,this.dirLight.shadowCameraLeft=-1224,this.dirLight.shadowCameraRight=1224,this.dirLight.shadowCameraTop=1224,this.dirLight.shadowCameraBottom=-1224,this.dirLight.shadowCameraVisible=!1,this.dirLight.castShadow=!0,this.scene.add(this.dirLight)},_createSceneObjects:function(){this.trailTexture=new THREE.Texture(this.trailCanvas.el),this.trailTexture.needsUpdate=!0,this.trailCanvas.update(0,512,512,1);var a=THREE.ImageUtils.loadTexture("assets/images/snow-diffuse4.jpg");a.wrapT=a.wrapS=THREE.RepeatWrapping,this.diffuseMap=a;var c=new THREE.PlaneGeometry(this.groundSize.width,this.groundSize.height,150,150),d={uDisplacementScale:{type:"f",value:67.1},time:{type:"f",value:0}},e=THREE.UniformsUtils.merge([THREE.ShaderLib.phong.uniforms,d]);e.map.value=a,e.shininess.value=10,e.bumpMap.value=this.trailTexture,e.bumpScale.value=3;var f={uniforms:e,vertexShader:b("./shaders/ground_vs.glsl"),fragmentShader:b("./shaders/ground_fs.glsl"),lights:!0},g=new THREE.ShaderMaterial(f);g.bumpMap=!0,g.shadowMapEnabled=!0,g.shadowMapDebug=!0,this.ground=new THREE.Mesh(c,g),this.ground.id="ground",this.ground.receiveShadow=!0,this.ground.castShadow=!1,this.ground.rotation.x=-90*Math.PI/180,this.ground.position.y=0,this.scene.add(this.ground),this.groundPicker=new THREE.Mesh(new THREE.PlaneGeometry(this.groundSize.width,this.groundSize.height,10,10),new THREE.MeshBasicMaterial({color:0,transparent:!0,opacity:0,wireframe:!1})),this.groundPicker.rotation.x=-90*Math.PI/180,this.groundPicker.id="groundPicker",this.scene.add(this.groundPicker),this._collisionList.push(this.groundPicker);var h=THREE.ShaderLib.phong.uniforms;h.map.value=a,h.shininess.value=10;var i=document.createElement("canvas");i.width=1024,i.height=1024,i.getContext("2d").fillStyle="white",i.getContext("2d").fillRect(0,0,1024,1024);var j=new THREE.Texture(i);j.needsUpdate=!0,h.bumpMap.value=j;var k=new THREE.ShaderMaterial({uniforms:h,vertexShader:b("./shaders/ground_vs.glsl"),fragmentShader:b("./shaders/ground_fs.glsl"),lights:!0});k.bumpMap=!0;var l=new THREE.Mesh(new THREE.PlaneGeometry(2e3,6e3,10,10),k);l.rotation.x=-90*Math.PI/180,l.position.x=2e3,this.scene.add(l),l=new THREE.Mesh(new THREE.PlaneGeometry(2e3,6e3,10,10),k),l.rotation.x=-90*Math.PI/180,l.position.x=-2e3,this.scene.add(l),l=new THREE.Mesh(new THREE.PlaneGeometry(2e3,2e3,10,10),k),l.rotation.x=-90*Math.PI/180,l.position.z=-2e3,this.scene.add(l),l=new THREE.Mesh(new THREE.PlaneGeometry(2e3,2e3,10,10),k),l.rotation.x=-90*Math.PI/180,l.position.z=2e3,this.scene.add(l);for(var m=new THREE.Geometry,n=new THREE.MeshLambertMaterial({color:0}),o=50,p=new THREE.CubeGeometry(4,o,4,2,2,2),q=new THREE.Mesh(p,n),r=1800,s=900,t=0;2>t;t++)for(var u=0;11>u;u++)q.position.y=.5*o,q.position.x=r/10*u-s,q.position.z=t*r-s,THREE.GeometryUtils.merge(m,q);for(var v=r/11+22,w=new THREE.CubeGeometry(v,5,1,2,2,2),x=new THREE.Mesh(w,n),t=0;2>t;t++)for(var u=0;10>u;u++)x.position.y=.35*o,x.position.x=r/10*u-s+.5*v-2,x.position.z=t*r-s,x.rotation.z=(2*Math.random()-1)*Math.PI/180,THREE.GeometryUtils.merge(m,x),x.position.y=.85*o,x.position.x=r/10*u-s+.5*v-2,x.position.z=t*r-s,x.rotation.z=(2*Math.random()-1)*Math.PI/180,THREE.GeometryUtils.merge(m,x);var y=m.clone();y.applyMatrix((new THREE.Matrix4).makeRotationY(-Math.PI/2)),THREE.GeometryUtils.merge(m,y);var z=new THREE.Mesh(m,n);z.castShadow=!0,this.scene.add(z)},_createNewBall:function(a,b){var c=new k(this.scene);return c.on("trailPositionUpdate",this._onUpdateTrailPosition),this._balls.push(c),this._ballMap[c.mesh]=c,this._collisionList.push(c.mesh),a&&(c.mesh.position.x=a.x,c.mesh.position.z=a.z),this._currentBallSelected=this._balls.length-1,1===this._balls.length?this._tutorial.toStep(1):3===this._balls.length&&this._tutorial.toStep(3,!0),b||TweenMax.fromTo(c,.3,{ballRadius:5},{ballRadius:15}),c},_onUpdateTrailPosition:function(a,b,c,d){this.trailCanvas.update(a,b,c,d),this.trailTexture.needsUpdate=!0},_createSnowman:function(){function a(a){function b(a){function b(b){d.scene.remove(b),b=void 0,2===a.snowmanIndex&&d.usePostProcessing&&(d.postProcessingActivated=!0,d._onResize())}0===a.snowmanIndex&&(d.trailCanvas.makeRoomForSnowman(d._snowmanBalls[0].ballRadius/40),d.trailTexture.needsUpdate=!0);var c=new THREE.Mesh(new THREE.TorusGeometry(30-8*a.snowmanIndex,10-2*a.snowmanIndex,8,14),new THREE.MeshPhongMaterial({map:d.diffuseMap,wireframe:!1,transparent:!0,opacity:.6}));d.scene.add(c),c.scale.set(.3,.1,.3),c.rotation.x=.5*Math.PI,c.position.y=a.mesh.position.y-a.ballRadius+10;var e=2-.5*a.snowmanIndex;TweenMax.to(c.scale,1,{x:e,y:e,z:e,ease:Sine.easeOut}),TweenMax.to(c.material,1,{opacity:0,onComplete:b,onCompleteParams:[c]}),TweenMax.to(c.position,.8,{delay:0,y:c.position.y-15,ease:Sine.easeIn})}a.mesh.position.x=0,a.mesh.position.z=0,TweenMax.to(a.mesh.position,.7*g,{y:a.finalY,ease:Sine.easeIn,onComplete:b,onCompleteParams:[a]}),TweenMax.to(a.mesh.rotation,.2*g,{x:"0.1",delay:.6,ease:Sine.easeOut})}function b(){d.camera.lookAt(k)}function c(){TweenMax.to(d.camera.position,1*g,{ease:Sine.easeInOut,x:0,y:h+20,z:150,onComplete:d._initEditMode})}{var d=this;new THREE.Object3D}this._state=s;var e=this._balls.concat().sort(function(a,b){return b.ballRadius>a.ballRadius}).splice(0,3);this._snowmanBalls=e;for(var f,g=1,h=-20,i=0;3>i;i++)f=e[i],f.belongsToSnowman=!0,f.snowmanIndex=i,h+=f.ballRadius+3+3*i,f.finalY=h,TweenMax.to(f.mesh.position,1*g,{delay:1*i,y:1250,ease:Sine.easeInOut,onComplete:a,onCompleteParams:[f]}),h+=f.ballRadius-15;TweenMax.to(this.camera.position,2*g,{ease:Sine.easeInOut,x:0,y:h+50,z:240,onUpdate:b,onComplete:c});var j=new THREE.Vector3(0,e[1].finalY,0),k=this._balls[this._currentBallSelected].mesh.position.clone();TweenMax.to(k,2*g,{ease:Sine.easeInOut,x:j.x,y:j.y,z:j.z})},_onSnowmanEditDone:function(){this._state=u;var a=this;setTimeout(function(){a._tutorial.toStep(7),a.trailCanvas.showGreeting(),a.trailTexture.needsUpdate=!0},2e3)},_initEditMode:function(){function a(a,c){"carrot"===a?c===b._snowmanBalls[0]||c===b._snowmanBalls[1]?b._tutorial.temporaryNote("Oh come on! We are celebrating the birth of Jesus for christ sake!",100):b._tutorial.toStep(5):"branch2"===a&&b._tutorial.toStep(6,!0)}var b=this;this._decorationEditor=new p(this.scene,this.camera),setTimeout(function(){b._state=t},2e3),this._decorationEditor.activeBall(this._snowmanBalls[2]),this._decorationEditor.addCarrot(),this._decorationEditor.on("attachedObject",a),this._tutorial.toStep(4)},_draw:function(){var a=this._clock.getDelta(),b=10*this._clock.getElapsedTime();if((isNaN(a)||a>1e3||0===a)&&(a=1e3/60),this.delta=a,this._mouseMoved&&(this._canCreateBallAt.set(5e3,0,5e3),this._mouseMoved=!1,this._updateMousePicker()),this._state===t&&this._lookAtPosition)this.camera.position.y+=.1*(this._lookAtPosition.y+this._snowmanBalls[2].mesh.position.y+this._snowmanBalls[2].ballRadius+-30*this._normalizedMouse2D.y-this.camera.position.y),this.camera.lookAtTarget.lerp(this._lookAtPosition,.1),this.camera.lookAt(this.camera.lookAtTarget);else if(this._state===r){if(this._balls.length){var c=this._balls[this._currentBallSelected];this._mouseIsDown?(c.steerWithMouse(this._normalizedMouse2D),this._cursor!==w&&(this._cursor=w,this._$stage.removeClass("cursor-openhand").removeClass("cursor-pointer").addClass("cursor-closedhand"))):this._steerIsActive&&c.steerWithKeyboard(this._keyStatus),this._sounds.setRollVolume(c.velocity.clone().lengthSq()),this.camera.position.lerp(c.mesh.position.clone().add(this._cameraOffset),.1);for(var d,e=this._balls.length-1;e>=0;e--)d=this._balls[e],d.updateCollision(this._balls),d.update()}this.camera.position.x+=.3*Math.cos(.1*b),this.camera.position.y+=.1*Math.cos(.02*b),this.camera.position.z+=.1*Math.cos(.05*b)}else if(this._state===u){var g=this._snowmanBalls[2].mesh.position.y;this.camera.position.y+=.06*(100+2*g-this.camera.position.y),this.camera.position.z+=.06*(200+g-this.camera.position.z),this.camera.lookAtTarget.lerp(this._greetingCameraCenter,.1),this.camera.lookAt(this.camera.lookAtTarget),this.camera.position.x+=.3*Math.cos(.1*b),this.camera.position.y+=.1*Math.cos(.02*b),this.camera.position.z+=.1*Math.cos(.05*b)}this.usePostProcessing&&this.postProcessingActivated?(this.depthPassPlugin.enabled=!0,this.ground.visible=!0,this.renderer.render(this.scene,this.camera,this.composer.renderTarget2,!0),this.depthPassPlugin.enabled=!1,this.ground.visible=!0,this.composer.render()):(this.renderer.clear(),this.renderer.render(this.scene,this.camera)),f(this._draw)},_updateMousePicker:function(){var a=new THREE.Vector3(this._normalizedMouse2D.x,-1*this._normalizedMouse2D.y,.5);this.projector.unprojectVector(a,this.camera);var b=new THREE.Raycaster(this.camera.position,a.sub(this.camera.position).normalize()),c=b.intersectObjects(this._collisionList);if(c.length>0){var d=c[0];if(this._state===r)if(d.object===this.groundPicker)if(this._currentBallHover=-1,this._cursor===x||this._mouseIsDown||(this._cursor=x,this._$stage.removeClass("cursor-openhand").removeClass("cursor-closedhand").addClass("cursor-pointer")),this._balls.length){for(var e=!0,f=this._balls.length-1;f>=0;f--)this._balls[f].mesh.position.distanceTo(d.point)<60&&(e=!1);e&&this._canCreateBallAt.copy(d.point)}else this._canCreateBallAt.copy(d.point);else{this._cursor===v||this._mouseIsDown||(this._cursor=v,this._$stage.removeClass("cursor-pointer").removeClass("cursor-closedhand").addClass("cursor-openhand"));for(var f=this._balls.length-1;f>=0;f--)this._balls[f].mesh===d.object&&(this._currentBallHover=f)}else this._state===t&&d.object.id.length>0&&-1!==d.object.id.indexOf("ball")?this._decorationEditor&&(this._decorationEditor.activeBall(d.object.parentObject),this._decorationEditor.set3DCursor(d.point,d.face.normal),this._lookAtPosition=this._snowmanBalls[1].mesh.position.clone()):this._decorationEditor&&this._decorationEditor.hideObject()}},_onResize:function(){var a=window.innerWidth,b=window.innerHeight;if(this.size.width=a,this.size.height=b,this.size.sizeRatio=this.sizeRatio,this.$fallback){var c=a-40,d=c/1280*720;return d>b&&(d=b-40,c=d/720*1280),c>a&&(c=a-40,d=c/1280*720),this.$fallback.width(c),this.$fallback.height(d),void 0}this.camera.aspect=a/b,this.camera.updateProjectionMatrix(),this.renderer.setSize(a/this.sizeRatio,b/this.sizeRatio),this.usePostProcessing&&(this.depthTarget=new THREE.WebGLRenderTarget(a/this.sizeRatio,b/this.sizeRatio,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.fxaa.uniforms.resolution.value.set(1/a,1/b),this.ssao.uniforms.size.value.set(a,b),this.depthPassPlugin.renderTarget=this.depthTarget,this.ssao.uniforms.tDepth.value=this.depthTarget,this.composer.reset())},_dispose:function(){for(this.unmapAllListeners(),i=this._snowChunks.length-1;i>=0;i--)this._snowChunks[i].remove(),this._snowChunksPool.returnObject(this._snowChunks[i].poolId);this._snowChunks.length=0}})}),require.register("snowbuilder/app/snow-chunk.js",function(a,b,c){"use strict";function d(){this.animating=!1}c.exports=d,d.prototype={createMesh:function(){var a=new THREE.SphereGeometry(10,4,4);this.mesh=new THREE.Mesh(a,new THREE.MeshPhongMaterial({color:15658734}))},add:function(a){var b=this;return this.mesh||this.createMesh(),a.add(this.mesh),b.animating=!0,TweenMax.set(this.mesh.position,{x:0,y:0,z:0}),TweenMax.set(this.mesh.scale,{x:.01,y:.01,z:.01}),TweenMax.to(this.mesh.scale,1,{x:1,y:1,z:1,onComplete:function(){TweenMax.to(this.mesh.scale,5,{x:.5,y:.5,z:.5})}}),TweenMax.to(this.mesh.position,5,{y:"-70",onComplete:function(){b.animating=!1,b.idle=!0,b.remove()}}),this},update:function(){},reset:function(){},remove:function(){this.mesh.parent&&this.mesh.parent.remove(this.mesh)},dispose:function(){this.remove()}}}),require.register("snowbuilder/app/trail.js",function(a,b,c){"use strict";function d(){this.el=document.getElementById("c"),this.prevID=-2,this.ctx=this.el.getContext("2d"),this.ctx.lineJoin=this.ctx.lineCap="round",this.ctx.fillStyle="white",this.ctx.fillRect(0,0,this.el.width,this.el.height),this.isDrawing,this.prevPoint=new THREE.Vector2(512,512),this.currentPoint=new THREE.Vector2(512,512),this.emit("updateTrailTexture")}function e(a,b){return Math.atan2(b.x-a.x,b.y-a.y)}function f(a,b,c,d,e,f){var g,h=b.length;a.save(),a.translate(c,d),a.rotate(-1*f/2),a.rotate(-1*(f/h)/2);for(var i=0;h>i;i++)a.rotate(f/h),a.save(),a.translate(0,-1*e),g=b[i],a.fillText(g,0,0),a.restore();a.restore()}var g=b("emitter");c.exports=d;var h=d.prototype;g(h),h.update=function(a,b,c,d){a!=this.prevID&&this.prevPoint.set(b,c),this.currentPoint.set(b,c);var f=this.prevPoint.distanceTo(this.currentPoint),g=e(this.prevPoint,this.currentPoint);this.radius=d+2;for(var h,i,j=0;f>j;j+=3){h=this.prevPoint.x+Math.sin(g)*j,i=this.prevPoint.y+Math.cos(g)*j;var k=this.ctx.createRadialGradient(h,i,.45*this.radius,h,i,this.radius),l=255-Math.floor(55+200*this.radius/60),m=255;k.addColorStop(0,"rgba("+l+","+l+","+l+",0.3)"),k.addColorStop(.2,"rgba("+l+","+l+","+l+",0.6)"),k.addColorStop(1,"rgba("+m+","+m+","+m+",0)"),this.ctx.fillStyle=k,this.ctx.fillRect(h-30,i-30,60,60)}this.prevID=a,this.prevPoint.copy(this.currentPoint),this.emit("updateTrailTexture")},h.makeRoomForSnowman=function(a){var b=this.ctx.createRadialGradient(512,512,10+20*a,512,512,20+20*a),c=170,d=255;b.addColorStop(0,"rgba("+c+","+c+","+c+",0.3)"),b.addColorStop(.8,"rgba("+c+","+c+","+c+",0.6)"),b.addColorStop(1,"rgba("+d+","+d+","+d+",0)"),this.ctx.fillStyle=b,this.ctx.fillRect(452-40*a,452-40*a,120+80*a,120+80*a),this.emit("updateTrailTexture")},h.showGreeting=function(){this.ctx.fillStyle="rgba(170,170,170,0.4)",this.ctx.lineWidth=3,this.ctx.textAlign="center",this.ctx.strokeStyle="rgba(255,255,255,1)",this.ctx.font="70px Sniglet",f(this.ctx,"MERRY",512,512,130,.5*Math.PI),this.emit("updateTrailTexture");var a=this;setTimeout(function(){a.ctx.font="60px Sniglet",f(a.ctx,"XMAS",512,490,50,Math.PI),a.emit("updateTrailTexture")},500)}}),require.register("snowbuilder/app/index.js",function(a,b){"use strict";var c=b("debug");c.enable("*"),c("app:")("debug is enabled");var d=b("./builder.js");$(function(){var a=new d;a.init()})}),require.register("snowbuilder/app/ball.js",function(a,b,c){function d(a){this.id="ball_"+i++,this.groundSize={width:2e3,height:2e3},this.scene=a,this.up=new THREE.Vector3(0,1,0),this.moveDir=new THREE.Vector3,this._prevSnowBallPos=new THREE.Vector3,this.velocity=new THREE.Vector3,this.colliding=!1,this.ballRadius=1,this.ballOffsetY=0,this._positionDirty=!1,this.snowballMaterial=new THREE.MeshPhongMaterial({map:g,perPixel:!0,color:15658734,ambient:15658734,bumpMap:h,bumpScale:3,specularMap:f,specular:10066329,shininess:4});for(var b,c=new THREE.Mesh(j.clone(),this.snowballMaterial),d=c.geometry.vertices,e=d.length-1;e>=0;e--)b=d[e],b.offset=j.vertices[e].offset.clone();return c.castShadow=!0,c.receiveShadow=!1,c.position.y=40,this.scene.add(c),TweenMax.fromTo(this,1.7,{ballOffsetY:10},{ballOffsetY:0}),this.mesh=c,this.mesh.id=this.id,this.mesh.parentObject=this,this}c.exports=d;var e=b("emitter"),f=THREE.ImageUtils.loadTexture("assets/images/snow-reflection2.jpg");f.repeat.x=f.repeat.y=4,f.wrapT=f.wrapS=THREE.RepeatWrapping;var g=THREE.ImageUtils.loadTexture("assets/images/snow-diffuse-spherical3.jpg");g.magFilter=g.minFilter=THREE.LinearFilter;
var h=THREE.ImageUtils.loadTexture("assets/images/ball-bump-spherical.jpg");h.repeat.x=h.repeat.y=1,h.magFilter=h.minFilter=THREE.LinearFilter,h.wrapT=h.wrapS=THREE.RepeatWrapping;var i=-1,j=new THREE.IcosahedronGeometry(this.ballRadius,3);j.isDynamic=!0;for(var k,l=j.vertices,m=l.length-1;m>=0;m--)k=l[m],k.offset=new THREE.Vector3,k.offset.y=4*Math.random()-2,k.offset.x=4*Math.random()-2,k.offset.z=4*Math.random()-2;var n=d.prototype;e(n),n.steerWithMouse=function(a){var b=.7*(100-this.ballRadius);this.velocity.x+=(3.5*a.x-this.velocity.x)/b,this.velocity.z+=(3.5*a.y-this.velocity.z)/b,this._positionDirty=!0},n.steerWithKeyboard=function(a){a.left&&(this.velocity.x-=.1),a.right&&(this.velocity.x+=.1),a.up&&(this.velocity.z-=.1),a.down&&(this.velocity.z+=.1),this.velocity.set(Math.max(-2,Math.min(2,this.velocity.x)),0,Math.max(-2,Math.min(2,this.velocity.z))),this._positionDirty=!0},n.updateCollision=function(a){if(this.mesh.position.x+this.velocity.x>900-this.ballRadius&&this.velocity.x>0||this.mesh.position.x+this.velocity.x<-900+this.ballRadius&&this.velocity.x<0||this.mesh.position.z+this.velocity.z>900-this.ballRadius&&this.velocity.z>0||this.mesh.position.z+this.velocity.z<-900+this.ballRadius&&this.velocity.z<0)return this.colliding=!0,void 0;if(a.length<=1)return this.colliding=!1,void 0;for(var b=!0,c=a.length-1;c>=0;c--)if(this.id!==a[c].id&&(b=this._canMove(this,a[c]),!b))return this.velocity.multiplyScalar(.7),this.colliding=!0,void 0;this.colliding=!1},n._canMove=function(a,b){var c=a.mesh.position.clone().add(this.velocity),d=c.distanceTo(b.mesh.position)-a.ballRadius-b.ballRadius;return d>=0?!0:!1},n.update=function(){var a=this.mesh,b=.05*(80-this.ballRadius)/40;this._positionDirty?this._positionDirty=!1:this.velocity.multiplyScalar(.9),this.moveDir.set(-this.velocity.x,0,-this.velocity.z);var c=(new THREE.Vector3).crossVectors(this.moveDir,this.up),d=Math.sqrt(this.velocity.x*b*this.velocity.x*b+this.velocity.z*b*this.velocity.z*b);this._rotateAroundWorldAxis(a,c,d),this.colliding||a.position.add(this.velocity),a.position.distanceTo(this._prevSnowBallPos)>.3&&(this.ballRadius<35&&0===this.ballOffsetY&&(this.ballRadius+=.03),this.emit("trailPositionUpdate",this.id,a.position.x/this.groundSize.width*1024+512,a.position.z/this.groundSize.height*1024+512,.75*this.ballRadius/2e3*1024)),this._prevSnowBallPos.copy(a.position);for(var e,f,g=a.geometry.vertices,h=g.length-1;h>=0;h--)e=g[h],f=a.localToWorld(e.clone()),e.setLength(this.ballRadius-e.offset.y*this.ballRadius/60);a.geometry.verticesNeedUpdate=!0,a.geometry.computeBoundingSphere(),this.snowballMaterial.bumpScale=5*this.ballRadius/40,a.position.y=this.ballOffsetY+2*this.ballRadius-20-40*this.ballRadius/40},n._rotateAroundWorldAxis=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Euler;d.makeRotationAxis(b.normalize(),c),d.multiply(a.matrix),a.matrix=d,a.rotation=e.setFromRotationMatrix(a.matrix)}}),require.register("snowbuilder/app/shaders/ground_vs.glsl",function(a,b,c){c.exports="varying vec3 mPosition;\nvarying vec3 mNormal;\nvarying vec3 vViewPosition;\nvarying vec3 vWorldPosition;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n\n#ifdef VERTEX_TEXTURES\n    uniform sampler2D bumpMap;\n    uniform float uDisplacementScale;\n#endif\n\n#ifdef USE_SHADOWMAP\n\n    varying vec4 vShadowCoord[ MAX_SHADOWS ];\n    uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif\n\nvoid main() {\n\n    vUv = uv;\n    vec4 mPosition = modelMatrix * vec4( position, 1.0 );\n    vec4 mvPosition = viewMatrix * mPosition;\n    vec4 worldPosition = vec4(1.0);\n\n    vViewPosition = -mvPosition.xyz;\n\n    vec3 transformedNormal = normalMatrix * normal;\n    vNormal = transformedNormal;\n    mNormal = normal;\n\n    #ifdef VERTEX_TEXTURES\n        vec3 dv = texture2D( bumpMap, vUv ).xyz;\n        float df = uDisplacementScale * (1.0-dv.x);\n        vec4 displacedPosition = mvPosition;\n        displacedPosition.y -= df;\n        //clamp(displacedPosition.y,-30.0,10.0);\n\n        vWorldPosition = displacedPosition.xyz;\n\n        gl_Position = projectionMatrix * displacedPosition;\n    #else\n        vWorldPosition = mvPosition.xyz;\n        gl_Position = projectionMatrix * mvPosition;\n    #endif\n\n    #ifdef USE_SHADOWMAP\n        for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n            vShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n        }\n    #endif\n\n}"}),require.register("snowbuilder/app/shaders/ground_fs.glsl",function(a,b,c){c.exports="vec4 permute( vec4 x ) {\n\n    return mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );\n}\n\nvec4 taylorInvSqrt( vec4 r ) {\n\n    return 1.79284291400159 - 0.85373472095314 * r;\n\n}\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n    uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n    uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n\n#ifdef USE_SHADOWMAP\n\n    uniform sampler2D shadowMap[ MAX_SHADOWS ];\n    uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n    uniform float shadowDarkness[ MAX_SHADOWS ];\n    uniform float shadowBias[ MAX_SHADOWS ];\n\n    varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n    float unpackDepth( const in vec4 rgba_depth ) {\n\n        const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n        float depth = dot( rgba_depth, bit_shift );\n        return depth;\n\n    }\n#endif\n\nvarying vec3 mPosition;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;\nvarying vec3 mNormal;\nvarying vec2 vUv;\n\nuniform float time;\nuniform float shininess;\nuniform vec3 specular;\nuniform vec3 diffuse;\nuniform vec3 ambient;\n\nuniform sampler2D map;\nuniform sampler2D bumpMap;\n\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\n\n\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float bumpScale;\n\n// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n//  http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nvec2 dHdxy_fwd() {\n\n    vec2 dSTdx = dFdx( vUv );\n    vec2 dSTdy = dFdy( vUv );\n\n    float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n    float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n    float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n    return vec2( dBx, dBy );\n}\n\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n    vec3 vSigmaX = dFdx( surf_pos );\n    vec3 vSigmaY = dFdy( surf_pos );\n    vec3 vN = surf_norm;     // normalized\n\n    vec3 R1 = cross( vSigmaY, vN );\n    vec3 R2 = cross( vN, vSigmaX );\n\n    float fDet = dot( vSigmaX, R1 );\n\n    vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n    return normalize( abs( fDet ) * surf_norm - vGrad );\n}\n\n\nvoid main()\n{\n\n    vec3 normal = normalize( vNormal );\n\n    normal = normal;\n\n    //bump\n    normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n    vec3 viewPosition = normalize( vViewPosition );\n\n    #if MAX_DIR_LIGHTS > 0\n\n        vec3 dirDiffuse  = vec3( 0.0 );\n        vec3 dirSpecular = vec3( 0.0 );\n\n        for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n            vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\n            vec3 dirVector = normalize( lDirection.xyz );\n            float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n\n            dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n            // specular\n            vec3 dirHalfVector = normalize( dirVector + viewPosition );\n            float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n            float dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n            dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n\n\n        }\n\n    #endif\n\n    vec3 totalDiffuse = vec3( 0.0 );\n    vec3 totalSpecular = vec3( 0.0 );\n\n    #if MAX_DIR_LIGHTS > 0\n        totalDiffuse += dirDiffuse;\n        totalSpecular += dirSpecular;\n    #endif\n\n    //vec3 colorBase = mix(vec3(0.94,0.94,1.0),vec3(0.64,0.64,0.6),1.0-texture2D( bumpMap, vUv ).x);\n    vec3 colorBase = mix(vec3(1.0,1.0,1.0),vec3(0.74,0.74,0.7),1.0-texture2D( bumpMap, vUv ).x);\n    //vec3 colorBase = vec3(1.0,1.0,1.0);\n\n\n    vec3 DiffuseColour = totalDiffuse*texture2D( map, vUv*3.0 ).xyz*colorBase;\n    gl_FragColor = vec4(( totalDiffuse * DiffuseColour) + totalSpecular + ambientLightColor * ambient,1.0);\n\n    float f = 1.0 * abs( dot( normal, normalize( vWorldPosition ) ) );\n    f = 0.1 * ( 1. - smoothstep( 0.0, 1., f ) );\n\n    gl_FragColor.rgb += vec3(f);\n\n    #ifdef USE_SHADOWMAP\n\n        #ifdef SHADOWMAP_DEBUG\n\n            vec3 frustumColors[3];\n            frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n            frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n            frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n        #endif\n\n        #ifdef SHADOWMAP_CASCADE\n\n            int inFrustumCount = 0;\n\n        #endif\n\n        float fDepth;\n        vec3 shadowColor = vec3( 1.0 );\n\n        for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n            vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n        //  if ( something && something )           breaks ATI OpenGL shader compiler\n        //  if ( all( something, something ) )     using this instead\n\n            bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n            bool inFrustum = all( inFrustumVec );\n\n        // don't shadow pixels outside of light frustum\n        // use just first frustum (for cascades)\n        // don't shadow pixels behind far plane of light frustum\n\n            #ifdef SHADOWMAP_CASCADE\n\n                inFrustumCount += int( inFrustum );\n                bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n            #else\n\n                bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n            #endif\n\n            bool frustumTest = all( frustumTestVec );\n\n            if ( frustumTest ) {\n\n                shadowCoord.z += shadowBias[ i ];\n\n                #if defined( SHADOWMAP_TYPE_PCF )\n\n                // Percentage-close filtering\n                // (9 pixel kernel)\n                // http://fabiensanglard.net/shadowmappingPCF/\n\n                    float shadow = 0.0;\n\n                /*\n                // nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n                // must enroll loop manually\n\n                    for ( float y = -1.25; y <= 1.25; y += 1.25 )\n                        for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n                            vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n                        // doesn't seem to produce any noticeable visual difference compared to simple  texture2D     lookup\n                        //  vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n                            float fDepth = unpackDepth( rgbaDepth );\n\n                            if ( fDepth < shadowCoord.z )\n                                shadow += 1.0;\n\n                    }\n\n                    shadow /= 9.0;\n\n                */\n\n                    const float shadowDelta = 1.0 / 9.0;\n\n                    float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n                    float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n                    float dx0 = -1.25 * xPixelOffset;\n                    float dy0 = -1.25 * yPixelOffset;\n                    float dx1 = 1.25 * xPixelOffset;\n                    float dy1 = 1.25 * yPixelOffset;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n                    if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n                    shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n                #elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n                // Percentage-close filtering\n                // (9 pixel kernel)\n                // http://fabiensanglard.net/shadowmappingPCF/\n\n                    float shadow = 0.0;\n\n                    float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n                    float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n                    float dx0 = -1.0 * xPixelOffset;\n                    float dy0 = -1.0 * yPixelOffset;\n                    float dx1 = 1.0 * xPixelOffset;\n                    float dy1 = 1.0 * yPixelOffset;\n\n                    mat3 shadowKernel;\n                    mat3 depthKernel;\n\n                    depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n                    depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n                    depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n                    depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n                    depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n                    depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n                    depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n                    depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n                    depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n                    vec3 shadowZ = vec3( shadowCoord.z );\n                    shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n                    shadowKernel[0] *= vec3(0.25);\n\n                    shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n                    shadowKernel[1] *= vec3(0.25);\n\n                    shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n                    shadowKernel[2] *= vec3(0.25);\n\n                    vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n                    shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n                    shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n                    vec4 shadowValues;\n                    shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n                    shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n                    shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n                    shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n                    shadow = dot( shadowValues, vec4( 1.0 ) );\n\n                    shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n                #else\n\n                    vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n                    float fDepth = unpackDepth( rgbaDepth );\n\n                    if ( fDepth < shadowCoord.z )\n\n                    // spot with multiple shadows is darker\n\n                        shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n                    // spot with multiple shadows has the same color as single shadow spot\n\n                    //  shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n                #endif\n\n            }\n\n\n            #ifdef SHADOWMAP_DEBUG\n\n                #ifdef SHADOWMAP_CASCADE\n\n                    if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n                #else\n\n                    if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n                #endif\n\n            #endif\n\n        }\n\n        #ifdef GAMMA_OUTPUT\n\n            shadowColor *= shadowColor;\n\n        #endif\n\n        gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n    #endif\n\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\n    float fogFactor = smoothstep( 1000.0, 3000.0, depth );\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n}\n"}),require.alias("component-raf/index.js","snowbuilder/deps/raf/index.js"),require.alias("component-raf/index.js","raf/index.js"),require.alias("visionmedia-debug/index.js","snowbuilder/deps/debug/index.js"),require.alias("visionmedia-debug/debug.js","snowbuilder/deps/debug/debug.js"),require.alias("visionmedia-debug/index.js","debug/index.js"),require.alias("kewah-mixin/index.js","snowbuilder/deps/mixin/index.js"),require.alias("kewah-mixin/index.js","snowbuilder/deps/mixin/index.js"),require.alias("kewah-mixin/index.js","mixin/index.js"),require.alias("kewah-mixin/index.js","kewah-mixin/index.js"),require.alias("kewah-dom-event-map/index.js","snowbuilder/deps/dom-event-map/index.js"),require.alias("kewah-dom-event-map/index.js","snowbuilder/deps/dom-event-map/index.js"),require.alias("kewah-dom-event-map/index.js","dom-event-map/index.js"),require.alias("kewah-for-each/index.js","kewah-dom-event-map/deps/for-each/index.js"),require.alias("kewah-mixin/index.js","kewah-dom-event-map/deps/mixin/index.js"),require.alias("kewah-mixin/index.js","kewah-dom-event-map/deps/mixin/index.js"),require.alias("kewah-mixin/index.js","kewah-mixin/index.js"),require.alias("component-event/index.js","kewah-dom-event-map/deps/event/index.js"),require.alias("kewah-dom-event-map/index.js","kewah-dom-event-map/index.js"),require.alias("kewah-for-each/index.js","snowbuilder/deps/for-each/index.js"),require.alias("kewah-for-each/index.js","for-each/index.js"),require.alias("component-emitter/index.js","snowbuilder/deps/emitter/index.js"),require.alias("component-emitter/index.js","emitter/index.js"),require.alias("component-indexof/index.js","component-emitter/deps/indexof/index.js"),require.alias("yields-indexof/index.js","snowbuilder/deps/indexof/index.js"),require.alias("yields-indexof/index.js","snowbuilder/deps/indexof/index.js"),require.alias("yields-indexof/index.js","indexof/index.js"),require.alias("yields-indexof/index.js","yields-indexof/index.js"),require.alias("snowbuilder/app/index.js","snowbuilder/index.js");